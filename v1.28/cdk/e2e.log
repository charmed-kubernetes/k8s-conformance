  I1118 12:07:57.515398      22 e2e.go:117] Starting e2e run "30930671-658e-477e-9d28-1b9c29924156" on Ginkgo node 1
  Nov 18 12:07:57.539: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1700309277 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Nov 18 12:07:57.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:07:57.684: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Nov 18 12:07:57.718: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Nov 18 12:07:57.729: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Nov 18 12:07:57.729: INFO: e2e test version: v1.28.4
  Nov 18 12:07:57.731: INFO: kube-apiserver version: v1.28.4
  Nov 18 12:07:57.731: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:07:57.734: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 11/18/23 12:07:57.962
  Nov 18 12:07:57.962: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 12:07:57.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:07:57.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:07:57.982
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/18/23 12:07:57.984
  Nov 18 12:07:57.984: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:07:59.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:08:04.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7123" for this suite. @ 11/18/23 12:08:04.433
• [6.479 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 11/18/23 12:08:04.441
  Nov 18 12:08:04.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:08:04.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:04.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:04.461
  STEP: creating Agnhost RC @ 11/18/23 12:08:04.463
  Nov 18 12:08:04.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-557 create -f -'
  Nov 18 12:08:04.768: INFO: stderr: ""
  Nov 18 12:08:04.768: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/18/23 12:08:04.768
  Nov 18 12:08:05.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:05.772: INFO: Found 0 / 1
  Nov 18 12:08:06.773: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:06.773: INFO: Found 0 / 1
  Nov 18 12:08:07.773: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:07.773: INFO: Found 0 / 1
  Nov 18 12:08:08.771: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:08.771: INFO: Found 0 / 1
  Nov 18 12:08:09.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:09.772: INFO: Found 0 / 1
  Nov 18 12:08:10.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:10.772: INFO: Found 0 / 1
  Nov 18 12:08:11.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:11.772: INFO: Found 0 / 1
  Nov 18 12:08:12.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:12.772: INFO: Found 0 / 1
  Nov 18 12:08:13.772: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:13.772: INFO: Found 1 / 1
  Nov 18 12:08:13.772: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/18/23 12:08:13.772
  Nov 18 12:08:13.776: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:13.776: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 18 12:08:13.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-557 patch pod agnhost-primary-6bnms -p {"metadata":{"annotations":{"x":"y"}}}'
  Nov 18 12:08:13.840: INFO: stderr: ""
  Nov 18 12:08:13.840: INFO: stdout: "pod/agnhost-primary-6bnms patched\n"
  STEP: checking annotations @ 11/18/23 12:08:13.84
  Nov 18 12:08:13.843: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:13.843: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 18 12:08:13.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-557" for this suite. @ 11/18/23 12:08:13.847
• [9.414 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 11/18/23 12:08:13.856
  Nov 18 12:08:13.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:08:13.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:13.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:13.875
  STEP: Counting existing ResourceQuota @ 11/18/23 12:08:13.877
  STEP: Creating a ResourceQuota @ 11/18/23 12:08:18.88
  STEP: Ensuring resource quota status is calculated @ 11/18/23 12:08:18.885
  STEP: Creating a Service @ 11/18/23 12:08:20.889
  STEP: Creating a NodePort Service @ 11/18/23 12:08:20.909
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/18/23 12:08:20.933
  STEP: Ensuring resource quota status captures service creation @ 11/18/23 12:08:20.957
  STEP: Deleting Services @ 11/18/23 12:08:22.962
  STEP: Ensuring resource quota status released usage @ 11/18/23 12:08:22.997
  Nov 18 12:08:25.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3906" for this suite. @ 11/18/23 12:08:25.005
• [11.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 11/18/23 12:08:25.014
  Nov 18 12:08:25.014: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename limitrange @ 11/18/23 12:08:25.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:25.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:25.033
  STEP: Creating LimitRange "e2e-limitrange-lvbc8" in namespace "limitrange-6185" @ 11/18/23 12:08:25.035
  STEP: Creating another limitRange in another namespace @ 11/18/23 12:08:25.04
  Nov 18 12:08:25.057: INFO: Namespace "e2e-limitrange-lvbc8-1293" created
  Nov 18 12:08:25.057: INFO: Creating LimitRange "e2e-limitrange-lvbc8" in namespace "e2e-limitrange-lvbc8-1293"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-lvbc8" @ 11/18/23 12:08:25.066
  Nov 18 12:08:25.069: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-lvbc8" in "limitrange-6185" namespace @ 11/18/23 12:08:25.069
  Nov 18 12:08:25.074: INFO: LimitRange "e2e-limitrange-lvbc8" has been patched
  STEP: Delete LimitRange "e2e-limitrange-lvbc8" by Collection with labelSelector: "e2e-limitrange-lvbc8=patched" @ 11/18/23 12:08:25.074
  STEP: Confirm that the limitRange "e2e-limitrange-lvbc8" has been deleted @ 11/18/23 12:08:25.082
  Nov 18 12:08:25.082: INFO: Requesting list of LimitRange to confirm quantity
  Nov 18 12:08:25.085: INFO: Found 0 LimitRange with label "e2e-limitrange-lvbc8=patched"
  Nov 18 12:08:25.085: INFO: LimitRange "e2e-limitrange-lvbc8" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-lvbc8" @ 11/18/23 12:08:25.085
  Nov 18 12:08:25.088: INFO: Found 1 limitRange
  Nov 18 12:08:25.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6185" for this suite. @ 11/18/23 12:08:25.091
  STEP: Destroying namespace "e2e-limitrange-lvbc8-1293" for this suite. @ 11/18/23 12:08:25.096
• [0.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/18/23 12:08:25.105
  Nov 18 12:08:25.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:08:25.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:25.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:25.126
  STEP: Creating projection with secret that has name projected-secret-test-map-d43747ec-12f8-4656-8242-caa842fcef27 @ 11/18/23 12:08:25.128
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:08:25.133
  STEP: Saw pod success @ 11/18/23 12:08:29.158
  Nov 18 12:08:29.161: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-secrets-f3372983-1790-45ec-9c7e-f6fde52b5344 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 12:08:29.18
  Nov 18 12:08:29.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3184" for this suite. @ 11/18/23 12:08:29.2
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/18/23 12:08:29.209
  Nov 18 12:08:29.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/18/23 12:08:29.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:29.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:29.227
  STEP: mirroring a new custom Endpoint @ 11/18/23 12:08:29.238
  Nov 18 12:08:29.246: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 11/18/23 12:08:31.25
  Nov 18 12:08:31.259: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 11/18/23 12:08:33.262
  Nov 18 12:08:33.274: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Nov 18 12:08:35.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9557" for this suite. @ 11/18/23 12:08:35.282
• [6.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 11/18/23 12:08:35.29
  Nov 18 12:08:35.291: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename controllerrevisions @ 11/18/23 12:08:35.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:35.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:35.31
  STEP: Creating DaemonSet "e2e-b2j56-daemon-set" @ 11/18/23 12:08:35.332
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/18/23 12:08:35.337
  Nov 18 12:08:35.340: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:35.340: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:35.344: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 0
  Nov 18 12:08:35.344: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  Nov 18 12:08:36.348: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:36.348: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:36.351: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 0
  Nov 18 12:08:36.351: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  Nov 18 12:08:37.348: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:37.348: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:37.351: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 0
  Nov 18 12:08:37.351: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  Nov 18 12:08:38.348: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:38.348: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:38.352: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 0
  Nov 18 12:08:38.352: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  Nov 18 12:08:39.349: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:39.349: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:39.353: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 0
  Nov 18 12:08:39.353: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  Nov 18 12:08:40.348: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:40.348: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:40.351: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 2
  Nov 18 12:08:40.351: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  Nov 18 12:08:41.348: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:41.348: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:08:41.351: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 3
  Nov 18 12:08:41.351: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-b2j56-daemon-set
  STEP: Confirm DaemonSet "e2e-b2j56-daemon-set" successfully created with "daemonset-name=e2e-b2j56-daemon-set" label @ 11/18/23 12:08:41.354
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-b2j56-daemon-set" @ 11/18/23 12:08:41.362
  Nov 18 12:08:41.366: INFO: Located ControllerRevision: "e2e-b2j56-daemon-set-9c5cd578"
  STEP: Patching ControllerRevision "e2e-b2j56-daemon-set-9c5cd578" @ 11/18/23 12:08:41.369
  Nov 18 12:08:41.374: INFO: e2e-b2j56-daemon-set-9c5cd578 has been patched
  STEP: Create a new ControllerRevision @ 11/18/23 12:08:41.374
  Nov 18 12:08:41.378: INFO: Created ControllerRevision: e2e-b2j56-daemon-set-59d54c66d8
  STEP: Confirm that there are two ControllerRevisions @ 11/18/23 12:08:41.378
  Nov 18 12:08:41.378: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 18 12:08:41.381: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-b2j56-daemon-set-9c5cd578" @ 11/18/23 12:08:41.381
  STEP: Confirm that there is only one ControllerRevision @ 11/18/23 12:08:41.389
  Nov 18 12:08:41.389: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 18 12:08:41.392: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-b2j56-daemon-set-59d54c66d8" @ 11/18/23 12:08:41.394
  Nov 18 12:08:41.402: INFO: e2e-b2j56-daemon-set-59d54c66d8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/18/23 12:08:41.402
  W1118 12:08:41.409528      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/18/23 12:08:41.409
  Nov 18 12:08:41.409: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 18 12:08:42.414: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 18 12:08:42.417: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-b2j56-daemon-set-59d54c66d8=updated" @ 11/18/23 12:08:42.417
  STEP: Confirm that there is only one ControllerRevision @ 11/18/23 12:08:42.426
  Nov 18 12:08:42.426: INFO: Requesting list of ControllerRevisions to confirm quantity
  Nov 18 12:08:42.429: INFO: Found 1 ControllerRevisions
  Nov 18 12:08:42.432: INFO: ControllerRevision "e2e-b2j56-daemon-set-bbf86969" has revision 3
  STEP: Deleting DaemonSet "e2e-b2j56-daemon-set" @ 11/18/23 12:08:42.434
  STEP: deleting DaemonSet.extensions e2e-b2j56-daemon-set in namespace controllerrevisions-5773, will wait for the garbage collector to delete the pods @ 11/18/23 12:08:42.434
  Nov 18 12:08:42.495: INFO: Deleting DaemonSet.extensions e2e-b2j56-daemon-set took: 6.338999ms
  Nov 18 12:08:42.596: INFO: Terminating DaemonSet.extensions e2e-b2j56-daemon-set pods took: 100.85788ms
  Nov 18 12:08:47.700: INFO: Number of nodes with available pods controlled by daemonset e2e-b2j56-daemon-set: 0
  Nov 18 12:08:47.700: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-b2j56-daemon-set
  Nov 18 12:08:47.704: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2849"},"items":null}

  Nov 18 12:08:47.708: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2849"},"items":null}

  Nov 18 12:08:47.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5773" for this suite. @ 11/18/23 12:08:47.727
• [12.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 11/18/23 12:08:47.734
  Nov 18 12:08:47.734: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 12:08:47.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:47.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:47.756
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/18/23 12:08:47.758
  STEP: Saw pod success @ 11/18/23 12:08:51.783
  Nov 18 12:08:51.786: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-8f958a35-7cb7-4c87-bb56-cad8fda1791c container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:08:51.792
  Nov 18 12:08:51.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8916" for this suite. @ 11/18/23 12:08:51.812
• [4.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 11/18/23 12:08:51.818
  Nov 18 12:08:51.818: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:08:51.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:51.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:51.836
  STEP: Creating configMap with name projected-configmap-test-volume-map-1dad4820-1723-41e8-ac6c-87e8488c616d @ 11/18/23 12:08:51.837
  STEP: Creating a pod to test consume configMaps @ 11/18/23 12:08:51.842
  STEP: Saw pod success @ 11/18/23 12:08:55.861
  Nov 18 12:08:55.864: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-configmaps-35e3c5a2-a41d-473d-a522-0f648a8a55e3 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:08:55.871
  Nov 18 12:08:55.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2949" for this suite. @ 11/18/23 12:08:55.889
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 11/18/23 12:08:55.896
  Nov 18 12:08:55.896: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:08:55.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:55.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:55.914
  Nov 18 12:08:55.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 create -f -'
  Nov 18 12:08:56.178: INFO: stderr: ""
  Nov 18 12:08:56.178: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Nov 18 12:08:56.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 create -f -'
  Nov 18 12:08:56.456: INFO: stderr: ""
  Nov 18 12:08:56.456: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/18/23 12:08:56.456
  Nov 18 12:08:57.461: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:57.461: INFO: Found 0 / 1
  Nov 18 12:08:58.460: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:58.460: INFO: Found 1 / 1
  Nov 18 12:08:58.460: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov 18 12:08:58.463: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:08:58.463: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 18 12:08:58.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 describe pod agnhost-primary-2rh9d'
  Nov 18 12:08:58.529: INFO: stderr: ""
  Nov 18 12:08:58.529: INFO: stdout: "Name:             agnhost-primary-2rh9d\nNamespace:        kubectl-485\nPriority:         0\nService Account:  default\nNode:             ip-172-31-29-39/172.31.29.39\nStart Time:       Sat, 18 Nov 2023 12:08:56 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.250.199\nIPs:\n  IP:           192.168.250.199\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6ff2e5ef1e18b353e4c988b0b8d4e62f09bdadef895fc5fe340251671a645f0b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 18 Nov 2023 12:08:56 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6qnp2 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-6qnp2:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-485/agnhost-primary-2rh9d to ip-172-31-29-39\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Nov 18 12:08:58.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 describe rc agnhost-primary'
  Nov 18 12:08:58.602: INFO: stderr: ""
  Nov 18 12:08:58.602: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-485\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-2rh9d\n"
  Nov 18 12:08:58.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 describe service agnhost-primary'
  Nov 18 12:08:58.666: INFO: stderr: ""
  Nov 18 12:08:58.666: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-485\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.135\nIPs:               10.152.183.135\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.250.199:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Nov 18 12:08:58.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 describe node ip-172-31-29-39'
  Nov 18 12:08:58.764: INFO: stderr: ""
  Nov 18 12:08:58.764: INFO: stdout: "Name:               ip-172-31-29-39\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-29-39\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 18 Nov 2023 12:03:17 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-29-39\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 18 Nov 2023 12:08:55 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 18 Nov 2023 12:04:32 +0000   Sat, 18 Nov 2023 12:04:32 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 18 Nov 2023 12:08:48 +0000   Sat, 18 Nov 2023 12:04:23 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 18 Nov 2023 12:08:48 +0000   Sat, 18 Nov 2023 12:04:23 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 18 Nov 2023 12:08:48 +0000   Sat, 18 Nov 2023 12:04:23 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 18 Nov 2023 12:08:48 +0000   Sat, 18 Nov 2023 12:04:23 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.29.39\n  Hostname:    ip-172-31-29-39\nCapacity:\n  cpu:                4\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15723680Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15621280Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2edaf9e6f03a6c31b291afacc3fa8d\n  System UUID:                     ec2edaf9-e6f0-3a6c-31b2-91afacc3fa8d\n  Boot ID:                         443d36c6-5da9-4b8a-84af-e8e78aa8c7ff\n  Kernel Version:                  6.2.0-1015-aws\n  OS Image:                        Ubuntu 22.04.3 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.28.4\n  Kube-Proxy Version:              v1.28.4\nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-m67dn           0 (0%)        0 (0%)      0 (0%)           0 (0%)         4m35s\n  kube-system                      calico-node-jhvhh                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         5m41s\n  kubectl-485                      agnhost-primary-2rh9d                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         79s\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-82h4q    0 (0%)        0 (0%)      0 (0%)           0 (0%)         76s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                250m (6%)  0 (0%)\n  memory             0 (0%)     0 (0%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:\n  Type     Reason                   Age                    From             Message\n  ----     ------                   ----                   ----             -------\n  Normal   Starting                 5m40s                  kube-proxy       \n  Normal   Starting                 5m26s                  kube-proxy       \n  Normal   Starting                 5m41s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      5m41s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  5m41s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           5m40s                  node-controller  Node ip-172-31-29-39 event: Registered Node ip-172-31-29-39 in Controller\n  Normal   NodeHasNoDiskPressure    5m39s (x8 over 5m41s)  kubelet          Node ip-172-31-29-39 status is now: NodeHasNoDiskPressure\n  Warning  InvalidDiskCapacity      5m26s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 5m26s                  kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  5m26s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeNotReady             5m (x4 over 5m)        kubelet          Node ip-172-31-29-39 status is now: NodeNotReady\n  Normal   Starting                 4m48s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      4m48s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  4m48s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    4m36s (x7 over 4m48s)  kubelet          Node ip-172-31-29-39 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     4m36s (x7 over 4m48s)  kubelet          Node ip-172-31-29-39 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  4m35s (x8 over 4m48s)  kubelet          Node ip-172-31-29-39 status is now: NodeHasSufficientMemory\n"
  Nov 18 12:08:58.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-485 describe namespace kubectl-485'
  Nov 18 12:08:58.829: INFO: stderr: ""
  Nov 18 12:08:58.829: INFO: stdout: "Name:         kubectl-485\nLabels:       e2e-framework=kubectl\n              e2e-run=30930671-658e-477e-9d28-1b9c29924156\n              kubernetes.io/metadata.name=kubectl-485\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Nov 18 12:08:58.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-485" for this suite. @ 11/18/23 12:08:58.833
• [2.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 11/18/23 12:08:58.84
  Nov 18 12:08:58.840: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 12:08:58.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:08:58.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:08:58.86
  STEP: Creating a pod to test service account token:  @ 11/18/23 12:08:58.862
  STEP: Saw pod success @ 11/18/23 12:09:02.886
  Nov 18 12:09:02.888: INFO: Trying to get logs from node ip-172-31-29-39 pod test-pod-11aa882d-8e0f-4d05-af58-fffc97dbbd9d container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:09:02.896
  Nov 18 12:09:02.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-674" for this suite. @ 11/18/23 12:09:02.917
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 11/18/23 12:09:02.924
  Nov 18 12:09:02.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replicaset @ 11/18/23 12:09:02.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:02.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:02.942
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/18/23 12:09:02.944
  Nov 18 12:09:02.953: INFO: Pod name sample-pod: Found 0 pods out of 1
  Nov 18 12:09:07.957: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/18/23 12:09:07.957
  STEP: getting scale subresource @ 11/18/23 12:09:07.957
  STEP: updating a scale subresource @ 11/18/23 12:09:07.961
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/18/23 12:09:07.966
  STEP: Patch a scale subresource @ 11/18/23 12:09:07.971
  Nov 18 12:09:07.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7189" for this suite. @ 11/18/23 12:09:07.988
• [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 11/18/23 12:09:07.999
  Nov 18 12:09:07.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/18/23 12:09:08
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:08.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:08.025
  STEP: fetching the /apis discovery document @ 11/18/23 12:09:08.027
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/18/23 12:09:08.028
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/18/23 12:09:08.028
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/18/23 12:09:08.028
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/18/23 12:09:08.029
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/18/23 12:09:08.029
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/18/23 12:09:08.03
  Nov 18 12:09:08.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-77" for this suite. @ 11/18/23 12:09:08.033
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 11/18/23 12:09:08.04
  Nov 18 12:09:08.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:09:08.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:08.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:08.061
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:09:08.062
  STEP: Saw pod success @ 11/18/23 12:09:12.084
  Nov 18 12:09:12.087: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-bc9c538c-aa8a-48ea-9a19-86089b4e0197 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:09:12.093
  Nov 18 12:09:12.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5987" for this suite. @ 11/18/23 12:09:12.114
• [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 11/18/23 12:09:12.121
  Nov 18 12:09:12.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 12:09:12.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:12.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:12.139
  STEP: Creating service test in namespace statefulset-8036 @ 11/18/23 12:09:12.141
  STEP: Creating statefulset ss in namespace statefulset-8036 @ 11/18/23 12:09:12.15
  Nov 18 12:09:12.160: INFO: Found 0 stateful pods, waiting for 1
  Nov 18 12:09:22.168: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/18/23 12:09:22.174
  STEP: Getting /status @ 11/18/23 12:09:22.183
  Nov 18 12:09:22.186: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/18/23 12:09:22.186
  Nov 18 12:09:22.195: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/18/23 12:09:22.195
  Nov 18 12:09:22.197: INFO: Observed &StatefulSet event: ADDED
  Nov 18 12:09:22.197: INFO: Found Statefulset ss in namespace statefulset-8036 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 18 12:09:22.197: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/18/23 12:09:22.197
  Nov 18 12:09:22.197: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 18 12:09:22.204: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/18/23 12:09:22.204
  Nov 18 12:09:22.205: INFO: Observed &StatefulSet event: ADDED
  Nov 18 12:09:22.205: INFO: Deleting all statefulset in ns statefulset-8036
  Nov 18 12:09:22.208: INFO: Scaling statefulset ss to 0
  Nov 18 12:09:32.227: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 12:09:32.230: INFO: Deleting statefulset ss
  Nov 18 12:09:32.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8036" for this suite. @ 11/18/23 12:09:32.246
• [20.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 11/18/23 12:09:32.253
  Nov 18 12:09:32.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replicaset @ 11/18/23 12:09:32.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:32.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:32.274
  Nov 18 12:09:32.276: INFO: Creating ReplicaSet my-hostname-basic-1485f454-ce56-45b5-9843-42710786d447
  Nov 18 12:09:32.285: INFO: Pod name my-hostname-basic-1485f454-ce56-45b5-9843-42710786d447: Found 0 pods out of 1
  Nov 18 12:09:37.291: INFO: Pod name my-hostname-basic-1485f454-ce56-45b5-9843-42710786d447: Found 1 pods out of 1
  Nov 18 12:09:37.291: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-1485f454-ce56-45b5-9843-42710786d447" is running
  Nov 18 12:09:37.294: INFO: Pod "my-hostname-basic-1485f454-ce56-45b5-9843-42710786d447-zwvcd" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 12:09:32 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 12:09:33 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 12:09:33 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 12:09:32 +0000 UTC Reason: Message:}])
  Nov 18 12:09:37.294: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/18/23 12:09:37.294
  Nov 18 12:09:37.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4929" for this suite. @ 11/18/23 12:09:37.308
• [5.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 11/18/23 12:09:37.316
  Nov 18 12:09:37.316: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 12:09:37.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:37.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:37.338
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/18/23 12:09:37.34
  STEP: Saw pod success @ 11/18/23 12:09:47.378
  Nov 18 12:09:47.381: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-cd34cd4f-e0d5-4d93-aba0-16b9bbb639a5 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:09:47.397
  Nov 18 12:09:47.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5770" for this suite. @ 11/18/23 12:09:47.418
• [10.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/18/23 12:09:47.425
  Nov 18 12:09:47.425: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubelet-test @ 11/18/23 12:09:47.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:47.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:47.443
  Nov 18 12:09:51.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-491" for this suite. @ 11/18/23 12:09:51.482
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/18/23 12:09:51.49
  Nov 18 12:09:51.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename subpath @ 11/18/23 12:09:51.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:09:51.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:09:51.508
  STEP: Setting up data @ 11/18/23 12:09:51.509
  STEP: Creating pod pod-subpath-test-secret-74h5 @ 11/18/23 12:09:51.518
  STEP: Creating a pod to test atomic-volume-subpath @ 11/18/23 12:09:51.518
  STEP: Saw pod success @ 11/18/23 12:10:15.588
  Nov 18 12:10:15.591: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-subpath-test-secret-74h5 container test-container-subpath-secret-74h5: <nil>
  STEP: delete the pod @ 11/18/23 12:10:15.598
  STEP: Deleting pod pod-subpath-test-secret-74h5 @ 11/18/23 12:10:15.616
  Nov 18 12:10:15.616: INFO: Deleting pod "pod-subpath-test-secret-74h5" in namespace "subpath-8898"
  Nov 18 12:10:15.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8898" for this suite. @ 11/18/23 12:10:15.622
• [24.138 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 11/18/23 12:10:15.628
  Nov 18 12:10:15.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-preemption @ 11/18/23 12:10:15.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:10:15.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:10:15.645
  Nov 18 12:10:15.662: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 18 12:11:15.687: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/18/23 12:11:15.689
  Nov 18 12:11:15.690: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/18/23 12:11:15.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:11:15.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:11:15.71
  STEP: Finding an available node @ 11/18/23 12:11:15.712
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/18/23 12:11:15.712
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/18/23 12:11:19.736
  Nov 18 12:11:19.753: INFO: found a healthy node: ip-172-31-29-39
  Nov 18 12:11:25.820: INFO: pods created so far: [1 1 1]
  Nov 18 12:11:25.820: INFO: length of pods created so far: 3
  Nov 18 12:11:29.831: INFO: pods created so far: [2 2 1]
  Nov 18 12:11:36.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 12:11:36.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8871" for this suite. @ 11/18/23 12:11:36.906
  STEP: Destroying namespace "sched-preemption-4377" for this suite. @ 11/18/23 12:11:36.913
• [81.292 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 11/18/23 12:11:36.92
  Nov 18 12:11:36.920: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 12:11:36.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:11:36.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:11:36.938
  Nov 18 12:11:38.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 12:11:38.961: INFO: Deleting pod "var-expansion-ebdb440a-4b78-4fea-a7f7-747a062231ef" in namespace "var-expansion-691"
  Nov 18 12:11:38.967: INFO: Wait up to 5m0s for pod "var-expansion-ebdb440a-4b78-4fea-a7f7-747a062231ef" to be fully deleted
  STEP: Destroying namespace "var-expansion-691" for this suite. @ 11/18/23 12:11:40.974
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/18/23 12:11:40.981
  Nov 18 12:11:40.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename subpath @ 11/18/23 12:11:40.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:11:40.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:11:40.999
  STEP: Setting up data @ 11/18/23 12:11:41.001
  STEP: Creating pod pod-subpath-test-configmap-msxq @ 11/18/23 12:11:41.009
  STEP: Creating a pod to test atomic-volume-subpath @ 11/18/23 12:11:41.01
  STEP: Saw pod success @ 11/18/23 12:12:05.072
  Nov 18 12:12:05.075: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-subpath-test-configmap-msxq container test-container-subpath-configmap-msxq: <nil>
  STEP: delete the pod @ 11/18/23 12:12:05.089
  STEP: Deleting pod pod-subpath-test-configmap-msxq @ 11/18/23 12:12:05.108
  Nov 18 12:12:05.108: INFO: Deleting pod "pod-subpath-test-configmap-msxq" in namespace "subpath-7380"
  Nov 18 12:12:05.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7380" for this suite. @ 11/18/23 12:12:05.115
• [24.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 11/18/23 12:12:05.124
  Nov 18 12:12:05.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:12:05.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:12:05.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:12:05.146
  STEP: Creating a pod to test downward api env vars @ 11/18/23 12:12:05.147
  STEP: Saw pod success @ 11/18/23 12:12:09.167
  Nov 18 12:12:09.170: INFO: Trying to get logs from node ip-172-31-29-39 pod downward-api-61dacefc-8756-4d4e-89e6-41fe11f499a6 container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 12:12:09.187
  Nov 18 12:12:09.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2759" for this suite. @ 11/18/23 12:12:09.208
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/18/23 12:12:09.217
  Nov 18 12:12:09.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename cronjob @ 11/18/23 12:12:09.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:12:09.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:12:09.236
  STEP: Creating a suspended cronjob @ 11/18/23 12:12:09.238
  STEP: Ensuring no jobs are scheduled @ 11/18/23 12:12:09.243
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/18/23 12:17:09.249
  STEP: Removing cronjob @ 11/18/23 12:17:09.252
  Nov 18 12:17:09.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4637" for this suite. @ 11/18/23 12:17:09.263
• [300.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/18/23 12:17:09.276
  Nov 18 12:17:09.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 12:17:09.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:17:09.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:17:09.298
  STEP: Saw pod success @ 11/18/23 12:17:15.348
  Nov 18 12:17:15.351: INFO: Trying to get logs from node ip-172-31-39-133 pod client-envvars-2e011c37-aa74-4f33-a2a7-22ead761ed65 container env3cont: <nil>
  STEP: delete the pod @ 11/18/23 12:17:15.368
  Nov 18 12:17:15.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9348" for this suite. @ 11/18/23 12:17:15.385
• [6.115 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 11/18/23 12:17:15.391
  Nov 18 12:17:15.391: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename namespaces @ 11/18/23 12:17:15.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:17:15.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:17:15.412
  STEP: Read namespace status @ 11/18/23 12:17:15.413
  Nov 18 12:17:15.417: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/18/23 12:17:15.417
  Nov 18 12:17:15.422: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/18/23 12:17:15.422
  Nov 18 12:17:15.433: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Nov 18 12:17:15.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9784" for this suite. @ 11/18/23 12:17:15.436
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 11/18/23 12:17:15.443
  Nov 18 12:17:15.443: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:17:15.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:17:15.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:17:15.461
  STEP: Discovering how many secrets are in namespace by default @ 11/18/23 12:17:15.463
  STEP: Counting existing ResourceQuota @ 11/18/23 12:17:20.466
  STEP: Creating a ResourceQuota @ 11/18/23 12:17:25.47
  STEP: Ensuring resource quota status is calculated @ 11/18/23 12:17:25.475
  STEP: Creating a Secret @ 11/18/23 12:17:27.48
  STEP: Ensuring resource quota status captures secret creation @ 11/18/23 12:17:27.491
  STEP: Deleting a secret @ 11/18/23 12:17:29.495
  STEP: Ensuring resource quota status released usage @ 11/18/23 12:17:29.503
  Nov 18 12:17:31.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7362" for this suite. @ 11/18/23 12:17:31.511
• [16.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 11/18/23 12:17:31.517
  Nov 18 12:17:31.517: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 12:17:31.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:17:31.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:17:31.537
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/18/23 12:17:31.539
  STEP: Saw pod success @ 11/18/23 12:17:35.559
  Nov 18 12:17:35.562: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-4e563e19-ac3f-4569-8570-7863b963e115 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:17:35.582
  Nov 18 12:17:35.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5727" for this suite. @ 11/18/23 12:17:35.604
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 11/18/23 12:17:35.611
  Nov 18 12:17:35.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 12:17:35.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:17:35.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:17:35.628
  STEP: Creating pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021 @ 11/18/23 12:17:35.63
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 12:17:37.646
  Nov 18 12:17:37.649: INFO: Initial restart count of pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d is 0
  Nov 18 12:17:37.652: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:39.656: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:41.660: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:43.664: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:45.669: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:47.673: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:49.678: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:51.683: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:53.687: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:55.691: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:57.695: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:17:59.699: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:01.703: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:03.707: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:05.711: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:07.715: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:09.719: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:11.723: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:13.728: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:15.732: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:17.736: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:19.740: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:21.744: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:23.748: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:25.752: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:27.756: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:29.760: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:31.764: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:33.768: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:35.772: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:37.776: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:39.780: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:41.784: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:43.787: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:45.791: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:47.795: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:49.800: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:51.805: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:53.809: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:55.813: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:57.817: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:18:59.821: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:01.826: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:03.830: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:05.834: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:07.839: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:09.843: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:11.847: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:13.851: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:15.856: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:17.859: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:19.863: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:21.867: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:23.872: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:25.875: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:27.879: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:29.883: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:31.887: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:33.892: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:35.895: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:37.900: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:39.905: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:41.909: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:43.913: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:45.917: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:47.922: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:49.927: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:51.931: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:53.935: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:55.939: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:57.943: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:19:59.946: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:01.951: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:03.955: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:05.959: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:07.963: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:09.967: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:11.971: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:13.975: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:15.979: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:17.983: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:19.986: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:21.990: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:23.994: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:25.998: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:28.003: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:30.008: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:32.012: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:34.016: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:36.020: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:38.024: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:40.028: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:42.032: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:44.036: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:46.040: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:48.044: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:50.048: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:52.052: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:54.056: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:56.060: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:20:58.065: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:00.069: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:02.074: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:04.078: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:06.082: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:08.085: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:10.090: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:12.093: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:14.097: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:16.101: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:18.106: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:20.109: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:22.114: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:24.118: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:26.121: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:28.125: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:30.129: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:32.133: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:34.137: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:36.141: INFO: Get pod test-webserver-0832728f-bee0-4502-b639-621eef2d921d in namespace container-probe-1021
  Nov 18 12:21:38.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 12:21:38.147
  STEP: Destroying namespace "container-probe-1021" for this suite. @ 11/18/23 12:21:38.163
• [242.558 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 11/18/23 12:21:38.169
  Nov 18 12:21:38.169: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 12:21:38.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:21:38.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:21:38.192
  Nov 18 12:21:38.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  W1118 12:21:40.732874      22 warnings.go:70] unknown field "alpha"
  W1118 12:21:40.732897      22 warnings.go:70] unknown field "beta"
  W1118 12:21:40.732902      22 warnings.go:70] unknown field "delta"
  W1118 12:21:40.732906      22 warnings.go:70] unknown field "epsilon"
  W1118 12:21:40.732910      22 warnings.go:70] unknown field "gamma"
  Nov 18 12:21:41.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5512" for this suite. @ 11/18/23 12:21:41.273
• [3.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/18/23 12:21:41.286
  Nov 18 12:21:41.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:21:41.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:21:41.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:21:41.304
  STEP: Creating secret with name secret-test-a7cb358f-2267-445c-a8ab-1e51fdeb6119 @ 11/18/23 12:21:41.328
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:21:41.334
  STEP: Saw pod success @ 11/18/23 12:21:45.355
  Nov 18 12:21:45.358: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-secrets-cf53698e-b8c0-41de-b2b0-581454f1699b container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 12:21:45.374
  Nov 18 12:21:45.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4966" for this suite. @ 11/18/23 12:21:45.394
  STEP: Destroying namespace "secret-namespace-6062" for this suite. @ 11/18/23 12:21:45.402
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 11/18/23 12:21:45.41
  Nov 18 12:21:45.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename taint-single-pod @ 11/18/23 12:21:45.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:21:45.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:21:45.428
  Nov 18 12:21:45.430: INFO: Waiting up to 1m0s for all nodes to be ready
  Nov 18 12:22:45.444: INFO: Waiting for terminating namespaces to be deleted...
  Nov 18 12:22:45.447: INFO: Starting informer...
  STEP: Starting pod... @ 11/18/23 12:22:45.447
  Nov 18 12:22:45.663: INFO: Pod is running on ip-172-31-29-39. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/18/23 12:22:45.663
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/18/23 12:22:45.673
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/18/23 12:22:45.675
  Nov 18 12:22:45.675: INFO: Pod wasn't evicted. Proceeding
  Nov 18 12:22:45.675: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/18/23 12:22:45.687
  STEP: Waiting some time to make sure that toleration time passed. @ 11/18/23 12:22:45.69
  Nov 18 12:24:00.692: INFO: Pod wasn't evicted. Test successful
  Nov 18 12:24:00.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1636" for this suite. @ 11/18/23 12:24:00.695
• [135.292 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 11/18/23 12:24:00.702
  Nov 18 12:24:00.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:24:00.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:00.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:00.722
  STEP: Creating configMap with name projected-configmap-test-volume-68e0dfed-d19d-42b7-9f25-7f5555481d56 @ 11/18/23 12:24:00.724
  STEP: Creating a pod to test consume configMaps @ 11/18/23 12:24:00.728
  STEP: Saw pod success @ 11/18/23 12:24:04.747
  Nov 18 12:24:04.751: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-configmaps-db3e4a8d-b1d5-43fb-8480-9760a81d1a0f container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:24:04.77
  Nov 18 12:24:04.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6308" for this suite. @ 11/18/23 12:24:04.79
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 11/18/23 12:24:04.797
  Nov 18 12:24:04.797: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 12:24:04.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:04.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:04.816
  STEP: Creating a pod to test env composition @ 11/18/23 12:24:04.817
  STEP: Saw pod success @ 11/18/23 12:24:08.838
  Nov 18 12:24:08.841: INFO: Trying to get logs from node ip-172-31-29-39 pod var-expansion-f4faf3c5-3faf-45e4-a6c4-acefa280fb2d container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 12:24:08.849
  Nov 18 12:24:08.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5150" for this suite. @ 11/18/23 12:24:08.869
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 11/18/23 12:24:08.877
  Nov 18 12:24:08.877: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sysctl @ 11/18/23 12:24:08.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:08.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:08.895
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/18/23 12:24:08.896
  Nov 18 12:24:08.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-645" for this suite. @ 11/18/23 12:24:08.904
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 11/18/23 12:24:08.911
  Nov 18 12:24:08.911: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:24:08.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:08.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:08.93
  STEP: creating Agnhost RC @ 11/18/23 12:24:08.932
  Nov 18 12:24:08.932: INFO: namespace kubectl-9087
  Nov 18 12:24:08.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9087 create -f -'
  Nov 18 12:24:09.206: INFO: stderr: ""
  Nov 18 12:24:09.206: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/18/23 12:24:09.206
  Nov 18 12:24:10.211: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:24:10.211: INFO: Found 1 / 1
  Nov 18 12:24:10.211: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Nov 18 12:24:10.213: INFO: Selector matched 1 pods for map[app:agnhost]
  Nov 18 12:24:10.213: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Nov 18 12:24:10.213: INFO: wait on agnhost-primary startup in kubectl-9087 
  Nov 18 12:24:10.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9087 logs agnhost-primary-569ds agnhost-primary'
  Nov 18 12:24:10.288: INFO: stderr: ""
  Nov 18 12:24:10.288: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 11/18/23 12:24:10.288
  Nov 18 12:24:10.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9087 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Nov 18 12:24:10.358: INFO: stderr: ""
  Nov 18 12:24:10.358: INFO: stdout: "service/rm2 exposed\n"
  Nov 18 12:24:10.362: INFO: Service rm2 in namespace kubectl-9087 found.
  STEP: exposing service @ 11/18/23 12:24:12.368
  Nov 18 12:24:12.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9087 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Nov 18 12:24:12.438: INFO: stderr: ""
  Nov 18 12:24:12.438: INFO: stdout: "service/rm3 exposed\n"
  Nov 18 12:24:12.442: INFO: Service rm3 in namespace kubectl-9087 found.
  Nov 18 12:24:14.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9087" for this suite. @ 11/18/23 12:24:14.451
• [5.547 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 11/18/23 12:24:14.459
  Nov 18 12:24:14.459: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 12:24:14.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:14.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:14.48
  STEP: Setting up server cert @ 11/18/23 12:24:14.509
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 12:24:14.805
  STEP: Deploying the webhook pod @ 11/18/23 12:24:14.813
  STEP: Wait for the deployment to be ready @ 11/18/23 12:24:14.824
  Nov 18 12:24:14.832: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/18/23 12:24:16.842
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 12:24:16.852
  Nov 18 12:24:17.852: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/18/23 12:24:17.859
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/18/23 12:24:17.873
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/18/23 12:24:17.88
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/18/23 12:24:17.891
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/18/23 12:24:17.901
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/18/23 12:24:17.908
  Nov 18 12:24:17.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5950" for this suite. @ 11/18/23 12:24:17.96
  STEP: Destroying namespace "webhook-markers-4485" for this suite. @ 11/18/23 12:24:17.966
• [3.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 11/18/23 12:24:17.978
  Nov 18 12:24:17.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 12:24:17.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:17.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:17.999
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6271 @ 11/18/23 12:24:18.001
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/18/23 12:24:18.016
  STEP: creating service externalsvc in namespace services-6271 @ 11/18/23 12:24:18.016
  STEP: creating replication controller externalsvc in namespace services-6271 @ 11/18/23 12:24:18.036
  I1118 12:24:18.041877      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6271, replica count: 2
  I1118 12:24:21.092613      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/18/23 12:24:21.096
  Nov 18 12:24:21.114: INFO: Creating new exec pod
  Nov 18 12:24:23.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6271 exec execpodqc74w -- /bin/sh -x -c nslookup nodeport-service.services-6271.svc.cluster.local'
  Nov 18 12:24:23.299: INFO: stderr: "+ nslookup nodeport-service.services-6271.svc.cluster.local\n"
  Nov 18 12:24:23.299: INFO: stdout: "Server:\t\t10.152.183.211\nAddress:\t10.152.183.211#53\n\nnodeport-service.services-6271.svc.cluster.local\tcanonical name = externalsvc.services-6271.svc.cluster.local.\nName:\texternalsvc.services-6271.svc.cluster.local\nAddress: 10.152.183.83\n\n"
  Nov 18 12:24:23.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-6271, will wait for the garbage collector to delete the pods @ 11/18/23 12:24:23.303
  Nov 18 12:24:23.363: INFO: Deleting ReplicationController externalsvc took: 6.250599ms
  Nov 18 12:24:23.464: INFO: Terminating ReplicationController externalsvc pods took: 100.93761ms
  Nov 18 12:24:26.682: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-6271" for this suite. @ 11/18/23 12:24:26.693
• [8.722 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 11/18/23 12:24:26.7
  Nov 18 12:24:26.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replication-controller @ 11/18/23 12:24:26.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:26.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:26.719
  STEP: creating a ReplicationController @ 11/18/23 12:24:26.725
  STEP: waiting for RC to be added @ 11/18/23 12:24:26.73
  STEP: waiting for available Replicas @ 11/18/23 12:24:26.73
  STEP: patching ReplicationController @ 11/18/23 12:24:29.1
  STEP: waiting for RC to be modified @ 11/18/23 12:24:29.108
  STEP: patching ReplicationController status @ 11/18/23 12:24:29.108
  STEP: waiting for RC to be modified @ 11/18/23 12:24:29.113
  STEP: waiting for available Replicas @ 11/18/23 12:24:29.113
  STEP: fetching ReplicationController status @ 11/18/23 12:24:29.118
  STEP: patching ReplicationController scale @ 11/18/23 12:24:29.121
  STEP: waiting for RC to be modified @ 11/18/23 12:24:29.128
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/18/23 12:24:29.128
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/18/23 12:24:31.645
  STEP: updating ReplicationController status @ 11/18/23 12:24:31.648
  STEP: waiting for RC to be modified @ 11/18/23 12:24:31.653
  STEP: listing all ReplicationControllers @ 11/18/23 12:24:31.653
  STEP: checking that ReplicationController has expected values @ 11/18/23 12:24:31.658
  STEP: deleting ReplicationControllers by collection @ 11/18/23 12:24:31.658
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/18/23 12:24:31.668
  Nov 18 12:24:31.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1118 12:24:31.717546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4093" for this suite. @ 11/18/23 12:24:31.721
• [5.030 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/18/23 12:24:31.73
  Nov 18 12:24:31.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename conformance-tests @ 11/18/23 12:24:31.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:31.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:31.75
  STEP: Getting node addresses @ 11/18/23 12:24:31.752
  Nov 18 12:24:31.752: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Nov 18 12:24:31.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5955" for this suite. @ 11/18/23 12:24:31.76
• [0.035 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 11/18/23 12:24:31.766
  Nov 18 12:24:31.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 12:24:31.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:24:31.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:24:31.788
  STEP: Creating service test in namespace statefulset-9386 @ 11/18/23 12:24:31.79
  STEP: Creating a new StatefulSet @ 11/18/23 12:24:31.796
  Nov 18 12:24:31.805: INFO: Found 0 stateful pods, waiting for 3
  E1118 12:24:32.717745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:33.718001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:34.718265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:35.718453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:36.718643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:37.719156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:38.719287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:39.719498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:40.719669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:41.719785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:24:41.809: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:24:41.809: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:24:41.809: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:24:41.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-9386 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 12:24:41.974: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 12:24:41.974: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 12:24:41.974: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1118 12:24:42.720781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:43.721204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:44.721354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:45.722184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:46.722292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:47.722798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:48.722914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:49.723124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:50.723325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:51.723452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/18/23 12:24:51.989
  Nov 18 12:24:52.010: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/18/23 12:24:52.01
  E1118 12:24:52.723799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:53.724090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:54.724075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:55.724201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:56.724380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:57.724594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:58.724694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:24:59.724812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:00.725005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:01.725764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 11/18/23 12:25:02.026
  Nov 18 12:25:02.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-9386 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 12:25:02.174: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 12:25:02.174: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 12:25:02.174: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1118 12:25:02.726200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:03.727020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:04.727241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:05.727584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:06.727779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:07.728301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:08.729161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:09.730093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:10.730324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:11.730533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:12.730652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:13.730679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:14.730862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:15.731096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:16.731270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:17.731798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:18.732015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:19.732095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:20.733153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:21.733331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 11/18/23 12:25:22.194
  Nov 18 12:25:22.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-9386 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 12:25:22.336: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 12:25:22.336: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 12:25:22.336: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1118 12:25:22.733483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:23.733675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:24.733809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:25.733989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:26.734163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:27.734717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:28.734891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:29.735048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:30.735112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:31.735236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:25:32.369: INFO: Updating stateful set ss2
  E1118 12:25:32.735724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:33.736812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:34.737658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:35.737835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:36.738017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:37.738893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:38.739046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:39.739216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:40.739325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:41.739490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 11/18/23 12:25:42.384
  Nov 18 12:25:42.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-9386 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 12:25:42.538: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 12:25:42.538: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 12:25:42.538: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1118 12:25:42.740201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:43.741174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:44.741281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:45.741396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:46.741608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:47.741970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:48.742167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:49.742291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:50.742962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:51.743790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:25:52.558: INFO: Deleting all statefulset in ns statefulset-9386
  Nov 18 12:25:52.561: INFO: Scaling statefulset ss2 to 0
  E1118 12:25:52.744535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:53.745197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:54.745298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:55.745501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:56.745572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:57.745846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:58.746024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:25:59.746204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:00.747065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:01.747178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:02.578: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 12:26:02.581: INFO: Deleting statefulset ss2
  Nov 18 12:26:02.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9386" for this suite. @ 11/18/23 12:26:02.598
• [90.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/18/23 12:26:02.607
  Nov 18 12:26:02.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 12:26:02.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:26:02.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:26:02.631
  Nov 18 12:26:02.642: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E1118 12:26:02.747243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:03.747569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:04.747785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:05.748048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:06.748078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:07.645: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/18/23 12:26:07.645
  Nov 18 12:26:07.645: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1118 12:26:07.749020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:08.749179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:09.650: INFO: Creating deployment "test-rollover-deployment"
  Nov 18 12:26:09.658: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E1118 12:26:09.749909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:10.750092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:11.665: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Nov 18 12:26:11.671: INFO: Ensure that both replica sets have 1 created replica
  Nov 18 12:26:11.677: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Nov 18 12:26:11.685: INFO: Updating deployment test-rollover-deployment
  Nov 18 12:26:11.685: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1118 12:26:11.750514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:12.750650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:13.692: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Nov 18 12:26:13.698: INFO: Make sure deployment "test-rollover-deployment" is complete
  Nov 18 12:26:13.704: INFO: all replica sets need to contain the pod-template-hash label
  Nov 18 12:26:13.704: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 12:26:13.751297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:14.751424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:15.711: INFO: all replica sets need to contain the pod-template-hash label
  Nov 18 12:26:15.712: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 12:26:15.752027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:16.752094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:17.713: INFO: all replica sets need to contain the pod-template-hash label
  Nov 18 12:26:17.713: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 12:26:17.752656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:18.752768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:19.710: INFO: all replica sets need to contain the pod-template-hash label
  Nov 18 12:26:19.710: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 12:26:19.753629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:20.754415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:21.711: INFO: all replica sets need to contain the pod-template-hash label
  Nov 18 12:26:21.711: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 12, 26, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 12, 26, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 12:26:21.754686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:22.754955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:26:23.712: INFO: 
  Nov 18 12:26:23.712: INFO: Ensure that both old replica sets have no replicas
  Nov 18 12:26:23.720: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3922",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ebdd51c-d0e7-4250-a53c-2da3910e09cf",
      ResourceVersion: (string) (len=4) "7041",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 12:26:23.725: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3922",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56c1e27d-89ef-4c3c-b4a8-b99aa8f7bb5f",
      ResourceVersion: (string) (len=4) "7031",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907171,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4ebdd51c-d0e7-4250-a53c-2da3910e09cf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 65 62 64 64 35  31 63 2d 64 30 65 37 2d  |\"4ebdd51c-d0e7-|
              00000120  34 32 35 30 2d 61 35 33  63 2d 32 64 61 33 39 31  |4250-a53c-2da391|
              00000130  30 65 30 39 63 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0e09cf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 12:26:23.726: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Nov 18 12:26:23.727: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3922",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0653e10-5ba0-4cbb-8728-c68e63e62731",
      ResourceVersion: (string) (len=4) "7040",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907162,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4ebdd51c-d0e7-4250-a53c-2da3910e09cf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 65 62 64 64 35 31 63  2d 64 30 65 37 2d 34 32  |4ebdd51c-d0e7-42|
              000000c0  35 30 2d 61 35 33 63 2d  32 64 61 33 39 31 30 65  |50-a53c-2da3910e|
              000000d0  30 39 63 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |09cf\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907182,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 12:26:23.728: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3922",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac7dc817-5205-4121-bf41-8bee6df28058",
      ResourceVersion: (string) (len=4) "6988",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4ebdd51c-d0e7-4250-a53c-2da3910e09cf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 65 62 64 64 35  31 63 2d 64 30 65 37 2d  |\"4ebdd51c-d0e7-|
              00000120  34 32 35 30 2d 61 35 33  63 2d 32 64 61 33 39 31  |4250-a53c-2da391|
              00000130  30 65 30 39 63 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0e09cf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 12:26:23.732: INFO: Pod "test-rollover-deployment-5d484bf7f9-xjr89" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-xjr89",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-3922",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43653ebc-b2e3-472a-8a4c-ea9b3f9d32c9",
      ResourceVersion: (string) (len=4) "7009",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907171,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "56c1e27d-89ef-4c3c-b4a8-b99aa8f7bb5f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  63 31 65 32 37 64 2d 38  |d\":\"56c1e27d-8|
              00000090  39 65 66 2d 34 63 33 63  2d 62 34 61 38 2d 62 39  |9ef-4c3c-b4a8-b9|
              000000a0  39 61 61 38 66 37 62 62  35 66 5c 22 7d 22 3a 7b  |9aa8f7bb5f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907172,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 37 37 5c 22  |192.168.171.77\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-685wp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-685wp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907172,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907172,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907171,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907172,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://3c9a1e357104b1b957e3b3673a8aa9a53a28934457f2679ad39cbf984b4b3103",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:26:23.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3922" for this suite. @ 11/18/23 12:26:23.738
• [21.138 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/18/23 12:26:23.744
  Nov 18 12:26:23.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename subpath @ 11/18/23 12:26:23.745
  E1118 12:26:23.755475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:26:23.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:26:23.764
  STEP: Setting up data @ 11/18/23 12:26:23.766
  STEP: Creating pod pod-subpath-test-downwardapi-rhgt @ 11/18/23 12:26:23.774
  STEP: Creating a pod to test atomic-volume-subpath @ 11/18/23 12:26:23.774
  E1118 12:26:24.756122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:25.757156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:26.757494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:27.757919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:28.758673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:29.758879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:30.759707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:31.761903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:32.762133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:33.762397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:34.762930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:35.763061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:36.763689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:37.764242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:38.764657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:39.765187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:40.765993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:41.766278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:42.767154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:43.767696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:44.768093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:45.769184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:46.770063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:47.770704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:26:47.84
  Nov 18 12:26:47.843: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-subpath-test-downwardapi-rhgt container test-container-subpath-downwardapi-rhgt: <nil>
  STEP: delete the pod @ 11/18/23 12:26:47.859
  STEP: Deleting pod pod-subpath-test-downwardapi-rhgt @ 11/18/23 12:26:47.876
  Nov 18 12:26:47.876: INFO: Deleting pod "pod-subpath-test-downwardapi-rhgt" in namespace "subpath-1244"
  Nov 18 12:26:47.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1244" for this suite. @ 11/18/23 12:26:47.882
• [24.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/18/23 12:26:47.889
  Nov 18 12:26:47.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 12:26:47.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:26:47.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:26:47.91
  Nov 18 12:26:47.912: INFO: Creating simple deployment test-new-deployment
  Nov 18 12:26:47.923: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E1118 12:26:48.771554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:49.771691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 11/18/23 12:26:49.936
  STEP: updating a scale subresource @ 11/18/23 12:26:49.939
  STEP: verifying the deployment Spec.Replicas was modified @ 11/18/23 12:26:49.945
  STEP: Patch a scale subresource @ 11/18/23 12:26:49.948
  Nov 18 12:26:49.963: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef300c0b-aabb-4578-9fee-563f7e816e1c",
      ResourceVersion: (string) (len=4) "7194",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907207,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 12:26:49.971: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8109cee-970a-4bbd-ac49-403c2635d9e3",
      ResourceVersion: (string) (len=4) "7193",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907207,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "ef300c0b-aabb-4578-9fee-563f7e816e1c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 66 33 30 30 63  30 62 2d 61 61 62 62 2d  |\"ef300c0b-aabb-|
              00000120  34 35 37 38 2d 39 66 65  65 2d 35 36 33 66 37 65  |4578-9fee-563f7e|
              00000130  38 31 36 65 31 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |816e1c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 12:26:49.980: INFO: Pod "test-new-deployment-557759b7c7-5rbqz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-5rbqz",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7037a176-518c-4674-bd6b-ba5cfb8f623c",
      ResourceVersion: (string) (len=4) "7199",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907209,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b8109cee-970a-4bbd-ac49-403c2635d9e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  31 30 39 63 65 65 2d 39  |d\":\"b8109cee-9|
              00000090  37 30 61 2d 34 62 62 64  2d 61 63 34 39 2d 34 30  |70a-4bbd-ac49-40|
              000000a0  33 63 32 36 33 35 64 39  65 33 5c 22 7d 22 3a 7b  |3c2635d9e3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nms8x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nms8x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:26:49.981: INFO: Pod "test-new-deployment-557759b7c7-p4gsj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-p4gsj",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f84621e6-8471-489b-bdab-b98bb34e35a0",
      ResourceVersion: (string) (len=4) "7188",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907207,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "b8109cee-970a-4bbd-ac49-403c2635d9e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  31 30 39 63 65 65 2d 39  |d\":\"b8109cee-9|
              00000090  37 30 61 2d 34 62 62 64  2d 61 63 34 39 2d 34 30  |70a-4bbd-ac49-40|
              000000a0  33 63 32 36 33 35 64 39  65 33 5c 22 7d 22 3a 7b  |3c2635d9e3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 32 33 30 5c  |192.168.250.230\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j27gq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j27gq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907209,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907207,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907208,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f66b0319e348b9502d3a431fb751fce850df03c6f1e784e347bf622c5a71599f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:26:49.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9060" for this suite. @ 11/18/23 12:26:49.991
• [2.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 11/18/23 12:26:49.999
  Nov 18 12:26:49.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename cronjob @ 11/18/23 12:26:50
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:26:50.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:26:50.023
  STEP: Creating a ReplaceConcurrent cronjob @ 11/18/23 12:26:50.025
  STEP: Ensuring a job is scheduled @ 11/18/23 12:26:50.032
  E1118 12:26:50.771963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:51.772156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:52.772355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:53.773177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:54.773274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:55.773463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:56.774179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:57.774538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:58.774722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:26:59.774890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:00.775155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:01.775370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/18/23 12:27:02.036
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/18/23 12:27:02.04
  STEP: Ensuring the job is replaced with a new one @ 11/18/23 12:27:02.043
  E1118 12:27:02.776011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:03.776104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:04.777165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:05.777516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:06.778488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:07.778811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:08.779199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:09.779476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:10.780421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:11.781141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:12.781882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:13.782117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:14.783182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:15.783369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:16.783464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:17.784021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:18.784922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:19.785742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:20.785885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:21.786001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:22.786419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:23.787095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:24.787241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:25.787357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:26.787455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:27.787762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:28.788042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:29.788090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:30.789179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:31.789308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:32.789712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:33.789855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:34.790895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:35.791119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:36.792028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:37.793077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:38.793617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:39.793778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:40.794362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:41.794549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:42.794918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:43.795136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:44.795618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:45.795737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:46.796068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:47.796524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:48.797374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:49.797561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:50.797718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:51.797919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:52.798710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:53.799638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:54.799691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:55.799912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:56.800040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:57.800490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:58.801112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:27:59.801310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:00.801980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:01.802176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/18/23 12:28:02.048
  Nov 18 12:28:02.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8095" for this suite. @ 11/18/23 12:28:02.059
• [72.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 11/18/23 12:28:02.068
  Nov 18 12:28:02.068: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 12:28:02.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:28:02.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:28:02.092
  STEP: apply creating a deployment @ 11/18/23 12:28:02.094
  Nov 18 12:28:02.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7297" for this suite. @ 11/18/23 12:28:02.112
• [0.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 11/18/23 12:28:02.119
  Nov 18 12:28:02.119: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 12:28:02.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:28:02.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:28:02.143
  Nov 18 12:28:02.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 12:28:02.803149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:03.803447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1118 12:28:04.685731      22 warnings.go:70] unknown field "alpha"
  W1118 12:28:04.685755      22 warnings.go:70] unknown field "beta"
  W1118 12:28:04.685759      22 warnings.go:70] unknown field "delta"
  W1118 12:28:04.685764      22 warnings.go:70] unknown field "epsilon"
  W1118 12:28:04.685768      22 warnings.go:70] unknown field "gamma"
  E1118 12:28:04.804276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:28:05.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9271" for this suite. @ 11/18/23 12:28:05.225
• [3.114 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 11/18/23 12:28:05.233
  Nov 18 12:28:05.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 12:28:05.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:28:05.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:28:05.25
  STEP: Creating service test in namespace statefulset-1200 @ 11/18/23 12:28:05.252
  STEP: Creating a new StatefulSet @ 11/18/23 12:28:05.259
  Nov 18 12:28:05.274: INFO: Found 0 stateful pods, waiting for 3
  E1118 12:28:05.804624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:06.805196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:07.805756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:08.805950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:09.806536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:10.806723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:11.806909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:12.807194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:13.807332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:14.807515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:28:15.279: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:28:15.279: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:28:15.279: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/18/23 12:28:15.288
  Nov 18 12:28:15.307: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 11/18/23 12:28:15.307
  E1118 12:28:15.808528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:16.808642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:17.809193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:18.809356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:19.809721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:20.809739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:21.809821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:22.810103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:23.810331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:24.810569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/18/23 12:28:25.322
  STEP: Performing a canary update @ 11/18/23 12:28:25.322
  Nov 18 12:28:25.342: INFO: Updating stateful set ss2
  Nov 18 12:28:25.351: INFO: Waiting for Pod statefulset-1200/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1118 12:28:25.811539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:26.811700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:27.811895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:28.812093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:29.812305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:30.813177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:31.813368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:32.813492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:33.813708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:34.813832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/18/23 12:28:35.359
  Nov 18 12:28:35.406: INFO: Found 2 stateful pods, waiting for 3
  E1118 12:28:35.814768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:36.814947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:37.815479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:38.815686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:39.815928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:40.816086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:41.817132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:42.817462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:43.817657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:44.817782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:28:45.410: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:28:45.410: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:28:45.410: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/18/23 12:28:45.416
  Nov 18 12:28:45.435: INFO: Updating stateful set ss2
  Nov 18 12:28:45.442: INFO: Waiting for Pod statefulset-1200/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1118 12:28:45.817887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:46.818071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:47.818742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:48.818910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:49.819067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:50.819208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:51.819433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:52.819911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:53.820071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:54.820102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:28:55.468: INFO: Updating stateful set ss2
  Nov 18 12:28:55.474: INFO: Waiting for StatefulSet statefulset-1200/ss2 to complete update
  Nov 18 12:28:55.474: INFO: Waiting for Pod statefulset-1200/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1118 12:28:55.820992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:56.821509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:57.821843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:58.822023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:28:59.822232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:00.822617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:01.822827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:02.823077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:03.823225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:04.823435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:29:05.481: INFO: Deleting all statefulset in ns statefulset-1200
  Nov 18 12:29:05.484: INFO: Scaling statefulset ss2 to 0
  E1118 12:29:05.823507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:06.823713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:07.824191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:08.825173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:09.825369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:10.825585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:11.825796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:12.825907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:13.826800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:14.826985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:29:15.500: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 12:29:15.504: INFO: Deleting statefulset ss2
  Nov 18 12:29:15.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1200" for this suite. @ 11/18/23 12:29:15.519
• [70.293 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 11/18/23 12:29:15.526
  Nov 18 12:29:15.526: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-preemption @ 11/18/23 12:29:15.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:29:15.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:29:15.544
  Nov 18 12:29:15.560: INFO: Waiting up to 1m0s for all nodes to be ready
  E1118 12:29:15.827179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:16.827333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:17.828129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:18.828227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:19.829130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:20.829291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:21.829808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:22.830073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:23.831226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:24.831446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:25.831806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:26.832550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:27.833105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:28.833266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:29.834182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:30.834434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:31.834499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:32.834654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:33.835538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:34.835792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:35.836205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:36.837117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:37.837755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:38.837915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:39.838402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:40.838605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:41.838783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:42.839768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:43.840582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:44.840695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:45.841148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:46.841319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:47.841473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:48.841733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:49.842557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:50.842755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:51.842824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:52.843061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:53.843403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:54.843609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:55.843800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:56.844004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:57.844726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:58.845104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:29:59.845268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:00.845420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:01.845488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:02.846380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:03.846722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:04.846915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:05.847317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:06.847517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:07.848230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:08.849176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:09.849748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:10.849864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:11.849943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:12.850215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:13.850668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:14.850792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:15.578: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/18/23 12:30:15.58
  Nov 18 12:30:15.601: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov 18 12:30:15.608: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov 18 12:30:15.623: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov 18 12:30:15.631: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov 18 12:30:15.650: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov 18 12:30:15.656: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/18/23 12:30:15.656
  E1118 12:30:15.851435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:16.852267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/18/23 12:30:17.68
  E1118 12:30:17.853315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:18.853459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:19.853758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:20.853961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:21.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3898" for this suite. @ 11/18/23 12:30:21.755
• [66.236 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 11/18/23 12:30:21.762
  Nov 18 12:30:21.762: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:30:21.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:21.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:21.781
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/18/23 12:30:21.782
  Nov 18 12:30:21.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4376 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov 18 12:30:21.842: INFO: stderr: ""
  Nov 18 12:30:21.843: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/18/23 12:30:21.843
  Nov 18 12:30:21.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4376 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  E1118 12:30:21.854513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:21.906: INFO: stderr: ""
  Nov 18 12:30:21.906: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/18/23 12:30:21.906
  Nov 18 12:30:21.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4376 delete pods e2e-test-httpd-pod'
  E1118 12:30:22.855212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:23.711: INFO: stderr: ""
  Nov 18 12:30:23.711: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 18 12:30:23.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4376" for this suite. @ 11/18/23 12:30:23.714
• [1.959 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 11/18/23 12:30:23.722
  Nov 18 12:30:23.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:30:23.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:23.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:23.742
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:30:23.744
  E1118 12:30:23.856105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:24.856266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:25.856705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:26.857126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:30:27.764
  Nov 18 12:30:27.767: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-d13dee8d-53ce-4246-bd32-254cfb5cb681 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:30:27.785
  Nov 18 12:30:27.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-693" for this suite. @ 11/18/23 12:30:27.806
• [4.089 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 11/18/23 12:30:27.812
  Nov 18 12:30:27.812: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 12:30:27.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:27.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:27.833
  Nov 18 12:30:27.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 12:30:27.858105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:28.858677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/18/23 12:30:29.145
  Nov 18 12:30:29.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-7843 --namespace=crd-publish-openapi-7843 create -f -'
  Nov 18 12:30:29.477: INFO: stderr: ""
  Nov 18 12:30:29.477: INFO: stdout: "e2e-test-crd-publish-openapi-9153-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov 18 12:30:29.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-7843 --namespace=crd-publish-openapi-7843 delete e2e-test-crd-publish-openapi-9153-crds test-cr'
  Nov 18 12:30:29.540: INFO: stderr: ""
  Nov 18 12:30:29.540: INFO: stdout: "e2e-test-crd-publish-openapi-9153-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Nov 18 12:30:29.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-7843 --namespace=crd-publish-openapi-7843 apply -f -'
  Nov 18 12:30:29.844: INFO: stderr: ""
  Nov 18 12:30:29.844: INFO: stdout: "e2e-test-crd-publish-openapi-9153-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Nov 18 12:30:29.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-7843 --namespace=crd-publish-openapi-7843 delete e2e-test-crd-publish-openapi-9153-crds test-cr'
  E1118 12:30:29.859459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:29.911: INFO: stderr: ""
  Nov 18 12:30:29.911: INFO: stdout: "e2e-test-crd-publish-openapi-9153-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/18/23 12:30:29.911
  Nov 18 12:30:29.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-7843 explain e2e-test-crd-publish-openapi-9153-crds'
  Nov 18 12:30:30.033: INFO: stderr: ""
  Nov 18 12:30:30.033: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9153-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1118 12:30:30.859497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:31.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7843" for this suite. @ 11/18/23 12:30:31.382
• [3.576 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/18/23 12:30:31.388
  Nov 18 12:30:31.388: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 12:30:31.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:31.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:31.409
  Nov 18 12:30:31.433: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/18/23 12:30:31.439
  Nov 18 12:30:31.442: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:31.442: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/18/23 12:30:31.442
  Nov 18 12:30:31.462: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:31.462: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:30:31.860624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:32.467: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:32.467: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:30:32.861023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:33.467: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 12:30:33.467: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/18/23 12:30:33.471
  Nov 18 12:30:33.489: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 12:30:33.489: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1118 12:30:33.861968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:34.493: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:34.493: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/18/23 12:30:34.493
  Nov 18 12:30:34.506: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:34.506: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:30:34.862961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:35.510: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:35.510: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:30:35.863079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:36.510: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 12:30:36.510: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/18/23 12:30:36.518
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3076, will wait for the garbage collector to delete the pods @ 11/18/23 12:30:36.518
  Nov 18 12:30:36.577: INFO: Deleting DaemonSet.extensions daemon-set took: 5.792247ms
  Nov 18 12:30:36.678: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.645822ms
  E1118 12:30:36.863734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:37.781: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:30:37.781: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 18 12:30:37.786: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8503"},"items":null}

  Nov 18 12:30:37.790: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8503"},"items":null}

  Nov 18 12:30:37.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3076" for this suite. @ 11/18/23 12:30:37.819
• [6.437 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 11/18/23 12:30:37.826
  Nov 18 12:30:37.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename disruption @ 11/18/23 12:30:37.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:37.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:37.846
  STEP: Creating a kubernetes client @ 11/18/23 12:30:37.851
  Nov 18 12:30:37.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename disruption-2 @ 11/18/23 12:30:37.851
  E1118 12:30:37.863737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:37.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:37.878
  STEP: Waiting for the pdb to be processed @ 11/18/23 12:30:37.887
  STEP: Waiting for the pdb to be processed @ 11/18/23 12:30:37.899
  E1118 12:30:38.864349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:39.865146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/18/23 12:30:39.914
  STEP: listing a collection of PDBs across all namespaces @ 11/18/23 12:30:39.92
  STEP: listing a collection of PDBs in namespace disruption-8004 @ 11/18/23 12:30:39.925
  STEP: deleting a collection of PDBs @ 11/18/23 12:30:39.928
  STEP: Waiting for the PDB collection to be deleted @ 11/18/23 12:30:39.941
  Nov 18 12:30:39.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 12:30:39.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8151" for this suite. @ 11/18/23 12:30:39.952
  STEP: Destroying namespace "disruption-8004" for this suite. @ 11/18/23 12:30:39.957
• [2.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 11/18/23 12:30:39.964
  Nov 18 12:30:39.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replication-controller @ 11/18/23 12:30:39.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:39.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:39.981
  Nov 18 12:30:39.984: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1118 12:30:40.865371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/18/23 12:30:41
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/18/23 12:30:41.006
  E1118 12:30:41.866224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/18/23 12:30:42.015
  Nov 18 12:30:42.026: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/18/23 12:30:42.026
  E1118 12:30:42.867249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:43.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9632" for this suite. @ 11/18/23 12:30:43.038
• [3.081 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 11/18/23 12:30:43.045
  Nov 18 12:30:43.045: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 12:30:43.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:43.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:43.062
  Nov 18 12:30:43.069: INFO: Got root ca configmap in namespace "svcaccounts-9841"
  Nov 18 12:30:43.085: INFO: Deleted root ca configmap in namespace "svcaccounts-9841"
  STEP: waiting for a new root ca configmap created @ 11/18/23 12:30:43.585
  Nov 18 12:30:43.588: INFO: Recreated root ca configmap in namespace "svcaccounts-9841"
  Nov 18 12:30:43.593: INFO: Updated root ca configmap in namespace "svcaccounts-9841"
  E1118 12:30:43.868099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 11/18/23 12:30:44.094
  Nov 18 12:30:44.098: INFO: Reconciled root ca configmap in namespace "svcaccounts-9841"
  Nov 18 12:30:44.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9841" for this suite. @ 11/18/23 12:30:44.102
• [1.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 11/18/23 12:30:44.11
  Nov 18 12:30:44.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 12:30:44.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:44.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:44.128
  STEP: Creating a pod to test substitution in volume subpath @ 11/18/23 12:30:44.132
  E1118 12:30:44.868174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:45.868322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:46.869163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:47.869653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:30:48.154
  Nov 18 12:30:48.157: INFO: Trying to get logs from node ip-172-31-29-39 pod var-expansion-e638126b-5766-4b16-80b6-acdb989758f9 container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 12:30:48.172
  Nov 18 12:30:48.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4209" for this suite. @ 11/18/23 12:30:48.196
• [4.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 11/18/23 12:30:48.204
  Nov 18 12:30:48.204: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:30:48.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:48.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:48.224
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:30:48.227
  E1118 12:30:48.870457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:49.870683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:50.871578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:51.871828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:30:52.253
  Nov 18 12:30:52.256: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-6333d3ec-7acc-4bef-86b7-858eae95621f container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:30:52.264
  Nov 18 12:30:52.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5150" for this suite. @ 11/18/23 12:30:52.288
• [4.090 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 11/18/23 12:30:52.295
  Nov 18 12:30:52.295: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 12:30:52.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:52.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:52.313
  STEP: apply creating a deployment @ 11/18/23 12:30:52.316
  Nov 18 12:30:52.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1835" for this suite. @ 11/18/23 12:30:52.337
• [0.048 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 11/18/23 12:30:52.343
  Nov 18 12:30:52.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 12:30:52.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:52.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:52.36
  STEP: Setting up server cert @ 11/18/23 12:30:52.383
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 12:30:52.672
  STEP: Deploying the webhook pod @ 11/18/23 12:30:52.683
  STEP: Wait for the deployment to be ready @ 11/18/23 12:30:52.695
  Nov 18 12:30:52.707: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 12:30:52.872045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:53.873165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 12:30:54.719
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 12:30:54.73
  E1118 12:30:54.873593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:30:55.730: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/18/23 12:30:55.806
  STEP: Creating a configMap that should be mutated @ 11/18/23 12:30:55.818
  STEP: Deleting the collection of validation webhooks @ 11/18/23 12:30:55.844
  E1118 12:30:55.874536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should not be mutated @ 11/18/23 12:30:55.895
  Nov 18 12:30:55.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1543" for this suite. @ 11/18/23 12:30:55.949
  STEP: Destroying namespace "webhook-markers-8225" for this suite. @ 11/18/23 12:30:55.956
• [3.623 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/18/23 12:30:55.966
  Nov 18 12:30:55.966: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 12:30:55.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:30:55.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:30:55.987
  STEP: creating the pod @ 11/18/23 12:30:55.99
  STEP: setting up watch @ 11/18/23 12:30:55.99
  STEP: submitting the pod to kubernetes @ 11/18/23 12:30:56.095
  STEP: verifying the pod is in kubernetes @ 11/18/23 12:30:56.102
  STEP: verifying pod creation was observed @ 11/18/23 12:30:56.106
  E1118 12:30:56.875485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:57.876292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/18/23 12:30:58.119
  STEP: verifying pod deletion was observed @ 11/18/23 12:30:58.126
  E1118 12:30:58.877130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:30:59.877324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:00.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1022" for this suite. @ 11/18/23 12:31:00.804
• [4.843 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 11/18/23 12:31:00.809
  Nov 18 12:31:00.809: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 12:31:00.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:00.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:00.83
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/18/23 12:31:00.833
  E1118 12:31:00.878148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:01.879078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:02.879450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:03.880245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:31:04.855
  Nov 18 12:31:04.860: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-6058f0be-c2b5-407e-bf71-1988b823133e container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:31:04.865
  Nov 18 12:31:04.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1118 12:31:04.880541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-9105" for this suite. @ 11/18/23 12:31:04.883
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 11/18/23 12:31:04.89
  Nov 18 12:31:04.890: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename security-context @ 11/18/23 12:31:04.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:04.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:04.906
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/18/23 12:31:04.909
  E1118 12:31:05.881190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:06.881317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:07.882373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:08.882472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:31:08.931
  Nov 18 12:31:08.934: INFO: Trying to get logs from node ip-172-31-29-39 pod security-context-5b574d1a-7688-47b5-98f0-22be110d24e5 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:31:08.941
  Nov 18 12:31:08.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-79" for this suite. @ 11/18/23 12:31:08.961
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/18/23 12:31:08.969
  Nov 18 12:31:08.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-runtime @ 11/18/23 12:31:08.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:08.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:08.985
  STEP: create the container @ 11/18/23 12:31:08.989
  W1118 12:31:08.999902      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/18/23 12:31:09
  E1118 12:31:09.882623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:10.882801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:11.883836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/18/23 12:31:12.019
  STEP: the container should be terminated @ 11/18/23 12:31:12.022
  STEP: the termination message should be set @ 11/18/23 12:31:12.022
  Nov 18 12:31:12.022: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/18/23 12:31:12.022
  Nov 18 12:31:12.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6426" for this suite. @ 11/18/23 12:31:12.041
• [3.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 11/18/23 12:31:12.05
  Nov 18 12:31:12.050: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 12:31:12.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:12.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:12.067
  STEP: Setting up server cert @ 11/18/23 12:31:12.092
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 12:31:12.555
  STEP: Deploying the webhook pod @ 11/18/23 12:31:12.562
  STEP: Wait for the deployment to be ready @ 11/18/23 12:31:12.576
  Nov 18 12:31:12.587: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 12:31:12.884626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:13.884897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 12:31:14.6
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 12:31:14.61
  E1118 12:31:14.885084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:15.611: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/18/23 12:31:15.689
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/18/23 12:31:15.722
  STEP: Deleting the collection of validation webhooks @ 11/18/23 12:31:15.746
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/18/23 12:31:15.804
  Nov 18 12:31:15.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-455" for this suite. @ 11/18/23 12:31:15.858
  STEP: Destroying namespace "webhook-markers-6954" for this suite. @ 11/18/23 12:31:15.867
• [3.825 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 11/18/23 12:31:15.875
  Nov 18 12:31:15.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename job @ 11/18/23 12:31:15.876
  E1118 12:31:15.885298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:15.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:15.893
  STEP: Creating a suspended job @ 11/18/23 12:31:15.901
  STEP: Patching the Job @ 11/18/23 12:31:15.907
  STEP: Watching for Job to be patched @ 11/18/23 12:31:15.926
  Nov 18 12:31:15.927: INFO: Event ADDED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-job-label:e2e-9jfc9] and annotations: map[]
  Nov 18 12:31:15.927: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-job-label:e2e-9jfc9] and annotations: map[]
  Nov 18 12:31:15.928: INFO: Event MODIFIED found for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[]
  STEP: Updating the job @ 11/18/23 12:31:15.928
  STEP: Watching for Job to be updated @ 11/18/23 12:31:15.938
  Nov 18 12:31:15.940: INFO: Event MODIFIED found for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:15.940: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/18/23 12:31:15.94
  Nov 18 12:31:15.943: INFO: Job: e2e-9jfc9 as labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9]
  STEP: Waiting for job to complete @ 11/18/23 12:31:15.943
  E1118 12:31:16.885599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:17.886284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:18.886662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:19.886800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:20.887593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:21.887693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:22.887997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:23.888581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:24.889166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:25.889381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 11/18/23 12:31:25.948
  STEP: Watching for Job to be deleted @ 11/18/23 12:31:25.957
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event MODIFIED observed for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  Nov 18 12:31:25.959: INFO: Event DELETED found for Job e2e-9jfc9 in namespace job-54 with labels: map[e2e-9jfc9:patched e2e-job-label:e2e-9jfc9] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/18/23 12:31:25.959
  Nov 18 12:31:25.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-54" for this suite. @ 11/18/23 12:31:25.968
• [10.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 11/18/23 12:31:25.985
  Nov 18 12:31:25.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename security-context-test @ 11/18/23 12:31:25.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:26.004
  E1118 12:31:26.889685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:27.890128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:28.891130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:29.891290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:30.892278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:31.893165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:32.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1508" for this suite. @ 11/18/23 12:31:32.046
• [6.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/18/23 12:31:32.054
  Nov 18 12:31:32.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename watch @ 11/18/23 12:31:32.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:32.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:32.073
  STEP: creating a watch on configmaps with a certain label @ 11/18/23 12:31:32.077
  STEP: creating a new configmap @ 11/18/23 12:31:32.078
  STEP: modifying the configmap once @ 11/18/23 12:31:32.085
  STEP: changing the label value of the configmap @ 11/18/23 12:31:32.093
  STEP: Expecting to observe a delete notification for the watched object @ 11/18/23 12:31:32.102
  Nov 18 12:31:32.102: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7018  b3f79755-3af8-456d-9524-1ca9552a905b 9349 0 2023-11-18 12:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-18 12:31:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:31:32.102: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7018  b3f79755-3af8-456d-9524-1ca9552a905b 9350 0 2023-11-18 12:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-18 12:31:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:31:32.102: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7018  b3f79755-3af8-456d-9524-1ca9552a905b 9351 0 2023-11-18 12:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-18 12:31:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/18/23 12:31:32.102
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/18/23 12:31:32.111
  E1118 12:31:32.893440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:33.893597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:34.893832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:35.893891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:36.894071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:37.894589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:38.894643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:39.894817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:40.894972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:41.895119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 11/18/23 12:31:42.112
  STEP: modifying the configmap a third time @ 11/18/23 12:31:42.123
  STEP: deleting the configmap @ 11/18/23 12:31:42.137
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/18/23 12:31:42.155
  Nov 18 12:31:42.155: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7018  b3f79755-3af8-456d-9524-1ca9552a905b 9385 0 2023-11-18 12:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-18 12:31:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:31:42.155: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7018  b3f79755-3af8-456d-9524-1ca9552a905b 9386 0 2023-11-18 12:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-18 12:31:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:31:42.155: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7018  b3f79755-3af8-456d-9524-1ca9552a905b 9387 0 2023-11-18 12:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-11-18 12:31:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:31:42.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7018" for this suite. @ 11/18/23 12:31:42.162
• [10.115 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 11/18/23 12:31:42.169
  Nov 18 12:31:42.169: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 12:31:42.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:42.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:42.192
  STEP: creating service nodeport-test with type=NodePort in namespace services-6278 @ 11/18/23 12:31:42.196
  STEP: creating replication controller nodeport-test in namespace services-6278 @ 11/18/23 12:31:42.215
  I1118 12:31:42.224913      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-6278, replica count: 2
  E1118 12:31:42.895989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:43.896500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:44.896716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 12:31:45.276038      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 12:31:45.276: INFO: Creating new exec pod
  E1118 12:31:45.897138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:46.897252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:47.897435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:48.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6278 exec execpodnt522 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov 18 12:31:48.452: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov 18 12:31:48.452: INFO: stdout: ""
  E1118 12:31:48.898219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:49.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6278 exec execpodnt522 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Nov 18 12:31:49.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Nov 18 12:31:49.610: INFO: stdout: "nodeport-test-jcggt"
  Nov 18 12:31:49.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6278 exec execpodnt522 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.120 80'
  Nov 18 12:31:49.757: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.120 80\nConnection to 10.152.183.120 80 port [tcp/http] succeeded!\n"
  Nov 18 12:31:49.757: INFO: stdout: "nodeport-test-jcggt"
  Nov 18 12:31:49.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6278 exec execpodnt522 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.152 31499'
  Nov 18 12:31:49.896: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.84.152 31499\nConnection to 172.31.84.152 31499 port [tcp/*] succeeded!\n"
  Nov 18 12:31:49.896: INFO: stdout: "nodeport-test-kjb9z"
  Nov 18 12:31:49.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6278 exec execpodnt522 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.133 31499'
  E1118 12:31:49.898226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:50.042: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.133 31499\nConnection to 172.31.39.133 31499 port [tcp/*] succeeded!\n"
  Nov 18 12:31:50.042: INFO: stdout: "nodeport-test-kjb9z"
  Nov 18 12:31:50.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6278" for this suite. @ 11/18/23 12:31:50.046
• [7.884 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 11/18/23 12:31:50.054
  Nov 18 12:31:50.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 12:31:50.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:50.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:50.071
  Nov 18 12:31:50.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 12:31:50.899053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/18/23 12:31:51.365
  Nov 18 12:31:51.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-1902 --namespace=crd-publish-openapi-1902 create -f -'
  E1118 12:31:51.899568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:52.899855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:53.707: INFO: stderr: ""
  Nov 18 12:31:53.707: INFO: stdout: "e2e-test-crd-publish-openapi-8830-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov 18 12:31:53.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-1902 --namespace=crd-publish-openapi-1902 delete e2e-test-crd-publish-openapi-8830-crds test-cr'
  Nov 18 12:31:53.783: INFO: stderr: ""
  Nov 18 12:31:53.783: INFO: stdout: "e2e-test-crd-publish-openapi-8830-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Nov 18 12:31:53.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-1902 --namespace=crd-publish-openapi-1902 apply -f -'
  E1118 12:31:53.900748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:54.126: INFO: stderr: ""
  Nov 18 12:31:54.126: INFO: stdout: "e2e-test-crd-publish-openapi-8830-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Nov 18 12:31:54.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-1902 --namespace=crd-publish-openapi-1902 delete e2e-test-crd-publish-openapi-8830-crds test-cr'
  Nov 18 12:31:54.194: INFO: stderr: ""
  Nov 18 12:31:54.194: INFO: stdout: "e2e-test-crd-publish-openapi-8830-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/18/23 12:31:54.194
  Nov 18 12:31:54.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-1902 explain e2e-test-crd-publish-openapi-8830-crds'
  Nov 18 12:31:54.316: INFO: stderr: ""
  Nov 18 12:31:54.316: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8830-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1118 12:31:54.901187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:55.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1902" for this suite. @ 11/18/23 12:31:55.593
• [5.547 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 11/18/23 12:31:55.602
  Nov 18 12:31:55.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 12:31:55.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:31:55.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:31:55.626
  STEP: Creating pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787 @ 11/18/23 12:31:55.629
  E1118 12:31:55.901329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:56.901464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 12:31:57.645
  Nov 18 12:31:57.648: INFO: Initial restart count of pod busybox-3daec880-6035-422c-b85e-a9291e5558af is 0
  Nov 18 12:31:57.652: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:31:57.902175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:31:58.902336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:31:59.658: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:31:59.902414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:00.902692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:01.661: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:01.903327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:02.903885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:03.667: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:03.904758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:04.904874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:05.671: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:05.904924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:06.905100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:07.676: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:07.905587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:08.905723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:09.680: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:09.905884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:10.906824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:11.685: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:11.907227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:12.908084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:13.690: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:13.908812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:14.909170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:15.694: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:15.909866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:16.910053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:17.699: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:17.910366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:18.910512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:19.702: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:19.911178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:20.911381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:21.706: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:21.912170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:22.913123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:23.711: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:23.913331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:24.913643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:25.717: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:25.914599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:26.914739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:27.721: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:27.914979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:28.915071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:29.725: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:29.915830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:30.916022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:31.729: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:31.916069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:32.916097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:33.733: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:33.916747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:34.917190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:35.738: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:35.918215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:36.918334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:37.743: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:37.919297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:38.919385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:39.748: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:39.919525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:40.919697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:41.753: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:41.920237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:42.920513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:43.757: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:43.921128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:44.921308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:45.761: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:45.921436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:46.921643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:47.766: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:47.922144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:48.922268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:49.770: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:49.922763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:50.922969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:51.774: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:51.923923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:52.924083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:53.779: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:53.924088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:54.924322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:55.784: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:55.924617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:56.924851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:57.788: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:57.924910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:32:58.925976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:32:59.793: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:32:59.926397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:00.926880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:01.797: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:01.926910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:02.927107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:03.803: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:03.927202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:04.927408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:05.807: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:05.927405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:06.927649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:07.811: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:07.928685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:08.929114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:09.815: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:09.930005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:10.930153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:11.820: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:11.931190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:12.931514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:13.825: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:13.932454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:14.933165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:15.829: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:15.933970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:16.934168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:17.833: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:17.935053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:18.935180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:19.837: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:19.935922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:20.936083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:21.841: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:21.937027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:22.937232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:23.847: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:23.937452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:24.937644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:25.852: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:25.938074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:26.938231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:27.857: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:27.938325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:28.938487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:29.861: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:29.939191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:30.939362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:31.866: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:31.939371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:32.939678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:33.870: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:33.940577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:34.940836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:35.876: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:35.941114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:36.941302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:37.879: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:37.941943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:38.942224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:39.884: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:39.942799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:40.942941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:41.889: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:41.943094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:42.943283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:43.895: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:43.943563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:44.943728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:45.899: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:45.944751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:46.945154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:47.905: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:47.945346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:48.945400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:49.910: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:49.946467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:50.946632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:51.914: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:51.947218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:52.947470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:53.919: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:53.948468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:54.948658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:55.924: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:55.949162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:56.949309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:57.929: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:57.950305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:33:58.950422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:33:59.934: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:33:59.951410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:00.951580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:01.937: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:01.951993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:02.952080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:03.942: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:03.953125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:04.953813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:05.949: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:05.954576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:06.954677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:07.953: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:07.955357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:08.956039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:09.956331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:09.957: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:10.957078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:11.957223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:11.961: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:12.958006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:13.958204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:13.965: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:14.958770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:15.958989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:15.970: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:16.959135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:17.959760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:17.976: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:18.959865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:19.960118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:19.979: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:20.960229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:21.961151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:21.985: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:22.961330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:23.962306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:23.989: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:24.962498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:25.962679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:25.994: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:26.963208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:27.963646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:27.999: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:28.963870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:29.964112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:30.004: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:30.965008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:31.965172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:32.008: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:32.965414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:33.965854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:34.014: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:34.966599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:35.966702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:36.019: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:36.967310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:37.968016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:38.024: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:38.968946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:39.969069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:40.028: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:40.969616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:41.969723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:42.032: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:42.970464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:43.971364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:44.035: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:44.971837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:45.972081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:46.041: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:46.972097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:47.972570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:48.045: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:48.973224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:49.973317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:50.049: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:50.974153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:51.974290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:52.054: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:52.975040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:53.975268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:54.057: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:54.975836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:55.976881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:56.062: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:56.976935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:57.977363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:34:58.067: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:34:58.977676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:34:59.977829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:00.071: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:00.978012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:01.978115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:02.076: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:02.978942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:03.979065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:04.081: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:04.979182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:05.979375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:06.086: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:06.979986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:07.980159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:08.091: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:08.981158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:09.981302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:10.096: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:10.981375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:11.981530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:12.100: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:12.981802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:13.981997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:14.105: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:14.982110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:15.983066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:16.109: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:16.983158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:17.984055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:18.115: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:18.985130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:19.985276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:20.118: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:20.985781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:21.985925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:22.123: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:22.986357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:23.986585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:24.127: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:24.987274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:25.987751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:26.132: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:26.988050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:27.989123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:28.137: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:28.989455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:29.989598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:30.143: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:30.990194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:31.990383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:32.147: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:32.991093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:33.991242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:34.152: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:34.991462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:35.991661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:36.158: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:36.992614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:37.993009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:38.162: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:38.993063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:39.993265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:40.168: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:40.993426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:41.993505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:42.172: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:42.994251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:43.994473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:44.176: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:44.994531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:45.994694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:46.181: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:46.994804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:47.995345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:48.185: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:48.995580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:49.995739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:50.191: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:50.995859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:51.996083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:52.196: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:52.997153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:53.997679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:54.200: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:54.997806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:55.997898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:56.207: INFO: Get pod busybox-3daec880-6035-422c-b85e-a9291e5558af in namespace container-probe-3787
  E1118 12:35:56.998962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:57.998989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:35:58.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 12:35:58.211
  STEP: Destroying namespace "container-probe-3787" for this suite. @ 11/18/23 12:35:58.228
• [242.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 11/18/23 12:35:58.24
  Nov 18 12:35:58.240: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:35:58.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:35:58.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:35:58.261
  STEP: Creating configMap with name configmap-test-upd-1d6879cb-f872-4af6-8fa2-cc939569e590 @ 11/18/23 12:35:58.268
  STEP: Creating the pod @ 11/18/23 12:35:58.273
  E1118 12:35:58.999445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:35:59.999591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 11/18/23 12:36:00.297
  STEP: Waiting for pod with binary data @ 11/18/23 12:36:00.313
  Nov 18 12:36:00.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-293" for this suite. @ 11/18/23 12:36:00.324
• [2.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 11/18/23 12:36:00.333
  Nov 18 12:36:00.333: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename podtemplate @ 11/18/23 12:36:00.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:36:00.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:36:00.35
  STEP: Create a pod template @ 11/18/23 12:36:00.353
  STEP: Replace a pod template @ 11/18/23 12:36:00.359
  Nov 18 12:36:00.368: INFO: Found updated podtemplate annotation: "true"

  Nov 18 12:36:00.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8250" for this suite. @ 11/18/23 12:36:00.371
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 11/18/23 12:36:00.38
  Nov 18 12:36:00.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:36:00.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:36:00.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:36:00.396
  Nov 18 12:36:00.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-5789 version'
  Nov 18 12:36:00.450: INFO: stderr: ""
  Nov 18 12:36:00.450: INFO: stdout: "Client Version: v1.28.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.4\n"
  Nov 18 12:36:00.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5789" for this suite. @ 11/18/23 12:36:00.456
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/18/23 12:36:00.465
  Nov 18 12:36:00.465: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:36:00.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:36:00.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:36:00.485
  STEP: Creating secret with name secret-test-map-c0914339-b606-4cae-a7da-7b83e260cfab @ 11/18/23 12:36:00.489
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:36:00.493
  E1118 12:36:01.000528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:02.000646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:03.001724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:04.001846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:36:04.517
  Nov 18 12:36:04.520: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-secrets-fb665752-f6b3-4162-919e-2bdc8bfefb41 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 12:36:04.542
  Nov 18 12:36:04.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5950" for this suite. @ 11/18/23 12:36:04.565
• [4.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/18/23 12:36:04.573
  Nov 18 12:36:04.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:36:04.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:36:04.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:36:04.643
  STEP: Creating secret with name s-test-opt-del-ca831cde-2c12-438e-bcbc-c975aa64d756 @ 11/18/23 12:36:04.65
  STEP: Creating secret with name s-test-opt-upd-732fd63b-1bb2-4771-9279-2539099e9299 @ 11/18/23 12:36:04.655
  STEP: Creating the pod @ 11/18/23 12:36:04.661
  E1118 12:36:05.002812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:06.002947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-ca831cde-2c12-438e-bcbc-c975aa64d756 @ 11/18/23 12:36:06.708
  STEP: Updating secret s-test-opt-upd-732fd63b-1bb2-4771-9279-2539099e9299 @ 11/18/23 12:36:06.713
  STEP: Creating secret with name s-test-opt-create-b909b9a8-7b96-47ad-b139-85f1c71171e3 @ 11/18/23 12:36:06.719
  STEP: waiting to observe update in volume @ 11/18/23 12:36:06.725
  E1118 12:36:07.002987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:08.003227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:09.004079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:10.005207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:11.005693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:12.005865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:13.006342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:14.007335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:15.008031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:16.008098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:17.008867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:18.009247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:19.009878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:20.009977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:21.010092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:22.010348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:23.010988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:24.011195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:25.011938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:26.012063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:27.013101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:28.013620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:29.014010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:30.014190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:31.014588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:32.014795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:33.015377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:34.015598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:35.016594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:36.017172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:37.017955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:38.018298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:39.018571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:40.018776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:41.019166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:42.019322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:43.019636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:44.019809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:45.020854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:46.020930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:47.021557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:48.022026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:49.022897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:50.023084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:51.023443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:52.023639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:53.024068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:54.024108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:55.024927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:56.025098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:57.025789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:58.026446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:36:59.026506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:00.026650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:01.027331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:02.027530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:03.027669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:04.028061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:05.028046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:06.028198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:07.028340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:08.028840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:09.029357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:10.029514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:11.029977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:12.030111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:13.030290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:14.030685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:15.031304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:16.031457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:17.031742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:18.032032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:19.032089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:37:19.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5046" for this suite. @ 11/18/23 12:37:19.077
• [74.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/18/23 12:37:19.087
  Nov 18 12:37:19.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename watch @ 11/18/23 12:37:19.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:37:19.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:37:19.105
  STEP: creating a watch on configmaps with label A @ 11/18/23 12:37:19.109
  STEP: creating a watch on configmaps with label B @ 11/18/23 12:37:19.11
  STEP: creating a watch on configmaps with label A or B @ 11/18/23 12:37:19.112
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/18/23 12:37:19.113
  Nov 18 12:37:19.118: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10336 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:37:19.118: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10336 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/18/23 12:37:19.118
  Nov 18 12:37:19.127: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10337 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:37:19.127: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10337 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/18/23 12:37:19.127
  Nov 18 12:37:19.136: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10338 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:37:19.136: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10338 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/18/23 12:37:19.136
  Nov 18 12:37:19.142: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10339 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:37:19.142: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3146  a9000804-27d8-4000-9d30-e3f3081314c6 10339 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/18/23 12:37:19.142
  Nov 18 12:37:19.147: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3146  51308180-6910-4700-a8db-63c86c17296d 10340 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:37:19.148: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3146  51308180-6910-4700-a8db-63c86c17296d 10340 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1118 12:37:20.033193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:21.033471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:22.033677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:23.034552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:24.035079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:25.035196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:26.035372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:27.036090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:28.036393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:29.037147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/18/23 12:37:29.148
  Nov 18 12:37:29.156: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3146  51308180-6910-4700-a8db-63c86c17296d 10384 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:37:29.156: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3146  51308180-6910-4700-a8db-63c86c17296d 10384 0 2023-11-18 12:37:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-11-18 12:37:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1118 12:37:30.037812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:31.037995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:32.038174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:33.038310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:34.038505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:35.038692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:36.038824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:37.038927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:38.039051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:39.039213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:37:39.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3146" for this suite. @ 11/18/23 12:37:39.163
• [20.085 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 11/18/23 12:37:39.172
  Nov 18 12:37:39.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:37:39.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:37:39.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:37:39.192
  STEP: Creating projection with secret that has name secret-emptykey-test-74c9e6ff-1da0-4337-919d-bdf3ed82a1ff @ 11/18/23 12:37:39.195
  Nov 18 12:37:39.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6597" for this suite. @ 11/18/23 12:37:39.2
• [0.036 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/18/23 12:37:39.208
  Nov 18 12:37:39.208: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:37:39.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:37:39.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:37:39.226
  STEP: Creating projection with secret that has name projected-secret-test-map-392c56f4-8545-4a23-af1f-a69dcd07742f @ 11/18/23 12:37:39.23
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:37:39.235
  E1118 12:37:40.039669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:41.039905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:42.039907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:43.040066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:37:43.259
  Nov 18 12:37:43.263: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-secrets-9c22132f-b97e-4fb2-93a3-4ba56697da30 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 12:37:43.278
  Nov 18 12:37:43.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-778" for this suite. @ 11/18/23 12:37:43.296
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 11/18/23 12:37:43.304
  Nov 18 12:37:43.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:37:43.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:37:43.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:37:43.322
  STEP: Creating resourceQuota "e2e-rq-status-wgp9f" @ 11/18/23 12:37:43.33
  Nov 18 12:37:43.338: INFO: Resource quota "e2e-rq-status-wgp9f" reports spec: hard cpu limit of 500m
  Nov 18 12:37:43.338: INFO: Resource quota "e2e-rq-status-wgp9f" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-wgp9f" /status @ 11/18/23 12:37:43.338
  STEP: Confirm /status for "e2e-rq-status-wgp9f" resourceQuota via watch @ 11/18/23 12:37:43.365
  Nov 18 12:37:43.366: INFO: observed resourceQuota "e2e-rq-status-wgp9f" in namespace "resourcequota-3425" with hard status: v1.ResourceList(nil)
  Nov 18 12:37:43.366: INFO: Found resourceQuota "e2e-rq-status-wgp9f" in namespace "resourcequota-3425" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov 18 12:37:43.366: INFO: ResourceQuota "e2e-rq-status-wgp9f" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/18/23 12:37:43.37
  Nov 18 12:37:43.376: INFO: Resource quota "e2e-rq-status-wgp9f" reports spec: hard cpu limit of 1
  Nov 18 12:37:43.376: INFO: Resource quota "e2e-rq-status-wgp9f" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-wgp9f" /status @ 11/18/23 12:37:43.376
  STEP: Confirm /status for "e2e-rq-status-wgp9f" resourceQuota via watch @ 11/18/23 12:37:43.385
  Nov 18 12:37:43.387: INFO: observed resourceQuota "e2e-rq-status-wgp9f" in namespace "resourcequota-3425" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Nov 18 12:37:43.387: INFO: Found resourceQuota "e2e-rq-status-wgp9f" in namespace "resourcequota-3425" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Nov 18 12:37:43.387: INFO: ResourceQuota "e2e-rq-status-wgp9f" /status was patched
  STEP: Get "e2e-rq-status-wgp9f" /status @ 11/18/23 12:37:43.387
  Nov 18 12:37:43.392: INFO: Resourcequota "e2e-rq-status-wgp9f" reports status: hard cpu of 1
  Nov 18 12:37:43.392: INFO: Resourcequota "e2e-rq-status-wgp9f" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-wgp9f" /status before checking Spec is unchanged @ 11/18/23 12:37:43.395
  Nov 18 12:37:43.400: INFO: Resourcequota "e2e-rq-status-wgp9f" reports status: hard cpu of 2
  Nov 18 12:37:43.400: INFO: Resourcequota "e2e-rq-status-wgp9f" reports status: hard memory of 2Gi
  Nov 18 12:37:43.402: INFO: Found resourceQuota "e2e-rq-status-wgp9f" in namespace "resourcequota-3425" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E1118 12:37:44.040156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:45.041179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:46.041362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:47.041573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:48.041995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:49.042099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:50.042290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:51.042621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:52.042872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:53.043030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:54.043254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:55.043495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:56.044121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:57.044015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:58.044065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:37:59.044109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:00.045147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:01.045790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:02.046851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:03.047112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:04.048091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:05.049152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:06.049330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:07.050011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:08.050469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:08.412: INFO: ResourceQuota "e2e-rq-status-wgp9f" Spec was unchanged and /status reset
  Nov 18 12:38:08.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3425" for this suite. @ 11/18/23 12:38:08.417
• [25.122 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 11/18/23 12:38:08.426
  Nov 18 12:38:08.426: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 12:38:08.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:08.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:08.447
  Nov 18 12:38:08.450: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 12:38:09.051066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/18/23 12:38:09.764
  Nov 18 12:38:09.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 create -f -'
  E1118 12:38:10.051503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:10.140: INFO: stderr: ""
  Nov 18 12:38:10.140: INFO: stdout: "e2e-test-crd-publish-openapi-852-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov 18 12:38:10.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 delete e2e-test-crd-publish-openapi-852-crds test-foo'
  Nov 18 12:38:10.202: INFO: stderr: ""
  Nov 18 12:38:10.202: INFO: stdout: "e2e-test-crd-publish-openapi-852-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Nov 18 12:38:10.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 apply -f -'
  Nov 18 12:38:10.333: INFO: stderr: ""
  Nov 18 12:38:10.333: INFO: stdout: "e2e-test-crd-publish-openapi-852-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Nov 18 12:38:10.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 delete e2e-test-crd-publish-openapi-852-crds test-foo'
  Nov 18 12:38:10.398: INFO: stderr: ""
  Nov 18 12:38:10.398: INFO: stdout: "e2e-test-crd-publish-openapi-852-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/18/23 12:38:10.398
  Nov 18 12:38:10.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 create -f -'
  Nov 18 12:38:10.522: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/18/23 12:38:10.522
  Nov 18 12:38:10.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 create -f -'
  Nov 18 12:38:10.819: INFO: rc: 1
  Nov 18 12:38:10.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 apply -f -'
  Nov 18 12:38:10.945: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/18/23 12:38:10.945
  Nov 18 12:38:10.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 create -f -'
  E1118 12:38:11.051765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:11.069: INFO: rc: 1
  Nov 18 12:38:11.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 --namespace=crd-publish-openapi-8281 apply -f -'
  Nov 18 12:38:11.201: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/18/23 12:38:11.201
  Nov 18 12:38:11.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 explain e2e-test-crd-publish-openapi-852-crds'
  Nov 18 12:38:11.317: INFO: stderr: ""
  Nov 18 12:38:11.317: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-852-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/18/23 12:38:11.317
  Nov 18 12:38:11.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 explain e2e-test-crd-publish-openapi-852-crds.metadata'
  Nov 18 12:38:11.439: INFO: stderr: ""
  Nov 18 12:38:11.439: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-852-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Nov 18 12:38:11.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 explain e2e-test-crd-publish-openapi-852-crds.spec'
  Nov 18 12:38:11.559: INFO: stderr: ""
  Nov 18 12:38:11.559: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-852-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Nov 18 12:38:11.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 explain e2e-test-crd-publish-openapi-852-crds.spec.bars'
  Nov 18 12:38:11.676: INFO: stderr: ""
  Nov 18 12:38:11.676: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-852-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/18/23 12:38:11.676
  Nov 18 12:38:11.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8281 explain e2e-test-crd-publish-openapi-852-crds.spec.bars2'
  Nov 18 12:38:11.793: INFO: rc: 1
  E1118 12:38:12.052273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:13.052695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:13.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8281" for this suite. @ 11/18/23 12:38:13.103
• [4.686 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 11/18/23 12:38:13.112
  Nov 18 12:38:13.112: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 12:38:13.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:13.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:13.129
  STEP: Setting up server cert @ 11/18/23 12:38:13.153
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 12:38:13.463
  STEP: Deploying the webhook pod @ 11/18/23 12:38:13.47
  STEP: Wait for the deployment to be ready @ 11/18/23 12:38:13.482
  Nov 18 12:38:13.488: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1118 12:38:14.053189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:15.053442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 12:38:15.499
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 12:38:15.509
  E1118 12:38:16.054141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:16.509: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/18/23 12:38:16.515
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/18/23 12:38:16.515
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/18/23 12:38:16.531
  E1118 12:38:17.054299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/18/23 12:38:17.54
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/18/23 12:38:17.54
  E1118 12:38:18.055335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 11/18/23 12:38:18.566
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/18/23 12:38:18.566
  E1118 12:38:19.055736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:20.055890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:21.056099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:22.057206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:23.057374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/18/23 12:38:23.602
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/18/23 12:38:23.602
  E1118 12:38:24.057442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:25.058494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:26.058660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:27.058785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:28.059039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:28.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1092" for this suite. @ 11/18/23 12:38:28.686
  STEP: Destroying namespace "webhook-markers-2823" for this suite. @ 11/18/23 12:38:28.694
• [15.588 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/18/23 12:38:28.7
  Nov 18 12:38:28.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 12:38:28.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:28.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:28.719
  Nov 18 12:38:28.721: INFO: Creating deployment "webserver-deployment"
  Nov 18 12:38:28.728: INFO: Waiting for observed generation 1
  E1118 12:38:29.060042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:30.060099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:30.736: INFO: Waiting for all required pods to come up
  Nov 18 12:38:30.740: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/18/23 12:38:30.74
  Nov 18 12:38:30.740: INFO: Waiting for deployment "webserver-deployment" to complete
  Nov 18 12:38:30.746: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Nov 18 12:38:30.755: INFO: Updating deployment webserver-deployment
  Nov 18 12:38:30.755: INFO: Waiting for observed generation 2
  E1118 12:38:31.061177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:32.061288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:32.765: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Nov 18 12:38:32.769: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Nov 18 12:38:32.772: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov 18 12:38:32.780: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Nov 18 12:38:32.780: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Nov 18 12:38:32.783: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Nov 18 12:38:32.791: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Nov 18 12:38:32.791: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Nov 18 12:38:32.800: INFO: Updating deployment webserver-deployment
  Nov 18 12:38:32.800: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Nov 18 12:38:32.809: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Nov 18 12:38:32.812: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Nov 18 12:38:32.822: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d18ff0be-0f6b-4076-b30b-c901c1f36fa0",
      ResourceVersion: (string) (len=5) "10932",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 12:38:32.829: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
      ResourceVersion: (string) (len=5) "10936",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d18ff0be-0f6b-4076-b30b-c901c1f36fa0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 38 66 66 30  62 65 2d 30 66 36 62 2d  |\"d18ff0be-0f6b-|
              00000120  34 30 37 36 2d 62 33 30  62 2d 63 39 30 31 63 31  |4076-b30b-c901c1|
              00000130  66 33 36 66 61 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f36fa0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 12:38:32.830: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Nov 18 12:38:32.830: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
      ResourceVersion: (string) (len=5) "10934",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d18ff0be-0f6b-4076-b30b-c901c1f36fa0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 38 66 66 30  62 65 2d 30 66 36 62 2d  |\"d18ff0be-0f6b-|
              00000120  34 30 37 36 2d 62 33 30  62 2d 63 39 30 31 63 31  |4076-b30b-c901c1|
              00000130  66 33 36 66 61 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f36fa0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 12:38:32.843: INFO: Pod "webserver-deployment-557759b7c7-4jqsf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4jqsf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d194b3e8-4e25-4bf2-943d-35066db891e3",
      ResourceVersion: (string) (len=5) "10799",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 30 2e 38 30 5c 22 7d  |192.168.60.80\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjprh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjprh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.60.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.60.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0dae5b8601211073ead1585e94ae83ee938073e4dfc08d76c7d8b2c31955e404",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.845: INFO: Pod "webserver-deployment-557759b7c7-95sjn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-95sjn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81f5284f-5c02-47a6-af89-09e315e66f47",
      ResourceVersion: (string) (len=5) "10808",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 38 37 5c 22  |192.168.171.87\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qx6x8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qx6x8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7fd6431fb67969847f78948ea69e9f88ebffd8d08441c2be100a0752554bdef6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.847: INFO: Pod "webserver-deployment-557759b7c7-9k69j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9k69j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3b9b64b-5e95-4cae-afc8-8db3ab76289b",
      ResourceVersion: (string) (len=5) "10811",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 38 38 5c 22  |192.168.171.88\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xgc92",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xgc92",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://95e360e8c8f78e50748f02fea5e8093d1d7f279ad69998eac204ea0e0617ffb2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.849: INFO: Pod "webserver-deployment-557759b7c7-bfvpn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bfvpn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52751501-36c2-4130-be2c-be4f041ba49c",
      ResourceVersion: (string) (len=5) "10796",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 30 2e 38 32 5c 22 7d  |192.168.60.82\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xft5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xft5v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.60.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.60.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6643fa60e9ddd2e6ce43959f3faf7ffc157e08ccfd86096b098fa440e6282644",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.851: INFO: Pod "webserver-deployment-557759b7c7-fchjp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fchjp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5b77763-8fd6-4670-ab0a-eb130bc2d576",
      ResourceVersion: (string) (len=5) "10802",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  36 30 2e 38 31 5c 22 7d  |192.168.60.81\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7kvr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7kvr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.60.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.60.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://56703e2300ac46594b2a07ee70f27fbbaec7707aab88ad5d9c6b2728f994153b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.853: INFO: Pod "webserver-deployment-557759b7c7-jfd7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jfd7b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "183430c5-09be-4298-90fd-bb72d9222f54",
      ResourceVersion: (string) (len=5) "10947",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mtsbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mtsbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.855: INFO: Pod "webserver-deployment-557759b7c7-l4m79" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l4m79",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fcecbfa-5912-455d-b42b-0fdb9c98b8c8",
      ResourceVersion: (string) (len=5) "10939",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r7wxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r7wxt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.856: INFO: Pod "webserver-deployment-557759b7c7-mnp55" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mnp55",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e15ff3bd-2fd2-4411-a52b-130af6430fbe",
      ResourceVersion: (string) (len=5) "10949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tpr6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tpr6k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.858: INFO: Pod "webserver-deployment-557759b7c7-mnz8j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mnz8j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "602e394e-6611-49e8-934e-177ffcc29f94",
      ResourceVersion: (string) (len=5) "10805",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 38 39 5c 22  |192.168.171.89\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5qh5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5qh5w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b55914fbb92e3b568ab934a724efa7ef48eaa7cbc9059fe4a3f908cb7ba00ede",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.860: INFO: Pod "webserver-deployment-557759b7c7-ps6n7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ps6n7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fc2c1d9-e916-49f0-a183-601f8af44b5c",
      ResourceVersion: (string) (len=5) "10823",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 31 39 39 5c  |192.168.250.199\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qp547",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qp547",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://03fa7908bc547e913c2abbe58a2aae3f34d747696bc3123a724aec419de4c546",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.862: INFO: Pod "webserver-deployment-557759b7c7-shdd4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-shdd4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1e7c5a1-7a60-4e0f-b2d2-607b6cc63b1a",
      ResourceVersion: (string) (len=5) "10814",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 32 30 31 5c  |192.168.250.201\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djwct",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djwct",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835907909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c423b5bee657b13d103c12e2ca241d2d22e6c813b626d490150bdab1241ece79",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.864: INFO: Pod "webserver-deployment-557759b7c7-tswpg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tswpg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3018c735-f089-49ec-b3be-96b1b322f1e3",
      ResourceVersion: (string) (len=5) "10941",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdfwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdfwk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.866: INFO: Pod "webserver-deployment-557759b7c7-xll6s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xll6s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8755531e-26c7-4db7-8fa2-4b53f3ac3658",
      ResourceVersion: (string) (len=5) "10944",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "452e7c97-c9bc-4a73-8030-8ffc4072afa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  32 65 37 63 39 37 2d 63  |d\":\"452e7c97-c|
              00000090  39 62 63 2d 34 61 37 33  2d 38 30 33 30 2d 38 66  |9bc-4a73-8030-8f|
              000000a0  66 63 34 30 37 32 61 66  61 34 5c 22 7d 22 3a 7b  |fc4072afa4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpw5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpw5d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.867: INFO: Pod "webserver-deployment-9b4f5bf69-4hqvz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4hqvz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c37ad3c2-2395-4c65-b4e5-915e313296f8",
      ResourceVersion: (string) (len=5) "10920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 37 31  2e 39 30 5c 22 7d 22 3a  |.168.171.90\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djz7f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djz7f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.870: INFO: Pod "webserver-deployment-9b4f5bf69-7srkr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7srkr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5697b07-7122-40ca-aecb-764614b42e0b",
      ResourceVersion: (string) (len=5) "10923",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 35 30  2e 32 30 33 5c 22 7d 22  |.168.250.203\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gswx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gswx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.872: INFO: Pod "webserver-deployment-9b4f5bf69-gnm6q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gnm6q",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "867718d2-c3ff-4dbf-958b-fb3425065ee1",
      ResourceVersion: (string) (len=5) "10942",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c2479",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c2479",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.873: INFO: Pod "webserver-deployment-9b4f5bf69-lmrg7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lmrg7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a654ccaa-da51-4c2d-94ff-0597fdf28b50",
      ResourceVersion: (string) (len=5) "10927",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 35 30  2e 32 30 34 5c 22 7d 22  |.168.250.204\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j9d8x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j9d8x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.875: INFO: Pod "webserver-deployment-9b4f5bf69-sfx29" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sfx29",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4948e81-57ea-4a87-94ff-34f73869bf5a",
      ResourceVersion: (string) (len=5) "10946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mbcdb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mbcdb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.877: INFO: Pod "webserver-deployment-9b4f5bf69-t5p8b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t5p8b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5c69bc0-68d3-4382-9a84-a5f2f469e13b",
      ResourceVersion: (string) (len=5) "10917",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 37 31  2e 39 31 5c 22 7d 22 3a  |.168.171.91\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8z5h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8z5h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.879: INFO: Pod "webserver-deployment-9b4f5bf69-wws7n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wws7n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5077",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b254dfc8-8928-4428-93fe-50c49e562176",
      ResourceVersion: (string) (len=5) "10911",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "2fe1e4b2-31b7-4e0c-a786-844520b7abbb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  65 31 65 34 62 32 2d 33  |d\":\"2fe1e4b2-3|
              00000090  31 62 37 2d 34 65 30 63  2d 61 37 38 36 2d 38 34  |1b7-4e0c-a786-84|
              000000a0  34 35 32 30 62 37 61 62  62 62 5c 22 7d 22 3a 7b  |4520b7abbb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 36 30 2e  38 33 5c 22 7d 22 3a 7b  |.168.60.83\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mtw7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mtw7v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-152",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835907910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.152",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.60.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.60.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835907910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 12:38:32.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5077" for this suite. @ 11/18/23 12:38:32.895
• [4.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 11/18/23 12:38:32.906
  Nov 18 12:38:32.906: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename job @ 11/18/23 12:38:32.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:32.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:32.933
  STEP: Creating a job @ 11/18/23 12:38:32.935
  STEP: Ensuring job reaches completions @ 11/18/23 12:38:32.942
  E1118 12:38:33.061421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:34.061944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:35.062893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:36.063382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:37.064242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:38.064669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:39.065177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:40.065288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:41.065833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:42.065983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:38:42.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3665" for this suite. @ 11/18/23 12:38:42.95
• [10.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/18/23 12:38:42.957
  Nov 18 12:38:42.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename watch @ 11/18/23 12:38:42.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:42.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:42.974
  STEP: creating a watch on configmaps @ 11/18/23 12:38:42.976
  STEP: creating a new configmap @ 11/18/23 12:38:42.977
  STEP: modifying the configmap once @ 11/18/23 12:38:42.98
  STEP: closing the watch once it receives two notifications @ 11/18/23 12:38:42.989
  Nov 18 12:38:43.019: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1703  6e0bd72b-7033-4983-9768-86aae0ba2099 11448 0 2023-11-18 12:38:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-18 12:38:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:38:43.019: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1703  6e0bd72b-7033-4983-9768-86aae0ba2099 11449 0 2023-11-18 12:38:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-18 12:38:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/18/23 12:38:43.019
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/18/23 12:38:43.026
  STEP: deleting the configmap @ 11/18/23 12:38:43.027
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/18/23 12:38:43.033
  Nov 18 12:38:43.033: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1703  6e0bd72b-7033-4983-9768-86aae0ba2099 11450 0 2023-11-18 12:38:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-18 12:38:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:38:43.034: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1703  6e0bd72b-7033-4983-9768-86aae0ba2099 11451 0 2023-11-18 12:38:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-11-18 12:38:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:38:43.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1703" for this suite. @ 11/18/23 12:38:43.038
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 11/18/23 12:38:43.044
  Nov 18 12:38:43.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 12:38:43.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:43.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:43.065
  E1118 12:38:43.065981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating an Endpoint @ 11/18/23 12:38:43.07
  STEP: waiting for available Endpoint @ 11/18/23 12:38:43.076
  STEP: listing all Endpoints @ 11/18/23 12:38:43.077
  STEP: updating the Endpoint @ 11/18/23 12:38:43.08
  STEP: fetching the Endpoint @ 11/18/23 12:38:43.085
  STEP: patching the Endpoint @ 11/18/23 12:38:43.088
  STEP: fetching the Endpoint @ 11/18/23 12:38:43.095
  STEP: deleting the Endpoint by Collection @ 11/18/23 12:38:43.098
  STEP: waiting for Endpoint deletion @ 11/18/23 12:38:43.106
  STEP: fetching the Endpoint @ 11/18/23 12:38:43.107
  Nov 18 12:38:43.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1005" for this suite. @ 11/18/23 12:38:43.114
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 11/18/23 12:38:43.121
  Nov 18 12:38:43.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:38:43.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:38:43.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:38:43.14
  STEP: Creating configMap with name configmap-test-upd-df7335d8-e5aa-420a-b153-4b61a68b8509 @ 11/18/23 12:38:43.146
  STEP: Creating the pod @ 11/18/23 12:38:43.15
  E1118 12:38:44.067053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:45.067158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-df7335d8-e5aa-420a-b153-4b61a68b8509 @ 11/18/23 12:38:45.185
  STEP: waiting to observe update in volume @ 11/18/23 12:38:45.19
  E1118 12:38:46.067418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:47.068466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:48.068956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:49.069120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:50.070111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:51.070413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:52.070710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:53.071168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:54.071195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:55.071391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:56.072039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:57.072103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:58.073161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:38:59.073268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:00.074339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:01.074503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:02.074911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:03.075122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:04.075420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:05.075719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:06.076673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:07.077157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:08.077147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:09.077862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:10.078164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:11.078335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:12.078370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:13.078727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:14.079215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:15.079336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:16.079366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:17.079597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:18.080083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:19.080216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:20.081199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:21.081394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:22.082041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:23.082260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:24.082386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:25.082592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:26.083246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:27.083385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:28.083699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:29.084784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:30.084936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:31.085060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:32.085946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:33.086910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:34.087626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:35.087836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:36.088051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:37.089170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:38.090083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:39.090863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:40.091183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:41.091361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:42.092217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:43.093137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:44.093382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:45.093479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:46.094304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:47.094511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:48.094636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:49.094759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:50.095752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:51.096218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:52.097184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:53.097424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:54.098473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:55.098730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:56.098907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:57.099113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:58.099272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:39:59.099387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:00.100048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:01.100079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:02.101103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:03.101163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:04.101361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:05.101476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:05.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8712" for this suite. @ 11/18/23 12:40:05.551
• [82.437 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 11/18/23 12:40:05.558
  Nov 18 12:40:05.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename ingress @ 11/18/23 12:40:05.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:05.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:05.577
  STEP: getting /apis @ 11/18/23 12:40:05.579
  STEP: getting /apis/networking.k8s.io @ 11/18/23 12:40:05.582
  STEP: getting /apis/networking.k8s.iov1 @ 11/18/23 12:40:05.583
  STEP: creating @ 11/18/23 12:40:05.584
  STEP: getting @ 11/18/23 12:40:05.601
  STEP: listing @ 11/18/23 12:40:05.609
  STEP: watching @ 11/18/23 12:40:05.615
  Nov 18 12:40:05.615: INFO: starting watch
  STEP: cluster-wide listing @ 11/18/23 12:40:05.616
  STEP: cluster-wide watching @ 11/18/23 12:40:05.619
  Nov 18 12:40:05.619: INFO: starting watch
  STEP: patching @ 11/18/23 12:40:05.619
  STEP: updating @ 11/18/23 12:40:05.625
  Nov 18 12:40:05.633: INFO: waiting for watch events with expected annotations
  Nov 18 12:40:05.633: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/18/23 12:40:05.634
  STEP: updating /status @ 11/18/23 12:40:05.647
  STEP: get /status @ 11/18/23 12:40:05.659
  STEP: deleting @ 11/18/23 12:40:05.662
  STEP: deleting a collection @ 11/18/23 12:40:05.676
  Nov 18 12:40:05.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5532" for this suite. @ 11/18/23 12:40:05.701
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 11/18/23 12:40:05.71
  Nov 18 12:40:05.710: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 12:40:05.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:05.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:05.73
  STEP: creating service multi-endpoint-test in namespace services-9981 @ 11/18/23 12:40:05.732
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9981 to expose endpoints map[] @ 11/18/23 12:40:05.748
  Nov 18 12:40:05.756: INFO: successfully validated that service multi-endpoint-test in namespace services-9981 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9981 @ 11/18/23 12:40:05.757
  E1118 12:40:06.102196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:07.103183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9981 to expose endpoints map[pod1:[100]] @ 11/18/23 12:40:07.776
  Nov 18 12:40:07.788: INFO: successfully validated that service multi-endpoint-test in namespace services-9981 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9981 @ 11/18/23 12:40:07.788
  E1118 12:40:08.104135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:09.105178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9981 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/18/23 12:40:09.807
  Nov 18 12:40:09.819: INFO: successfully validated that service multi-endpoint-test in namespace services-9981 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/18/23 12:40:09.819
  Nov 18 12:40:09.819: INFO: Creating new exec pod
  E1118 12:40:10.105326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:11.105414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:12.105954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:12.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9981 exec execpod5t5b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Nov 18 12:40:12.972: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Nov 18 12:40:12.972: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:12.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9981 exec execpod5t5b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.147 80'
  E1118 12:40:13.106485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:13.110: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.147 80\nConnection to 10.152.183.147 80 port [tcp/http] succeeded!\n"
  Nov 18 12:40:13.110: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:13.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9981 exec execpod5t5b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Nov 18 12:40:13.253: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Nov 18 12:40:13.253: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:13.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9981 exec execpod5t5b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.147 81'
  Nov 18 12:40:13.405: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.147 81\nConnection to 10.152.183.147 81 port [tcp/*] succeeded!\n"
  Nov 18 12:40:13.405: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9981 @ 11/18/23 12:40:13.405
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9981 to expose endpoints map[pod2:[101]] @ 11/18/23 12:40:13.423
  Nov 18 12:40:13.436: INFO: successfully validated that service multi-endpoint-test in namespace services-9981 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9981 @ 11/18/23 12:40:13.436
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9981 to expose endpoints map[] @ 11/18/23 12:40:13.454
  Nov 18 12:40:13.463: INFO: successfully validated that service multi-endpoint-test in namespace services-9981 exposes endpoints map[]
  Nov 18 12:40:13.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9981" for this suite. @ 11/18/23 12:40:13.488
• [7.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 11/18/23 12:40:13.495
  Nov 18 12:40:13.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 12:40:13.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:13.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:13.638
  STEP: creating service in namespace services-2223 @ 11/18/23 12:40:13.64
  STEP: creating service affinity-nodeport-transition in namespace services-2223 @ 11/18/23 12:40:13.64
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2223 @ 11/18/23 12:40:13.665
  I1118 12:40:13.672415      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-2223, replica count: 3
  E1118 12:40:14.106883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:15.107650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:16.107750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 12:40:16.723508      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1118 12:40:17.108066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:18.108511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:19.109170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 12:40:19.723916      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 12:40:19.733: INFO: Creating new exec pod
  E1118 12:40:20.109983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:21.110210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:22.110742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:22.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-2223 exec execpod-affinityzh5xm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Nov 18 12:40:22.896: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Nov 18 12:40:22.896: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:22.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-2223 exec execpod-affinityzh5xm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.85 80'
  Nov 18 12:40:23.063: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.85 80\nConnection to 10.152.183.85 80 port [tcp/http] succeeded!\n"
  Nov 18 12:40:23.063: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:23.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-2223 exec execpod-affinityzh5xm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.152 30699'
  E1118 12:40:23.111772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:23.204: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.84.152 30699\nConnection to 172.31.84.152 30699 port [tcp/*] succeeded!\n"
  Nov 18 12:40:23.204: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:23.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-2223 exec execpod-affinityzh5xm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.133 30699'
  Nov 18 12:40:23.356: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.133 30699\nConnection to 172.31.39.133 30699 port [tcp/*] succeeded!\n"
  Nov 18 12:40:23.356: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 12:40:23.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-2223 exec execpod-affinityzh5xm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.29.39:30699/ ; done'
  Nov 18 12:40:23.587: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n"
  Nov 18 12:40:23.587: INFO: stdout: "\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-74v2h\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-74v2h\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-74v2h\naffinity-nodeport-transition-mnqcv\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mnqcv\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mnqcv\naffinity-nodeport-transition-74v2h\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mnqcv"
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-74v2h
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-74v2h
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-74v2h
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mnqcv
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mnqcv
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mnqcv
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-74v2h
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.587: INFO: Received response from host: affinity-nodeport-transition-mnqcv
  Nov 18 12:40:23.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-2223 exec execpod-affinityzh5xm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.29.39:30699/ ; done'
  Nov 18 12:40:23.801: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:30699/\n"
  Nov 18 12:40:23.801: INFO: stdout: "\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz\naffinity-nodeport-transition-mq8zz"
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Received response from host: affinity-nodeport-transition-mq8zz
  Nov 18 12:40:23.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 12:40:23.805: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2223, will wait for the garbage collector to delete the pods @ 11/18/23 12:40:23.818
  Nov 18 12:40:23.881: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.314252ms
  Nov 18 12:40:23.982: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.754213ms
  E1118 12:40:24.112650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:25.113314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:26.113802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:27.114160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:28.114670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2223" for this suite. @ 11/18/23 12:40:28.207
• [14.720 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 11/18/23 12:40:28.215
  Nov 18 12:40:28.215: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/18/23 12:40:28.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:28.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:28.236
  STEP: getting /apis @ 11/18/23 12:40:28.238
  STEP: getting /apis/storage.k8s.io @ 11/18/23 12:40:28.241
  STEP: getting /apis/storage.k8s.io/v1 @ 11/18/23 12:40:28.242
  STEP: creating @ 11/18/23 12:40:28.243
  STEP: watching @ 11/18/23 12:40:28.26
  Nov 18 12:40:28.260: INFO: starting watch
  STEP: getting @ 11/18/23 12:40:28.268
  STEP: listing in namespace @ 11/18/23 12:40:28.271
  STEP: listing across namespaces @ 11/18/23 12:40:28.274
  STEP: patching @ 11/18/23 12:40:28.278
  STEP: updating @ 11/18/23 12:40:28.282
  Nov 18 12:40:28.287: INFO: waiting for watch events with expected annotations in namespace
  Nov 18 12:40:28.287: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/18/23 12:40:28.287
  STEP: deleting a collection @ 11/18/23 12:40:28.3
  Nov 18 12:40:28.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9318" for this suite. @ 11/18/23 12:40:28.319
• [0.115 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 11/18/23 12:40:28.331
  Nov 18 12:40:28.331: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 12:40:28.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:28.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:28.35
  STEP: Creating service test in namespace statefulset-6416 @ 11/18/23 12:40:28.352
  Nov 18 12:40:28.369: INFO: Found 0 stateful pods, waiting for 1
  E1118 12:40:29.114916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:30.115004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:31.115836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:32.116043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:33.116261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:34.116686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:35.116441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:36.116669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:37.117153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:38.118194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:38.373: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/18/23 12:40:38.38
  W1118 12:40:38.387527      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Nov 18 12:40:38.394: INFO: Found 1 stateful pods, waiting for 2
  E1118 12:40:39.118451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:40.118702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:41.118919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:42.118987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:43.119222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:44.120097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:45.120192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:46.121261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:47.121451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:48.121851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:48.399: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 12:40:48.399: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/18/23 12:40:48.405
  STEP: Delete all of the StatefulSets @ 11/18/23 12:40:48.408
  STEP: Verify that StatefulSets have been deleted @ 11/18/23 12:40:48.417
  Nov 18 12:40:48.420: INFO: Deleting all statefulset in ns statefulset-6416
  Nov 18 12:40:48.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6416" for this suite. @ 11/18/23 12:40:48.441
• [20.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 11/18/23 12:40:48.453
  Nov 18 12:40:48.453: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 12:40:48.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:48.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:48.472
  E1118 12:40:49.122413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:50.122664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 11/18/23 12:40:50.504
  Nov 18 12:40:50.504: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2786 pod-service-account-01f3c310-4fcc-49f8-bc26-8084c7f75fb4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/18/23 12:40:50.655
  Nov 18 12:40:50.655: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2786 pod-service-account-01f3c310-4fcc-49f8-bc26-8084c7f75fb4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/18/23 12:40:50.795
  Nov 18 12:40:50.795: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2786 pod-service-account-01f3c310-4fcc-49f8-bc26-8084c7f75fb4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Nov 18 12:40:50.942: INFO: Got root ca configmap in namespace "svcaccounts-2786"
  Nov 18 12:40:50.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2786" for this suite. @ 11/18/23 12:40:50.948
• [2.504 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 11/18/23 12:40:50.957
  Nov 18 12:40:50.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename events @ 11/18/23 12:40:50.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:50.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:50.977
  STEP: creating a test event @ 11/18/23 12:40:50.979
  STEP: listing all events in all namespaces @ 11/18/23 12:40:50.984
  STEP: patching the test event @ 11/18/23 12:40:50.992
  STEP: fetching the test event @ 11/18/23 12:40:50.999
  STEP: updating the test event @ 11/18/23 12:40:51.002
  STEP: getting the test event @ 11/18/23 12:40:51.012
  STEP: deleting the test event @ 11/18/23 12:40:51.015
  STEP: listing all events in all namespaces @ 11/18/23 12:40:51.023
  Nov 18 12:40:51.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2869" for this suite. @ 11/18/23 12:40:51.036
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 11/18/23 12:40:51.044
  Nov 18 12:40:51.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:40:51.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:51.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:51.065
  STEP: Creating a pod to test downward api env vars @ 11/18/23 12:40:51.067
  E1118 12:40:51.123172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:52.123703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:53.124520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:54.125303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:40:55.09
  Nov 18 12:40:55.093: INFO: Trying to get logs from node ip-172-31-29-39 pod downward-api-d8d5e6bb-0a3a-4796-b7e7-f77bbd48b661 container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 12:40:55.101
  Nov 18 12:40:55.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1210" for this suite. @ 11/18/23 12:40:55.123
  E1118 12:40:55.126190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 11/18/23 12:40:55.131
  Nov 18 12:40:55.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 12:40:55.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:40:55.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:40:55.149
  STEP: Creating pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590 @ 11/18/23 12:40:55.151
  E1118 12:40:56.126789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:57.126992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 12:40:57.166
  Nov 18 12:40:57.169: INFO: Initial restart count of pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 is 0
  Nov 18 12:40:57.172: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:40:58.128105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:40:59.128207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:40:59.177: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:00.129150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:01.129433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:01.181: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:02.130520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:03.130869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:03.185: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:04.130889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:05.131684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:05.190: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:06.131918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:07.132090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:07.195: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:08.133139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:09.133326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:09.199: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:10.133422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:11.133582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:11.203: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:12.134580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:13.134666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:13.206: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:14.134911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:15.135086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:15.210: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  E1118 12:41:16.135926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:17.136179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:17.215: INFO: Get pod liveness-93e34797-ab01-440b-bd75-06976df9b9a5 in namespace container-probe-8590
  Nov 18 12:41:17.215: INFO: Restart count of pod container-probe-8590/liveness-93e34797-ab01-440b-bd75-06976df9b9a5 is now 1 (20.045642855s elapsed)
  Nov 18 12:41:17.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 12:41:17.218
  STEP: Destroying namespace "container-probe-8590" for this suite. @ 11/18/23 12:41:17.231
• [22.106 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/18/23 12:41:17.237
  Nov 18 12:41:17.237: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename containers @ 11/18/23 12:41:17.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:17.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:17.255
  STEP: Creating a pod to test override all @ 11/18/23 12:41:17.256
  E1118 12:41:18.137218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:19.137379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:20.138463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:21.138683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:41:21.275
  Nov 18 12:41:21.278: INFO: Trying to get logs from node ip-172-31-29-39 pod client-containers-8c5947a5-da62-4771-a50a-fd5a9c29f489 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:41:21.289
  Nov 18 12:41:21.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8713" for this suite. @ 11/18/23 12:41:21.31
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 11/18/23 12:41:21.318
  Nov 18 12:41:21.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:41:21.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:21.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:21.338
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:41:21.34
  E1118 12:41:22.139160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:23.139654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:24.140110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:25.141161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:41:25.36
  Nov 18 12:41:25.363: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-aa48532b-8a86-43d7-9ac9-93f1d2371ca3 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:41:25.37
  Nov 18 12:41:25.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4478" for this suite. @ 11/18/23 12:41:25.391
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/18/23 12:41:25.398
  Nov 18 12:41:25.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 12:41:25.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:25.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:25.424
  STEP: creating the pod @ 11/18/23 12:41:25.426
  STEP: submitting the pod to kubernetes @ 11/18/23 12:41:25.426
  STEP: verifying QOS class is set on the pod @ 11/18/23 12:41:25.436
  Nov 18 12:41:25.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1610" for this suite. @ 11/18/23 12:41:25.443
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 11/18/23 12:41:25.454
  Nov 18 12:41:25.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename discovery @ 11/18/23 12:41:25.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:25.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:25.472
  STEP: Setting up server cert @ 11/18/23 12:41:25.474
  STEP: Requesting APIResourceList from "/api/v1" @ 11/18/23 12:41:26.053
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/18/23 12:41:26.054
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/18/23 12:41:26.055
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/18/23 12:41:26.056
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/18/23 12:41:26.056
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/18/23 12:41:26.057
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/18/23 12:41:26.058
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/18/23 12:41:26.059
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/18/23 12:41:26.059
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/18/23 12:41:26.06
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/18/23 12:41:26.061
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/18/23 12:41:26.061
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/18/23 12:41:26.062
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/18/23 12:41:26.063
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/18/23 12:41:26.064
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/18/23 12:41:26.064
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/18/23 12:41:26.065
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/18/23 12:41:26.066
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/18/23 12:41:26.066
  Nov 18 12:41:26.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7336" for this suite. @ 11/18/23 12:41:26.07
• [0.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 11/18/23 12:41:26.078
  Nov 18 12:41:26.078: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:41:26.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:26.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:26.095
  STEP: creating secret secrets-6009/secret-test-5f4bc18d-b78c-4506-b870-c5f46f1ba537 @ 11/18/23 12:41:26.097
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:41:26.1
  E1118 12:41:26.141891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:27.142095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:28.142689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:29.142901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:41:30.123
  Nov 18 12:41:30.126: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-configmaps-d197df57-8ac3-4dde-8ce7-854d16a553e9 container env-test: <nil>
  E1118 12:41:30.143476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 11/18/23 12:41:30.144
  Nov 18 12:41:30.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6009" for this suite. @ 11/18/23 12:41:30.166
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 11/18/23 12:41:30.173
  Nov 18 12:41:30.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename runtimeclass @ 11/18/23 12:41:30.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:30.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:30.194
  Nov 18 12:41:30.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4579" for this suite. @ 11/18/23 12:41:30.205
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 11/18/23 12:41:30.212
  Nov 18 12:41:30.212: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename ingressclass @ 11/18/23 12:41:30.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:30.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:30.233
  STEP: getting /apis @ 11/18/23 12:41:30.235
  STEP: getting /apis/networking.k8s.io @ 11/18/23 12:41:30.239
  STEP: getting /apis/networking.k8s.iov1 @ 11/18/23 12:41:30.24
  STEP: creating @ 11/18/23 12:41:30.241
  STEP: getting @ 11/18/23 12:41:30.254
  STEP: listing @ 11/18/23 12:41:30.259
  STEP: watching @ 11/18/23 12:41:30.262
  Nov 18 12:41:30.262: INFO: starting watch
  STEP: patching @ 11/18/23 12:41:30.263
  STEP: updating @ 11/18/23 12:41:30.269
  Nov 18 12:41:30.274: INFO: waiting for watch events with expected annotations
  Nov 18 12:41:30.274: INFO: saw patched and updated annotations
  STEP: deleting @ 11/18/23 12:41:30.274
  STEP: deleting a collection @ 11/18/23 12:41:30.285
  Nov 18 12:41:30.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1254" for this suite. @ 11/18/23 12:41:30.306
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 11/18/23 12:41:30.313
  Nov 18 12:41:30.313: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:41:30.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:30.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:30.333
  STEP: Creating configMap with name configmap-test-volume-map-9baead6b-9ced-4fa1-88af-b453ea5a0c62 @ 11/18/23 12:41:30.335
  STEP: Creating a pod to test consume configMaps @ 11/18/23 12:41:30.34
  E1118 12:41:31.144125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:32.144238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:33.145157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:34.145354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:41:34.362
  Nov 18 12:41:34.364: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-configmaps-a97f3aed-69c4-4993-b02e-93dc8f03aa76 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:41:34.371
  Nov 18 12:41:34.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8707" for this suite. @ 11/18/23 12:41:34.392
• [4.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 11/18/23 12:41:34.398
  Nov 18 12:41:34.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:41:34.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:34.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:34.417
  STEP: Creating the pod @ 11/18/23 12:41:34.419
  E1118 12:41:35.145899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:36.146895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:36.955: INFO: Successfully updated pod "labelsupdate1af29d00-b7ce-4a3a-be54-bae1d5c2c1d9"
  E1118 12:41:37.147807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:38.148114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:41:38.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7080" for this suite. @ 11/18/23 12:41:38.978
• [4.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 11/18/23 12:41:38.986
  Nov 18 12:41:38.986: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:41:38.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:39.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:39.004
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:41:39.006
  E1118 12:41:39.148239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:40.148454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:41.148882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:42.149194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:41:43.03
  Nov 18 12:41:43.033: INFO: Trying to get logs from node ip-172-31-39-133 pod downwardapi-volume-0272735f-fe79-495f-91bc-9be36124dd78 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:41:43.039
  Nov 18 12:41:43.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5832" for this suite. @ 11/18/23 12:41:43.061
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/18/23 12:41:43.068
  Nov 18 12:41:43.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:41:43.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:41:43.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:41:43.092
  STEP: Creating secret with name s-test-opt-del-e82733df-7278-466f-8c20-9ecb21fcf4ec @ 11/18/23 12:41:43.097
  STEP: Creating secret with name s-test-opt-upd-556e18ec-b467-4625-94dc-49bc9c2c36d9 @ 11/18/23 12:41:43.104
  STEP: Creating the pod @ 11/18/23 12:41:43.108
  E1118 12:41:43.149561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:44.150012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e82733df-7278-466f-8c20-9ecb21fcf4ec @ 11/18/23 12:41:45.149
  E1118 12:41:45.150298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating secret s-test-opt-upd-556e18ec-b467-4625-94dc-49bc9c2c36d9 @ 11/18/23 12:41:45.155
  STEP: Creating secret with name s-test-opt-create-7cb26165-d0ff-4dc1-a23b-14aa61927af6 @ 11/18/23 12:41:45.16
  STEP: waiting to observe update in volume @ 11/18/23 12:41:45.163
  E1118 12:41:46.150408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:47.150938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:48.151479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:49.151700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:50.151815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:51.152117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:52.152193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:53.153143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:54.153869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:55.154068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:56.154119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:57.154337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:58.154706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:41:59.154924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:00.155304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:01.155639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:02.156048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:03.156093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:04.156154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:05.157155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:06.158206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:07.158234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:08.158849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:09.159002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:10.159636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:11.160747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:12.160824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:13.161218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:14.161542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:15.162528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:16.162942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:17.163092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:18.163160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:19.163308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:20.163575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:21.163839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:22.164919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:23.165204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:24.165315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:25.165490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:26.165682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:27.165894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:28.165979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:29.166990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:30.167641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:31.167845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:32.168074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:33.168392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:34.168332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:35.169169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:36.170204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:37.170384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:38.170451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:39.170616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:40.170819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:41.171023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:42.171693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:43.172030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:44.172081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:45.172526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:46.172777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:47.172921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:48.173210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:49.173396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:50.174111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:51.174248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:52.174366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:53.174697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:54.175615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:55.175808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:56.176046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:57.176124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:58.177120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:42:59.177297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:00.177715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:01.177926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:02.178046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:03.178284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:03.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1593" for this suite. @ 11/18/23 12:43:03.5
• [80.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 11/18/23 12:43:03.508
  Nov 18 12:43:03.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename podtemplate @ 11/18/23 12:43:03.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:03.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:03.524
  STEP: Create set of pod templates @ 11/18/23 12:43:03.526
  Nov 18 12:43:03.533: INFO: created test-podtemplate-1
  Nov 18 12:43:03.537: INFO: created test-podtemplate-2
  Nov 18 12:43:03.542: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/18/23 12:43:03.542
  STEP: delete collection of pod templates @ 11/18/23 12:43:03.545
  Nov 18 12:43:03.545: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/18/23 12:43:03.563
  Nov 18 12:43:03.563: INFO: requesting list of pod templates to confirm quantity
  Nov 18 12:43:03.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-332" for this suite. @ 11/18/23 12:43:03.569
• [0.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/18/23 12:43:03.576
  Nov 18 12:43:03.576: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 12:43:03.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:03.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:03.594
  STEP: Creating simple DaemonSet "daemon-set" @ 11/18/23 12:43:03.614
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/18/23 12:43:03.625
  Nov 18 12:43:03.629: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:03.629: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:03.632: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:43:03.632: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:43:04.179125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:04.636: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:04.636: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:04.639: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 12:43:04.639: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:43:05.179230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:05.636: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:05.636: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:05.639: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 12:43:05.639: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/18/23 12:43:05.642
  Nov 18 12:43:05.655: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:05.656: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:05.659: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 12:43:05.659: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:43:06.180005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:06.663: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:06.663: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:06.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 12:43:06.666: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:43:07.180170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:07.663: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:07.664: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:07.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 12:43:07.666: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 12:43:08.181143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:08.664: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:08.664: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 12:43:08.667: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 12:43:08.667: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/18/23 12:43:08.67
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7433, will wait for the garbage collector to delete the pods @ 11/18/23 12:43:08.67
  Nov 18 12:43:08.730: INFO: Deleting DaemonSet.extensions daemon-set took: 5.926037ms
  Nov 18 12:43:08.830: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.392598ms
  E1118 12:43:09.181222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:10.181878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:11.034: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 12:43:11.034: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 18 12:43:11.037: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13087"},"items":null}

  Nov 18 12:43:11.040: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13087"},"items":null}

  Nov 18 12:43:11.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7433" for this suite. @ 11/18/23 12:43:11.056
• [7.486 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 11/18/23 12:43:11.062
  Nov 18 12:43:11.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:43:11.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:11.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:11.079
  Nov 18 12:43:11.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2709" for this suite. @ 11/18/23 12:43:11.119
• [0.063 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 11/18/23 12:43:11.125
  Nov 18 12:43:11.125: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:43:11.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:11.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:11.144
  STEP: Creating a ResourceQuota @ 11/18/23 12:43:11.146
  STEP: Getting a ResourceQuota @ 11/18/23 12:43:11.15
  STEP: Updating a ResourceQuota @ 11/18/23 12:43:11.153
  STEP: Verifying a ResourceQuota was modified @ 11/18/23 12:43:11.157
  STEP: Deleting a ResourceQuota @ 11/18/23 12:43:11.161
  STEP: Verifying the deleted ResourceQuota @ 11/18/23 12:43:11.169
  Nov 18 12:43:11.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5640" for this suite. @ 11/18/23 12:43:11.175
  E1118 12:43:11.182183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/18/23 12:43:11.182
  Nov 18 12:43:11.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename containers @ 11/18/23 12:43:11.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:11.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:11.202
  STEP: Creating a pod to test override arguments @ 11/18/23 12:43:11.204
  E1118 12:43:12.182388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:13.182863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:43:13.224
  Nov 18 12:43:13.227: INFO: Trying to get logs from node ip-172-31-29-39 pod client-containers-26babb8f-e345-4ad7-b6a1-b12923e718ae container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:43:13.242
  Nov 18 12:43:13.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-514" for this suite. @ 11/18/23 12:43:13.262
• [2.088 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 11/18/23 12:43:13.271
  Nov 18 12:43:13.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:43:13.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:13.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:13.29
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/18/23 12:43:13.294
  Nov 18 12:43:13.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9015 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Nov 18 12:43:13.354: INFO: stderr: ""
  Nov 18 12:43:13.354: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/18/23 12:43:13.355
  Nov 18 12:43:13.358: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9015 delete pods e2e-test-httpd-pod'
  E1118 12:43:14.182917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:43:15.034: INFO: stderr: ""
  Nov 18 12:43:15.034: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 18 12:43:15.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9015" for this suite. @ 11/18/23 12:43:15.038
• [1.774 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 11/18/23 12:43:15.046
  Nov 18 12:43:15.046: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:43:15.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:15.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:15.066
  STEP: Creating configMap with name configmap-test-volume-c33ee261-581d-431c-a4ef-3fe4867574d3 @ 11/18/23 12:43:15.068
  STEP: Creating a pod to test consume configMaps @ 11/18/23 12:43:15.073
  E1118 12:43:15.183796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:16.184178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:17.185123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:18.185648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:43:19.095
  Nov 18 12:43:19.098: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-ae4f1eb8-76e7-4520-ad54-333fe8f18ff3 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:43:19.104
  Nov 18 12:43:19.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2285" for this suite. @ 11/18/23 12:43:19.126
• [4.086 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/18/23 12:43:19.132
  Nov 18 12:43:19.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename init-container @ 11/18/23 12:43:19.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:43:19.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:43:19.149
  STEP: creating the pod @ 11/18/23 12:43:19.151
  Nov 18 12:43:19.151: INFO: PodSpec: initContainers in spec.initContainers
  E1118 12:43:19.185783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:20.186826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:21.186942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:22.187115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:23.187369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:24.187611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:25.187656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:26.187743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:27.187858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:28.188069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:29.189123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:30.189261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:31.189426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:32.189616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:33.190245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:34.190483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:35.190634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:36.190814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:37.190951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:38.191482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:39.191677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:40.191891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:41.192108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:42.192346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:43.192722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:44.192949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:45.193159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:46.193345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:47.194367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:48.194918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:49.194985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:50.195206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:51.195383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:52.195588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:53.195687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:54.195985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:55.196692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:56.197105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:57.197283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:58.197782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:43:59.197873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:00.198049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:01.198221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:44:02.092: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-adb24713-7c1f-404f-9878-39f8fb6fd621", GenerateName:"", Namespace:"init-container-4755", SelfLink:"", UID:"ad239f4f-e8c3-4224-b50f-91096a1c60ca", ResourceVersion:"13375", Generation:0, CreationTimestamp:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"151160664"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f70018), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.November, 18, 12, 44, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f70048), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-qhvz7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc006228f00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qhvz7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qhvz7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qhvz7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00524fcc8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-29-39", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0006976c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00524fd50)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00524fd70)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00524fd78), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00524fd7c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000e80c90), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.29.39", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.250.222", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.250.222"}}, StartTime:time.Date(2023, time.November, 18, 12, 43, 19, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000697c00)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000697ea0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://87824430b68dbbede069f429b79a847598f7e6068c38eb946fa4af1910fd223f", Started:(*bool)(0xc00524fe1a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc006228f80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00524fe2f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc006228f60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00524fdff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Nov 18 12:44:02.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4755" for this suite. @ 11/18/23 12:44:02.096
• [42.971 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 11/18/23 12:44:02.104
  Nov 18 12:44:02.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 12:44:02.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:02.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:02.123
  STEP: Creating a test headless service @ 11/18/23 12:44:02.125
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1409 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1409;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1409 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1409;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1409.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1409.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1409.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1409.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1409.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1409.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1409.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1409.svc;check="$$(dig +notcp +noall +answer +search 201.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.201_udp@PTR;check="$$(dig +tcp +noall +answer +search 201.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.201_tcp@PTR;sleep 1; done
   @ 11/18/23 12:44:02.141
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1409 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1409;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1409 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1409;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1409.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1409.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1409.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1409.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1409.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1409.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1409.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1409.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1409.svc;check="$$(dig +notcp +noall +answer +search 201.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.201_udp@PTR;check="$$(dig +tcp +noall +answer +search 201.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.201_tcp@PTR;sleep 1; done
   @ 11/18/23 12:44:02.141
  STEP: creating a pod to probe DNS @ 11/18/23 12:44:02.141
  STEP: submitting the pod to kubernetes @ 11/18/23 12:44:02.141
  E1118 12:44:02.199272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:03.200356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:04.200965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:05.201936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:06.202532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:07.202649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:08.202937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:09.203440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 12:44:10.177
  STEP: looking for the results for each expected name from probers @ 11/18/23 12:44:10.181
  Nov 18 12:44:10.185: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.188: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.191: INFO: Unable to read wheezy_udp@dns-test-service.dns-1409 from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.194: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1409 from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.197: INFO: Unable to read wheezy_udp@dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.200: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  E1118 12:44:10.204164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:44:10.204: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.206: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.223: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.226: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.229: INFO: Unable to read jessie_udp@dns-test-service.dns-1409 from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.232: INFO: Unable to read jessie_tcp@dns-test-service.dns-1409 from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.235: INFO: Unable to read jessie_udp@dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.238: INFO: Unable to read jessie_tcp@dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.242: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.244: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1409.svc from pod dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0: the server could not find the requested resource (get pods dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0)
  Nov 18 12:44:10.257: INFO: Lookups using dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1409 wheezy_tcp@dns-test-service.dns-1409 wheezy_udp@dns-test-service.dns-1409.svc wheezy_tcp@dns-test-service.dns-1409.svc wheezy_udp@_http._tcp.dns-test-service.dns-1409.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1409.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1409 jessie_tcp@dns-test-service.dns-1409 jessie_udp@dns-test-service.dns-1409.svc jessie_tcp@dns-test-service.dns-1409.svc jessie_udp@_http._tcp.dns-test-service.dns-1409.svc jessie_tcp@_http._tcp.dns-test-service.dns-1409.svc]

  Nov 18 12:44:10.263: INFO: Pod client logs for webserver: 
  Nov 18 12:44:10.269: INFO: Pod client logs for querier: 
  Nov 18 12:44:10.275: INFO: Pod client logs for jessie-querier: 
  E1118 12:44:11.204318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:12.205223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:13.205700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:14.206341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:15.206547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:44:15.351: INFO: DNS probes using dns-1409/dns-test-4759fa85-9985-4232-b3ff-91078bd0d7d0 succeeded

  Nov 18 12:44:15.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 12:44:15.355
  STEP: deleting the test service @ 11/18/23 12:44:15.374
  STEP: deleting the test headless service @ 11/18/23 12:44:15.396
  STEP: Destroying namespace "dns-1409" for this suite. @ 11/18/23 12:44:15.408
• [13.313 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 11/18/23 12:44:15.417
  Nov 18 12:44:15.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename podtemplate @ 11/18/23 12:44:15.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:15.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:15.44
  Nov 18 12:44:15.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-506" for this suite. @ 11/18/23 12:44:15.474
• [0.062 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 11/18/23 12:44:15.48
  Nov 18 12:44:15.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename runtimeclass @ 11/18/23 12:44:15.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:15.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:15.499
  E1118 12:44:16.207578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:17.207700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:44:17.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7445" for this suite. @ 11/18/23 12:44:17.53
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 11/18/23 12:44:17.54
  Nov 18 12:44:17.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:44:17.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:17.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:17.561
  STEP: Creating configMap with name configmap-test-volume-366d568f-50a5-4432-8381-9aefc4caec7f @ 11/18/23 12:44:17.563
  STEP: Creating a pod to test consume configMaps @ 11/18/23 12:44:17.57
  E1118 12:44:18.208096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:19.209186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:20.210102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:21.210279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:44:21.591
  Nov 18 12:44:21.595: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-8510e432-e137-43f8-9205-cfb197be5592 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:44:21.601
  Nov 18 12:44:21.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9307" for this suite. @ 11/18/23 12:44:21.626
• [4.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 11/18/23 12:44:21.632
  Nov 18 12:44:21.632: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sysctl @ 11/18/23 12:44:21.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:21.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:21.649
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/18/23 12:44:21.654
  STEP: Watching for error events or started pod @ 11/18/23 12:44:21.664
  E1118 12:44:22.210810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:23.211240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 11/18/23 12:44:23.667
  E1118 12:44:24.212203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:25.213175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 11/18/23 12:44:25.679
  STEP: Getting logs from the pod @ 11/18/23 12:44:25.679
  STEP: Checking that the sysctl is actually updated @ 11/18/23 12:44:25.685
  Nov 18 12:44:25.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7196" for this suite. @ 11/18/23 12:44:25.689
• [4.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/18/23 12:44:25.695
  Nov 18 12:44:25.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubelet-test @ 11/18/23 12:44:25.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:25.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:25.718
  STEP: Waiting for pod completion @ 11/18/23 12:44:25.728
  E1118 12:44:26.213340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:27.213731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:28.214719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:29.214942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:44:29.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-623" for this suite. @ 11/18/23 12:44:29.751
• [4.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 11/18/23 12:44:29.758
  Nov 18 12:44:29.758: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-preemption @ 11/18/23 12:44:29.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:44:29.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:44:29.777
  Nov 18 12:44:29.794: INFO: Waiting up to 1m0s for all nodes to be ready
  E1118 12:44:30.215771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:31.216726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:32.216787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:33.217119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:34.217765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:35.218092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:36.218716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:37.218882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:38.219562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:39.219782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:40.219870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:41.220055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:42.220875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:43.221412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:44.221546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:45.221738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:46.222595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:47.222760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:48.223108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:49.223286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:50.223403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:51.223794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:52.223894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:53.224087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:54.224084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:55.224168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:56.225211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:57.225394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:58.225717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:44:59.225793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:00.226400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:01.226559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:02.226943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:03.227697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:04.227815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:05.228029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:06.228685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:07.229158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:08.229544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:09.229669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:10.230292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:11.230449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:12.230502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:13.230942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:14.231552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:15.231757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:16.232059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:17.232184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:18.232484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:19.232650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:20.232772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:21.233164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:22.233884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:23.234196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:24.234332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:25.234785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:26.234883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:27.235137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:28.235581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:29.235772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:45:29.812: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/18/23 12:45:29.815
  Nov 18 12:45:29.815: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/18/23 12:45:29.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:29.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:29.834
  Nov 18 12:45:29.848: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Nov 18 12:45:29.851: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Nov 18 12:45:29.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 12:45:29.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1469" for this suite. @ 11/18/23 12:45:29.929
  STEP: Destroying namespace "sched-preemption-5520" for this suite. @ 11/18/23 12:45:29.935
• [60.183 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/18/23 12:45:29.941
  Nov 18 12:45:29.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 12:45:29.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:29.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:29.957
  STEP: creating a Pod with a static label @ 11/18/23 12:45:29.965
  STEP: watching for Pod to be ready @ 11/18/23 12:45:29.975
  Nov 18 12:45:29.977: INFO: observed Pod pod-test in namespace pods-9421 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Nov 18 12:45:29.981: INFO: observed Pod pod-test in namespace pods-9421 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC  }]
  Nov 18 12:45:29.996: INFO: observed Pod pod-test in namespace pods-9421 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC  }]
  E1118 12:45:30.236655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:45:31.229: INFO: Found Pod pod-test in namespace pods-9421 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:31 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:31 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 12:45:29 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/18/23 12:45:31.232
  E1118 12:45:31.236897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting the Pod and ensuring that it's patched @ 11/18/23 12:45:31.24
  STEP: replacing the Pod's status Ready condition to False @ 11/18/23 12:45:31.243
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/18/23 12:45:31.253
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/18/23 12:45:31.253
  STEP: watching for the Pod to be deleted @ 11/18/23 12:45:31.262
  Nov 18 12:45:31.263: INFO: observed event type MODIFIED
  E1118 12:45:32.237341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:45:33.235: INFO: observed event type MODIFIED
  E1118 12:45:33.237471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:45:33.450: INFO: observed event type MODIFIED
  E1118 12:45:34.237634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:45:34.238: INFO: observed event type MODIFIED
  Nov 18 12:45:34.255: INFO: observed event type MODIFIED
  Nov 18 12:45:34.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9421" for this suite. @ 11/18/23 12:45:34.268
• [4.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 11/18/23 12:45:34.276
  Nov 18 12:45:34.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:45:34.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:34.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:34.297
  STEP: Counting existing ResourceQuota @ 11/18/23 12:45:34.299
  E1118 12:45:35.238227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:36.238703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:37.239255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:38.239406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:39.240063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/18/23 12:45:39.302
  STEP: Ensuring resource quota status is calculated @ 11/18/23 12:45:39.308
  E1118 12:45:40.241194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:41.241529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 11/18/23 12:45:41.313
  STEP: Ensuring resource quota status captures replicaset creation @ 11/18/23 12:45:41.324
  E1118 12:45:42.242513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:43.242715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 11/18/23 12:45:43.329
  STEP: Ensuring resource quota status released usage @ 11/18/23 12:45:43.335
  E1118 12:45:44.242829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:45.243718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:45:45.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2151" for this suite. @ 11/18/23 12:45:45.343
• [11.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/18/23 12:45:45.352
  Nov 18 12:45:45.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:45:45.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:45.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:45.37
  STEP: Creating secret with name secret-test-defe015b-4651-486a-aee5-19ad4368b5f1 @ 11/18/23 12:45:45.372
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:45:45.376
  E1118 12:45:46.244059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:47.244103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:48.244155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:49.245109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:45:49.396
  Nov 18 12:45:49.399: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-secrets-537eadd1-8298-4b7e-80a4-645cd8488d63 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 12:45:49.406
  Nov 18 12:45:49.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6778" for this suite. @ 11/18/23 12:45:49.426
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 11/18/23 12:45:49.433
  Nov 18 12:45:49.433: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 12:45:49.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:49.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:49.454
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/18/23 12:45:49.456
  E1118 12:45:50.245772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:51.245806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:52.246048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:53.247005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:45:53.477
  Nov 18 12:45:53.481: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-9ef8726d-0ee8-428e-b490-4c79c507f487 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:45:53.488
  Nov 18 12:45:53.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6585" for this suite. @ 11/18/23 12:45:53.51
• [4.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 11/18/23 12:45:53.519
  Nov 18 12:45:53.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 12:45:53.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:53.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:53.541
  STEP: create the deployment @ 11/18/23 12:45:53.542
  W1118 12:45:53.548646      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/18/23 12:45:53.548
  STEP: delete the deployment @ 11/18/23 12:45:54.059
  STEP: wait for all rs to be garbage collected @ 11/18/23 12:45:54.066
  STEP: expected 0 rs, got 1 rs @ 11/18/23 12:45:54.08
  STEP: expected 0 pods, got 2 pods @ 11/18/23 12:45:54.085
  E1118 12:45:54.247420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/18/23 12:45:54.595
  W1118 12:45:54.600574      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 18 12:45:54.600: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 18 12:45:54.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-165" for this suite. @ 11/18/23 12:45:54.604
• [1.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 11/18/23 12:45:54.612
  Nov 18 12:45:54.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:45:54.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:45:54.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:45:54.639
  STEP: Counting existing ResourceQuota @ 11/18/23 12:45:54.641
  E1118 12:45:55.247553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:56.248491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:57.249255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:58.250191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:45:59.250977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/18/23 12:45:59.644
  STEP: Ensuring resource quota status is calculated @ 11/18/23 12:45:59.65
  E1118 12:46:00.251910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:01.252226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:01.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7125" for this suite. @ 11/18/23 12:46:01.659
• [7.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 11/18/23 12:46:01.667
  Nov 18 12:46:01.667: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename cronjob @ 11/18/23 12:46:01.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:01.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:01.687
  STEP: Creating a cronjob @ 11/18/23 12:46:01.689
  STEP: creating @ 11/18/23 12:46:01.689
  STEP: getting @ 11/18/23 12:46:01.694
  STEP: listing @ 11/18/23 12:46:01.698
  STEP: watching @ 11/18/23 12:46:01.701
  Nov 18 12:46:01.701: INFO: starting watch
  STEP: cluster-wide listing @ 11/18/23 12:46:01.702
  STEP: cluster-wide watching @ 11/18/23 12:46:01.704
  Nov 18 12:46:01.704: INFO: starting watch
  STEP: patching @ 11/18/23 12:46:01.705
  STEP: updating @ 11/18/23 12:46:01.712
  Nov 18 12:46:01.719: INFO: waiting for watch events with expected annotations
  Nov 18 12:46:01.719: INFO: saw patched and updated annotations
  STEP: patching /status @ 11/18/23 12:46:01.719
  STEP: updating /status @ 11/18/23 12:46:01.732
  STEP: get /status @ 11/18/23 12:46:01.739
  STEP: deleting @ 11/18/23 12:46:01.742
  STEP: deleting a collection @ 11/18/23 12:46:01.759
  Nov 18 12:46:01.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4114" for this suite. @ 11/18/23 12:46:01.774
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/18/23 12:46:01.781
  Nov 18 12:46:01.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename watch @ 11/18/23 12:46:01.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:01.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:01.803
  STEP: creating a new configmap @ 11/18/23 12:46:01.805
  STEP: modifying the configmap once @ 11/18/23 12:46:01.81
  STEP: modifying the configmap a second time @ 11/18/23 12:46:01.817
  STEP: deleting the configmap @ 11/18/23 12:46:01.826
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/18/23 12:46:01.832
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/18/23 12:46:01.833
  Nov 18 12:46:01.833: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6873  543f0f86-1fab-4b64-b71d-202b3f80af15 14118 0 2023-11-18 12:46:01 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-18 12:46:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:46:01.834: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6873  543f0f86-1fab-4b64-b71d-202b3f80af15 14119 0 2023-11-18 12:46:01 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-11-18 12:46:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Nov 18 12:46:01.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6873" for this suite. @ 11/18/23 12:46:01.837
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 11/18/23 12:46:01.845
  Nov 18 12:46:01.845: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 12:46:01.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:01.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:01.864
  STEP: Creating pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339 @ 11/18/23 12:46:01.866
  E1118 12:46:02.253092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:03.253379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 12:46:03.882
  Nov 18 12:46:03.885: INFO: Initial restart count of pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 is 0
  Nov 18 12:46:03.888: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:04.253527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:05.253731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:05.892: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:06.254205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:07.255156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:07.896: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:08.255537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:09.255698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:09.899: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:10.256201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:11.257167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:11.904: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:12.257421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:13.258309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:13.908: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:14.259276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:15.259499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:15.912: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:16.260479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:17.261202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:17.916: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:18.261599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:19.262302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:19.920: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:20.263052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:21.263251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:21.924: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:22.264225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:23.265151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:23.928: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:24.265684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:25.265795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:25.932: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:26.266416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:27.266976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:27.936: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:28.267020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:29.267125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:29.939: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:30.268108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:31.269127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:31.943: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:32.269314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:33.269661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:33.948: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:34.269916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:35.269954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:35.952: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:36.270613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:37.270732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:37.955: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:38.271361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:39.271592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:39.958: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:40.272265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:41.273166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:41.963: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:42.273586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:43.273990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:43.966: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:44.274330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:45.275093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:45.971: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:46.275455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:47.275679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:47.975: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:48.276276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:49.276367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:49.979: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:50.276831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:51.277585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:51.984: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  E1118 12:46:52.277727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:53.278076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:53.988: INFO: Get pod busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 in namespace container-probe-1339
  Nov 18 12:46:53.988: INFO: Restart count of pod container-probe-1339/busybox-ae6a872a-18a9-40f3-83e6-f811c8b453c8 is now 1 (50.102311937s elapsed)
  Nov 18 12:46:53.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 12:46:53.991
  STEP: Destroying namespace "container-probe-1339" for this suite. @ 11/18/23 12:46:54.004
• [52.166 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/18/23 12:46:54.012
  Nov 18 12:46:54.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubelet-test @ 11/18/23 12:46:54.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:54.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:54.03
  E1118 12:46:54.278552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:55.278692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:56.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5195" for this suite. @ 11/18/23 12:46:56.067
• [2.064 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/18/23 12:46:56.075
  Nov 18 12:46:56.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename subjectreview @ 11/18/23 12:46:56.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:56.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:56.093
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3983" @ 11/18/23 12:46:56.096
  Nov 18 12:46:56.101: INFO: saUsername: "system:serviceaccount:subjectreview-3983:e2e"
  Nov 18 12:46:56.101: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3983"}
  Nov 18 12:46:56.101: INFO: saUID: "fd9de7c6-fed7-4500-92c0-21f4943a7801"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3983:e2e" @ 11/18/23 12:46:56.101
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3983:e2e" @ 11/18/23 12:46:56.101
  Nov 18 12:46:56.102: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3983:e2e" api 'list' configmaps in "subjectreview-3983" namespace @ 11/18/23 12:46:56.102
  Nov 18 12:46:56.103: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3983:e2e" @ 11/18/23 12:46:56.103
  Nov 18 12:46:56.104: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Nov 18 12:46:56.104: INFO: LocalSubjectAccessReview has been verified
  Nov 18 12:46:56.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3983" for this suite. @ 11/18/23 12:46:56.108
• [0.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/18/23 12:46:56.115
  Nov 18 12:46:56.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename watch @ 11/18/23 12:46:56.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:56.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:56.132
  STEP: getting a starting resourceVersion @ 11/18/23 12:46:56.136
  STEP: starting a background goroutine to produce watch events @ 11/18/23 12:46:56.139
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/18/23 12:46:56.139
  E1118 12:46:56.278691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:57.279245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:46:58.279809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:58.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5603" for this suite. @ 11/18/23 12:46:58.97
• [2.909 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 11/18/23 12:46:59.024
  Nov 18 12:46:59.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:46:59.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:46:59.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:46:59.04
  STEP: creating a replication controller @ 11/18/23 12:46:59.043
  Nov 18 12:46:59.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 create -f -'
  Nov 18 12:46:59.236: INFO: stderr: ""
  Nov 18 12:46:59.236: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/18/23 12:46:59.236
  Nov 18 12:46:59.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1118 12:46:59.280947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:46:59.298: INFO: stderr: ""
  Nov 18 12:46:59.298: INFO: stdout: "update-demo-nautilus-hgfc9 update-demo-nautilus-v4swd "
  Nov 18 12:46:59.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-hgfc9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:46:59.354: INFO: stderr: ""
  Nov 18 12:46:59.354: INFO: stdout: ""
  Nov 18 12:46:59.354: INFO: update-demo-nautilus-hgfc9 is created but not running
  E1118 12:47:00.281135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:01.281257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:02.281562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:03.281912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:04.282912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:04.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 12:47:04.416: INFO: stderr: ""
  Nov 18 12:47:04.416: INFO: stdout: "update-demo-nautilus-hgfc9 update-demo-nautilus-v4swd "
  Nov 18 12:47:04.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-hgfc9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:47:04.471: INFO: stderr: ""
  Nov 18 12:47:04.472: INFO: stdout: "true"
  Nov 18 12:47:04.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-hgfc9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 18 12:47:04.528: INFO: stderr: ""
  Nov 18 12:47:04.528: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 12:47:04.528: INFO: validating pod update-demo-nautilus-hgfc9
  Nov 18 12:47:04.531: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 12:47:04.532: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 12:47:04.532: INFO: update-demo-nautilus-hgfc9 is verified up and running
  Nov 18 12:47:04.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-v4swd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:47:04.589: INFO: stderr: ""
  Nov 18 12:47:04.589: INFO: stdout: "true"
  Nov 18 12:47:04.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-v4swd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 18 12:47:04.647: INFO: stderr: ""
  Nov 18 12:47:04.647: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 12:47:04.647: INFO: validating pod update-demo-nautilus-v4swd
  Nov 18 12:47:04.653: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 12:47:04.653: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 12:47:04.653: INFO: update-demo-nautilus-v4swd is verified up and running
  STEP: scaling down the replication controller @ 11/18/23 12:47:04.653
  Nov 18 12:47:04.655: INFO: scanned /root for discovery docs: <nil>
  Nov 18 12:47:04.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1118 12:47:05.283924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:05.727: INFO: stderr: ""
  Nov 18 12:47:05.727: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/18/23 12:47:05.727
  Nov 18 12:47:05.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 12:47:05.788: INFO: stderr: ""
  Nov 18 12:47:05.788: INFO: stdout: "update-demo-nautilus-hgfc9 update-demo-nautilus-v4swd "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 11/18/23 12:47:05.788
  E1118 12:47:06.284078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:07.284946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:08.285513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:09.286365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:10.287210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:10.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 12:47:10.930: INFO: stderr: ""
  Nov 18 12:47:10.930: INFO: stdout: "update-demo-nautilus-v4swd "
  Nov 18 12:47:10.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-v4swd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:47:11.021: INFO: stderr: ""
  Nov 18 12:47:11.021: INFO: stdout: "true"
  Nov 18 12:47:11.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-v4swd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 18 12:47:11.173: INFO: stderr: ""
  Nov 18 12:47:11.173: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 12:47:11.174: INFO: validating pod update-demo-nautilus-v4swd
  Nov 18 12:47:11.179: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 12:47:11.179: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 12:47:11.179: INFO: update-demo-nautilus-v4swd is verified up and running
  STEP: scaling up the replication controller @ 11/18/23 12:47:11.179
  Nov 18 12:47:11.184: INFO: scanned /root for discovery docs: <nil>
  Nov 18 12:47:11.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1118 12:47:11.287478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:12.287405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:12.334: INFO: stderr: ""
  Nov 18 12:47:12.334: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/18/23 12:47:12.334
  Nov 18 12:47:12.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 12:47:12.394: INFO: stderr: ""
  Nov 18 12:47:12.394: INFO: stdout: "update-demo-nautilus-9mwbr update-demo-nautilus-v4swd "
  Nov 18 12:47:12.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-9mwbr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:47:12.453: INFO: stderr: ""
  Nov 18 12:47:12.453: INFO: stdout: ""
  Nov 18 12:47:12.453: INFO: update-demo-nautilus-9mwbr is created but not running
  E1118 12:47:13.288355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:14.289207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:15.289301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:16.289499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:17.289703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:17.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 12:47:17.514: INFO: stderr: ""
  Nov 18 12:47:17.514: INFO: stdout: "update-demo-nautilus-9mwbr update-demo-nautilus-v4swd "
  Nov 18 12:47:17.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-9mwbr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:47:17.571: INFO: stderr: ""
  Nov 18 12:47:17.571: INFO: stdout: "true"
  Nov 18 12:47:17.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-9mwbr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 18 12:47:17.629: INFO: stderr: ""
  Nov 18 12:47:17.629: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 12:47:17.629: INFO: validating pod update-demo-nautilus-9mwbr
  Nov 18 12:47:17.634: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 12:47:17.634: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 12:47:17.634: INFO: update-demo-nautilus-9mwbr is verified up and running
  Nov 18 12:47:17.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-v4swd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 12:47:17.691: INFO: stderr: ""
  Nov 18 12:47:17.691: INFO: stdout: "true"
  Nov 18 12:47:17.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods update-demo-nautilus-v4swd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 18 12:47:17.748: INFO: stderr: ""
  Nov 18 12:47:17.748: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 12:47:17.748: INFO: validating pod update-demo-nautilus-v4swd
  Nov 18 12:47:17.752: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 12:47:17.752: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 12:47:17.752: INFO: update-demo-nautilus-v4swd is verified up and running
  STEP: using delete to clean up resources @ 11/18/23 12:47:17.753
  Nov 18 12:47:17.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 delete --grace-period=0 --force -f -'
  Nov 18 12:47:17.815: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 12:47:17.815: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov 18 12:47:17.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get rc,svc -l name=update-demo --no-headers'
  Nov 18 12:47:17.881: INFO: stderr: "No resources found in kubectl-3214 namespace.\n"
  Nov 18 12:47:17.881: INFO: stdout: ""
  Nov 18 12:47:17.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3214 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 18 12:47:17.948: INFO: stderr: ""
  Nov 18 12:47:17.948: INFO: stdout: ""
  Nov 18 12:47:17.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3214" for this suite. @ 11/18/23 12:47:17.952
• [18.933 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/18/23 12:47:17.958
  Nov 18 12:47:17.958: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubelet-test @ 11/18/23 12:47:17.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:17.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:17.978
  E1118 12:47:18.289776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:19.289987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:20.290127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:21.290370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:21.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9568" for this suite. @ 11/18/23 12:47:22.003
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 11/18/23 12:47:22.011
  Nov 18 12:47:22.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename namespaces @ 11/18/23 12:47:22.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:22.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:22.031
  STEP: Creating a test namespace @ 11/18/23 12:47:22.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:22.049
  STEP: Creating a service in the namespace @ 11/18/23 12:47:22.051
  STEP: Deleting the namespace @ 11/18/23 12:47:22.06
  STEP: Waiting for the namespace to be removed. @ 11/18/23 12:47:22.069
  E1118 12:47:22.290867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:23.291314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:24.292273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:25.292578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:26.293555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:27.294270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/18/23 12:47:28.074
  STEP: Verifying there is no service in the namespace @ 11/18/23 12:47:28.09
  Nov 18 12:47:28.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6305" for this suite. @ 11/18/23 12:47:28.096
  STEP: Destroying namespace "nsdeletetest-4029" for this suite. @ 11/18/23 12:47:28.104
  Nov 18 12:47:28.107: INFO: Namespace nsdeletetest-4029 was already deleted
  STEP: Destroying namespace "nsdeletetest-6709" for this suite. @ 11/18/23 12:47:28.107
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/18/23 12:47:28.114
  Nov 18 12:47:28.114: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename hostport @ 11/18/23 12:47:28.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:28.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:28.132
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/18/23 12:47:28.138
  E1118 12:47:28.295251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:29.295307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.39.133 on the node which pod1 resides and expect scheduled @ 11/18/23 12:47:30.152
  E1118 12:47:30.296132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:31.297166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:32.297946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:33.298254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.39.133 but use UDP protocol on the node which pod2 resides @ 11/18/23 12:47:34.169
  E1118 12:47:34.298734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:35.298922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:36.299791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:37.300028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/18/23 12:47:38.198
  Nov 18 12:47:38.198: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.39.133 http://127.0.0.1:54323/hostname] Namespace:hostport-1304 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:47:38.198: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:47:38.199: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:47:38.199: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1304/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.39.133+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.39.133, port: 54323 @ 11/18/23 12:47:38.293
  Nov 18 12:47:38.293: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.39.133:54323/hostname] Namespace:hostport-1304 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:47:38.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:47:38.294: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:47:38.294: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1304/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.39.133%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1118 12:47:38.300373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.39.133, port: 54323 UDP @ 11/18/23 12:47:38.374
  Nov 18 12:47:38.374: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.39.133 54323] Namespace:hostport-1304 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:47:38.374: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:47:38.374: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:47:38.374: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1304/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.39.133+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1118 12:47:39.301006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:40.301194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:41.301382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:42.301476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:43.301760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:43.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1304" for this suite. @ 11/18/23 12:47:43.479
• [15.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 11/18/23 12:47:43.49
  Nov 18 12:47:43.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 12:47:43.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:43.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:43.514
  Nov 18 12:47:43.516: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 12:47:44.302616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/18/23 12:47:44.826
  Nov 18 12:47:44.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8612 --namespace=crd-publish-openapi-8612 create -f -'
  Nov 18 12:47:45.226: INFO: stderr: ""
  Nov 18 12:47:45.226: INFO: stdout: "e2e-test-crd-publish-openapi-5339-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov 18 12:47:45.226: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8612 --namespace=crd-publish-openapi-8612 delete e2e-test-crd-publish-openapi-5339-crds test-cr'
  Nov 18 12:47:45.292: INFO: stderr: ""
  Nov 18 12:47:45.292: INFO: stdout: "e2e-test-crd-publish-openapi-5339-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Nov 18 12:47:45.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8612 --namespace=crd-publish-openapi-8612 apply -f -'
  E1118 12:47:45.302634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:45.438: INFO: stderr: ""
  Nov 18 12:47:45.439: INFO: stdout: "e2e-test-crd-publish-openapi-5339-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Nov 18 12:47:45.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8612 --namespace=crd-publish-openapi-8612 delete e2e-test-crd-publish-openapi-5339-crds test-cr'
  Nov 18 12:47:45.512: INFO: stderr: ""
  Nov 18 12:47:45.512: INFO: stdout: "e2e-test-crd-publish-openapi-5339-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/18/23 12:47:45.512
  Nov 18 12:47:45.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=crd-publish-openapi-8612 explain e2e-test-crd-publish-openapi-5339-crds'
  Nov 18 12:47:45.633: INFO: stderr: ""
  Nov 18 12:47:45.633: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5339-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1118 12:47:46.303326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:46.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8612" for this suite. @ 11/18/23 12:47:46.917
• [3.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 11/18/23 12:47:46.926
  Nov 18 12:47:46.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 12:47:46.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:46.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:46.944
  STEP: Creating configMap with name configmap-test-volume-map-043d265b-68df-4256-8b9b-b1975975c576 @ 11/18/23 12:47:46.946
  STEP: Creating a pod to test consume configMaps @ 11/18/23 12:47:46.95
  E1118 12:47:47.304387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:48.304539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:49.305469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:50.305862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:47:50.974
  Nov 18 12:47:50.977: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-af8d9395-eaa6-4efe-833b-4e0b4413d3e0 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 12:47:50.984
  Nov 18 12:47:51.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2787" for this suite. @ 11/18/23 12:47:51.006
• [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/18/23 12:47:51.013
  Nov 18 12:47:51.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 12:47:51.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:51.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:51.033
  STEP: Creating secret with name secret-test-map-79b6ecbd-e5c1-4037-93a4-bd47cdea27ac @ 11/18/23 12:47:51.035
  STEP: Creating a pod to test consume secrets @ 11/18/23 12:47:51.04
  E1118 12:47:51.306404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:52.306603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:53.307634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:54.307821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:47:55.065
  Nov 18 12:47:55.068: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-secrets-9e6935bb-31ca-42e9-9b84-6e04e75fd36b container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 12:47:55.076
  Nov 18 12:47:55.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5420" for this suite. @ 11/18/23 12:47:55.096
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 11/18/23 12:47:55.102
  Nov 18 12:47:55.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename job @ 11/18/23 12:47:55.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:47:55.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:47:55.123
  STEP: Creating a job @ 11/18/23 12:47:55.125
  STEP: Ensuring active pods == parallelism @ 11/18/23 12:47:55.132
  E1118 12:47:55.308480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:56.308854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 11/18/23 12:47:57.136
  E1118 12:47:57.309649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:47:57.651: INFO: Successfully updated pod "adopt-release-rgtvv"
  STEP: Checking that the Job readopts the Pod @ 11/18/23 12:47:57.651
  E1118 12:47:58.310415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:47:59.310579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 11/18/23 12:47:59.659
  Nov 18 12:48:00.170: INFO: Successfully updated pod "adopt-release-rgtvv"
  STEP: Checking that the Job releases the Pod @ 11/18/23 12:48:00.17
  E1118 12:48:00.310954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:01.311182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:02.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-958" for this suite. @ 11/18/23 12:48:02.182
• [7.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/18/23 12:48:02.191
  Nov 18 12:48:02.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-pred @ 11/18/23 12:48:02.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:02.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:02.213
  Nov 18 12:48:02.215: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 18 12:48:02.223: INFO: Waiting for terminating namespaces to be deleted...
  Nov 18 12:48:02.226: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-29-39 before test
  Nov 18 12:48:02.232: INFO: nginx-ingress-controller-kubernetes-worker-qbglx from ingress-nginx-kubernetes-worker started at 2023-11-18 12:22:56 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.232: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 12:48:02.232: INFO: adopt-release-rkknn from job-958 started at 2023-11-18 12:48:01 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.232: INFO: 	Container c ready: false, restart count 0
  Nov 18 12:48:02.232: INFO: adopt-release-x8xqt from job-958 started at 2023-11-18 12:47:55 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.232: INFO: 	Container c ready: true, restart count 0
  Nov 18 12:48:02.232: INFO: calico-node-jhvhh from kube-system started at 2023-11-18 12:03:19 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.232: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 12:48:02.232: INFO: sonobuoy from sonobuoy started at 2023-11-18 12:07:39 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.232: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 18 12:48:02.232: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-82h4q from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:48:02.232: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:48:02.232: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 12:48:02.232: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-39-133 before test
  Nov 18 12:48:02.237: INFO: nginx-ingress-controller-kubernetes-worker-shggc from ingress-nginx-kubernetes-worker started at 2023-11-18 12:06:20 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.237: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: adopt-release-rgtvv from job-958 started at 2023-11-18 12:47:55 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.237: INFO: 	Container c ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: calico-node-tkwzz from kube-system started at 2023-11-18 12:05:20 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.237: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: sonobuoy-e2e-job-f65b309e6af444df from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:48:02.237: INFO: 	Container e2e ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-rfbpr from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:48:02.237: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 12:48:02.237: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-152 before test
  Nov 18 12:48:02.243: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kqk4n from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: nginx-ingress-controller-kubernetes-worker-wgb9l from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: calico-kube-controllers-7969dc6c97-rm6qf from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: calico-node-8czmk from kube-system started at 2023-11-18 11:57:04 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: coredns-59cfb5bf46-nzp45 from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container coredns ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: kube-state-metrics-78c475f58b-cv4rn from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: metrics-server-v0.6.3-69d7fbfdf8-ppqvb from kube-system started at 2023-11-18 11:57:27 +0000 UTC (2 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: dashboard-metrics-scraper-5dd7cb5fc-z67sf from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: kubernetes-dashboard-7b899cb9d9-9kpt7 from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-kntjb from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:48:02.243: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:48:02.243: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/18/23 12:48:02.244
  E1118 12:48:02.311266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:03.311660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/18/23 12:48:04.263
  STEP: Trying to apply a random label on the found node. @ 11/18/23 12:48:04.277
  STEP: verifying the node has the label kubernetes.io/e2e-a7f5046d-dd6a-4c77-916f-a03c8bdf323d 42 @ 11/18/23 12:48:04.285
  STEP: Trying to relaunch the pod, now with labels. @ 11/18/23 12:48:04.289
  E1118 12:48:04.312761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:05.312975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-a7f5046d-dd6a-4c77-916f-a03c8bdf323d off the node ip-172-31-39-133 @ 11/18/23 12:48:06.308
  E1118 12:48:06.313771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-a7f5046d-dd6a-4c77-916f-a03c8bdf323d @ 11/18/23 12:48:06.323
  Nov 18 12:48:06.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-675" for this suite. @ 11/18/23 12:48:06.331
• [4.146 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 11/18/23 12:48:06.337
  Nov 18 12:48:06.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 12:48:06.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:06.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:06.362
  STEP: Setting up server cert @ 11/18/23 12:48:06.386
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 12:48:06.566
  STEP: Deploying the webhook pod @ 11/18/23 12:48:06.573
  STEP: Wait for the deployment to be ready @ 11/18/23 12:48:06.585
  Nov 18 12:48:06.591: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1118 12:48:07.314676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:08.315411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 12:48:08.601
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 12:48:08.614
  E1118 12:48:09.315924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:09.614: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/18/23 12:48:09.62
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/18/23 12:48:09.635
  Nov 18 12:48:09.635: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:48:09.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4037" for this suite. @ 11/18/23 12:48:09.688
  STEP: Destroying namespace "webhook-markers-8373" for this suite. @ 11/18/23 12:48:09.697
• [3.367 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/18/23 12:48:09.704
  Nov 18 12:48:09.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/18/23 12:48:09.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:09.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:09.723
  STEP: creating @ 11/18/23 12:48:09.724
  STEP: getting @ 11/18/23 12:48:09.741
  STEP: listing in namespace @ 11/18/23 12:48:09.744
  STEP: patching @ 11/18/23 12:48:09.748
  STEP: deleting @ 11/18/23 12:48:09.763
  Nov 18 12:48:09.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1472" for this suite. @ 11/18/23 12:48:09.778
• [0.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 11/18/23 12:48:09.784
  Nov 18 12:48:09.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:48:09.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:09.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:09.804
  STEP: Creating the pod @ 11/18/23 12:48:09.805
  E1118 12:48:10.315925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:11.316400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:12.316861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:12.344: INFO: Successfully updated pod "annotationupdatef4ee8dfd-d840-45d8-b68f-2d5af0906b74"
  E1118 12:48:13.316909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:14.317478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:15.317573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:16.317668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:16.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-162" for this suite. @ 11/18/23 12:48:16.37
• [6.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 11/18/23 12:48:16.378
  Nov 18 12:48:16.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 12:48:16.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:16.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:16.396
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/18/23 12:48:16.398
  E1118 12:48:17.318553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:18.319061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:19.319566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:20.319778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:48:20.419
  Nov 18 12:48:20.422: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-d1dd5cf2-bfdb-4b19-839a-e75014b92183 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 12:48:20.439
  Nov 18 12:48:20.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6926" for this suite. @ 11/18/23 12:48:20.459
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 11/18/23 12:48:20.468
  Nov 18 12:48:20.468: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename disruption @ 11/18/23 12:48:20.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:20.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:20.485
  STEP: Waiting for the pdb to be processed @ 11/18/23 12:48:20.492
  E1118 12:48:21.320008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:22.320108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/18/23 12:48:22.518
  Nov 18 12:48:22.591: INFO: running pods: 0 < 3
  E1118 12:48:23.321106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:24.321309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:24.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-77" for this suite. @ 11/18/23 12:48:24.602
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/18/23 12:48:24.613
  Nov 18 12:48:24.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 12:48:24.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:24.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:24.64
  STEP: Create a pod @ 11/18/23 12:48:24.642
  E1118 12:48:25.321861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:26.322187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/18/23 12:48:26.658
  Nov 18 12:48:26.665: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Nov 18 12:48:26.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9093" for this suite. @ 11/18/23 12:48:26.669
• [2.062 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 11/18/23 12:48:26.676
  Nov 18 12:48:26.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replication-controller @ 11/18/23 12:48:26.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:26.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:26.695
  STEP: Creating ReplicationController "e2e-rc-fjhd6" @ 11/18/23 12:48:26.698
  Nov 18 12:48:26.704: INFO: Get Replication Controller "e2e-rc-fjhd6" to confirm replicas
  E1118 12:48:27.322517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:27.708: INFO: Get Replication Controller "e2e-rc-fjhd6" to confirm replicas
  Nov 18 12:48:27.712: INFO: Found 1 replicas for "e2e-rc-fjhd6" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-fjhd6" @ 11/18/23 12:48:27.712
  STEP: Updating a scale subresource @ 11/18/23 12:48:27.714
  STEP: Verifying replicas where modified for replication controller "e2e-rc-fjhd6" @ 11/18/23 12:48:27.721
  Nov 18 12:48:27.721: INFO: Get Replication Controller "e2e-rc-fjhd6" to confirm replicas
  E1118 12:48:28.322678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:28.724: INFO: Get Replication Controller "e2e-rc-fjhd6" to confirm replicas
  Nov 18 12:48:28.727: INFO: Found 2 replicas for "e2e-rc-fjhd6" replication controller
  Nov 18 12:48:28.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6627" for this suite. @ 11/18/23 12:48:28.73
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 11/18/23 12:48:28.738
  Nov 18 12:48:28.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 12:48:28.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:28.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:28.757
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:48:28.759
  E1118 12:48:29.323401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:30.323800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:31.323867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:32.324165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:48:32.783
  Nov 18 12:48:32.787: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-0937935c-b9de-460f-a025-cd129f57721f container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:48:32.793
  Nov 18 12:48:32.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5009" for this suite. @ 11/18/23 12:48:32.813
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 11/18/23 12:48:32.821
  Nov 18 12:48:32.821: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replicaset @ 11/18/23 12:48:32.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:32.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:32.84
  Nov 18 12:48:32.854: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1118 12:48:33.325226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:34.325574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:35.325678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:36.325872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:37.326058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:37.858: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/18/23 12:48:37.858
  STEP: Scaling up "test-rs" replicaset  @ 11/18/23 12:48:37.858
  Nov 18 12:48:37.866: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/18/23 12:48:37.866
  Nov 18 12:48:37.874: INFO: observed ReplicaSet test-rs in namespace replicaset-8552 with ReadyReplicas 1, AvailableReplicas 1
  Nov 18 12:48:37.893: INFO: observed ReplicaSet test-rs in namespace replicaset-8552 with ReadyReplicas 1, AvailableReplicas 1
  Nov 18 12:48:37.906: INFO: observed ReplicaSet test-rs in namespace replicaset-8552 with ReadyReplicas 1, AvailableReplicas 1
  Nov 18 12:48:37.915: INFO: observed ReplicaSet test-rs in namespace replicaset-8552 with ReadyReplicas 1, AvailableReplicas 1
  E1118 12:48:38.326868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:38.924: INFO: observed ReplicaSet test-rs in namespace replicaset-8552 with ReadyReplicas 2, AvailableReplicas 2
  Nov 18 12:48:39.076: INFO: observed Replicaset test-rs in namespace replicaset-8552 with ReadyReplicas 3 found true
  Nov 18 12:48:39.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8552" for this suite. @ 11/18/23 12:48:39.079
• [6.267 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 11/18/23 12:48:39.088
  Nov 18 12:48:39.088: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 12:48:39.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:39.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:39.106
  Nov 18 12:48:39.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-197" for this suite. @ 11/18/23 12:48:39.115
• [0.033 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 11/18/23 12:48:39.121
  Nov 18 12:48:39.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 12:48:39.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:39.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:39.14
  STEP: Counting existing ResourceQuota @ 11/18/23 12:48:39.141
  E1118 12:48:39.327209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:40.327488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:41.328282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:42.328372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:43.329311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/18/23 12:48:44.145
  STEP: Ensuring resource quota status is calculated @ 11/18/23 12:48:44.15
  E1118 12:48:44.330380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:45.330505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 11/18/23 12:48:46.154
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/18/23 12:48:46.169
  E1118 12:48:46.331228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:47.331443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/18/23 12:48:48.173
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/18/23 12:48:48.175
  STEP: Ensuring a pod cannot update its resource requirements @ 11/18/23 12:48:48.176
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/18/23 12:48:48.18
  E1118 12:48:48.331989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:49.332168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/18/23 12:48:50.184
  STEP: Ensuring resource quota status released the pod usage @ 11/18/23 12:48:50.196
  E1118 12:48:50.333107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:51.333270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:52.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6030" for this suite. @ 11/18/23 12:48:52.205
• [13.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 11/18/23 12:48:52.214
  Nov 18 12:48:52.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 12:48:52.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:52.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:52.235
  STEP: Setting up server cert @ 11/18/23 12:48:52.259
  E1118 12:48:52.333982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 12:48:52.651
  STEP: Deploying the webhook pod @ 11/18/23 12:48:52.659
  STEP: Wait for the deployment to be ready @ 11/18/23 12:48:52.67
  Nov 18 12:48:52.676: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1118 12:48:53.335047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:54.335341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 12:48:54.686
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 12:48:54.696
  E1118 12:48:55.336168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:48:55.696: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/18/23 12:48:55.703
  STEP: create a namespace for the webhook @ 11/18/23 12:48:55.719
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/18/23 12:48:55.749
  Nov 18 12:48:55.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1233" for this suite. @ 11/18/23 12:48:55.946
  STEP: Destroying namespace "webhook-markers-3534" for this suite. @ 11/18/23 12:48:55.953
  STEP: Destroying namespace "fail-closed-namespace-9388" for this suite. @ 11/18/23 12:48:55.961
• [3.754 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 11/18/23 12:48:55.969
  Nov 18 12:48:55.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename endpointslice @ 11/18/23 12:48:55.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:55.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:55.988
  Nov 18 12:48:55.999: INFO: Endpoints addresses: [172.31.30.119 172.31.35.28] , ports: [6443]
  Nov 18 12:48:55.999: INFO: EndpointSlices addresses: [172.31.30.119 172.31.35.28] , ports: [6443]
  Nov 18 12:48:55.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9116" for this suite. @ 11/18/23 12:48:56.002
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/18/23 12:48:56.009
  Nov 18 12:48:56.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/18/23 12:48:56.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:48:56.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:48:56.028
  STEP: Setting up the test @ 11/18/23 12:48:56.03
  STEP: Creating hostNetwork=false pod @ 11/18/23 12:48:56.03
  E1118 12:48:56.336966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:57.337165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 11/18/23 12:48:58.051
  E1118 12:48:58.337373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:48:59.337598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 11/18/23 12:49:00.067
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/18/23 12:49:00.067
  Nov 18 12:49:00.067: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.068: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.068: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 18 12:49:00.152: INFO: Exec stderr: ""
  Nov 18 12:49:00.152: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.152: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.152: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.152: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 18 12:49:00.248: INFO: Exec stderr: ""
  Nov 18 12:49:00.248: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.248: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.248: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.248: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 18 12:49:00.332: INFO: Exec stderr: ""
  Nov 18 12:49:00.332: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.332: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.332: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E1118 12:49:00.338010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:49:00.420: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/18/23 12:49:00.42
  Nov 18 12:49:00.420: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.420: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.420: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov 18 12:49:00.504: INFO: Exec stderr: ""
  Nov 18 12:49:00.504: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.504: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.504: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.504: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Nov 18 12:49:00.584: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/18/23 12:49:00.584
  Nov 18 12:49:00.584: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.584: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.584: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.584: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 18 12:49:00.675: INFO: Exec stderr: ""
  Nov 18 12:49:00.675: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.675: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.675: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.675: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Nov 18 12:49:00.770: INFO: Exec stderr: ""
  Nov 18 12:49:00.770: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.771: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.771: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 18 12:49:00.855: INFO: Exec stderr: ""
  Nov 18 12:49:00.855: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1097 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:00.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:00.856: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:00.856: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1097/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Nov 18 12:49:00.934: INFO: Exec stderr: ""
  Nov 18 12:49:00.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1097" for this suite. @ 11/18/23 12:49:00.938
• [4.935 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/18/23 12:49:00.946
  Nov 18 12:49:00.946: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 12:49:00.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:00.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:00.964
  STEP: creating pod @ 11/18/23 12:49:00.966
  E1118 12:49:01.338124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:02.338982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 12:49:02.987: INFO: Pod pod-hostip-a5528f17-19e2-4475-b9a8-8da29c58ab50 has hostIP: 172.31.29.39
  Nov 18 12:49:02.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8249" for this suite. @ 11/18/23 12:49:02.991
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 11/18/23 12:49:02.997
  Nov 18 12:49:02.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:49:02.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:03.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:03.014
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:49:03.016
  E1118 12:49:03.339035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:04.339276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:05.340314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:06.341184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:49:07.034
  Nov 18 12:49:07.037: INFO: Trying to get logs from node ip-172-31-39-133 pod downwardapi-volume-a49f6c49-a619-48fe-a22f-08ee734ff68a container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:49:07.043
  Nov 18 12:49:07.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4052" for this suite. @ 11/18/23 12:49:07.065
• [4.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 11/18/23 12:49:07.071
  Nov 18 12:49:07.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 12:49:07.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:07.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:07.09
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/18/23 12:49:07.092
  Nov 18 12:49:07.101: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8090  18e97747-22af-45ba-ab65-cb8ee8102404 15984 0 2023-11-18 12:49:07 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-11-18 12:49:07 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8nlsq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8nlsq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1118 12:49:07.341219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:08.341763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/18/23 12:49:09.111
  Nov 18 12:49:09.111: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8090 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:09.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:09.111: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:09.111: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-8090/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/18/23 12:49:09.213
  Nov 18 12:49:09.213: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8090 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 12:49:09.213: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 12:49:09.213: INFO: ExecWithOptions: Clientset creation
  Nov 18 12:49:09.213: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-8090/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 18 12:49:09.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 12:49:09.320: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-8090" for this suite. @ 11/18/23 12:49:09.335
  E1118 12:49:09.342244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.272 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 11/18/23 12:49:09.343
  Nov 18 12:49:09.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 12:49:09.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:09.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:09.362
  STEP: creating the pod @ 11/18/23 12:49:09.364
  Nov 18 12:49:09.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 create -f -'
  Nov 18 12:49:09.767: INFO: stderr: ""
  Nov 18 12:49:09.767: INFO: stdout: "pod/pause created\n"
  E1118 12:49:10.342949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:11.343157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/18/23 12:49:11.773
  Nov 18 12:49:11.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 label pods pause testing-label=testing-label-value'
  Nov 18 12:49:11.841: INFO: stderr: ""
  Nov 18 12:49:11.841: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/18/23 12:49:11.841
  Nov 18 12:49:11.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 get pod pause -L testing-label'
  Nov 18 12:49:11.898: INFO: stderr: ""
  Nov 18 12:49:11.898: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/18/23 12:49:11.898
  Nov 18 12:49:11.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 label pods pause testing-label-'
  Nov 18 12:49:11.966: INFO: stderr: ""
  Nov 18 12:49:11.966: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/18/23 12:49:11.966
  Nov 18 12:49:11.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 get pod pause -L testing-label'
  Nov 18 12:49:12.022: INFO: stderr: ""
  Nov 18 12:49:12.022: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 11/18/23 12:49:12.022
  Nov 18 12:49:12.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 delete --grace-period=0 --force -f -'
  Nov 18 12:49:12.090: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 12:49:12.090: INFO: stdout: "pod \"pause\" force deleted\n"
  Nov 18 12:49:12.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 get rc,svc -l name=pause --no-headers'
  Nov 18 12:49:12.153: INFO: stderr: "No resources found in kubectl-4344 namespace.\n"
  Nov 18 12:49:12.153: INFO: stdout: ""
  Nov 18 12:49:12.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-4344 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 18 12:49:12.207: INFO: stderr: ""
  Nov 18 12:49:12.207: INFO: stdout: ""
  Nov 18 12:49:12.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4344" for this suite. @ 11/18/23 12:49:12.21
• [2.876 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 11/18/23 12:49:12.219
  Nov 18 12:49:12.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 12:49:12.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:12.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:12.241
  STEP: create the deployment @ 11/18/23 12:49:12.243
  W1118 12:49:12.251490      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/18/23 12:49:12.251
  E1118 12:49:12.343418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 11/18/23 12:49:12.763
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/18/23 12:49:12.772
  STEP: Gathering metrics @ 11/18/23 12:49:13.291
  W1118 12:49:13.296138      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 18 12:49:13.296: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 18 12:49:13.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9224" for this suite. @ 11/18/23 12:49:13.301
• [1.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 11/18/23 12:49:13.31
  Nov 18 12:49:13.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 12:49:13.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:13.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:13.331
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 12:49:13.332
  E1118 12:49:13.344435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:14.345368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:15.345611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:16.346087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:17.346293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 12:49:17.358
  Nov 18 12:49:17.360: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-9c120343-46be-4ff0-b075-5fbf9f3c4b86 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 12:49:17.368
  Nov 18 12:49:17.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7180" for this suite. @ 11/18/23 12:49:17.387
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/18/23 12:49:17.394
  Nov 18 12:49:17.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-pred @ 11/18/23 12:49:17.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:49:17.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:49:17.413
  Nov 18 12:49:17.414: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 18 12:49:17.422: INFO: Waiting for terminating namespaces to be deleted...
  Nov 18 12:49:17.425: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-29-39 before test
  Nov 18 12:49:17.430: INFO: simpletest.deployment-777585dc77-m865d from gc-9224 started at 2023-11-18 12:49:12 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.430: INFO: 	Container nginx ready: true, restart count 0
  Nov 18 12:49:17.430: INFO: nginx-ingress-controller-kubernetes-worker-qbglx from ingress-nginx-kubernetes-worker started at 2023-11-18 12:22:56 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.430: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 12:49:17.430: INFO: calico-node-jhvhh from kube-system started at 2023-11-18 12:03:19 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.430: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 12:49:17.430: INFO: sonobuoy from sonobuoy started at 2023-11-18 12:07:39 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.430: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 18 12:49:17.430: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-82h4q from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:49:17.430: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:49:17.430: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 12:49:17.430: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-39-133 before test
  Nov 18 12:49:17.436: INFO: simpletest.deployment-777585dc77-lpqc8 from gc-9224 started at 2023-11-18 12:49:12 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.436: INFO: 	Container nginx ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: nginx-ingress-controller-kubernetes-worker-shggc from ingress-nginx-kubernetes-worker started at 2023-11-18 12:06:20 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.436: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: calico-node-tkwzz from kube-system started at 2023-11-18 12:05:20 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.436: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: sonobuoy-e2e-job-f65b309e6af444df from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:49:17.436: INFO: 	Container e2e ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-rfbpr from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:49:17.436: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 12:49:17.436: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-152 before test
  Nov 18 12:49:17.441: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kqk4n from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: nginx-ingress-controller-kubernetes-worker-wgb9l from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: calico-kube-controllers-7969dc6c97-rm6qf from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: calico-node-8czmk from kube-system started at 2023-11-18 11:57:04 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: coredns-59cfb5bf46-nzp45 from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container coredns ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: kube-state-metrics-78c475f58b-cv4rn from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: metrics-server-v0.6.3-69d7fbfdf8-ppqvb from kube-system started at 2023-11-18 11:57:27 +0000 UTC (2 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: dashboard-metrics-scraper-5dd7cb5fc-z67sf from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: kubernetes-dashboard-7b899cb9d9-9kpt7 from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-kntjb from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 12:49:17.441: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 12:49:17.441: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/18/23 12:49:17.441
  E1118 12:49:18.347046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:19.347181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/18/23 12:49:19.46
  STEP: Trying to apply a random label on the found node. @ 11/18/23 12:49:19.476
  STEP: verifying the node has the label kubernetes.io/e2e-179f1035-5d72-4030-9e3d-435906ee36f4 95 @ 11/18/23 12:49:19.484
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/18/23 12:49:19.487
  E1118 12:49:20.347515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:21.348335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.29.39 on the node which pod4 resides and expect not scheduled @ 11/18/23 12:49:21.505
  E1118 12:49:22.348975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:23.349142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:24.349320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:25.349516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:26.349701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:27.349860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:28.350070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:29.350128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:30.350822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:31.351000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:32.351362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:33.351457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:34.352099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:35.353170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:36.353986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:37.354080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:38.354519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:39.355376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:40.356028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:41.356090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:42.356220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:43.356893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:44.357030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:45.357366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:46.358262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:47.358849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:48.359669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:49.359858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:50.360031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:51.361151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:52.361546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:53.361910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:54.362437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:55.362654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:56.362953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:57.363237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:58.363585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:49:59.363782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:00.363909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:01.364127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:02.364944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:03.365390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:04.365875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:05.366792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:06.366872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:07.367078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:08.368045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:09.368050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:10.369176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:11.369258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:12.369757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:13.370073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:14.370340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:15.370532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:16.370928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:17.371785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:18.372065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:19.372166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:20.372533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:21.373189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:22.373585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:23.373888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:24.374160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:25.374372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:26.375084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:27.375240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:28.375457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:29.376454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:30.377087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:31.377718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:32.377856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:33.378171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:34.378489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:35.378555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:36.379512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:37.379637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:38.379679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:39.380729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:40.381277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:41.381455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:42.381963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:43.382336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:44.382833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:45.383042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:46.383122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:47.383295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:48.383659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:49.383862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:50.383910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:51.384097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:52.385122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:53.386171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:54.386868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:55.387351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:56.387690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:57.387833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:58.387890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:50:59.388049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:00.389153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:01.389343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:02.390145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:03.390432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:04.391512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:05.391651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:06.392061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:07.392238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:08.392753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:09.392936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:10.392939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:11.393103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:12.393462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:13.393810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:14.394444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:15.394625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:16.395608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:17.396415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:18.397142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:19.397316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:20.397662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:21.397739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:22.398321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:23.398670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:24.399196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:25.399351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:26.399847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:27.400058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:28.400062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:29.401162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:30.401600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:31.401758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:32.402115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:33.402481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:34.402875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:35.403055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:36.403329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:37.403480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:38.403677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:39.403827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:40.404083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:41.404252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:42.405099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:43.405421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:44.405838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:45.406041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:46.406204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:47.406349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:48.407270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:49.407435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:50.407575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:51.408365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:52.409105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:53.409283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:54.409631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:55.409827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:56.410840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:57.410960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:58.411991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:51:59.412073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:00.412817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:01.412960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:02.413304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:03.413405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:04.413552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:05.413649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:06.414102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:07.414401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:08.415265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:09.415399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:10.416171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:11.417125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:12.418009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:13.418168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:14.418315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:15.418448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:16.419298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:17.419556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:18.419779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:19.419972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:20.420078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:21.421154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:22.421254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:23.421531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:24.421792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:25.421909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:26.422224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:27.422367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:28.422501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:29.422613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:30.422805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:31.423020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:32.423349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:33.424005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:34.424334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:35.424427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:36.425096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:37.425930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:38.426699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:39.426882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:40.427557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:41.427731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:42.428721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:43.428856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:44.429259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:45.429444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:46.429642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:47.430717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:48.431023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:49.431276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:50.431394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:51.431732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:52.431817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:53.432092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:54.433164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:55.433330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:56.433977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:57.434118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:58.434175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:52:59.434288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:00.434741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:01.434985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:02.435321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:03.435659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:04.436490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:05.437171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:06.438191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:07.438408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:08.439293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:09.439563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:10.439941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:11.440051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:12.440798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:13.440916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:14.441673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:15.441861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:16.442372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:17.442563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:18.443559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:19.443713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:20.444155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:21.445158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:22.445951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:23.446710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:24.447633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:25.447893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:26.448699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:27.449107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:28.450228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:29.450342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:30.450422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:31.450552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:32.451367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:33.451468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:34.452258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:35.453152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:36.453644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:37.454109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:38.454386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:39.454550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:40.454610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:41.454774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:42.455579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:43.455822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:44.456874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:45.457163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:46.457820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:47.458007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:48.458079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:49.458198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:50.458922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:51.459083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:52.459576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:53.459754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:54.459931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:55.460045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:56.460854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:57.461127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:58.461493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:53:59.461663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:00.462576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:01.462789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:02.463051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:03.463480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:04.463684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:05.463869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:06.464751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:07.464925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:08.465636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:09.465776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:10.466405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:11.466598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:12.466580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:13.467017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:14.467150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:15.467558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:16.467588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:17.467769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:18.468265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:19.468353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:20.469086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:21.469263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-179f1035-5d72-4030-9e3d-435906ee36f4 off the node ip-172-31-29-39 @ 11/18/23 12:54:21.512
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-179f1035-5d72-4030-9e3d-435906ee36f4 @ 11/18/23 12:54:21.524
  Nov 18 12:54:21.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-972" for this suite. @ 11/18/23 12:54:21.532
• [304.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/18/23 12:54:21.539
  Nov 18 12:54:21.539: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename cronjob @ 11/18/23 12:54:21.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 12:54:21.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 12:54:21.556
  STEP: Creating a ForbidConcurrent cronjob @ 11/18/23 12:54:21.557
  STEP: Ensuring a job is scheduled @ 11/18/23 12:54:21.564
  E1118 12:54:22.469339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:23.469688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:24.470296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:25.471112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:26.471753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:27.472067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:28.472442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:29.473156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:30.473596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:31.473735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:32.474069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:33.474368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:34.474733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:35.474928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:36.475311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:37.475365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:38.475459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:39.475930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:40.476039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:41.476230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:42.476348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:43.477145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:44.477702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:45.477813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:46.477883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:47.478048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:48.478435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:49.478607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:50.478904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:51.479056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:52.479876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:53.480086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:54.481155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:55.481342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:56.481785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:57.481896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:58.482108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:54:59.482301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:00.482946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:01.483142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/18/23 12:55:01.568
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/18/23 12:55:01.571
  STEP: Ensuring no more jobs are scheduled @ 11/18/23 12:55:01.574
  E1118 12:55:02.483292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:03.483607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:04.484148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:05.485160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:06.485413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:07.485550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:08.485929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:09.486127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:10.486893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:11.486999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:12.487108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:13.488039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:14.488096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:15.488284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:16.489122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:17.489450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:18.489788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:19.489976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:20.490527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:21.490722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:22.491814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:23.492138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:24.493158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:25.493432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:26.494313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:27.494501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:28.495599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:29.496697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:30.496758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:31.497263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:32.497481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:33.497971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:34.498404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:35.498621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:36.498990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:37.499154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:38.499322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:39.499504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:40.500034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:41.500170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:42.500267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:43.501213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:44.501349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:45.501525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:46.501610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:47.502189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:48.502798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:49.502993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:50.503257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:51.503458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:52.504231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:53.505154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:54.506004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:55.506178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:56.507225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:57.507560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:58.508369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:55:59.508577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:00.509162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:01.509357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:02.509868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:03.510252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:04.510956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:05.511932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:06.512671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:07.513059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:08.514004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:09.514186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:10.514818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:11.514958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:12.515101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:13.515400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:14.515782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:15.515998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:16.516032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:17.516479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:18.517139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:19.517268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:20.517348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:21.517501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:22.518276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:23.518458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:24.518581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:25.518765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:26.519627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:27.520096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:28.521073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:29.521231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:30.521347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:31.521531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:32.522301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:33.522728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:34.523132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:35.523421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:36.524047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:37.524500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:38.525266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:39.525417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:40.525514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:41.525683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:42.526227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:43.526353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:44.527243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:45.527432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:46.527689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:47.528632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:48.529487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:49.529707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:50.530491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:51.530654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:52.530825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:53.531000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:54.531131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:55.531363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:56.532019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:57.532429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:58.532759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:56:59.532954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:00.533544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:01.533738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:02.534699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:03.534937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:04.535141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:05.535259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:06.536125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:07.536607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:08.537483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:09.537659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:10.537745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:11.537942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:12.538882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:13.539086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:14.539665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:15.539855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:16.540040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:17.540558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:18.540783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:19.541121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:20.541905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:21.542054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:22.542221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:23.542739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:24.543530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:25.543710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:26.544050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:27.544556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:28.544768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:29.545148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:30.545213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:31.545362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:32.546214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:33.546300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:34.546419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:35.546593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:36.547133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:37.547596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:38.547733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:39.547904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:40.548022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:41.549119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:42.549668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:43.550256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:44.550617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:45.550823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:46.550959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:47.551749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:48.552071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:49.553133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:50.553491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:51.553694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:52.554070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:53.554297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:54.555117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:55.555302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:56.555518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:57.555986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:58.556652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:57:59.557154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:00.557271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:01.557512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:02.557990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:03.558151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:04.558288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:05.558487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:06.559229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:07.559574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:08.560107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:09.561160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:10.561269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:11.561448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:12.562411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:13.562639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:14.563137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:15.563334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:16.564027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:17.564534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:18.565228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:19.565422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:20.565996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:21.566151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:22.567149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:23.568213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:24.569172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:25.569412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:26.569601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:27.570667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:28.570795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:29.570960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:30.571965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:31.572072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:32.572293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:33.572574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:34.572667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:35.573315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:36.574062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:37.574564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:38.575313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:39.575503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:40.576009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:41.576238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:42.576487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:43.576821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:44.577168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:45.577508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:46.578074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:47.578347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:48.578527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:49.578891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:50.579095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:51.580035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:52.580279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:53.580313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:54.580471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:55.580681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:56.580842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:57.581155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:58.581307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:58:59.582316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:00.582587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:01.582851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:02.583324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:03.583764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:04.583978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:05.584404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:06.585342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:07.585355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:08.585523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:09.586127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:10.586565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:11.587341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:12.587521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:13.588286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:14.588483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:15.589169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:16.589328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:17.589948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:18.590608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:19.591657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:20.591815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:21.592109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:22.592708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:23.593120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:24.593303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:25.594284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:26.594421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:27.595248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:28.595416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:29.595588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:30.595758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:31.596639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:32.597049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:33.597923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:34.598109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:35.598391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:36.599158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:37.600052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:38.601102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:39.601679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:40.601820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:41.602850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:42.603064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:43.603112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:44.603313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:45.603995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:46.604037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:47.605027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:48.605069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:49.605276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:50.605416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:51.606246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:52.607258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:53.607437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:54.607636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:55.608250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:56.609111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:57.609258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:58.609378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 12:59:59.609679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:00.609863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/18/23 13:00:01.581
  Nov 18 13:00:01.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2964" for this suite. @ 11/18/23 13:00:01.591
• [340.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 11/18/23 13:00:01.598
  Nov 18 13:00:01.598: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 13:00:01.599
  E1118 13:00:01.610233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:01.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:01.634
  STEP: Creating a pod to test substitution in container's command @ 11/18/23 13:00:01.636
  E1118 13:00:02.610637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:03.611154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:04.611260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:05.611470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:00:05.657
  Nov 18 13:00:05.660: INFO: Trying to get logs from node ip-172-31-29-39 pod var-expansion-52ee2ef3-5693-4c56-81bb-ebc0f8525691 container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 13:00:05.679
  Nov 18 13:00:05.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6744" for this suite. @ 11/18/23 13:00:05.698
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 11/18/23 13:00:05.705
  Nov 18 13:00:05.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 13:00:05.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:05.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:05.723
  STEP: Creating a ResourceQuota @ 11/18/23 13:00:05.725
  STEP: Getting a ResourceQuota @ 11/18/23 13:00:05.73
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/18/23 13:00:05.733
  STEP: Patching the ResourceQuota @ 11/18/23 13:00:05.736
  STEP: Deleting a Collection of ResourceQuotas @ 11/18/23 13:00:05.743
  STEP: Verifying the deleted ResourceQuota @ 11/18/23 13:00:05.752
  Nov 18 13:00:05.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7027" for this suite. @ 11/18/23 13:00:05.759
• [0.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 11/18/23 13:00:05.766
  Nov 18 13:00:05.766: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:00:05.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:05.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:05.783
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/18/23 13:00:05.785
  E1118 13:00:06.611984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:07.612733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:08.613734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:09.613935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:00:09.807
  Nov 18 13:00:09.810: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-d8915484-61d2-418e-90a5-f7c75edf45c2 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:00:09.817
  Nov 18 13:00:09.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4636" for this suite. @ 11/18/23 13:00:09.834
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 11/18/23 13:00:09.843
  Nov 18 13:00:09.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/18/23 13:00:09.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:09.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:09.861
  STEP: create the container to handle the HTTPGet hook request. @ 11/18/23 13:00:09.867
  E1118 13:00:10.614609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:11.614831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/18/23 13:00:11.885
  E1118 13:00:12.614959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:13.615225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 11/18/23 13:00:13.9
  STEP: delete the pod with lifecycle hook @ 11/18/23 13:00:13.917
  E1118 13:00:14.615357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:15.616080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:00:15.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-180" for this suite. @ 11/18/23 13:00:15.936
• [6.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 11/18/23 13:00:15.942
  Nov 18 13:00:15.942: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/18/23 13:00:15.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:15.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:15.962
  STEP: create the container to handle the HTTPGet hook request. @ 11/18/23 13:00:15.969
  E1118 13:00:16.616957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:17.617705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/18/23 13:00:17.99
  E1118 13:00:18.618131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:19.618336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 11/18/23 13:00:20.005
  STEP: delete the pod with lifecycle hook @ 11/18/23 13:00:20.024
  E1118 13:00:20.619238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:21.619456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:22.619467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:23.619678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:00:24.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9957" for this suite. @ 11/18/23 13:00:24.044
• [8.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 11/18/23 13:00:24.052
  Nov 18 13:00:24.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:00:24.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:24.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:24.07
  STEP: fetching services @ 11/18/23 13:00:24.072
  Nov 18 13:00:24.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6554" for this suite. @ 11/18/23 13:00:24.079
• [0.034 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 11/18/23 13:00:24.086
  Nov 18 13:00:24.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:00:24.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:24.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:24.105
  STEP: Creating the pod @ 11/18/23 13:00:24.107
  E1118 13:00:24.620347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:25.620733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:26.621661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:00:26.645: INFO: Successfully updated pod "annotationupdatea850e080-78b6-4773-b680-685c5f96c708"
  E1118 13:00:27.622669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:28.622777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:00:28.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2042" for this suite. @ 11/18/23 13:00:28.663
• [4.585 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 11/18/23 13:00:28.671
  Nov 18 13:00:28.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 13:00:28.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:28.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:28.692
  STEP: Creating a ResourceQuota with best effort scope @ 11/18/23 13:00:28.694
  STEP: Ensuring ResourceQuota status is calculated @ 11/18/23 13:00:28.698
  E1118 13:00:29.623665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:30.624014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 11/18/23 13:00:30.702
  STEP: Ensuring ResourceQuota status is calculated @ 11/18/23 13:00:30.707
  E1118 13:00:31.624095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:32.624359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 11/18/23 13:00:32.711
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/18/23 13:00:32.724
  E1118 13:00:33.624688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:34.624635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/18/23 13:00:34.728
  E1118 13:00:35.625198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:36.626057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/18/23 13:00:36.732
  STEP: Ensuring resource quota status released the pod usage @ 11/18/23 13:00:36.748
  E1118 13:00:37.626600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:38.626771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 11/18/23 13:00:38.752
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/18/23 13:00:38.762
  E1118 13:00:39.626912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:40.627096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/18/23 13:00:40.767
  E1118 13:00:41.627161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:42.627275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/18/23 13:00:42.77
  STEP: Ensuring resource quota status released the pod usage @ 11/18/23 13:00:42.784
  E1118 13:00:43.627776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:44.628206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:00:44.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1812" for this suite. @ 11/18/23 13:00:44.792
• [16.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 11/18/23 13:00:44.8
  Nov 18 13:00:44.800: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:00:44.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:44.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:44.819
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:00:44.821
  E1118 13:00:45.629163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:46.629508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:47.629616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:48.630179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:00:48.847
  Nov 18 13:00:48.850: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-5cf5eab1-e6f7-409c-b0b2-738999d88984 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:00:48.858
  Nov 18 13:00:48.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6822" for this suite. @ 11/18/23 13:00:48.877
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 11/18/23 13:00:48.885
  Nov 18 13:00:48.885: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:00:48.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:48.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:48.902
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6208 @ 11/18/23 13:00:48.904
  STEP: changing the ExternalName service to type=ClusterIP @ 11/18/23 13:00:48.91
  STEP: creating replication controller externalname-service in namespace services-6208 @ 11/18/23 13:00:48.921
  I1118 13:00:48.929285      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6208, replica count: 2
  E1118 13:00:49.631208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:50.631452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:51.631608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:00:51.980014      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:00:51.980: INFO: Creating new exec pod
  E1118 13:00:52.631827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:53.632038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:54.632882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:00:54.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6208 exec execpodjs4gk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 18 13:00:55.141: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 18 13:00:55.141: INFO: stdout: "externalname-service-zc5gd"
  Nov 18 13:00:55.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-6208 exec execpodjs4gk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.222 80'
  Nov 18 13:00:55.308: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.222 80\nConnection to 10.152.183.222 80 port [tcp/http] succeeded!\n"
  Nov 18 13:00:55.308: INFO: stdout: "externalname-service-45576"
  Nov 18 13:00:55.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 13:00:55.311: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-6208" for this suite. @ 11/18/23 13:00:55.329
• [6.452 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/18/23 13:00:55.337
  Nov 18 13:00:55.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-runtime @ 11/18/23 13:00:55.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:55.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:55.359
  STEP: create the container @ 11/18/23 13:00:55.361
  W1118 13:00:55.372097      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/18/23 13:00:55.372
  E1118 13:00:55.632877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:56.633947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:57.634278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/18/23 13:00:58.387
  STEP: the container should be terminated @ 11/18/23 13:00:58.39
  STEP: the termination message should be set @ 11/18/23 13:00:58.39
  Nov 18 13:00:58.390: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/18/23 13:00:58.39
  Nov 18 13:00:58.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-359" for this suite. @ 11/18/23 13:00:58.411
• [3.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 11/18/23 13:00:58.419
  Nov 18 13:00:58.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 13:00:58.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:58.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:58.439
  STEP: creating a secret @ 11/18/23 13:00:58.44
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/18/23 13:00:58.445
  STEP: patching the secret @ 11/18/23 13:00:58.448
  STEP: deleting the secret using a LabelSelector @ 11/18/23 13:00:58.457
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/18/23 13:00:58.465
  Nov 18 13:00:58.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3482" for this suite. @ 11/18/23 13:00:58.473
• [0.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/18/23 13:00:58.479
  Nov 18 13:00:58.479: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 13:00:58.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:00:58.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:00:58.497
  STEP: Creating secret with name secret-test-0fcab078-c75c-4754-93a7-33bfe8a8fd9b @ 11/18/23 13:00:58.499
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:00:58.504
  E1118 13:00:58.635214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:00:59.635824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:00.636172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:01.637193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:01:02.524
  Nov 18 13:01:02.527: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-secrets-8aa3821e-3d30-4869-8ddd-207dbedbc3c0 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:01:02.533
  Nov 18 13:01:02.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1669" for this suite. @ 11/18/23 13:01:02.555
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 11/18/23 13:01:02.563
  Nov 18 13:01:02.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:01:02.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:02.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:02.589
  STEP: Creating configMap that has name configmap-test-emptyKey-78725c24-dc94-4d2d-9843-4358b3ca6d53 @ 11/18/23 13:01:02.591
  Nov 18 13:01:02.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-66" for this suite. @ 11/18/23 13:01:02.596
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 11/18/23 13:01:02.603
  Nov 18 13:01:02.603: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/18/23 13:01:02.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:02.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:02.621
  STEP: create the container to handle the HTTPGet hook request. @ 11/18/23 13:01:02.626
  E1118 13:01:02.637253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:03.637833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:04.638059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/18/23 13:01:04.649
  E1118 13:01:05.638464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:06.638711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/18/23 13:01:06.666
  E1118 13:01:07.638772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:08.639008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/18/23 13:01:08.68
  Nov 18 13:01:08.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7053" for this suite. @ 11/18/23 13:01:08.691
• [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 11/18/23 13:01:08.697
  Nov 18 13:01:08.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 13:01:08.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:08.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:08.715
  STEP: creating a Deployment @ 11/18/23 13:01:08.721
  Nov 18 13:01:08.721: INFO: Creating simple deployment test-deployment-669p4
  Nov 18 13:01:08.734: INFO: deployment "test-deployment-669p4" doesn't have the required revision set
  E1118 13:01:09.639109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:10.639656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 11/18/23 13:01:10.746
  Nov 18 13:01:10.750: INFO: Deployment test-deployment-669p4 has Conditions: [{Available True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-669p4-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/18/23 13:01:10.75
  Nov 18 13:01:10.759: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 1, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 1, 10, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 1, 10, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 1, 8, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-669p4-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/18/23 13:01:10.759
  Nov 18 13:01:10.760: INFO: Observed &Deployment event: ADDED
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-669p4-5d576bd769"}
  Nov 18 13:01:10.760: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-669p4-5d576bd769"}
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 18 13:01:10.760: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-669p4-5d576bd769" is progressing.}
  Nov 18 13:01:10.760: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 18 13:01:10.760: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-669p4-5d576bd769" has successfully progressed.}
  Nov 18 13:01:10.761: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.761: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 18 13:01:10.761: INFO: Observed Deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-669p4-5d576bd769" has successfully progressed.}
  Nov 18 13:01:10.761: INFO: Found Deployment test-deployment-669p4 in namespace deployment-2240 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 18 13:01:10.761: INFO: Deployment test-deployment-669p4 has an updated status
  STEP: patching the Statefulset Status @ 11/18/23 13:01:10.761
  Nov 18 13:01:10.761: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 18 13:01:10.767: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/18/23 13:01:10.767
  Nov 18 13:01:10.769: INFO: Observed &Deployment event: ADDED
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-669p4-5d576bd769"}
  Nov 18 13:01:10.769: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-669p4-5d576bd769"}
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 18 13:01:10.769: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:08 +0000 UTC 2023-11-18 13:01:08 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-669p4-5d576bd769" is progressing.}
  Nov 18 13:01:10.769: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-669p4-5d576bd769" has successfully progressed.}
  Nov 18 13:01:10.769: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-11-18 13:01:10 +0000 UTC 2023-11-18 13:01:08 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-669p4-5d576bd769" has successfully progressed.}
  Nov 18 13:01:10.769: INFO: Observed deployment test-deployment-669p4 in namespace deployment-2240 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 18 13:01:10.769: INFO: Observed &Deployment event: MODIFIED
  Nov 18 13:01:10.769: INFO: Found deployment test-deployment-669p4 in namespace deployment-2240 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Nov 18 13:01:10.769: INFO: Deployment test-deployment-669p4 has a patched status
  Nov 18 13:01:10.774: INFO: Deployment "test-deployment-669p4":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-669p4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f067bf9-697c-40a4-982d-caac62bf93cc",
      ResourceVersion: (string) (len=5) "18301",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-669p4-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 13:01:10.778: INFO: New ReplicaSet "test-deployment-669p4-5d576bd769" of Deployment "test-deployment-669p4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-669p4-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e12664d-422c-4ece-bb0a-3a24e5198bc7",
      ResourceVersion: (string) (len=5) "18296",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-669p4",
          UID: (types.UID) (len=36) "8f067bf9-697c-40a4-982d-caac62bf93cc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 38 66 30  |k:{\"uid\":\"8f0|
              00000120  36 37 62 66 39 2d 36 39  37 63 2d 34 30 61 34 2d  |67bf9-697c-40a4-|
              00000130  39 38 32 64 2d 63 61 61  63 36 32 62 66 39 33 63  |982d-caac62bf93c|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 13:01:10.783: INFO: Pod "test-deployment-669p4-5d576bd769-tr7x6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-669p4-5d576bd769-tr7x6",
      GenerateName: (string) (len=33) "test-deployment-669p4-5d576bd769-",
      Namespace: (string) (len=15) "deployment-2240",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfe65914-a5f5-4794-b6ca-00000b7b8d01",
      ResourceVersion: (string) (len=5) "18295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-669p4-5d576bd769",
          UID: (types.UID) (len=36) "8e12664d-422c-4ece-bb0a-3a24e5198bc7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 38 65 31 32 36 36 34  64 2d 34 32 32 63 2d 34  |"8e12664d-422c-4|
              000000a0  65 63 65 2d 62 62 30 61  2d 33 61 32 34 65 35 31  |ece-bb0a-3a24e51|
              000000b0  39 38 62 63 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |98bc7\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 36 37 5c 22  |192.168.171.67\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrz98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrz98",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835909269,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4c8b18a7c82f1c8b2a107bd9be78456c81a41bb2285d03e11e68801b916ec90b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 13:01:10.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2240" for this suite. @ 11/18/23 13:01:10.789
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 11/18/23 13:01:10.796
  Nov 18 13:01:10.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 13:01:10.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:10.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:10.816
  STEP: Creating a ResourceQuota with terminating scope @ 11/18/23 13:01:10.818
  STEP: Ensuring ResourceQuota status is calculated @ 11/18/23 13:01:10.823
  E1118 13:01:11.640067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:12.640323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 11/18/23 13:01:12.826
  STEP: Ensuring ResourceQuota status is calculated @ 11/18/23 13:01:12.831
  E1118 13:01:13.641159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:14.641285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 11/18/23 13:01:14.834
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/18/23 13:01:14.848
  E1118 13:01:15.641602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:16.641811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/18/23 13:01:16.852
  E1118 13:01:17.642755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:18.642989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/18/23 13:01:18.857
  STEP: Ensuring resource quota status released the pod usage @ 11/18/23 13:01:18.873
  E1118 13:01:19.643565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:20.643760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 11/18/23 13:01:20.876
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/18/23 13:01:20.887
  E1118 13:01:21.644107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:22.644328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/18/23 13:01:22.892
  E1118 13:01:23.644703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:24.645203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/18/23 13:01:24.895
  STEP: Ensuring resource quota status released the pod usage @ 11/18/23 13:01:24.906
  E1118 13:01:25.646197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:26.647016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:26.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5315" for this suite. @ 11/18/23 13:01:26.913
• [16.124 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 11/18/23 13:01:26.92
  Nov 18 13:01:26.920: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 13:01:26.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:26.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:26.938
  STEP: Creating simple DaemonSet "daemon-set" @ 11/18/23 13:01:26.96
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/18/23 13:01:26.965
  Nov 18 13:01:26.969: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:01:26.969: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:01:26.972: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:01:26.972: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:01:27.647821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:27.977: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:01:27.977: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:01:27.980: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 13:01:27.980: INFO: Node ip-172-31-39-133 is running 0 daemon pod, expected 1
  E1118 13:01:28.648848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:28.976: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:01:28.976: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:01:28.980: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:01:28.980: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/18/23 13:01:28.982
  Nov 18 13:01:28.985: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/18/23 13:01:28.985
  Nov 18 13:01:28.993: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/18/23 13:01:28.993
  Nov 18 13:01:28.994: INFO: Observed &DaemonSet event: ADDED
  Nov 18 13:01:28.995: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:28.995: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:28.995: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:28.995: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:28.995: INFO: Found daemon set daemon-set in namespace daemonsets-4984 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 18 13:01:28.995: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/18/23 13:01:28.995
  STEP: watching for the daemon set status to be patched @ 11/18/23 13:01:29.002
  Nov 18 13:01:29.003: INFO: Observed &DaemonSet event: ADDED
  Nov 18 13:01:29.003: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:29.003: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:29.004: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:29.004: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:29.004: INFO: Observed daemon set daemon-set in namespace daemonsets-4984 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 18 13:01:29.004: INFO: Observed &DaemonSet event: MODIFIED
  Nov 18 13:01:29.004: INFO: Found daemon set daemon-set in namespace daemonsets-4984 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Nov 18 13:01:29.004: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/18/23 13:01:29.008
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4984, will wait for the garbage collector to delete the pods @ 11/18/23 13:01:29.008
  Nov 18 13:01:29.067: INFO: Deleting DaemonSet.extensions daemon-set took: 6.609707ms
  Nov 18 13:01:29.168: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.759309ms
  E1118 13:01:29.649870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:30.373: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:01:30.373: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 18 13:01:30.375: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18488"},"items":null}

  Nov 18 13:01:30.378: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18488"},"items":null}

  Nov 18 13:01:30.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4984" for this suite. @ 11/18/23 13:01:30.394
• [3.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/18/23 13:01:30.402
  Nov 18 13:01:30.402: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/18/23 13:01:30.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:30.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:30.42
  STEP: Creating two CSIDrivers @ 11/18/23 13:01:30.422
  STEP: Getting "inline-driver-d2bd3066-0549-4cec-97e7-00699b6d09f2" & "inline-driver-b71140b2-e239-4542-ab2b-10cb01959719" @ 11/18/23 13:01:30.438
  STEP: Patching the CSIDriver "inline-driver-b71140b2-e239-4542-ab2b-10cb01959719" @ 11/18/23 13:01:30.444
  STEP: Updating the CSIDriver "inline-driver-b71140b2-e239-4542-ab2b-10cb01959719" @ 11/18/23 13:01:30.45
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3917" @ 11/18/23 13:01:30.46
  STEP: Deleting CSIDriver "inline-driver-d2bd3066-0549-4cec-97e7-00699b6d09f2" @ 11/18/23 13:01:30.463
  STEP: Confirm deletion of CSIDriver "inline-driver-d2bd3066-0549-4cec-97e7-00699b6d09f2" @ 11/18/23 13:01:30.469
  STEP: Deleting CSIDriver "inline-driver-b71140b2-e239-4542-ab2b-10cb01959719" via DeleteCollection @ 11/18/23 13:01:30.472
  STEP: Confirm deletion of CSIDriver "inline-driver-b71140b2-e239-4542-ab2b-10cb01959719" @ 11/18/23 13:01:30.479
  Nov 18 13:01:30.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3917" for this suite. @ 11/18/23 13:01:30.486
• [0.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 11/18/23 13:01:30.492
  Nov 18 13:01:30.492: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 13:01:30.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:30.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:30.512
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/18/23 13:01:30.513
  Nov 18 13:01:30.514: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:01:30.650279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:31.651321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:31.837: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:01:32.652123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:33.652361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:34.652591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:35.653305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:36.654021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:37.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8857" for this suite. @ 11/18/23 13:01:37.042
• [6.556 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 11/18/23 13:01:37.049
  Nov 18 13:01:37.049: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 13:01:37.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:01:37.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:01:37.069
  STEP: Creating pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279 @ 11/18/23 13:01:37.073
  E1118 13:01:37.654386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:38.654464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 13:01:39.087
  Nov 18 13:01:39.092: INFO: Initial restart count of pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d is 0
  Nov 18 13:01:39.097: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:39.654893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:40.655068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:41.102: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:41.655737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:42.655765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:43.105: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:43.656649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:44.656744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:45.109: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:45.657144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:46.657335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:47.113: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:47.658380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:48.658701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:49.117: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:49.659578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:50.659729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:51.123: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:51.659782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:52.659935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:53.129: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:53.660779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:54.660999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:55.132: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:55.662012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:56.662176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:57.137: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:01:57.662474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:01:58.662651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:01:59.141: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  Nov 18 13:01:59.141: INFO: Restart count of pod container-probe-7279/liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d is now 1 (20.049074406s elapsed)
  E1118 13:01:59.663059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:00.663682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:01.147: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:01.664663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:02.664845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:03.151: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:03.665868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:04.666072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:05.156: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:05.666915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:06.667197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:07.159: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:07.667667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:08.667820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:09.163: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:09.667897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:10.668075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:11.167: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:11.668978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:12.669996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:13.172: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:13.670422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:14.670761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:15.177: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:15.670881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:16.671829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:17.182: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:17.671942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:18.672144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:19.186: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  Nov 18 13:02:19.186: INFO: Restart count of pod container-probe-7279/liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d is now 2 (40.09420206s elapsed)
  E1118 13:02:19.673170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:20.674049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:21.191: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:21.675016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:22.675303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:23.196: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:23.675542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:24.675687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:25.200: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:25.676687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:26.677124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:27.204: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:27.677417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:28.677565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:29.208: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:29.678321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:30.678767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:31.214: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:31.679548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:32.679970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:33.220: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:33.681018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:34.681081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:35.224: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:35.681083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:36.681252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:37.229: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:37.681701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:38.681762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:39.234: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  Nov 18 13:02:39.234: INFO: Restart count of pod container-probe-7279/liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d is now 3 (1m0.141821487s elapsed)
  E1118 13:02:39.682731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:40.682869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:41.239: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:41.682998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:42.683061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:43.243: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:43.683485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:44.683712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:45.247: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:45.684033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:46.684110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:47.251: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:47.684237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:48.685114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:49.257: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:49.685524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:50.685607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:51.262: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:51.685850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:52.686777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:53.267: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:53.687202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:54.687406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:55.274: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:55.688160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:56.689182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:57.279: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:02:57.689783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:02:58.689934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:02:59.284: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  Nov 18 13:02:59.284: INFO: Restart count of pod container-probe-7279/liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d is now 4 (1m20.191976558s elapsed)
  E1118 13:02:59.690957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:00.691134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:01.288: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:01.692037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:02.692432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:03.293: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:03.693173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:04.693296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:05.299: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:05.693691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:06.693797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:07.303: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:07.694823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:08.694952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:09.307: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:09.695709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:10.696052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:11.312: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:11.696050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:12.696387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:13.317: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:13.696766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:14.697099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:15.321: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:15.697845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:16.697929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:17.325: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:17.698671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:18.698827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:19.331: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:19.699276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:20.699456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:21.335: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:21.700379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:22.700713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:23.342: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:23.701847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:24.701892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:25.346: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:25.702100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:26.703053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:27.351: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:27.703158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:28.703400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:29.357: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:29.703471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:30.703642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:31.361: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:31.704605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:32.704988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:33.365: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:33.705958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:34.706176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:35.369: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:35.706715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:36.706916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:37.373: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:37.707714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:38.708096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:39.379: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:39.708561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:40.709096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:41.383: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:41.709688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:42.710678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:43.387: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:43.711211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:44.711392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:45.391: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:45.712167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:46.713170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:47.397: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:47.713523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:48.713682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:49.403: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:49.713994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:50.714138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:51.407: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:51.714645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:52.715019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:53.411: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:53.716026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:54.716244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:55.417: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:55.716339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:56.717109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:57.421: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  E1118 13:03:57.718019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:03:58.718127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:03:59.425: INFO: Get pod liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d in namespace container-probe-7279
  Nov 18 13:03:59.425: INFO: Restart count of pod container-probe-7279/liveness-a920ddb2-b2d0-4c1d-9859-83203110c37d is now 5 (2m20.333291906s elapsed)
  Nov 18 13:03:59.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:03:59.429
  STEP: Destroying namespace "container-probe-7279" for this suite. @ 11/18/23 13:03:59.444
• [142.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 11/18/23 13:03:59.453
  Nov 18 13:03:59.453: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:03:59.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:03:59.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:03:59.469
  STEP: Setting up server cert @ 11/18/23 13:03:59.493
  E1118 13:03:59.718591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:03:59.903
  STEP: Deploying the webhook pod @ 11/18/23 13:03:59.913
  STEP: Wait for the deployment to be ready @ 11/18/23 13:03:59.927
  Nov 18 13:03:59.934: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:04:00.719004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:01.719079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:04:01.944
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:04:01.955
  E1118 13:04:02.719385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:02.955: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/18/23 13:04:02.965
  STEP: create a pod that should be updated by the webhook @ 11/18/23 13:04:02.981
  Nov 18 13:04:02.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9180" for this suite. @ 11/18/23 13:04:03.049
  STEP: Destroying namespace "webhook-markers-3291" for this suite. @ 11/18/23 13:04:03.057
• [3.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 11/18/23 13:04:03.064
  Nov 18 13:04:03.064: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 13:04:03.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:03.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:03.083
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9068.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9068.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/18/23 13:04:03.086
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9068.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9068.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/18/23 13:04:03.086
  STEP: creating a pod to probe /etc/hosts @ 11/18/23 13:04:03.086
  STEP: submitting the pod to kubernetes @ 11/18/23 13:04:03.086
  E1118 13:04:03.720270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:04.720377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:05.721015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:06.722045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:07.722922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:08.723071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:09.723932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:10.724064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:04:11.12
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:04:11.124
  Nov 18 13:04:11.139: INFO: DNS probes using dns-9068/dns-test-3f98ab0f-3c1d-4a46-aad0-bec154dccefd succeeded

  Nov 18 13:04:11.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:04:11.143
  STEP: Destroying namespace "dns-9068" for this suite. @ 11/18/23 13:04:11.155
• [8.098 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 11/18/23 13:04:11.163
  Nov 18 13:04:11.163: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replication-controller @ 11/18/23 13:04:11.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:11.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:11.182
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/18/23 13:04:11.186
  E1118 13:04:11.724824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:12.725852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 11/18/23 13:04:13.207
  STEP: Then the orphan pod is adopted @ 11/18/23 13:04:13.213
  E1118 13:04:13.726621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:14.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2416" for this suite. @ 11/18/23 13:04:14.225
• [3.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/18/23 13:04:14.231
  Nov 18 13:04:14.231: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 13:04:14.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:14.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:14.252
  STEP: Create set of pods @ 11/18/23 13:04:14.255
  Nov 18 13:04:14.264: INFO: created test-pod-1
  Nov 18 13:04:14.271: INFO: created test-pod-2
  Nov 18 13:04:14.281: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/18/23 13:04:14.281
  E1118 13:04:14.727650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:15.727775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 11/18/23 13:04:16.336
  Nov 18 13:04:16.340: INFO: Pod quantity 3 is different from expected quantity 0
  E1118 13:04:16.728742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:17.343: INFO: Pod quantity 3 is different from expected quantity 0
  E1118 13:04:17.729643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:18.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5730" for this suite. @ 11/18/23 13:04:18.348
• [4.122 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 11/18/23 13:04:18.354
  Nov 18 13:04:18.354: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:04:18.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:18.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:18.372
  STEP: creating service in namespace services-9925 @ 11/18/23 13:04:18.376
  STEP: creating service affinity-clusterip in namespace services-9925 @ 11/18/23 13:04:18.376
  STEP: creating replication controller affinity-clusterip in namespace services-9925 @ 11/18/23 13:04:18.387
  I1118 13:04:18.394982      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9925, replica count: 3
  E1118 13:04:18.730716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:19.731665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:20.731736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:04:21.445589      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:04:21.453: INFO: Creating new exec pod
  E1118 13:04:21.731739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:22.732021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:23.732904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:24.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9925 exec execpod-affinity2gdx4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Nov 18 13:04:24.618: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Nov 18 13:04:24.618: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:04:24.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9925 exec execpod-affinity2gdx4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.66 80'
  E1118 13:04:24.733035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:24.756: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.66 80\nConnection to 10.152.183.66 80 port [tcp/http] succeeded!\n"
  Nov 18 13:04:24.756: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:04:24.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-9925 exec execpod-affinity2gdx4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.66:80/ ; done'
  Nov 18 13:04:24.978: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.66:80/\n"
  Nov 18 13:04:24.978: INFO: stdout: "\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9\naffinity-clusterip-cmzj9"
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Received response from host: affinity-clusterip-cmzj9
  Nov 18 13:04:24.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 13:04:24.982: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9925, will wait for the garbage collector to delete the pods @ 11/18/23 13:04:24.995
  Nov 18 13:04:25.056: INFO: Deleting ReplicationController affinity-clusterip took: 6.849022ms
  Nov 18 13:04:25.157: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.711767ms
  E1118 13:04:25.733484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:26.734253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:27.734977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9925" for this suite. @ 11/18/23 13:04:28.177
• [9.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 11/18/23 13:04:28.185
  Nov 18 13:04:28.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename server-version @ 11/18/23 13:04:28.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:28.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:28.203
  STEP: Request ServerVersion @ 11/18/23 13:04:28.208
  STEP: Confirm major version @ 11/18/23 13:04:28.209
  Nov 18 13:04:28.209: INFO: Major version: 1
  STEP: Confirm minor version @ 11/18/23 13:04:28.209
  Nov 18 13:04:28.209: INFO: cleanMinorVersion: 28
  Nov 18 13:04:28.209: INFO: Minor version: 28
  Nov 18 13:04:28.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7070" for this suite. @ 11/18/23 13:04:28.213
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 11/18/23 13:04:28.221
  Nov 18 13:04:28.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl-logs @ 11/18/23 13:04:28.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:28.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:28.237
  STEP: creating an pod @ 11/18/23 13:04:28.24
  Nov 18 13:04:28.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Nov 18 13:04:28.304: INFO: stderr: ""
  Nov 18 13:04:28.304: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/18/23 13:04:28.304
  Nov 18 13:04:28.304: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1118 13:04:28.735758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:29.735895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:30.315: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/18/23 13:04:30.315
  Nov 18 13:04:30.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 logs logs-generator logs-generator'
  Nov 18 13:04:30.388: INFO: stderr: ""
  Nov 18 13:04:30.388: INFO: stdout: "I1118 13:04:29.049723       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/vls 359\nI1118 13:04:29.249817       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/bbpg 279\nI1118 13:04:29.450312       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/f7pk 575\nI1118 13:04:29.650639       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/cknz 576\nI1118 13:04:29.849882       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/6j9 495\nI1118 13:04:30.050193       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/7x24 204\nI1118 13:04:30.250517       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/7nks 582\n"
  STEP: limiting log lines @ 11/18/23 13:04:30.388
  Nov 18 13:04:30.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 logs logs-generator logs-generator --tail=1'
  Nov 18 13:04:30.452: INFO: stderr: ""
  Nov 18 13:04:30.452: INFO: stdout: "I1118 13:04:30.250517       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/7nks 582\n"
  Nov 18 13:04:30.452: INFO: got output "I1118 13:04:30.250517       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/7nks 582\n"
  STEP: limiting log bytes @ 11/18/23 13:04:30.452
  Nov 18 13:04:30.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 logs logs-generator logs-generator --limit-bytes=1'
  Nov 18 13:04:30.523: INFO: stderr: ""
  Nov 18 13:04:30.523: INFO: stdout: "I"
  Nov 18 13:04:30.523: INFO: got output "I"
  STEP: exposing timestamps @ 11/18/23 13:04:30.523
  Nov 18 13:04:30.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 logs logs-generator logs-generator --tail=1 --timestamps'
  Nov 18 13:04:30.590: INFO: stderr: ""
  Nov 18 13:04:30.590: INFO: stdout: "2023-11-18T13:04:30.449837692Z I1118 13:04:30.449758       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/bh4t 354\n"
  Nov 18 13:04:30.590: INFO: got output "2023-11-18T13:04:30.449837692Z I1118 13:04:30.449758       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/bh4t 354\n"
  STEP: restricting to a time range @ 11/18/23 13:04:30.59
  E1118 13:04:30.736785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:31.736989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:32.737391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:33.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 logs logs-generator logs-generator --since=1s'
  Nov 18 13:04:33.159: INFO: stderr: ""
  Nov 18 13:04:33.159: INFO: stdout: "I1118 13:04:32.250239       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/zpw 402\nI1118 13:04:32.450563       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/fnp 571\nI1118 13:04:32.649800       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/2z6c 286\nI1118 13:04:32.850136       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/z9k 450\nI1118 13:04:33.050496       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/qrt2 241\n"
  Nov 18 13:04:33.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 logs logs-generator logs-generator --since=24h'
  Nov 18 13:04:33.223: INFO: stderr: ""
  Nov 18 13:04:33.223: INFO: stdout: "I1118 13:04:29.049723       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/vls 359\nI1118 13:04:29.249817       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/bbpg 279\nI1118 13:04:29.450312       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/f7pk 575\nI1118 13:04:29.650639       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/cknz 576\nI1118 13:04:29.849882       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/6j9 495\nI1118 13:04:30.050193       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/7x24 204\nI1118 13:04:30.250517       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/7nks 582\nI1118 13:04:30.449758       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/bh4t 354\nI1118 13:04:30.650016       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/q97 419\nI1118 13:04:30.850331       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/nprs 599\nI1118 13:04:31.050631       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/2lnd 294\nI1118 13:04:31.249767       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/drq 215\nI1118 13:04:31.450012       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/8cs 285\nI1118 13:04:31.650329       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/5nl 559\nI1118 13:04:31.850667       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/vj9 364\nI1118 13:04:32.049919       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/tj5j 444\nI1118 13:04:32.250239       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/zpw 402\nI1118 13:04:32.450563       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/fnp 571\nI1118 13:04:32.649800       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/2z6c 286\nI1118 13:04:32.850136       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/z9k 450\nI1118 13:04:33.050496       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/qrt2 241\n"
  Nov 18 13:04:33.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-logs-1659 delete pod logs-generator'
  E1118 13:04:33.738186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:34.130: INFO: stderr: ""
  Nov 18 13:04:34.130: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Nov 18 13:04:34.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1659" for this suite. @ 11/18/23 13:04:34.134
• [5.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 11/18/23 13:04:34.142
  Nov 18 13:04:34.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:04:34.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:34.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:34.161
  STEP: creating a replication controller @ 11/18/23 13:04:34.165
  Nov 18 13:04:34.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 create -f -'
  Nov 18 13:04:34.337: INFO: stderr: ""
  Nov 18 13:04:34.337: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/18/23 13:04:34.337
  Nov 18 13:04:34.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 13:04:34.397: INFO: stderr: ""
  Nov 18 13:04:34.397: INFO: stdout: "update-demo-nautilus-hjrxh update-demo-nautilus-jrsdq "
  Nov 18 13:04:34.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods update-demo-nautilus-hjrxh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 13:04:34.454: INFO: stderr: ""
  Nov 18 13:04:34.454: INFO: stdout: ""
  Nov 18 13:04:34.454: INFO: update-demo-nautilus-hjrxh is created but not running
  E1118 13:04:34.738799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:35.739672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:36.739803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:37.740592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:38.741442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:39.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Nov 18 13:04:39.512: INFO: stderr: ""
  Nov 18 13:04:39.512: INFO: stdout: "update-demo-nautilus-hjrxh update-demo-nautilus-jrsdq "
  Nov 18 13:04:39.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods update-demo-nautilus-hjrxh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 13:04:39.571: INFO: stderr: ""
  Nov 18 13:04:39.571: INFO: stdout: "true"
  Nov 18 13:04:39.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods update-demo-nautilus-hjrxh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Nov 18 13:04:39.627: INFO: stderr: ""
  Nov 18 13:04:39.627: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 13:04:39.627: INFO: validating pod update-demo-nautilus-hjrxh
  Nov 18 13:04:39.632: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 13:04:39.632: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 13:04:39.632: INFO: update-demo-nautilus-hjrxh is verified up and running
  Nov 18 13:04:39.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods update-demo-nautilus-jrsdq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Nov 18 13:04:39.689: INFO: stderr: ""
  Nov 18 13:04:39.689: INFO: stdout: "true"
  Nov 18 13:04:39.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods update-demo-nautilus-jrsdq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1118 13:04:39.741975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:39.747: INFO: stderr: ""
  Nov 18 13:04:39.747: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Nov 18 13:04:39.747: INFO: validating pod update-demo-nautilus-jrsdq
  Nov 18 13:04:39.752: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Nov 18 13:04:39.752: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Nov 18 13:04:39.752: INFO: update-demo-nautilus-jrsdq is verified up and running
  STEP: using delete to clean up resources @ 11/18/23 13:04:39.752
  Nov 18 13:04:39.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 delete --grace-period=0 --force -f -'
  Nov 18 13:04:39.816: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:04:39.816: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Nov 18 13:04:39.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get rc,svc -l name=update-demo --no-headers'
  Nov 18 13:04:39.882: INFO: stderr: "No resources found in kubectl-3478 namespace.\n"
  Nov 18 13:04:39.883: INFO: stdout: ""
  Nov 18 13:04:39.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3478 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Nov 18 13:04:39.948: INFO: stderr: ""
  Nov 18 13:04:39.948: INFO: stdout: ""
  Nov 18 13:04:39.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3478" for this suite. @ 11/18/23 13:04:39.951
• [5.817 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 11/18/23 13:04:39.959
  Nov 18 13:04:39.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/18/23 13:04:39.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:39.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:39.982
  Nov 18 13:04:39.986: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:04:40.742109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:41.742174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:42.742936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:43.743748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:44.744328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:45.744863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:04:46.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7965" for this suite. @ 11/18/23 13:04:46.216
• [6.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/18/23 13:04:46.225
  Nov 18 13:04:46.225: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename subpath @ 11/18/23 13:04:46.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:04:46.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:04:46.246
  STEP: Setting up data @ 11/18/23 13:04:46.249
  STEP: Creating pod pod-subpath-test-configmap-dlvx @ 11/18/23 13:04:46.261
  STEP: Creating a pod to test atomic-volume-subpath @ 11/18/23 13:04:46.261
  E1118 13:04:46.745205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:47.745743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:48.746719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:49.746911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:50.747146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:51.747372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:52.748181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:53.748343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:54.748405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:55.749168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:56.749177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:57.750027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:58.750279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:04:59.751061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:00.751207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:01.752011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:02.752475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:03.753178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:04.754098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:05.754317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:06.754695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:07.754905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:08.755935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:09.756109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:05:10.335
  Nov 18 13:05:10.338: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-subpath-test-configmap-dlvx container test-container-subpath-configmap-dlvx: <nil>
  STEP: delete the pod @ 11/18/23 13:05:10.347
  STEP: Deleting pod pod-subpath-test-configmap-dlvx @ 11/18/23 13:05:10.365
  Nov 18 13:05:10.365: INFO: Deleting pod "pod-subpath-test-configmap-dlvx" in namespace "subpath-182"
  Nov 18 13:05:10.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-182" for this suite. @ 11/18/23 13:05:10.372
• [24.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 11/18/23 13:05:10.38
  Nov 18 13:05:10.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:05:10.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:10.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:10.398
  STEP: Setting up server cert @ 11/18/23 13:05:10.421
  E1118 13:05:10.756940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:05:10.769
  STEP: Deploying the webhook pod @ 11/18/23 13:05:10.777
  STEP: Wait for the deployment to be ready @ 11/18/23 13:05:10.791
  Nov 18 13:05:10.805: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:05:11.757709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:12.758468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:05:12.818
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:05:12.835
  E1118 13:05:13.758561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:13.836: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/18/23 13:05:13.844
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/18/23 13:05:13.846
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/18/23 13:05:13.846
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/18/23 13:05:13.846
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/18/23 13:05:13.847
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/18/23 13:05:13.847
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/18/23 13:05:13.849
  Nov 18 13:05:13.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6594" for this suite. @ 11/18/23 13:05:13.893
  STEP: Destroying namespace "webhook-markers-6179" for this suite. @ 11/18/23 13:05:13.903
• [3.529 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/18/23 13:05:13.909
  Nov 18 13:05:13.909: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename proxy @ 11/18/23 13:05:13.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:13.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:13.929
  Nov 18 13:05:13.933: INFO: Creating pod...
  E1118 13:05:14.759594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:15.759761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:15.949: INFO: Creating service...
  Nov 18 13:05:15.961: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=DELETE
  Nov 18 13:05:15.969: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 18 13:05:15.969: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=OPTIONS
  Nov 18 13:05:15.972: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 18 13:05:15.972: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=PATCH
  Nov 18 13:05:15.977: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 18 13:05:15.977: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=POST
  Nov 18 13:05:15.980: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 18 13:05:15.980: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=PUT
  Nov 18 13:05:15.983: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 18 13:05:15.983: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=DELETE
  Nov 18 13:05:15.989: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 18 13:05:15.989: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Nov 18 13:05:15.995: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 18 13:05:15.995: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=PATCH
  Nov 18 13:05:15.999: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 18 13:05:15.999: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=POST
  Nov 18 13:05:16.006: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 18 13:05:16.006: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=PUT
  Nov 18 13:05:16.012: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 18 13:05:16.012: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=GET
  Nov 18 13:05:16.015: INFO: http.Client request:GET StatusCode:301
  Nov 18 13:05:16.015: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=GET
  Nov 18 13:05:16.021: INFO: http.Client request:GET StatusCode:301
  Nov 18 13:05:16.021: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/pods/agnhost/proxy?method=HEAD
  Nov 18 13:05:16.023: INFO: http.Client request:HEAD StatusCode:301
  Nov 18 13:05:16.023: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7597/services/e2e-proxy-test-service/proxy?method=HEAD
  Nov 18 13:05:16.028: INFO: http.Client request:HEAD StatusCode:301
  Nov 18 13:05:16.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7597" for this suite. @ 11/18/23 13:05:16.032
• [2.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 11/18/23 13:05:16.042
  Nov 18 13:05:16.042: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pod-network-test @ 11/18/23 13:05:16.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:16.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:16.06
  STEP: Performing setup for networking test in namespace pod-network-test-2178 @ 11/18/23 13:05:16.063
  STEP: creating a selector @ 11/18/23 13:05:16.063
  STEP: Creating the service pods in kubernetes @ 11/18/23 13:05:16.063
  Nov 18 13:05:16.063: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1118 13:05:16.760669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:17.761283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:18.762126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:19.762360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:20.763020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:21.763237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:22.764054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:23.764140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:24.765170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:25.765285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:26.766223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:27.766794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/18/23 13:05:28.152
  E1118 13:05:28.767281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:29.767518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:30.172: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 18 13:05:30.172: INFO: Breadth first check of 192.168.250.214 on host 172.31.29.39...
  Nov 18 13:05:30.175: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.250.213:9080/dial?request=hostname&protocol=http&host=192.168.250.214&port=8083&tries=1'] Namespace:pod-network-test-2178 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:05:30.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:05:30.176: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:05:30.176: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2178/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.250.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.250.214%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 18 13:05:30.279: INFO: Waiting for responses: map[]
  Nov 18 13:05:30.279: INFO: reached 192.168.250.214 after 0/1 tries
  Nov 18 13:05:30.279: INFO: Breadth first check of 192.168.171.72 on host 172.31.39.133...
  Nov 18 13:05:30.282: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.250.213:9080/dial?request=hostname&protocol=http&host=192.168.171.72&port=8083&tries=1'] Namespace:pod-network-test-2178 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:05:30.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:05:30.283: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:05:30.283: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2178/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.250.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.171.72%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 18 13:05:30.380: INFO: Waiting for responses: map[]
  Nov 18 13:05:30.380: INFO: reached 192.168.171.72 after 0/1 tries
  Nov 18 13:05:30.380: INFO: Breadth first check of 192.168.60.90 on host 172.31.84.152...
  Nov 18 13:05:30.385: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.250.213:9080/dial?request=hostname&protocol=http&host=192.168.60.90&port=8083&tries=1'] Namespace:pod-network-test-2178 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:05:30.385: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:05:30.385: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:05:30.385: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2178/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.250.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.60.90%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 18 13:05:30.467: INFO: Waiting for responses: map[]
  Nov 18 13:05:30.467: INFO: reached 192.168.60.90 after 0/1 tries
  Nov 18 13:05:30.467: INFO: Going to retry 0 out of 3 pods....
  Nov 18 13:05:30.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2178" for this suite. @ 11/18/23 13:05:30.472
• [14.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/18/23 13:05:30.482
  Nov 18 13:05:30.482: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/18/23 13:05:30.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:30.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:30.502
  E1118 13:05:30.768346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:31.769384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:32.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 11/18/23 13:05:32.546
  STEP: Cleaning up the configmap @ 11/18/23 13:05:32.554
  STEP: Cleaning up the pod @ 11/18/23 13:05:32.564
  STEP: Destroying namespace "emptydir-wrapper-7139" for this suite. @ 11/18/23 13:05:32.579
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 11/18/23 13:05:32.588
  Nov 18 13:05:32.588: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:05:32.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:32.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:32.606
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/18/23 13:05:32.609
  E1118 13:05:32.770261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:33.771140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:34.771868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:35.772026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:05:36.63
  Nov 18 13:05:36.633: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-1b2bc2b2-d33b-4df8-a631-4492183b14ad container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:05:36.654
  Nov 18 13:05:36.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4178" for this suite. @ 11/18/23 13:05:36.68
• [4.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 11/18/23 13:05:36.688
  Nov 18 13:05:36.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pod-network-test @ 11/18/23 13:05:36.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:36.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:36.704
  STEP: Performing setup for networking test in namespace pod-network-test-8319 @ 11/18/23 13:05:36.708
  STEP: creating a selector @ 11/18/23 13:05:36.708
  STEP: Creating the service pods in kubernetes @ 11/18/23 13:05:36.708
  Nov 18 13:05:36.708: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1118 13:05:36.772950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:37.773079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:38.773475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:39.773677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:40.774681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:41.775110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:42.775417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:43.776022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:44.776279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:45.776423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:46.777140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:47.777696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:48.777761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/18/23 13:05:48.795
  E1118 13:05:49.778825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:50.779037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:50.826: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 18 13:05:50.826: INFO: Going to poll 192.168.250.215 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 18 13:05:50.828: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.250.215:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8319 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:05:50.828: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:05:50.829: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:05:50.829: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8319/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.250.215%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 18 13:05:50.924: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov 18 13:05:50.924: INFO: Going to poll 192.168.171.75 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 18 13:05:50.929: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.171.75:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8319 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:05:50.929: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:05:50.929: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:05:50.929: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8319/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.171.75%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 18 13:05:51.034: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov 18 13:05:51.034: INFO: Going to poll 192.168.60.91 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Nov 18 13:05:51.037: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.60.91:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8319 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:05:51.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:05:51.038: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:05:51.038: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8319/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.60.91%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Nov 18 13:05:51.119: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov 18 13:05:51.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8319" for this suite. @ 11/18/23 13:05:51.124
• [14.444 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 11/18/23 13:05:51.132
  Nov 18 13:05:51.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:05:51.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:51.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:51.153
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:05:51.156
  E1118 13:05:51.779559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:52.780030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:53.780139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:05:54.781171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:05:55.182
  Nov 18 13:05:55.185: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-40948456-7ba0-4d2e-9e13-3f1a291336fe container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:05:55.192
  Nov 18 13:05:55.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5399" for this suite. @ 11/18/23 13:05:55.215
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 11/18/23 13:05:55.223
  Nov 18 13:05:55.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:05:55.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:55.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:55.242
  STEP: Starting the proxy @ 11/18/23 13:05:55.245
  Nov 18 13:05:55.245: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-6031 proxy --unix-socket=/tmp/kubectl-proxy-unix3835428954/test'
  STEP: retrieving proxy /api/ output @ 11/18/23 13:05:55.286
  Nov 18 13:05:55.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6031" for this suite. @ 11/18/23 13:05:55.29
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/18/23 13:05:55.298
  Nov 18 13:05:55.298: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename certificates @ 11/18/23 13:05:55.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:55.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:55.316
  E1118 13:05:55.781847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 11/18/23 13:05:55.846
  STEP: getting /apis/certificates.k8s.io @ 11/18/23 13:05:55.85
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/18/23 13:05:55.852
  STEP: creating @ 11/18/23 13:05:55.853
  STEP: getting @ 11/18/23 13:05:55.87
  STEP: listing @ 11/18/23 13:05:55.873
  STEP: watching @ 11/18/23 13:05:55.878
  Nov 18 13:05:55.878: INFO: starting watch
  STEP: patching @ 11/18/23 13:05:55.879
  STEP: updating @ 11/18/23 13:05:55.887
  Nov 18 13:05:55.891: INFO: waiting for watch events with expected annotations
  Nov 18 13:05:55.891: INFO: saw patched and updated annotations
  STEP: getting /approval @ 11/18/23 13:05:55.891
  STEP: patching /approval @ 11/18/23 13:05:55.894
  STEP: updating /approval @ 11/18/23 13:05:55.902
  STEP: getting /status @ 11/18/23 13:05:55.909
  STEP: patching /status @ 11/18/23 13:05:55.912
  STEP: updating /status @ 11/18/23 13:05:55.922
  STEP: deleting @ 11/18/23 13:05:55.929
  STEP: deleting a collection @ 11/18/23 13:05:55.942
  Nov 18 13:05:55.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5035" for this suite. @ 11/18/23 13:05:55.965
• [0.673 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/18/23 13:05:55.972
  Nov 18 13:05:55.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 13:05:55.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:05:55.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:05:55.99
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/18/23 13:05:56.015
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/18/23 13:05:56.022
  Nov 18 13:05:56.028: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:56.029: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:56.035: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:05:56.035: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:05:56.782864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:57.041: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:57.041: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:57.044: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:05:57.044: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:05:57.783636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:58.041: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:58.041: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:58.046: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:05:58.046: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/18/23 13:05:58.048
  Nov 18 13:05:58.071: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:58.071: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:58.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 13:05:58.075: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:05:58.783759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:05:59.079: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:59.079: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:05:59.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 13:05:59.083: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:05:59.784718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:00.080: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:06:00.080: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:06:00.085: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:06:00.085: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/18/23 13:06:00.085
  STEP: Deleting DaemonSet "daemon-set" @ 11/18/23 13:06:00.091
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3496, will wait for the garbage collector to delete the pods @ 11/18/23 13:06:00.091
  Nov 18 13:06:00.152: INFO: Deleting DaemonSet.extensions daemon-set took: 5.861318ms
  Nov 18 13:06:00.253: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.77569ms
  E1118 13:06:00.784780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:01.357: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:06:01.357: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 18 13:06:01.361: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20363"},"items":null}

  Nov 18 13:06:01.366: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20363"},"items":null}

  Nov 18 13:06:01.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3496" for this suite. @ 11/18/23 13:06:01.385
• [5.420 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 11/18/23 13:06:01.392
  Nov 18 13:06:01.392: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename endpointslice @ 11/18/23 13:06:01.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:06:01.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:06:01.414
  E1118 13:06:01.784901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:02.785437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:03.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4214" for this suite. @ 11/18/23 13:06:03.469
• [2.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 11/18/23 13:06:03.478
  Nov 18 13:06:03.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:06:03.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:06:03.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:06:03.499
  STEP: Setting up server cert @ 11/18/23 13:06:03.523
  E1118 13:06:03.786370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:06:04.157
  STEP: Deploying the webhook pod @ 11/18/23 13:06:04.165
  STEP: Wait for the deployment to be ready @ 11/18/23 13:06:04.181
  Nov 18 13:06:04.190: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:06:04.787076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:05.787677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:06:06.203
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:06:06.215
  E1118 13:06:06.788199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:07.216: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 18 13:06:07.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-80-crds.webhook.example.com via the AdmissionRegistration API @ 11/18/23 13:06:07.736
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/18/23 13:06:07.753
  E1118 13:06:07.788237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:08.789154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:09.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1118 13:06:09.789766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6247" for this suite. @ 11/18/23 13:06:10.351
  STEP: Destroying namespace "webhook-markers-5368" for this suite. @ 11/18/23 13:06:10.358
• [6.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 11/18/23 13:06:10.367
  Nov 18 13:06:10.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename job @ 11/18/23 13:06:10.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:06:10.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:06:10.384
  STEP: Creating a job @ 11/18/23 13:06:10.389
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/18/23 13:06:10.394
  E1118 13:06:10.790559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:11.790963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/18/23 13:06:12.399
  STEP: updating /status @ 11/18/23 13:06:12.407
  STEP: get /status @ 11/18/23 13:06:12.438
  Nov 18 13:06:12.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3109" for this suite. @ 11/18/23 13:06:12.447
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 11/18/23 13:06:12.457
  Nov 18 13:06:12.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:06:12.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:06:12.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:06:12.473
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/18/23 13:06:12.476
  E1118 13:06:12.791816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:13.792051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:14.792077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:15.792338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:06:16.502
  Nov 18 13:06:16.505: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-557f78c1-a909-4a63-89c5-9206612cd18c container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:06:16.513
  Nov 18 13:06:16.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4262" for this suite. @ 11/18/23 13:06:16.533
• [4.085 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 11/18/23 13:06:16.542
  Nov 18 13:06:16.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 13:06:16.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:06:16.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:06:16.558
  STEP: Creating pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423 @ 11/18/23 13:06:16.562
  E1118 13:06:16.793186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:17.793848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 13:06:18.584
  Nov 18 13:06:18.588: INFO: Initial restart count of pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 is 0
  Nov 18 13:06:18.591: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:18.794800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:19.795010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:20.595: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:20.795770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:21.795932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:22.599: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:22.796847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:23.797350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:24.606: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:24.798312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:25.798503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:26.610: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:26.799370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:27.799838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:28.615: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:28.799970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:29.800092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:30.619: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:30.800839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:31.801153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:32.624: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:32.801518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:33.802061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:34.630: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:34.802831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:35.802981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:36.634: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:36.803679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:37.804147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:38.638: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:38.804688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:39.805157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:40.642: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:40.805933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:41.806015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:42.647: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:42.806401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:43.806604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:44.652: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:44.806967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:45.807156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:46.658: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:46.807301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:47.807928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:48.664: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:48.808530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:49.809166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:50.670: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:50.809485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:51.809698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:52.674: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:52.810369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:53.810594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:54.679: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:54.811476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:55.811687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:56.684: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:56.812019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:57.812419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:06:58.688: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:06:58.813133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:06:59.813317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:00.692: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:00.813948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:01.814140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:02.696: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:02.814920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:03.815114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:04.703: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:04.815599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:05.816690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:06.707: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:06.817612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:07.818158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:08.711: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:08.818908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:09.819075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:10.717: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:10.819375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:11.819500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:12.722: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:12.820026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:13.820095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:14.727: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:14.820753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:15.821186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:16.731: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:16.821660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:17.821874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:18.735: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:18.822623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:19.822847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:20.740: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:20.823000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:21.823194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:22.745: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:22.823208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:23.823467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:24.749: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:24.823898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:25.824078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:26.755: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:26.824128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:27.824700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:28.759: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:28.825303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:29.825972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:30.763: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:30.826900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:31.827065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:32.769: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:32.827926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:33.828123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:34.774: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:34.828404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:35.829219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:36.778: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:36.829435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:37.829719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:38.783: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:38.830518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:39.830717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:40.787: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:40.831354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:41.831450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:42.791: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:42.832421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:43.833155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:44.795: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:44.834010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:45.834188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:46.799: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:46.834494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:47.834997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:48.804: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:48.836036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:49.837143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:50.808: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:50.837620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:51.837786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:52.812: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:52.838528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:53.838696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:54.816: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:54.838706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:55.838901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:56.820: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:56.839487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:57.840036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:07:58.824: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:07:58.840725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:07:59.840879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:00.829: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:00.841647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:01.841830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:02.833: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:02.842463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:03.842588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:04.837: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:04.842716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:05.842854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:06.841: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:06.843589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:07.843986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:08.844376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:08.847: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:09.845097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:10.845710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:10.851: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:11.846331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:12.846413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:12.854: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:13.846593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:14.846716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:14.861: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:15.847008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:16.847175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:16.865: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:17.847276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:18.847625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:18.872: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:19.847977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:20.848143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:20.876: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:21.848225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:22.848446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:22.880: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:23.848611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:24.849172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:24.885: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:25.849282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:26.850350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:26.891: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:27.850575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:28.850726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:28.895: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:29.851389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:30.851605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:30.899: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:31.851812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:32.852225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:32.902: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:33.852186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:34.853166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:34.907: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:35.853291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:36.853601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:36.911: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:37.853652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:38.853767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:38.915: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:39.853829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:40.854102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:40.920: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:41.854220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:42.854499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:42.925: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:43.854893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:44.855171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:44.929: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:45.855563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:46.855684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:46.933: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:47.855752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:48.856816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:48.939: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:49.856964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:50.857135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:50.942: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:51.857613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:52.857940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:52.946: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:53.858415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:54.858782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:54.952: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:55.859078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:56.859270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:56.956: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:57.859392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:08:58.859601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:08:58.960: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:08:59.860706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:00.860819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:00.966: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:01.860947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:02.861960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:02.969: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:03.862072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:04.862300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:04.976: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:05.863358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:06.863466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:06.980: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:07.863803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:08.864005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:08.986: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:09.864213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:10.864410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:10.991: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:11.865110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:12.865152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:12.996: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:13.865822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:14.866832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:15.002: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:15.867520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:16.868281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:17.006: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:17.869117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:18.869283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:19.011: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:19.870321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:20.870506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:21.015: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:21.871479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:22.871563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:23.019: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:23.871928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:24.872120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:25.024: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:25.872461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:26.873106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:27.028: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:27.873885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:28.874197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:29.033: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:29.874384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:30.874588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:31.039: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:31.874665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:32.874892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:33.044: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:33.876083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:34.877169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:35.049: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:35.877519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:36.877621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:37.055: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:37.877907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:38.878134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:39.059: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:39.878579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:40.878822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:41.065: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:41.879083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:42.879445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:43.071: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:43.879600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:44.879812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:45.076: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:45.880104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:46.880365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:47.080: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:47.881103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:48.881182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:49.085: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:49.882247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:50.882428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:51.089: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:51.883435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:52.883941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:53.095: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:53.884114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:54.884315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:55.100: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:55.884433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:56.885146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:57.105: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:57.885474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:09:58.885528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:09:59.111: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:09:59.886250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:00.886449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:01.115: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:01.887458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:02.887756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:03.120: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:03.887883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:04.888034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:05.125: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:05.889034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:06.889136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:07.129: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:07.889211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:08.889390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:09.134: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:09.889707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:10.889803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:11.140: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:11.889962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:12.890191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:13.144: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:13.890948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:14.891237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:15.150: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:15.892125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:16.892435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:17.154: INFO: Get pod liveness-0cf0c958-de88-4b5f-bbe6-ecbea6ea14c1 in namespace container-probe-8423
  E1118 13:10:17.892455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:18.893095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:19.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:10:19.158
  STEP: Destroying namespace "container-probe-8423" for this suite. @ 11/18/23 13:10:19.174
• [242.640 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 11/18/23 13:10:19.183
  Nov 18 13:10:19.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 13:10:19.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:10:19.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:10:19.2
  STEP: creating the pod @ 11/18/23 13:10:19.203
  STEP: waiting for pod running @ 11/18/23 13:10:19.211
  E1118 13:10:19.893432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:20.894190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 11/18/23 13:10:21.218
  Nov 18 13:10:21.223: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2480 PodName:var-expansion-8698485b-6783-4936-97b1-d36e83a11293 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:10:21.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:10:21.223: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:10:21.223: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2480/pods/var-expansion-8698485b-6783-4936-97b1-d36e83a11293/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/18/23 13:10:21.304
  Nov 18 13:10:21.307: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2480 PodName:var-expansion-8698485b-6783-4936-97b1-d36e83a11293 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:10:21.307: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:10:21.307: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:10:21.307: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2480/pods/var-expansion-8698485b-6783-4936-97b1-d36e83a11293/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/18/23 13:10:21.395
  E1118 13:10:21.894416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:21.907: INFO: Successfully updated pod "var-expansion-8698485b-6783-4936-97b1-d36e83a11293"
  STEP: waiting for annotated pod running @ 11/18/23 13:10:21.907
  STEP: deleting the pod gracefully @ 11/18/23 13:10:21.91
  Nov 18 13:10:21.910: INFO: Deleting pod "var-expansion-8698485b-6783-4936-97b1-d36e83a11293" in namespace "var-expansion-2480"
  Nov 18 13:10:21.919: INFO: Wait up to 5m0s for pod "var-expansion-8698485b-6783-4936-97b1-d36e83a11293" to be fully deleted
  E1118 13:10:22.894899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:23.895209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:24.895924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:25.896063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:26.897124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:27.897722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:28.897960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:29.898163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:30.898545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:31.898795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:32.898836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:33.899051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:34.900045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:35.900232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:36.900640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:37.901055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:38.901851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:39.902035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:40.902983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:41.903258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:42.904173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:43.904306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:44.905194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:45.906106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:46.906232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:47.906680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:48.907590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:49.907733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:50.907848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:51.908094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:52.908152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:53.908296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:10:54.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2480" for this suite. @ 11/18/23 13:10:54.004
• [34.829 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 11/18/23 13:10:54.012
  Nov 18 13:10:54.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename disruption @ 11/18/23 13:10:54.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:10:54.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:10:54.028
  STEP: creating the pdb @ 11/18/23 13:10:54.031
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:10:54.036
  E1118 13:10:54.909034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:55.909239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 11/18/23 13:10:56.045
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:10:56.055
  E1118 13:10:56.909606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:57.910191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 11/18/23 13:10:58.064
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:10:58.073
  E1118 13:10:58.911278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:10:59.912394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 11/18/23 13:11:00.087
  Nov 18 13:11:00.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2415" for this suite. @ 11/18/23 13:11:00.095
• [6.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 11/18/23 13:11:00.102
  Nov 18 13:11:00.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 13:11:00.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:00.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:00.121
  STEP: creating a ServiceAccount @ 11/18/23 13:11:00.124
  STEP: watching for the ServiceAccount to be added @ 11/18/23 13:11:00.135
  STEP: patching the ServiceAccount @ 11/18/23 13:11:00.138
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/18/23 13:11:00.143
  STEP: deleting the ServiceAccount @ 11/18/23 13:11:00.149
  Nov 18 13:11:00.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8143" for this suite. @ 11/18/23 13:11:00.169
• [0.074 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 11/18/23 13:11:00.176
  Nov 18 13:11:00.176: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename runtimeclass @ 11/18/23 13:11:00.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:00.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:00.194
  Nov 18 13:11:00.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8823" for this suite. @ 11/18/23 13:11:00.229
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/18/23 13:11:00.238
  Nov 18 13:11:00.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 13:11:00.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:00.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:00.258
  Nov 18 13:11:00.262: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Nov 18 13:11:00.273: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1118 13:11:00.913138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:01.913332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:02.914382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:03.914590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:04.914810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:11:05.278: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/18/23 13:11:05.278
  Nov 18 13:11:05.278: INFO: Creating deployment "test-rolling-update-deployment"
  Nov 18 13:11:05.287: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Nov 18 13:11:05.296: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1118 13:11:05.915275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:06.915638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:11:07.307: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Nov 18 13:11:07.310: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Nov 18 13:11:07.321: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b4103e0-6759-4961-b0a9-1e85829758f1",
      ResourceVersion: (string) (len=5) "21397",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 13:11:07.326: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "989527c8-1687-4985-9bfe-d1c1451a67db",
      ResourceVersion: (string) (len=5) "21387",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5b4103e0-6759-4961-b0a9-1e85829758f1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 62 34 31 30 33  65 30 2d 36 37 35 39 2d  |\"5b4103e0-6759-|
              00000120  34 39 36 31 2d 62 30 61  39 2d 31 65 38 35 38 32  |4961-b0a9-1e8582|
              00000130  39 37 35 38 66 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9758f1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 13:11:07.327: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Nov 18 13:11:07.327: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca08246c-1f6c-4b57-956a-f62883bc7cf3",
      ResourceVersion: (string) (len=5) "21396",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909860,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5b4103e0-6759-4961-b0a9-1e85829758f1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909860,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 62 34 31 30 33 65  |"uid\":\"5b4103e|
              000000b0  30 2d 36 37 35 39 2d 34  39 36 31 2d 62 30 61 39  |0-6759-4961-b0a9|
              000000c0  2d 31 65 38 35 38 32 39  37 35 38 66 31 5c 22 7d  |-1e85829758f1\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 13:11:07.332: INFO: Pod "test-rolling-update-deployment-7f5c55c64-dj7jj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-dj7jj",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-9642",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d174de31-ad35-4db1-a3b4-8ac0214c051c",
      ResourceVersion: (string) (len=5) "21386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "989527c8-1687-4985-9bfe-d1c1451a67db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 38  39 35 32 37 63 38 2d 31  |d\":\"989527c8-1|
              00000090  36 38 37 2d 34 39 38 35  2d 39 62 66 65 2d 64 31  |687-4985-9bfe-d1|
              000000a0  63 31 34 35 31 61 36 37  64 62 5c 22 7d 22 3a 7b  |c1451a67db\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 37 38 5c 22  |192.168.171.78\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8mv94",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8mv94",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835909865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835909865,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835909866,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://7202a9371220979be88716c5011efab2949e623e1daef66ffc20f961e6b75edb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 13:11:07.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9642" for this suite. @ 11/18/23 13:11:07.337
• [7.107 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 11/18/23 13:11:07.345
  Nov 18 13:11:07.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:11:07.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:07.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:07.363
  STEP: Setting up server cert @ 11/18/23 13:11:07.39
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:11:07.64
  STEP: Deploying the webhook pod @ 11/18/23 13:11:07.649
  STEP: Wait for the deployment to be ready @ 11/18/23 13:11:07.661
  Nov 18 13:11:07.668: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1118 13:11:07.915687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:08.915881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:11:09.681
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:11:09.692
  E1118 13:11:09.916992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:11:10.693: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 18 13:11:10.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:11:10.917703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/18/23 13:11:11.216
  STEP: Creating a custom resource that should be denied by the webhook @ 11/18/23 13:11:11.231
  E1118 13:11:11.918415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:12.918589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/18/23 13:11:13.252
  STEP: Updating the custom resource with disallowed data should be denied @ 11/18/23 13:11:13.26
  STEP: Deleting the custom resource should be denied @ 11/18/23 13:11:13.27
  STEP: Remove the offending key and value from the custom resource data @ 11/18/23 13:11:13.278
  STEP: Deleting the updated custom resource should be successful @ 11/18/23 13:11:13.292
  Nov 18 13:11:13.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6242" for this suite. @ 11/18/23 13:11:13.876
  STEP: Destroying namespace "webhook-markers-7647" for this suite. @ 11/18/23 13:11:13.884
• [6.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/18/23 13:11:13.894
  Nov 18 13:11:13.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/18/23 13:11:13.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:13.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:13.914
  E1118 13:11:13.919500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a target pod @ 11/18/23 13:11:13.919
  E1118 13:11:14.920221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:15.920422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/18/23 13:11:15.943
  E1118 13:11:16.921178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:17.921754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/18/23 13:11:17.964
  Nov 18 13:11:17.964: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-782 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:11:17.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:11:17.964: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:11:17.964: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-782/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov 18 13:11:18.051: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/18/23 13:11:18.069
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/18/23 13:11:18.072
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/18/23 13:11:18.085
  Nov 18 13:11:18.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-782" for this suite. @ 11/18/23 13:11:18.095
• [4.209 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 11/18/23 13:11:18.104
  Nov 18 13:11:18.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 13:11:18.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:18.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:18.12
  E1118 13:11:18.922737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:19.922882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:20.923024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:21.923310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:22.924090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:23.925175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:24.926164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:25.926383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:26.927458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:27.928044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:28.928077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:29.929166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:30.929182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:31.930132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:32.931022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:33.931238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:34.931999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:35.932230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:36.932600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:37.932946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:38.932993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:39.933168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:11:40.193: INFO: Container started at 2023-11-18 13:11:18 +0000 UTC, pod became ready at 2023-11-18 13:11:38 +0000 UTC
  Nov 18 13:11:40.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6235" for this suite. @ 11/18/23 13:11:40.198
• [22.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 11/18/23 13:11:40.204
  Nov 18 13:11:40.204: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/18/23 13:11:40.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:40.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:40.221
  STEP: create the container to handle the HTTPGet hook request. @ 11/18/23 13:11:40.228
  E1118 13:11:40.933648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:41.933899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/18/23 13:11:42.254
  E1118 13:11:42.934348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:43.934547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/18/23 13:11:44.273
  E1118 13:11:44.934612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:45.934837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/18/23 13:11:46.297
  Nov 18 13:11:46.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7880" for this suite. @ 11/18/23 13:11:46.32
• [6.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 11/18/23 13:11:46.329
  Nov 18 13:11:46.329: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 13:11:46.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:46.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:46.345
  STEP: Creating a test headless service @ 11/18/23 13:11:46.349
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_udp@PTR;check="$$(dig +tcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_tcp@PTR;sleep 1; done
   @ 11/18/23 13:11:46.368
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_udp@PTR;check="$$(dig +tcp +noall +answer +search 188.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.188_tcp@PTR;sleep 1; done
   @ 11/18/23 13:11:46.368
  STEP: creating a pod to probe DNS @ 11/18/23 13:11:46.368
  STEP: submitting the pod to kubernetes @ 11/18/23 13:11:46.368
  E1118 13:11:46.935347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:47.935880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:11:48.39
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:11:48.394
  Nov 18 13:11:48.398: INFO: Unable to read wheezy_udp@dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.402: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.406: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.409: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.430: INFO: Unable to read jessie_udp@dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.433: INFO: Unable to read jessie_tcp@dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.438: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.441: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local from pod dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4: the server could not find the requested resource (get pods dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4)
  Nov 18 13:11:48.455: INFO: Lookups using dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4 failed for: [wheezy_udp@dns-test-service.dns-2450.svc.cluster.local wheezy_tcp@dns-test-service.dns-2450.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local jessie_udp@dns-test-service.dns-2450.svc.cluster.local jessie_tcp@dns-test-service.dns-2450.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2450.svc.cluster.local]

  Nov 18 13:11:48.463: INFO: Pod client logs for webserver: 
  Nov 18 13:11:48.470: INFO: Pod client logs for querier: 
  Nov 18 13:11:48.475: INFO: Pod client logs for jessie-querier: 
  E1118 13:11:48.936662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:49.936817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:50.937183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:51.937277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:52.937600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:11:53.547: INFO: DNS probes using dns-2450/dns-test-c830842c-a33f-417f-a4ac-0c7de680f2e4 succeeded

  Nov 18 13:11:53.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:11:53.551
  STEP: deleting the test service @ 11/18/23 13:11:53.566
  STEP: deleting the test headless service @ 11/18/23 13:11:53.589
  STEP: Destroying namespace "dns-2450" for this suite. @ 11/18/23 13:11:53.603
• [7.286 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 11/18/23 13:11:53.616
  Nov 18 13:11:53.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:11:53.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:11:53.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:11:53.636
  STEP: Setting up server cert @ 11/18/23 13:11:53.662
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:11:53.891
  STEP: Deploying the webhook pod @ 11/18/23 13:11:53.9
  STEP: Wait for the deployment to be ready @ 11/18/23 13:11:53.91
  Nov 18 13:11:53.921: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:11:53.937959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:54.938794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:11:55.934
  E1118 13:11:55.939153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:11:55.947
  E1118 13:11:56.940158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:11:56.947: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 18 13:11:56.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3967-crds.webhook.example.com via the AdmissionRegistration API @ 11/18/23 13:11:57.467
  STEP: Creating a custom resource while v1 is storage version @ 11/18/23 13:11:57.481
  E1118 13:11:57.940395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:11:58.941250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/18/23 13:11:59.514
  STEP: Patching the custom resource while v2 is storage version @ 11/18/23 13:11:59.53
  Nov 18 13:11:59.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1118 13:11:59.941666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3595" for this suite. @ 11/18/23 13:12:00.134
  STEP: Destroying namespace "webhook-markers-4915" for this suite. @ 11/18/23 13:12:00.14
• [6.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 11/18/23 13:12:00.149
  Nov 18 13:12:00.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:12:00.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:00.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:12:00.164
  STEP: Creating configMap configmap-8223/configmap-test-68f585dd-1dc8-4f74-9d97-4b28a9425445 @ 11/18/23 13:12:00.168
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:12:00.174
  E1118 13:12:00.941980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:01.942773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:02.943571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:03.943754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:12:04.196
  Nov 18 13:12:04.199: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-c0267e72-7443-41ac-a462-cceeaa72d745 container env-test: <nil>
  STEP: delete the pod @ 11/18/23 13:12:04.208
  Nov 18 13:12:04.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8223" for this suite. @ 11/18/23 13:12:04.228
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/18/23 13:12:04.235
  Nov 18 13:12:04.235: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 13:12:04.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:04.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:12:04.253
  STEP: Creating secret with name secret-test-cfa972f0-8d3e-4056-bdd0-0b87fae76018 @ 11/18/23 13:12:04.256
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:12:04.262
  E1118 13:12:04.944052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:05.945181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:06.946061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:07.946424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:12:08.285
  Nov 18 13:12:08.288: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-secrets-ba038066-8d09-48d7-9257-1eae5e8e89d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:12:08.297
  Nov 18 13:12:08.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1765" for this suite. @ 11/18/23 13:12:08.317
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 11/18/23 13:12:08.325
  Nov 18 13:12:08.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename security-context-test @ 11/18/23 13:12:08.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:08.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:12:08.343
  E1118 13:12:08.946992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:09.947191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:10.947262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:11.947478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:12.374: INFO: Got logs for pod "busybox-privileged-false-bb99ab30-f2d1-4f2b-bfe2-dda0bb67c372": "ip: RTNETLINK answers: Operation not permitted\n"
  Nov 18 13:12:12.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1037" for this suite. @ 11/18/23 13:12:12.378
• [4.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 11/18/23 13:12:12.386
  Nov 18 13:12:12.386: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:12:12.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:12.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:12:12.4
  STEP: create deployment with httpd image @ 11/18/23 13:12:12.404
  Nov 18 13:12:12.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-1605 create -f -'
  Nov 18 13:12:12.562: INFO: stderr: ""
  Nov 18 13:12:12.562: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/18/23 13:12:12.562
  Nov 18 13:12:12.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-1605 diff -f -'
  Nov 18 13:12:12.691: INFO: rc: 1
  Nov 18 13:12:12.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-1605 delete -f -'
  Nov 18 13:12:12.750: INFO: stderr: ""
  Nov 18 13:12:12.750: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Nov 18 13:12:12.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1605" for this suite. @ 11/18/23 13:12:12.754
• [0.376 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 11/18/23 13:12:12.762
  Nov 18 13:12:12.762: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename namespaces @ 11/18/23 13:12:12.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:12.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:12:12.778
  STEP: Creating a test namespace @ 11/18/23 13:12:12.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:12.795
  STEP: Creating a pod in the namespace @ 11/18/23 13:12:12.798
  STEP: Waiting for the pod to have running status @ 11/18/23 13:12:12.808
  E1118 13:12:12.948348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:13.948486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 11/18/23 13:12:14.816
  STEP: Waiting for the namespace to be removed. @ 11/18/23 13:12:14.823
  E1118 13:12:14.948544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:15.949441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:16.950429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:17.951361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:18.952022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:19.952744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:20.953035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:21.953992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:22.954847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:23.955714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:24.956151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/18/23 13:12:25.827
  STEP: Verifying there are no pods in the namespace @ 11/18/23 13:12:25.842
  Nov 18 13:12:25.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3055" for this suite. @ 11/18/23 13:12:25.849
  STEP: Destroying namespace "nsdeletetest-694" for this suite. @ 11/18/23 13:12:25.855
  Nov 18 13:12:25.860: INFO: Namespace nsdeletetest-694 was already deleted
  STEP: Destroying namespace "nsdeletetest-569" for this suite. @ 11/18/23 13:12:25.86
• [13.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 11/18/23 13:12:25.866
  Nov 18 13:12:25.866: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 13:12:25.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:12:25.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:12:25.884
  STEP: Creating service test in namespace statefulset-3740 @ 11/18/23 13:12:25.887
  STEP: Creating stateful set ss in namespace statefulset-3740 @ 11/18/23 13:12:25.893
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3740 @ 11/18/23 13:12:25.9
  Nov 18 13:12:25.906: INFO: Found 0 stateful pods, waiting for 1
  E1118 13:12:25.956700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:26.957735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:27.958149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:28.958294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:29.958500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:30.958703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:31.958852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:32.959143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:33.959344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:34.959660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:35.911: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/18/23 13:12:35.911
  Nov 18 13:12:35.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1118 13:12:35.960088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:36.070: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:12:36.070: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:12:36.070: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:12:36.074: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1118 13:12:36.960282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:37.960838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:38.961121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:39.961212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:40.961366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:41.961537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:42.961653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:43.961850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:44.962031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:45.962209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:46.080: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:12:46.080: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 18 13:12:46.101: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Nov 18 13:12:46.101: INFO: ss-0  ip-172-31-29-39  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:25 +0000 UTC  }]
  Nov 18 13:12:46.101: INFO: 
  Nov 18 13:12:46.101: INFO: StatefulSet ss has not reached scale 3, at 1
  E1118 13:12:46.962457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:47.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.9967074s
  E1118 13:12:47.963094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:48.114: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987988918s
  E1118 13:12:48.964144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:49.119: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984012203s
  E1118 13:12:49.964311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:50.123: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978839075s
  E1118 13:12:50.965316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:51.127: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974916441s
  E1118 13:12:51.966401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:52.131: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.97067693s
  E1118 13:12:52.967371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:53.137: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.966711774s
  E1118 13:12:53.968026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:54.140: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.961098428s
  E1118 13:12:54.968796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:12:55.146: INFO: Verifying statefulset ss doesn't scale past 3 for another 957.331186ms
  E1118 13:12:55.968872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3740 @ 11/18/23 13:12:56.147
  Nov 18 13:12:56.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 13:12:56.299: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 13:12:56.299: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:12:56.299: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:12:56.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 13:12:56.450: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov 18 13:12:56.451: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:12:56.451: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:12:56.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 13:12:56.589: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Nov 18 13:12:56.589: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:12:56.589: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:12:56.593: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1118 13:12:56.969474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:57.969917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:58.970381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:12:59.970464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:00.971139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:01.971228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:02.971360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:03.972220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:04.973168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:05.973289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:06.598: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 13:13:06.598: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 13:13:06.598: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/18/23 13:13:06.598
  Nov 18 13:13:06.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 13:13:06.745: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:13:06.745: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:13:06.745: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:13:06.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 13:13:06.897: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:13:06.897: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:13:06.897: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:13:06.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3740 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1118 13:13:06.974343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:07.055: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:13:07.055: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:13:07.055: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:13:07.055: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 18 13:13:07.059: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1118 13:13:07.974693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:08.974879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:09.974986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:10.975109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:11.975182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:12.975300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:13.975740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:14.975878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:15.976098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:16.977158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:17.067: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:13:17.067: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:13:17.067: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:13:17.083: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Nov 18 13:13:17.083: INFO: ss-0  ip-172-31-29-39   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:25 +0000 UTC  }]
  Nov 18 13:13:17.083: INFO: ss-1  ip-172-31-39-133  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:46 +0000 UTC  }]
  Nov 18 13:13:17.083: INFO: ss-2  ip-172-31-84-152  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:46 +0000 UTC  }]
  Nov 18 13:13:17.083: INFO: 
  Nov 18 13:13:17.083: INFO: StatefulSet ss has not reached scale 0, at 3
  E1118 13:13:17.977808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:18.087: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Nov 18 13:13:18.087: INFO: ss-1  ip-172-31-39-133  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:46 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:13:07 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-11-18 13:12:46 +0000 UTC  }]
  Nov 18 13:13:18.087: INFO: 
  Nov 18 13:13:18.087: INFO: StatefulSet ss has not reached scale 0, at 1
  E1118 13:13:18.978673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:19.091: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991011652s
  E1118 13:13:19.979237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:20.096: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.987517482s
  E1118 13:13:20.979380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:21.101: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982274379s
  E1118 13:13:21.979493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:22.106: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97612037s
  E1118 13:13:22.979500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:23.110: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.972169636s
  E1118 13:13:23.980123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:24.115: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.968590446s
  E1118 13:13:24.981186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:25.120: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962444419s
  E1118 13:13:25.981300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:26.125: INFO: Verifying statefulset ss doesn't scale past 0 for another 958.378111ms
  E1118 13:13:26.981569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3740 @ 11/18/23 13:13:27.125
  Nov 18 13:13:27.129: INFO: Scaling statefulset ss to 0
  Nov 18 13:13:27.141: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 13:13:27.144: INFO: Deleting all statefulset in ns statefulset-3740
  Nov 18 13:13:27.148: INFO: Scaling statefulset ss to 0
  Nov 18 13:13:27.159: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 13:13:27.163: INFO: Deleting statefulset ss
  Nov 18 13:13:27.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3740" for this suite. @ 11/18/23 13:13:27.181
• [61.324 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 11/18/23 13:13:27.19
  Nov 18 13:13:27.190: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:13:27.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:27.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:27.207
  STEP: creating a collection of services @ 11/18/23 13:13:27.211
  Nov 18 13:13:27.211: INFO: Creating e2e-svc-a-8whj5
  Nov 18 13:13:27.219: INFO: Creating e2e-svc-b-m726l
  Nov 18 13:13:27.229: INFO: Creating e2e-svc-c-c8pb2
  STEP: deleting service collection @ 11/18/23 13:13:27.246
  Nov 18 13:13:27.277: INFO: Collection of services has been deleted
  Nov 18 13:13:27.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8672" for this suite. @ 11/18/23 13:13:27.281
• [0.097 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 11/18/23 13:13:27.287
  Nov 18 13:13:27.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:13:27.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:27.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:27.303
  STEP: creating service in namespace services-4972 @ 11/18/23 13:13:27.307
  STEP: creating service affinity-nodeport in namespace services-4972 @ 11/18/23 13:13:27.307
  STEP: creating replication controller affinity-nodeport in namespace services-4972 @ 11/18/23 13:13:27.323
  I1118 13:13:27.329968      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4972, replica count: 3
  E1118 13:13:27.981858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:28.981940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:29.982015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:13:30.381628      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:13:30.392: INFO: Creating new exec pod
  E1118 13:13:30.982348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:31.982679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:32.982997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:33.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-4972 exec execpod-affinityj9n2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Nov 18 13:13:33.557: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Nov 18 13:13:33.557: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:13:33.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-4972 exec execpod-affinityj9n2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.107 80'
  Nov 18 13:13:33.708: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.107 80\nConnection to 10.152.183.107 80 port [tcp/http] succeeded!\n"
  Nov 18 13:13:33.708: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:13:33.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-4972 exec execpod-affinityj9n2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.39 31386'
  Nov 18 13:13:33.852: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.39 31386\nConnection to 172.31.29.39 31386 port [tcp/*] succeeded!\n"
  Nov 18 13:13:33.852: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:13:33.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-4972 exec execpod-affinityj9n2r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.152 31386'
  E1118 13:13:33.983709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:34.000: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.84.152 31386\nConnection to 172.31.84.152 31386 port [tcp/*] succeeded!\n"
  Nov 18 13:13:34.000: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:13:34.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-4972 exec execpod-affinityj9n2r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.29.39:31386/ ; done'
  Nov 18 13:13:34.211: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.29.39:31386/\n"
  Nov 18 13:13:34.211: INFO: stdout: "\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp\naffinity-nodeport-2pvbp"
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Received response from host: affinity-nodeport-2pvbp
  Nov 18 13:13:34.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 13:13:34.215: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4972, will wait for the garbage collector to delete the pods @ 11/18/23 13:13:34.229
  Nov 18 13:13:34.292: INFO: Deleting ReplicationController affinity-nodeport took: 7.912206ms
  Nov 18 13:13:34.392: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.752281ms
  E1118 13:13:34.984367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:35.985099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:36.986179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4972" for this suite. @ 11/18/23 13:13:37.617
• [10.336 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 11/18/23 13:13:37.624
  Nov 18 13:13:37.624: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 13:13:37.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:37.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:37.642
  STEP: Counting existing ResourceQuota @ 11/18/23 13:13:37.646
  E1118 13:13:37.986504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:38.987433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:39.988030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:40.988495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:41.989458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/18/23 13:13:42.649
  STEP: Ensuring resource quota status is calculated @ 11/18/23 13:13:42.657
  E1118 13:13:42.990335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:43.990745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 11/18/23 13:13:44.662
  STEP: Ensuring resource quota status captures replication controller creation @ 11/18/23 13:13:44.675
  E1118 13:13:44.991542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:45.991742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 11/18/23 13:13:46.68
  STEP: Ensuring resource quota status released usage @ 11/18/23 13:13:46.687
  E1118 13:13:46.991996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:47.992733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:48.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7838" for this suite. @ 11/18/23 13:13:48.695
• [11.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/18/23 13:13:48.701
  Nov 18 13:13:48.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-pred @ 11/18/23 13:13:48.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:48.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:48.721
  Nov 18 13:13:48.724: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 18 13:13:48.732: INFO: Waiting for terminating namespaces to be deleted...
  Nov 18 13:13:48.735: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-29-39 before test
  Nov 18 13:13:48.740: INFO: nginx-ingress-controller-kubernetes-worker-qbglx from ingress-nginx-kubernetes-worker started at 2023-11-18 12:22:56 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.740: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 13:13:48.740: INFO: calico-node-jhvhh from kube-system started at 2023-11-18 12:03:19 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.740: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 13:13:48.740: INFO: sonobuoy from sonobuoy started at 2023-11-18 12:07:39 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.740: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 18 13:13:48.740: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-82h4q from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:13:48.740: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:13:48.740: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 13:13:48.740: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-39-133 before test
  Nov 18 13:13:48.756: INFO: nginx-ingress-controller-kubernetes-worker-shggc from ingress-nginx-kubernetes-worker started at 2023-11-18 12:06:20 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.756: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 13:13:48.756: INFO: calico-node-tkwzz from kube-system started at 2023-11-18 12:05:20 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.756: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 13:13:48.756: INFO: sonobuoy-e2e-job-f65b309e6af444df from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:13:48.756: INFO: 	Container e2e ready: true, restart count 0
  Nov 18 13:13:48.756: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:13:48.756: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-rfbpr from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:13:48.756: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:13:48.756: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 13:13:48.756: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-152 before test
  Nov 18 13:13:48.762: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kqk4n from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: nginx-ingress-controller-kubernetes-worker-wgb9l from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: calico-kube-controllers-7969dc6c97-rm6qf from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: calico-node-8czmk from kube-system started at 2023-11-18 11:57:04 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: coredns-59cfb5bf46-nzp45 from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container coredns ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: kube-state-metrics-78c475f58b-cv4rn from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: metrics-server-v0.6.3-69d7fbfdf8-ppqvb from kube-system started at 2023-11-18 11:57:27 +0000 UTC (2 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: dashboard-metrics-scraper-5dd7cb5fc-z67sf from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: kubernetes-dashboard-7b899cb9d9-9kpt7 from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-kntjb from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:13:48.762: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:13:48.762: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/18/23 13:13:48.762
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1798b9df787e138f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 11/18/23 13:13:48.791
  E1118 13:13:48.992876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:13:49.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2503" for this suite. @ 11/18/23 13:13:49.791
• [1.097 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 11/18/23 13:13:49.799
  Nov 18 13:13:49.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:13:49.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:49.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:49.817
  STEP: Creating a pod to test downward api env vars @ 11/18/23 13:13:49.82
  E1118 13:13:49.993435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:50.993640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:51.994254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:52.995292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:13:53.844
  Nov 18 13:13:53.848: INFO: Trying to get logs from node ip-172-31-29-39 pod downward-api-a96f4253-13f6-4064-beee-ac5a2b7cf159 container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 13:13:53.864
  Nov 18 13:13:53.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4234" for this suite. @ 11/18/23 13:13:53.884
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 11/18/23 13:13:53.892
  Nov 18 13:13:53.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:13:53.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:53.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:53.908
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/18/23 13:13:53.912
  E1118 13:13:53.995894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:54.996231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:55.996987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:56.997233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:13:57.942
  Nov 18 13:13:57.945: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-7e1a62b7-a94f-46ca-99cd-3ea6b255f861 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:13:57.954
  Nov 18 13:13:57.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3436" for this suite. @ 11/18/23 13:13:57.974
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 11/18/23 13:13:57.982
  Nov 18 13:13:57.982: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 13:13:57.983
  E1118 13:13:57.997348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:13:57.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:13:58.001
  Nov 18 13:13:58.004: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:13:58.997671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:13:59.997986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:00.998560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:14:01.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5637" for this suite. @ 11/18/23 13:14:01.091
• [3.118 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/18/23 13:14:01.1
  Nov 18 13:14:01.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubelet-test @ 11/18/23 13:14:01.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:01.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:01.118
  Nov 18 13:14:01.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3649" for this suite. @ 11/18/23 13:14:01.151
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 11/18/23 13:14:01.16
  Nov 18 13:14:01.160: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/18/23 13:14:01.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:01.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:01.176
  Nov 18 13:14:01.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:14:01.998750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:02.999096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:03.999277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:14:04.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3706" for this suite. @ 11/18/23 13:14:04.268
• [3.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 11/18/23 13:14:04.277
  Nov 18 13:14:04.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:14:04.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:04.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:04.293
  STEP: creating a Service @ 11/18/23 13:14:04.3
  STEP: watching for the Service to be added @ 11/18/23 13:14:04.309
  Nov 18 13:14:04.310: INFO: Found Service test-service-t9w9r in namespace services-2536 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Nov 18 13:14:04.310: INFO: Service test-service-t9w9r created
  STEP: Getting /status @ 11/18/23 13:14:04.31
  Nov 18 13:14:04.314: INFO: Service test-service-t9w9r has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/18/23 13:14:04.314
  STEP: watching for the Service to be patched @ 11/18/23 13:14:04.322
  Nov 18 13:14:04.324: INFO: observed Service test-service-t9w9r in namespace services-2536 with annotations: map[] & LoadBalancer: {[]}
  Nov 18 13:14:04.324: INFO: Found Service test-service-t9w9r in namespace services-2536 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Nov 18 13:14:04.324: INFO: Service test-service-t9w9r has service status patched
  STEP: updating the ServiceStatus @ 11/18/23 13:14:04.324
  Nov 18 13:14:04.333: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/18/23 13:14:04.333
  Nov 18 13:14:04.334: INFO: Observed Service test-service-t9w9r in namespace services-2536 with annotations: map[] & Conditions: {[]}
  Nov 18 13:14:04.334: INFO: Observed event: &Service{ObjectMeta:{test-service-t9w9r  services-2536  f436f06e-5b49-42d4-904b-fa4b8b5f4bc0 22924 0 2023-11-18 13:14:04 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-11-18 13:14:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-11-18 13:14:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.81,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.81],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Nov 18 13:14:04.335: INFO: Found Service test-service-t9w9r in namespace services-2536 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 18 13:14:04.335: INFO: Service test-service-t9w9r has service status updated
  STEP: patching the service @ 11/18/23 13:14:04.335
  STEP: watching for the Service to be patched @ 11/18/23 13:14:04.347
  Nov 18 13:14:04.349: INFO: observed Service test-service-t9w9r in namespace services-2536 with labels: map[test-service-static:true]
  Nov 18 13:14:04.349: INFO: observed Service test-service-t9w9r in namespace services-2536 with labels: map[test-service-static:true]
  Nov 18 13:14:04.349: INFO: observed Service test-service-t9w9r in namespace services-2536 with labels: map[test-service-static:true]
  Nov 18 13:14:04.349: INFO: Found Service test-service-t9w9r in namespace services-2536 with labels: map[test-service:patched test-service-static:true]
  Nov 18 13:14:04.349: INFO: Service test-service-t9w9r patched
  STEP: deleting the service @ 11/18/23 13:14:04.349
  STEP: watching for the Service to be deleted @ 11/18/23 13:14:04.363
  Nov 18 13:14:04.364: INFO: Observed event: ADDED
  Nov 18 13:14:04.365: INFO: Observed event: MODIFIED
  Nov 18 13:14:04.365: INFO: Observed event: MODIFIED
  Nov 18 13:14:04.365: INFO: Observed event: MODIFIED
  Nov 18 13:14:04.365: INFO: Found Service test-service-t9w9r in namespace services-2536 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Nov 18 13:14:04.365: INFO: Service test-service-t9w9r deleted
  Nov 18 13:14:04.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2536" for this suite. @ 11/18/23 13:14:04.369
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 11/18/23 13:14:04.377
  Nov 18 13:14:04.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 13:14:04.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:04.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:04.394
  STEP: Creating simple DaemonSet "daemon-set" @ 11/18/23 13:14:04.418
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/18/23 13:14:04.425
  Nov 18 13:14:04.434: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:14:04.434: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:14:04.439: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:14:04.439: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:14:04.999784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:14:05.445: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:14:05.445: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:14:05.449: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 13:14:05.449: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:14:06.000529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:14:06.443: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:14:06.443: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:14:06.448: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:14:06.448: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/18/23 13:14:06.452
  STEP: DeleteCollection of the DaemonSets @ 11/18/23 13:14:06.456
  STEP: Verify that ReplicaSets have been deleted @ 11/18/23 13:14:06.465
  Nov 18 13:14:06.479: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22996"},"items":null}

  Nov 18 13:14:06.483: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22999"},"items":[{"metadata":{"name":"daemon-set-8mjcv","generateName":"daemon-set-","namespace":"daemonsets-9689","uid":"461b60cd-bbae-4320-b239-0373be9cac15","resourceVersion":"22996","creationTimestamp":"2023-11-18T13:14:04Z","deletionTimestamp":"2023-11-18T13:14:36Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0fdb7889-fd30-43ae-a207-c617190420e9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-18T13:14:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fdb7889-fd30-43ae-a207-c617190420e9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-18T13:14:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.250.242\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-pd585","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-pd585","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-29-39","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-29-39"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:06Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:06Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:04Z"}],"hostIP":"172.31.29.39","podIP":"192.168.250.242","podIPs":[{"ip":"192.168.250.242"}],"startTime":"2023-11-18T13:14:04Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-18T13:14:05Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://999663809eaaa913066f7114d916fb8fa01489e64c7725924892d57d0872f329","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-lxcch","generateName":"daemon-set-","namespace":"daemonsets-9689","uid":"705d494b-497f-4fff-9a57-22f572d0cfde","resourceVersion":"22998","creationTimestamp":"2023-11-18T13:14:04Z","deletionTimestamp":"2023-11-18T13:14:36Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0fdb7889-fd30-43ae-a207-c617190420e9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-18T13:14:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fdb7889-fd30-43ae-a207-c617190420e9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-18T13:14:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.171.83\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xjkgv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xjkgv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-39-133","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-39-133"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:05Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:05Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:04Z"}],"hostIP":"172.31.39.133","podIP":"192.168.171.83","podIPs":[{"ip":"192.168.171.83"}],"startTime":"2023-11-18T13:14:04Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-18T13:14:05Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0c0c63735b9c6d32d1c71ce6c9b2ae143a439bacf67bded547dd895ecaf5d13c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-skgqg","generateName":"daemon-set-","namespace":"daemonsets-9689","uid":"00300dc7-9a69-4d40-98a0-02e407c671e1","resourceVersion":"22999","creationTimestamp":"2023-11-18T13:14:04Z","deletionTimestamp":"2023-11-18T13:14:36Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0fdb7889-fd30-43ae-a207-c617190420e9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-11-18T13:14:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fdb7889-fd30-43ae-a207-c617190420e9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-11-18T13:14:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.60.97\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vq5sn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vq5sn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-84-152","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-84-152"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:05Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:05Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-11-18T13:14:04Z"}],"hostIP":"172.31.84.152","podIP":"192.168.60.97","podIPs":[{"ip":"192.168.60.97"}],"startTime":"2023-11-18T13:14:04Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-11-18T13:14:05Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a3d6e106653c4d7d09a194c4a343dac8329d96f84b55b5f913758e4f9271afa1","started":true}],"qosClass":"BestEffort"}}]}

  Nov 18 13:14:06.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9689" for this suite. @ 11/18/23 13:14:06.503
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/18/23 13:14:06.511
  Nov 18 13:14:06.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename proxy @ 11/18/23 13:14:06.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:06.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:06.528
  STEP: starting an echo server on multiple ports @ 11/18/23 13:14:06.541
  STEP: creating replication controller proxy-service-9mgds in namespace proxy-4296 @ 11/18/23 13:14:06.541
  I1118 13:14:06.549769      22 runners.go:197] Created replication controller with name: proxy-service-9mgds, namespace: proxy-4296, replica count: 1
  E1118 13:14:07.001184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:14:07.601365      22 runners.go:197] proxy-service-9mgds Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1118 13:14:08.001969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:14:08.601534      22 runners.go:197] proxy-service-9mgds Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:14:08.606: INFO: setup took 2.07484983s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/18/23 13:14:08.606
  Nov 18 13:14:08.610: INFO: (0) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.166783ms)
  Nov 18 13:14:08.611: INFO: (0) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.936206ms)
  Nov 18 13:14:08.614: INFO: (0) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 8.232485ms)
  Nov 18 13:14:08.614: INFO: (0) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 8.218464ms)
  Nov 18 13:14:08.615: INFO: (0) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 8.927416ms)
  Nov 18 13:14:08.615: INFO: (0) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 9.07972ms)
  Nov 18 13:14:08.615: INFO: (0) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 9.11683ms)
  Nov 18 13:14:08.615: INFO: (0) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 9.383934ms)
  Nov 18 13:14:08.616: INFO: (0) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 9.69783ms)
  Nov 18 13:14:08.616: INFO: (0) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 9.913444ms)
  Nov 18 13:14:08.616: INFO: (0) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 9.746361ms)
  Nov 18 13:14:08.616: INFO: (0) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 9.851092ms)
  Nov 18 13:14:08.616: INFO: (0) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 9.880564ms)
  Nov 18 13:14:08.617: INFO: (0) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 11.185955ms)
  Nov 18 13:14:08.618: INFO: (0) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 11.741536ms)
  Nov 18 13:14:08.618: INFO: (0) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 12.080601ms)
  Nov 18 13:14:08.622: INFO: (1) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 3.890828ms)
  Nov 18 13:14:08.622: INFO: (1) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 3.923758ms)
  Nov 18 13:14:08.623: INFO: (1) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.648772ms)
  Nov 18 13:14:08.623: INFO: (1) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.11078ms)
  Nov 18 13:14:08.623: INFO: (1) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 5.170071ms)
  Nov 18 13:14:08.623: INFO: (1) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 5.271412ms)
  Nov 18 13:14:08.623: INFO: (1) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 5.13476ms)
  Nov 18 13:14:08.623: INFO: (1) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 5.17367ms)
  Nov 18 13:14:08.624: INFO: (1) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 5.866933ms)
  Nov 18 13:14:08.625: INFO: (1) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 6.357842ms)
  Nov 18 13:14:08.625: INFO: (1) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 6.445893ms)
  Nov 18 13:14:08.625: INFO: (1) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.447833ms)
  Nov 18 13:14:08.625: INFO: (1) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 6.83554ms)
  Nov 18 13:14:08.626: INFO: (1) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 7.631144ms)
  Nov 18 13:14:08.626: INFO: (1) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 7.593653ms)
  Nov 18 13:14:08.627: INFO: (1) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 9.08888ms)
  Nov 18 13:14:08.637: INFO: (2) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 9.901164ms)
  Nov 18 13:14:08.639: INFO: (2) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 12.00931ms)
  Nov 18 13:14:08.641: INFO: (2) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 13.959345ms)
  Nov 18 13:14:08.641: INFO: (2) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 13.814312ms)
  Nov 18 13:14:08.643: INFO: (2) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 16.090213ms)
  Nov 18 13:14:08.646: INFO: (2) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 18.2546ms)
  Nov 18 13:14:08.646: INFO: (2) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 18.757779ms)
  Nov 18 13:14:08.646: INFO: (2) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 18.756489ms)
  Nov 18 13:14:08.646: INFO: (2) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 18.854741ms)
  Nov 18 13:14:08.646: INFO: (2) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 18.995134ms)
  Nov 18 13:14:08.648: INFO: (2) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 20.184995ms)
  Nov 18 13:14:08.648: INFO: (2) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 20.726403ms)
  Nov 18 13:14:08.649: INFO: (2) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 21.458087ms)
  Nov 18 13:14:08.650: INFO: (2) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 23.040634ms)
  Nov 18 13:14:08.651: INFO: (2) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 23.329399ms)
  Nov 18 13:14:08.652: INFO: (2) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 24.352417ms)
  Nov 18 13:14:08.664: INFO: (3) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 12.085992ms)
  Nov 18 13:14:08.665: INFO: (3) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 13.154171ms)
  Nov 18 13:14:08.666: INFO: (3) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 14.417983ms)
  Nov 18 13:14:08.666: INFO: (3) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 14.507585ms)
  Nov 18 13:14:08.669: INFO: (3) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 16.848275ms)
  Nov 18 13:14:08.669: INFO: (3) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 17.198372ms)
  Nov 18 13:14:08.669: INFO: (3) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 17.453486ms)
  Nov 18 13:14:08.669: INFO: (3) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 17.454126ms)
  Nov 18 13:14:08.669: INFO: (3) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 17.485386ms)
  Nov 18 13:14:08.672: INFO: (3) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 19.672876ms)
  Nov 18 13:14:08.673: INFO: (3) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 21.339595ms)
  Nov 18 13:14:08.673: INFO: (3) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 21.283554ms)
  Nov 18 13:14:08.675: INFO: (3) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 22.896902ms)
  Nov 18 13:14:08.676: INFO: (3) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 23.842089ms)
  Nov 18 13:14:08.676: INFO: (3) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 24.146364ms)
  Nov 18 13:14:08.676: INFO: (3) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 24.447419ms)
  Nov 18 13:14:08.685: INFO: (4) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 8.266775ms)
  Nov 18 13:14:08.685: INFO: (4) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 8.282086ms)
  Nov 18 13:14:08.685: INFO: (4) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 8.271565ms)
  Nov 18 13:14:08.685: INFO: (4) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 8.335196ms)
  Nov 18 13:14:08.685: INFO: (4) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 8.429968ms)
  Nov 18 13:14:08.685: INFO: (4) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 8.296705ms)
  Nov 18 13:14:08.686: INFO: (4) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 9.11768ms)
  Nov 18 13:14:08.686: INFO: (4) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 9.437895ms)
  Nov 18 13:14:08.686: INFO: (4) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 9.569308ms)
  Nov 18 13:14:08.686: INFO: (4) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 9.922054ms)
  Nov 18 13:14:08.687: INFO: (4) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 10.122278ms)
  Nov 18 13:14:08.687: INFO: (4) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 10.746239ms)
  Nov 18 13:14:08.688: INFO: (4) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 10.887151ms)
  Nov 18 13:14:08.688: INFO: (4) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 11.625454ms)
  Nov 18 13:14:08.688: INFO: (4) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 11.766996ms)
  Nov 18 13:14:08.689: INFO: (4) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 12.076881ms)
  Nov 18 13:14:08.694: INFO: (5) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 5.090929ms)
  Nov 18 13:14:08.694: INFO: (5) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 5.385714ms)
  Nov 18 13:14:08.694: INFO: (5) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 5.325393ms)
  Nov 18 13:14:08.694: INFO: (5) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 5.498816ms)
  Nov 18 13:14:08.695: INFO: (5) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 5.795382ms)
  Nov 18 13:14:08.695: INFO: (5) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 6.068546ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 6.792099ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 6.727118ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 7.269018ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 7.510302ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 7.298488ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 7.361369ms)
  Nov 18 13:14:08.696: INFO: (5) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 7.352869ms)
  Nov 18 13:14:08.697: INFO: (5) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 8.107932ms)
  Nov 18 13:14:08.697: INFO: (5) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 8.189573ms)
  Nov 18 13:14:08.697: INFO: (5) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 8.219424ms)
  Nov 18 13:14:08.702: INFO: (6) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.380707ms)
  Nov 18 13:14:08.702: INFO: (6) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.454588ms)
  Nov 18 13:14:08.702: INFO: (6) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.876176ms)
  Nov 18 13:14:08.702: INFO: (6) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 5.031628ms)
  Nov 18 13:14:08.702: INFO: (6) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 5.297473ms)
  Nov 18 13:14:08.703: INFO: (6) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 6.011895ms)
  Nov 18 13:14:08.703: INFO: (6) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 5.938114ms)
  Nov 18 13:14:08.704: INFO: (6) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 6.294051ms)
  Nov 18 13:14:08.704: INFO: (6) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 6.746938ms)
  Nov 18 13:14:08.704: INFO: (6) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 7.165825ms)
  Nov 18 13:14:08.704: INFO: (6) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 7.228837ms)
  Nov 18 13:14:08.704: INFO: (6) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 7.276268ms)
  Nov 18 13:14:08.705: INFO: (6) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 7.871038ms)
  Nov 18 13:14:08.705: INFO: (6) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.860788ms)
  Nov 18 13:14:08.705: INFO: (6) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 8.288005ms)
  Nov 18 13:14:08.707: INFO: (6) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 9.781031ms)
  Nov 18 13:14:08.711: INFO: (7) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 3.99354ms)
  Nov 18 13:14:08.711: INFO: (7) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.218884ms)
  Nov 18 13:14:08.712: INFO: (7) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.783024ms)
  Nov 18 13:14:08.713: INFO: (7) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 6.217589ms)
  Nov 18 13:14:08.713: INFO: (7) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.25775ms)
  Nov 18 13:14:08.714: INFO: (7) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 6.474624ms)
  Nov 18 13:14:08.714: INFO: (7) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 6.697478ms)
  Nov 18 13:14:08.714: INFO: (7) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 6.740538ms)
  Nov 18 13:14:08.714: INFO: (7) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.286898ms)
  Nov 18 13:14:08.715: INFO: (7) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.689405ms)
  Nov 18 13:14:08.715: INFO: (7) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 8.336666ms)
  Nov 18 13:14:08.716: INFO: (7) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 8.399238ms)
  Nov 18 13:14:08.716: INFO: (7) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 8.341676ms)
  Nov 18 13:14:08.716: INFO: (7) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 8.679112ms)
  Nov 18 13:14:08.717: INFO: (7) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 10.025096ms)
  Nov 18 13:14:08.718: INFO: (7) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 11.178916ms)
  Nov 18 13:14:08.722: INFO: (8) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.43632ms)
  Nov 18 13:14:08.722: INFO: (8) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 3.955689ms)
  Nov 18 13:14:08.723: INFO: (8) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.085091ms)
  Nov 18 13:14:08.723: INFO: (8) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.53324ms)
  Nov 18 13:14:08.724: INFO: (8) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.921047ms)
  Nov 18 13:14:08.724: INFO: (8) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 4.985968ms)
  Nov 18 13:14:08.724: INFO: (8) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 5.002248ms)
  Nov 18 13:14:08.724: INFO: (8) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 5.315154ms)
  Nov 18 13:14:08.724: INFO: (8) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 5.73245ms)
  Nov 18 13:14:08.725: INFO: (8) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 6.220169ms)
  Nov 18 13:14:08.726: INFO: (8) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 6.903251ms)
  Nov 18 13:14:08.727: INFO: (8) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 8.087632ms)
  Nov 18 13:14:08.727: INFO: (8) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 8.388077ms)
  Nov 18 13:14:08.727: INFO: (8) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 8.401458ms)
  Nov 18 13:14:08.727: INFO: (8) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 8.57365ms)
  Nov 18 13:14:08.729: INFO: (8) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 10.102807ms)
  Nov 18 13:14:08.732: INFO: (9) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 3.532742ms)
  Nov 18 13:14:08.733: INFO: (9) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.814887ms)
  Nov 18 13:14:08.733: INFO: (9) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 4.043731ms)
  Nov 18 13:14:08.734: INFO: (9) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 5.041988ms)
  Nov 18 13:14:08.734: INFO: (9) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.974757ms)
  Nov 18 13:14:08.734: INFO: (9) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.955747ms)
  Nov 18 13:14:08.734: INFO: (9) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.968647ms)
  Nov 18 13:14:08.734: INFO: (9) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 5.316163ms)
  Nov 18 13:14:08.735: INFO: (9) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 6.185909ms)
  Nov 18 13:14:08.735: INFO: (9) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 6.323371ms)
  Nov 18 13:14:08.735: INFO: (9) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.24494ms)
  Nov 18 13:14:08.735: INFO: (9) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 6.515205ms)
  Nov 18 13:14:08.736: INFO: (9) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 6.821ms)
  Nov 18 13:14:08.737: INFO: (9) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.653735ms)
  Nov 18 13:14:08.737: INFO: (9) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 7.630054ms)
  Nov 18 13:14:08.738: INFO: (9) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 9.205111ms)
  Nov 18 13:14:08.742: INFO: (10) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 3.269768ms)
  Nov 18 13:14:08.742: INFO: (10) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 3.41857ms)
  Nov 18 13:14:08.742: INFO: (10) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.076842ms)
  Nov 18 13:14:08.743: INFO: (10) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.811935ms)
  Nov 18 13:14:08.743: INFO: (10) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.642932ms)
  Nov 18 13:14:08.743: INFO: (10) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 4.987307ms)
  Nov 18 13:14:08.744: INFO: (10) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 5.486806ms)
  Nov 18 13:14:08.744: INFO: (10) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 5.524827ms)
  Nov 18 13:14:08.744: INFO: (10) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 5.411015ms)
  Nov 18 13:14:08.744: INFO: (10) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 6.179458ms)
  Nov 18 13:14:08.745: INFO: (10) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 6.426663ms)
  Nov 18 13:14:08.745: INFO: (10) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 6.500504ms)
  Nov 18 13:14:08.745: INFO: (10) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.529345ms)
  Nov 18 13:14:08.746: INFO: (10) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.822297ms)
  Nov 18 13:14:08.746: INFO: (10) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 8.095502ms)
  Nov 18 13:14:08.747: INFO: (10) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 9.13072ms)
  Nov 18 13:14:08.751: INFO: (11) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 3.563353ms)
  Nov 18 13:14:08.751: INFO: (11) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 3.517632ms)
  Nov 18 13:14:08.752: INFO: (11) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 4.336386ms)
  Nov 18 13:14:08.752: INFO: (11) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.350367ms)
  Nov 18 13:14:08.752: INFO: (11) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.758763ms)
  Nov 18 13:14:08.752: INFO: (11) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.770994ms)
  Nov 18 13:14:08.752: INFO: (11) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.816744ms)
  Nov 18 13:14:08.753: INFO: (11) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.172541ms)
  Nov 18 13:14:08.753: INFO: (11) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 5.365734ms)
  Nov 18 13:14:08.754: INFO: (11) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 6.446603ms)
  Nov 18 13:14:08.754: INFO: (11) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 6.331821ms)
  Nov 18 13:14:08.754: INFO: (11) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 6.27444ms)
  Nov 18 13:14:08.754: INFO: (11) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 6.594516ms)
  Nov 18 13:14:08.755: INFO: (11) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.341549ms)
  Nov 18 13:14:08.755: INFO: (11) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 7.562973ms)
  Nov 18 13:14:08.755: INFO: (11) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.611524ms)
  Nov 18 13:14:08.759: INFO: (12) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 3.41845ms)
  Nov 18 13:14:08.759: INFO: (12) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 3.486131ms)
  Nov 18 13:14:08.759: INFO: (12) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.693895ms)
  Nov 18 13:14:08.760: INFO: (12) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.50969ms)
  Nov 18 13:14:08.760: INFO: (12) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 4.707413ms)
  Nov 18 13:14:08.760: INFO: (12) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.663392ms)
  Nov 18 13:14:08.760: INFO: (12) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 4.793494ms)
  Nov 18 13:14:08.760: INFO: (12) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 5.13569ms)
  Nov 18 13:14:08.761: INFO: (12) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 5.72339ms)
  Nov 18 13:14:08.761: INFO: (12) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 5.792942ms)
  Nov 18 13:14:08.762: INFO: (12) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 6.320231ms)
  Nov 18 13:14:08.762: INFO: (12) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.433483ms)
  Nov 18 13:14:08.762: INFO: (12) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 6.302371ms)
  Nov 18 13:14:08.763: INFO: (12) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 7.261297ms)
  Nov 18 13:14:08.763: INFO: (12) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.521582ms)
  Nov 18 13:14:08.764: INFO: (12) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 8.757724ms)
  Nov 18 13:14:08.768: INFO: (13) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 3.689925ms)
  Nov 18 13:14:08.769: INFO: (13) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.372947ms)
  Nov 18 13:14:08.769: INFO: (13) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.422238ms)
  Nov 18 13:14:08.769: INFO: (13) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 5.041909ms)
  Nov 18 13:14:08.769: INFO: (13) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.850555ms)
  Nov 18 13:14:08.769: INFO: (13) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 5.013348ms)
  Nov 18 13:14:08.770: INFO: (13) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 5.436016ms)
  Nov 18 13:14:08.770: INFO: (13) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 5.803072ms)
  Nov 18 13:14:08.770: INFO: (13) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.552257ms)
  Nov 18 13:14:08.771: INFO: (13) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 6.168288ms)
  Nov 18 13:14:08.771: INFO: (13) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 6.396662ms)
  Nov 18 13:14:08.771: INFO: (13) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 6.603406ms)
  Nov 18 13:14:08.771: INFO: (13) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.556715ms)
  Nov 18 13:14:08.772: INFO: (13) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 7.727235ms)
  Nov 18 13:14:08.772: INFO: (13) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 7.690545ms)
  Nov 18 13:14:08.772: INFO: (13) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.636194ms)
  Nov 18 13:14:08.776: INFO: (14) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 3.590763ms)
  Nov 18 13:14:08.776: INFO: (14) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.015541ms)
  Nov 18 13:14:08.777: INFO: (14) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 4.704083ms)
  Nov 18 13:14:08.777: INFO: (14) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.650991ms)
  Nov 18 13:14:08.777: INFO: (14) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.737893ms)
  Nov 18 13:14:08.777: INFO: (14) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.902096ms)
  Nov 18 13:14:08.777: INFO: (14) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 4.789194ms)
  Nov 18 13:14:08.778: INFO: (14) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 5.266002ms)
  Nov 18 13:14:08.778: INFO: (14) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 5.762072ms)
  Nov 18 13:14:08.778: INFO: (14) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 6.160908ms)
  Nov 18 13:14:08.779: INFO: (14) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 6.416813ms)
  Nov 18 13:14:08.779: INFO: (14) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 6.532455ms)
  Nov 18 13:14:08.779: INFO: (14) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 6.506464ms)
  Nov 18 13:14:08.780: INFO: (14) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 7.546802ms)
  Nov 18 13:14:08.780: INFO: (14) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.788117ms)
  Nov 18 13:14:08.780: INFO: (14) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 7.926119ms)
  Nov 18 13:14:08.784: INFO: (15) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.508352ms)
  Nov 18 13:14:08.784: INFO: (15) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.486401ms)
  Nov 18 13:14:08.785: INFO: (15) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 4.435977ms)
  Nov 18 13:14:08.785: INFO: (15) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.057918ms)
  Nov 18 13:14:08.785: INFO: (15) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.879275ms)
  Nov 18 13:14:08.785: INFO: (15) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.062418ms)
  Nov 18 13:14:08.785: INFO: (15) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 4.983598ms)
  Nov 18 13:14:08.786: INFO: (15) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 5.536736ms)
  Nov 18 13:14:08.786: INFO: (15) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 5.679549ms)
  Nov 18 13:14:08.787: INFO: (15) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 6.128527ms)
  Nov 18 13:14:08.787: INFO: (15) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 6.217399ms)
  Nov 18 13:14:08.787: INFO: (15) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 6.31421ms)
  Nov 18 13:14:08.787: INFO: (15) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 6.448103ms)
  Nov 18 13:14:08.788: INFO: (15) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 7.535752ms)
  Nov 18 13:14:08.788: INFO: (15) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 7.794846ms)
  Nov 18 13:14:08.790: INFO: (15) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 9.112549ms)
  Nov 18 13:14:08.793: INFO: (16) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 3.351799ms)
  Nov 18 13:14:08.793: INFO: (16) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 3.613793ms)
  Nov 18 13:14:08.793: INFO: (16) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 3.695665ms)
  Nov 18 13:14:08.794: INFO: (16) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 4.467589ms)
  Nov 18 13:14:08.794: INFO: (16) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.493289ms)
  Nov 18 13:14:08.794: INFO: (16) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 4.633362ms)
  Nov 18 13:14:08.795: INFO: (16) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.897606ms)
  Nov 18 13:14:08.795: INFO: (16) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.521886ms)
  Nov 18 13:14:08.796: INFO: (16) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 5.888093ms)
  Nov 18 13:14:08.796: INFO: (16) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 6.177769ms)
  Nov 18 13:14:08.796: INFO: (16) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.496114ms)
  Nov 18 13:14:08.797: INFO: (16) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.925211ms)
  Nov 18 13:14:08.797: INFO: (16) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.668304ms)
  Nov 18 13:14:08.798: INFO: (16) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 8.125063ms)
  Nov 18 13:14:08.798: INFO: (16) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 8.646182ms)
  Nov 18 13:14:08.799: INFO: (16) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 9.427096ms)
  Nov 18 13:14:08.803: INFO: (17) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 4.332166ms)
  Nov 18 13:14:08.804: INFO: (17) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.56824ms)
  Nov 18 13:14:08.805: INFO: (17) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 5.437356ms)
  Nov 18 13:14:08.806: INFO: (17) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.802509ms)
  Nov 18 13:14:08.806: INFO: (17) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.203536ms)
  Nov 18 13:14:08.806: INFO: (17) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 7.072554ms)
  Nov 18 13:14:08.806: INFO: (17) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 7.282898ms)
  Nov 18 13:14:08.806: INFO: (17) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 7.131425ms)
  Nov 18 13:14:08.807: INFO: (17) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 7.40998ms)
  Nov 18 13:14:08.807: INFO: (17) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 7.442041ms)
  Nov 18 13:14:08.807: INFO: (17) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 7.299448ms)
  Nov 18 13:14:08.807: INFO: (17) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 7.607604ms)
  Nov 18 13:14:08.808: INFO: (17) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 8.332537ms)
  Nov 18 13:14:08.808: INFO: (17) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 8.683123ms)
  Nov 18 13:14:08.808: INFO: (17) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 8.662992ms)
  Nov 18 13:14:08.810: INFO: (17) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 10.093337ms)
  Nov 18 13:14:08.813: INFO: (18) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 3.377389ms)
  Nov 18 13:14:08.813: INFO: (18) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.716315ms)
  Nov 18 13:14:08.814: INFO: (18) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 3.943569ms)
  Nov 18 13:14:08.814: INFO: (18) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 4.731013ms)
  Nov 18 13:14:08.815: INFO: (18) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.830435ms)
  Nov 18 13:14:08.815: INFO: (18) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 4.967997ms)
  Nov 18 13:14:08.815: INFO: (18) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 5.18154ms)
  Nov 18 13:14:08.815: INFO: (18) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 5.462856ms)
  Nov 18 13:14:08.816: INFO: (18) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 5.767261ms)
  Nov 18 13:14:08.816: INFO: (18) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 6.071306ms)
  Nov 18 13:14:08.816: INFO: (18) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 6.335851ms)
  Nov 18 13:14:08.816: INFO: (18) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 6.633946ms)
  Nov 18 13:14:08.816: INFO: (18) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 6.627157ms)
  Nov 18 13:14:08.817: INFO: (18) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 7.528872ms)
  Nov 18 13:14:08.817: INFO: (18) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 7.649475ms)
  Nov 18 13:14:08.819: INFO: (18) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 8.909606ms)
  Nov 18 13:14:08.822: INFO: (19) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 3.050484ms)
  Nov 18 13:14:08.822: INFO: (19) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4/proxy/rewriteme">test</a> (200; 3.607433ms)
  Nov 18 13:14:08.823: INFO: (19) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:460/proxy/: tls baz (200; 3.894528ms)
  Nov 18 13:14:08.823: INFO: (19) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 3.819997ms)
  Nov 18 13:14:08.823: INFO: (19) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:162/proxy/: bar (200; 4.697613ms)
  Nov 18 13:14:08.824: INFO: (19) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:443/proxy/tlsrewritem... (200; 4.968487ms)
  Nov 18 13:14:08.824: INFO: (19) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:160/proxy/: foo (200; 4.952647ms)
  Nov 18 13:14:08.824: INFO: (19) /api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/http:proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">... (200; 5.017648ms)
  Nov 18 13:14:08.824: INFO: (19) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname2/proxy/: bar (200; 5.521957ms)
  Nov 18 13:14:08.825: INFO: (19) /api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4296/pods/proxy-service-9mgds-kr7s4:1080/proxy/rewriteme">test<... (200; 6.343272ms)
  Nov 18 13:14:08.825: INFO: (19) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname2/proxy/: bar (200; 6.30162ms)
  Nov 18 13:14:08.825: INFO: (19) /api/v1/namespaces/proxy-4296/pods/https:proxy-service-9mgds-kr7s4:462/proxy/: tls qux (200; 6.346292ms)
  Nov 18 13:14:08.825: INFO: (19) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname1/proxy/: tls baz (200; 6.475754ms)
  Nov 18 13:14:08.826: INFO: (19) /api/v1/namespaces/proxy-4296/services/https:proxy-service-9mgds:tlsportname2/proxy/: tls qux (200; 7.473021ms)
  Nov 18 13:14:08.828: INFO: (19) /api/v1/namespaces/proxy-4296/services/proxy-service-9mgds:portname1/proxy/: foo (200; 8.754423ms)
  Nov 18 13:14:08.828: INFO: (19) /api/v1/namespaces/proxy-4296/services/http:proxy-service-9mgds:portname1/proxy/: foo (200; 8.822295ms)
  Nov 18 13:14:08.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-9mgds in namespace proxy-4296, will wait for the garbage collector to delete the pods @ 11/18/23 13:14:08.831
  Nov 18 13:14:08.892: INFO: Deleting ReplicationController proxy-service-9mgds took: 7.071394ms
  Nov 18 13:14:08.992: INFO: Terminating ReplicationController proxy-service-9mgds pods took: 100.274829ms
  E1118 13:14:09.003011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:10.003333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:11.004189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-4296" for this suite. @ 11/18/23 13:14:11.194
• [4.690 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 11/18/23 13:14:11.202
  Nov 18 13:14:11.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:14:11.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:11.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:11.217
  STEP: Setting up server cert @ 11/18/23 13:14:11.242
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:14:11.493
  STEP: Deploying the webhook pod @ 11/18/23 13:14:11.501
  STEP: Wait for the deployment to be ready @ 11/18/23 13:14:11.512
  Nov 18 13:14:11.519: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:14:12.005147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:13.005406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:14:13.529
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:14:13.539
  E1118 13:14:14.006023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:14:14.539: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/18/23 13:14:14.545
  STEP: create a pod @ 11/18/23 13:14:14.561
  E1118 13:14:15.006128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:16.006402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/18/23 13:14:16.577
  Nov 18 13:14:16.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=webhook-1395 attach --namespace=webhook-1395 to-be-attached-pod -i -c=container1'
  Nov 18 13:14:16.647: INFO: rc: 1
  Nov 18 13:14:16.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1395" for this suite. @ 11/18/23 13:14:16.698
  STEP: Destroying namespace "webhook-markers-3571" for this suite. @ 11/18/23 13:14:16.707
• [5.513 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/18/23 13:14:16.715
  Nov 18 13:14:16.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-runtime @ 11/18/23 13:14:16.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:16.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:16.73
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/18/23 13:14:16.742
  E1118 13:14:17.006777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:18.007006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:19.008053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:20.009131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:21.009737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:22.010793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:23.011111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:24.011775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:25.012807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:26.012987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:27.013488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:28.013917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:29.014016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:30.014806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:31.015580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:32.015913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:33.016507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/18/23 13:14:33.825
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/18/23 13:14:33.828
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/18/23 13:14:33.836
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 11/18/23 13:14:33.836
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/18/23 13:14:33.863
  E1118 13:14:34.016755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:35.017552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:36.018352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/18/23 13:14:36.882
  E1118 13:14:37.018498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/18/23 13:14:37.891
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/18/23 13:14:37.897
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 11/18/23 13:14:37.897
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/18/23 13:14:37.92
  E1118 13:14:38.018700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/18/23 13:14:38.927
  E1118 13:14:39.019114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:40.019695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/18/23 13:14:40.94
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/18/23 13:14:40.948
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 11/18/23 13:14:40.948
  Nov 18 13:14:40.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9018" for this suite. @ 11/18/23 13:14:40.979
• [24.271 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 11/18/23 13:14:40.987
  Nov 18 13:14:40.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:14:40.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:41.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:41.006
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/18/23 13:14:41.009
  E1118 13:14:41.020339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:42.021406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:43.022146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:44.022905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:45.023254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:14:45.032
  Nov 18 13:14:45.036: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-1d8f0154-fe00-47bc-9e99-9f3161443271 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:14:45.042
  Nov 18 13:14:45.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-402" for this suite. @ 11/18/23 13:14:45.062
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 11/18/23 13:14:45.069
  Nov 18 13:14:45.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:14:45.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:45.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:45.088
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:14:45.091
  E1118 13:14:46.024105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:47.025186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:48.025355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:49.025458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:14:49.115
  Nov 18 13:14:49.118: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-809f239a-d358-4cf6-9d92-942a1f295b90 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:14:49.124
  Nov 18 13:14:49.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3309" for this suite. @ 11/18/23 13:14:49.147
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 11/18/23 13:14:49.154
  Nov 18 13:14:49.154: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 13:14:49.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:14:49.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:14:49.17
  STEP: Creating service test in namespace statefulset-306 @ 11/18/23 13:14:49.174
  STEP: Looking for a node to schedule stateful set and pod @ 11/18/23 13:14:49.183
  STEP: Creating pod with conflicting port in namespace statefulset-306 @ 11/18/23 13:14:49.192
  STEP: Waiting until pod test-pod will start running in namespace statefulset-306 @ 11/18/23 13:14:49.198
  E1118 13:14:50.026489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:51.026718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-306 @ 11/18/23 13:14:51.207
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-306 @ 11/18/23 13:14:51.213
  Nov 18 13:14:51.224: INFO: Observed stateful pod in namespace: statefulset-306, name: ss-0, uid: d375c6a3-d3a5-49b9-963f-96430bae7a16, status phase: Pending. Waiting for statefulset controller to delete.
  Nov 18 13:14:51.242: INFO: Observed stateful pod in namespace: statefulset-306, name: ss-0, uid: d375c6a3-d3a5-49b9-963f-96430bae7a16, status phase: Failed. Waiting for statefulset controller to delete.
  Nov 18 13:14:51.250: INFO: Observed stateful pod in namespace: statefulset-306, name: ss-0, uid: d375c6a3-d3a5-49b9-963f-96430bae7a16, status phase: Failed. Waiting for statefulset controller to delete.
  Nov 18 13:14:51.257: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-306
  STEP: Removing pod with conflicting port in namespace statefulset-306 @ 11/18/23 13:14:51.257
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-306 and will be in running state @ 11/18/23 13:14:51.274
  E1118 13:14:52.027101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:53.027170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:14:53.286: INFO: Deleting all statefulset in ns statefulset-306
  Nov 18 13:14:53.290: INFO: Scaling statefulset ss to 0
  E1118 13:14:54.027994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:55.028078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:56.028159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:57.029160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:58.029607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:14:59.029766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:00.029911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:01.030116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:02.030338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:03.030657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:15:03.307: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 13:15:03.311: INFO: Deleting statefulset ss
  Nov 18 13:15:03.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-306" for this suite. @ 11/18/23 13:15:03.328
• [14.182 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 11/18/23 13:15:03.336
  Nov 18 13:15:03.336: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename discovery @ 11/18/23 13:15:03.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:15:03.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:15:03.354
  STEP: Setting up server cert @ 11/18/23 13:15:03.359
  Nov 18 13:15:03.678: INFO: Checking APIGroup: apiregistration.k8s.io
  Nov 18 13:15:03.679: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Nov 18 13:15:03.679: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Nov 18 13:15:03.679: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Nov 18 13:15:03.679: INFO: Checking APIGroup: apps
  Nov 18 13:15:03.681: INFO: PreferredVersion.GroupVersion: apps/v1
  Nov 18 13:15:03.681: INFO: Versions found [{apps/v1 v1}]
  Nov 18 13:15:03.681: INFO: apps/v1 matches apps/v1
  Nov 18 13:15:03.681: INFO: Checking APIGroup: events.k8s.io
  Nov 18 13:15:03.682: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Nov 18 13:15:03.683: INFO: Versions found [{events.k8s.io/v1 v1}]
  Nov 18 13:15:03.683: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Nov 18 13:15:03.683: INFO: Checking APIGroup: authentication.k8s.io
  Nov 18 13:15:03.684: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Nov 18 13:15:03.684: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Nov 18 13:15:03.684: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Nov 18 13:15:03.684: INFO: Checking APIGroup: authorization.k8s.io
  Nov 18 13:15:03.686: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Nov 18 13:15:03.686: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Nov 18 13:15:03.686: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Nov 18 13:15:03.686: INFO: Checking APIGroup: autoscaling
  Nov 18 13:15:03.687: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Nov 18 13:15:03.687: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Nov 18 13:15:03.687: INFO: autoscaling/v2 matches autoscaling/v2
  Nov 18 13:15:03.687: INFO: Checking APIGroup: batch
  Nov 18 13:15:03.689: INFO: PreferredVersion.GroupVersion: batch/v1
  Nov 18 13:15:03.689: INFO: Versions found [{batch/v1 v1}]
  Nov 18 13:15:03.689: INFO: batch/v1 matches batch/v1
  Nov 18 13:15:03.689: INFO: Checking APIGroup: certificates.k8s.io
  Nov 18 13:15:03.690: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Nov 18 13:15:03.690: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Nov 18 13:15:03.690: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Nov 18 13:15:03.690: INFO: Checking APIGroup: networking.k8s.io
  Nov 18 13:15:03.692: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Nov 18 13:15:03.692: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Nov 18 13:15:03.692: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Nov 18 13:15:03.692: INFO: Checking APIGroup: policy
  Nov 18 13:15:03.693: INFO: PreferredVersion.GroupVersion: policy/v1
  Nov 18 13:15:03.693: INFO: Versions found [{policy/v1 v1}]
  Nov 18 13:15:03.693: INFO: policy/v1 matches policy/v1
  Nov 18 13:15:03.693: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Nov 18 13:15:03.695: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Nov 18 13:15:03.695: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Nov 18 13:15:03.695: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Nov 18 13:15:03.695: INFO: Checking APIGroup: storage.k8s.io
  Nov 18 13:15:03.696: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Nov 18 13:15:03.696: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Nov 18 13:15:03.697: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Nov 18 13:15:03.697: INFO: Checking APIGroup: admissionregistration.k8s.io
  Nov 18 13:15:03.698: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Nov 18 13:15:03.698: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Nov 18 13:15:03.698: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Nov 18 13:15:03.698: INFO: Checking APIGroup: apiextensions.k8s.io
  Nov 18 13:15:03.700: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Nov 18 13:15:03.700: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Nov 18 13:15:03.700: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Nov 18 13:15:03.700: INFO: Checking APIGroup: scheduling.k8s.io
  Nov 18 13:15:03.702: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Nov 18 13:15:03.702: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Nov 18 13:15:03.702: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Nov 18 13:15:03.702: INFO: Checking APIGroup: coordination.k8s.io
  Nov 18 13:15:03.704: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Nov 18 13:15:03.704: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Nov 18 13:15:03.704: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Nov 18 13:15:03.704: INFO: Checking APIGroup: node.k8s.io
  Nov 18 13:15:03.705: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Nov 18 13:15:03.705: INFO: Versions found [{node.k8s.io/v1 v1}]
  Nov 18 13:15:03.705: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Nov 18 13:15:03.705: INFO: Checking APIGroup: discovery.k8s.io
  Nov 18 13:15:03.707: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Nov 18 13:15:03.707: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Nov 18 13:15:03.707: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Nov 18 13:15:03.707: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Nov 18 13:15:03.708: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Nov 18 13:15:03.708: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Nov 18 13:15:03.708: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Nov 18 13:15:03.708: INFO: Checking APIGroup: metrics.k8s.io
  Nov 18 13:15:03.710: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Nov 18 13:15:03.710: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Nov 18 13:15:03.710: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Nov 18 13:15:03.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4892" for this suite. @ 11/18/23 13:15:03.714
• [0.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 11/18/23 13:15:03.722
  Nov 18 13:15:03.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:15:03.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:15:03.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:15:03.74
  STEP: Creating configMap with name cm-test-opt-del-20303497-fca1-4aee-9ec4-4d401b3f4cdc @ 11/18/23 13:15:03.749
  STEP: Creating configMap with name cm-test-opt-upd-2a924750-89e1-4d0c-9a29-8dbdb3ede6cb @ 11/18/23 13:15:03.755
  STEP: Creating the pod @ 11/18/23 13:15:03.76
  E1118 13:15:04.031080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:05.031588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-20303497-fca1-4aee-9ec4-4d401b3f4cdc @ 11/18/23 13:15:05.804
  STEP: Updating configmap cm-test-opt-upd-2a924750-89e1-4d0c-9a29-8dbdb3ede6cb @ 11/18/23 13:15:05.81
  STEP: Creating configMap with name cm-test-opt-create-45294e75-7fc5-483e-9c98-03d7eb1fefcc @ 11/18/23 13:15:05.816
  STEP: waiting to observe update in volume @ 11/18/23 13:15:05.82
  E1118 13:15:06.032052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:07.033182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:08.033520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:09.033813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:10.033790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:11.034284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:12.035216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:13.036218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:14.036586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:15.037186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:16.038227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:17.038384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:18.038407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:19.038531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:20.039395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:21.039578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:22.040255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:23.041099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:24.041615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:25.041737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:26.042607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:27.042755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:28.042792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:29.042960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:30.043843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:31.044182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:32.045028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:33.045267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:34.045315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:35.045613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:36.045692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:37.045864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:38.046208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:39.046240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:40.046897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:41.047071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:42.048015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:43.049125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:44.049589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:45.050194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:46.050726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:47.050957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:48.051223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:49.051376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:50.051599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:51.051798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:52.051998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:53.052134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:54.052282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:55.052427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:56.052870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:57.053118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:58.053708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:15:59.053866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:00.053929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:01.054127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:02.054171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:03.054680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:04.055712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:05.056108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:06.056264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:07.057130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:08.057676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:09.058522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:10.058701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:11.059200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:12.059269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:13.060265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:14.060325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:15.061196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:16.061390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:17.062360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:18.062903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:19.063400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:20.063516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:21.064071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:22.064177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:23.064350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:24.065174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:25.065312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:26.065495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:16:26.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-828" for this suite. @ 11/18/23 13:16:26.181
• [82.466 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 11/18/23 13:16:26.189
  Nov 18 13:16:26.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 13:16:26.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:16:26.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:16:26.21
  E1118 13:16:27.066051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:28.066541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:29.067079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:30.067160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:31.067989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:32.068174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:33.068488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:34.069350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:35.069725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:36.070519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:37.071376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:38.071662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:39.071789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:40.072049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:41.072577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:42.073109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:43.074207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:44.074615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:45.075571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:46.075756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:47.076101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:48.077117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:49.077278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:50.077551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:51.078242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:52.079132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:53.079439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:54.079471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:55.080117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:56.081126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:57.082059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:58.082316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:16:59.082482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:00.083214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:01.084103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:02.085106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:03.086191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:04.086437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:05.086646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:06.087374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:07.088213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:08.089111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:09.089262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:10.089320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:11.090049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:12.090957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:13.091106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:14.091533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:15.092084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:16.092534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:17.093187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:18.093739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:19.094406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:20.095214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:21.095370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:22.096408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:23.096502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:24.097323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:25.097784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:26.097946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:17:26.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2920" for this suite. @ 11/18/23 13:17:26.228
• [60.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 11/18/23 13:17:26.236
  Nov 18 13:17:26.236: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 13:17:26.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:17:26.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:17:26.252
  STEP: Creating ServiceAccount "e2e-sa-kkh4h"  @ 11/18/23 13:17:26.256
  Nov 18 13:17:26.261: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-kkh4h"  @ 11/18/23 13:17:26.261
  Nov 18 13:17:26.269: INFO: AutomountServiceAccountToken: true
  Nov 18 13:17:26.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5708" for this suite. @ 11/18/23 13:17:26.274
• [0.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/18/23 13:17:26.283
  Nov 18 13:17:26.283: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename events @ 11/18/23 13:17:26.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:17:26.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:17:26.298
  STEP: Create set of events @ 11/18/23 13:17:26.302
  STEP: get a list of Events with a label in the current namespace @ 11/18/23 13:17:26.319
  STEP: delete a list of events @ 11/18/23 13:17:26.324
  Nov 18 13:17:26.324: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/18/23 13:17:26.347
  Nov 18 13:17:26.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1469" for this suite. @ 11/18/23 13:17:26.353
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 11/18/23 13:17:26.362
  Nov 18 13:17:26.362: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:17:26.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:17:26.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:17:26.379
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3524 @ 11/18/23 13:17:26.382
  STEP: changing the ExternalName service to type=NodePort @ 11/18/23 13:17:26.388
  STEP: creating replication controller externalname-service in namespace services-3524 @ 11/18/23 13:17:26.41
  I1118 13:17:26.417136      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3524, replica count: 2
  E1118 13:17:27.098998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:28.099107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:29.099242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:17:29.468784      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:17:29.468: INFO: Creating new exec pod
  E1118 13:17:30.099562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:31.099854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:32.100094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:17:32.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-3524 exec execpodhdbzv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Nov 18 13:17:32.644: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Nov 18 13:17:32.644: INFO: stdout: "externalname-service-wlmhc"
  Nov 18 13:17:32.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-3524 exec execpodhdbzv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.69 80'
  Nov 18 13:17:32.788: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.69 80\nConnection to 10.152.183.69 80 port [tcp/http] succeeded!\n"
  Nov 18 13:17:32.788: INFO: stdout: "externalname-service-s2xtf"
  Nov 18 13:17:32.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-3524 exec execpodhdbzv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.29.39 31921'
  Nov 18 13:17:32.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.29.39 31921\nConnection to 172.31.29.39 31921 port [tcp/*] succeeded!\n"
  Nov 18 13:17:32.961: INFO: stdout: "externalname-service-s2xtf"
  Nov 18 13:17:32.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-3524 exec execpodhdbzv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.133 31921'
  Nov 18 13:17:33.098: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.133 31921\nConnection to 172.31.39.133 31921 port [tcp/*] succeeded!\n"
  Nov 18 13:17:33.098: INFO: stdout: ""
  E1118 13:17:33.100701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:17:34.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-3524 exec execpodhdbzv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.133 31921'
  E1118 13:17:34.101342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:17:34.246: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.133 31921\nConnection to 172.31.39.133 31921 port [tcp/*] succeeded!\n"
  Nov 18 13:17:34.246: INFO: stdout: "externalname-service-s2xtf"
  Nov 18 13:17:34.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 13:17:34.251: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3524" for this suite. @ 11/18/23 13:17:34.276
• [7.922 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 11/18/23 13:17:34.284
  Nov 18 13:17:34.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename endpointslice @ 11/18/23 13:17:34.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:17:34.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:17:34.3
  E1118 13:17:35.101502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:36.101627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:37.102220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:38.102564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:39.102564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 11/18/23 13:17:39.371
  E1118 13:17:40.102532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:41.102637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:42.102856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:43.103332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:44.103395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 11/18/23 13:17:44.379
  E1118 13:17:45.103640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:46.103852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:47.104082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:48.105102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:49.105265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/18/23 13:17:49.386
  E1118 13:17:50.105950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:51.106872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:52.106959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:53.107265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:54.107409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 11/18/23 13:17:54.393
  Nov 18 13:17:54.415: INFO: EndpointSlice for Service endpointslice-4303/example-named-port not found
  E1118 13:17:55.108466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:56.108640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:57.109179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:58.109299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:17:59.109477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:00.109654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:01.109792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:02.110032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:03.110195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:04.110421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:18:04.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4303" for this suite. @ 11/18/23 13:18:04.43
• [30.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 11/18/23 13:18:04.438
  Nov 18 13:18:04.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 13:18:04.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:04.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:04.456
  STEP: set up a multi version CRD @ 11/18/23 13:18:04.459
  Nov 18 13:18:04.459: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:18:05.110941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:06.111466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:07.112042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 11/18/23 13:18:07.704
  STEP: check the new version name is served @ 11/18/23 13:18:07.723
  E1118 13:18:08.112715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 11/18/23 13:18:08.51
  E1118 13:18:09.112907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/18/23 13:18:09.157
  E1118 13:18:10.113759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:11.113751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:18:11.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6416" for this suite. @ 11/18/23 13:18:11.778
• [7.347 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/18/23 13:18:11.785
  Nov 18 13:18:11.785: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename subpath @ 11/18/23 13:18:11.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:11.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:11.803
  STEP: Setting up data @ 11/18/23 13:18:11.805
  STEP: Creating pod pod-subpath-test-projected-p9xx @ 11/18/23 13:18:11.812
  STEP: Creating a pod to test atomic-volume-subpath @ 11/18/23 13:18:11.812
  E1118 13:18:12.114610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:13.115015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:14.115847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:15.116092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:16.116703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:17.117186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:18.117350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:19.117517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:20.118220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:21.119274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:22.119292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:23.119658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:24.120393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:25.120529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:26.120648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:27.120713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:28.121721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:29.121905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:30.122484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:31.122776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:32.123629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:33.124030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:34.124584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:35.124699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:18:35.873
  Nov 18 13:18:35.875: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-subpath-test-projected-p9xx container test-container-subpath-projected-p9xx: <nil>
  STEP: delete the pod @ 11/18/23 13:18:35.892
  STEP: Deleting pod pod-subpath-test-projected-p9xx @ 11/18/23 13:18:35.909
  Nov 18 13:18:35.909: INFO: Deleting pod "pod-subpath-test-projected-p9xx" in namespace "subpath-2276"
  Nov 18 13:18:35.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2276" for this suite. @ 11/18/23 13:18:35.917
• [24.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/18/23 13:18:35.925
  Nov 18 13:18:35.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 13:18:35.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:35.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:35.944
  STEP: creating the pod @ 11/18/23 13:18:35.945
  STEP: submitting the pod to kubernetes @ 11/18/23 13:18:35.945
  E1118 13:18:36.125628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:37.126348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/18/23 13:18:37.963
  STEP: updating the pod @ 11/18/23 13:18:37.966
  E1118 13:18:38.126377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:18:38.477: INFO: Successfully updated pod "pod-update-d267cc09-42ab-4965-814e-054ed9fe7d97"
  STEP: verifying the updated pod is in kubernetes @ 11/18/23 13:18:38.479
  Nov 18 13:18:38.483: INFO: Pod update OK
  Nov 18 13:18:38.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1733" for this suite. @ 11/18/23 13:18:38.487
• [2.568 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 11/18/23 13:18:38.493
  Nov 18 13:18:38.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:18:38.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:38.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:38.514
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/18/23 13:18:38.516
  E1118 13:18:39.126545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:40.126679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:41.127276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:42.127509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:18:42.536
  Nov 18 13:18:42.539: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-b21d05b1-84d2-4414-85a1-3b6498bde745 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:18:42.557
  Nov 18 13:18:42.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8499" for this suite. @ 11/18/23 13:18:42.576
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 11/18/23 13:18:42.582
  Nov 18 13:18:42.582: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 13:18:42.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:42.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:42.602
  STEP: Creating a test externalName service @ 11/18/23 13:18:42.604
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3205.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3205.svc.cluster.local; sleep 1; done
   @ 11/18/23 13:18:42.608
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3205.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3205.svc.cluster.local; sleep 1; done
   @ 11/18/23 13:18:42.608
  STEP: creating a pod to probe DNS @ 11/18/23 13:18:42.608
  STEP: submitting the pod to kubernetes @ 11/18/23 13:18:42.608
  E1118 13:18:43.127940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:44.128089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:18:44.624
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:18:44.627
  Nov 18 13:18:44.635: INFO: DNS probes using dns-test-4ed26cb5-ab09-4fc7-afa8-d025f6f1fc27 succeeded

  STEP: changing the externalName to bar.example.com @ 11/18/23 13:18:44.635
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3205.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3205.svc.cluster.local; sleep 1; done
   @ 11/18/23 13:18:44.643
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3205.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3205.svc.cluster.local; sleep 1; done
   @ 11/18/23 13:18:44.643
  STEP: creating a second pod to probe DNS @ 11/18/23 13:18:44.643
  STEP: submitting the pod to kubernetes @ 11/18/23 13:18:44.644
  E1118 13:18:45.129009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:46.129139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:18:46.658
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:18:46.661
  Nov 18 13:18:46.667: INFO: File wheezy_udp@dns-test-service-3.dns-3205.svc.cluster.local from pod  dns-3205/dns-test-a710345a-bf83-4314-9d14-3cc0849b360f contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Nov 18 13:18:46.670: INFO: File jessie_udp@dns-test-service-3.dns-3205.svc.cluster.local from pod  dns-3205/dns-test-a710345a-bf83-4314-9d14-3cc0849b360f contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Nov 18 13:18:46.671: INFO: Lookups using dns-3205/dns-test-a710345a-bf83-4314-9d14-3cc0849b360f failed for: [wheezy_udp@dns-test-service-3.dns-3205.svc.cluster.local jessie_udp@dns-test-service-3.dns-3205.svc.cluster.local]

  Nov 18 13:18:46.677: INFO: Pod client logs for webserver: 
  Nov 18 13:18:46.688: INFO: Pod client logs for querier: 
  Nov 18 13:18:46.695: INFO: Pod client logs for jessie-querier: 
  E1118 13:18:47.129791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:48.130164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:49.130356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:50.131261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:51.131556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:18:51.704: INFO: DNS probes using dns-test-a710345a-bf83-4314-9d14-3cc0849b360f succeeded

  STEP: changing the service to type=ClusterIP @ 11/18/23 13:18:51.704
  W1118 13:18:51.716861      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3205.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3205.svc.cluster.local; sleep 1; done
   @ 11/18/23 13:18:51.716
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3205.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3205.svc.cluster.local; sleep 1; done
   @ 11/18/23 13:18:51.716
  STEP: creating a third pod to probe DNS @ 11/18/23 13:18:51.717
  STEP: submitting the pod to kubernetes @ 11/18/23 13:18:51.72
  E1118 13:18:52.131859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:53.132104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:18:53.733
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:18:53.735
  Nov 18 13:18:53.745: INFO: DNS probes using dns-test-b0532efe-2217-423a-867a-c59ec6507cd9 succeeded

  Nov 18 13:18:53.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:18:53.748
  STEP: deleting the pod @ 11/18/23 13:18:53.763
  STEP: deleting the pod @ 11/18/23 13:18:53.778
  STEP: deleting the test externalName service @ 11/18/23 13:18:53.794
  STEP: Destroying namespace "dns-3205" for this suite. @ 11/18/23 13:18:53.81
• [11.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/18/23 13:18:53.818
  Nov 18 13:18:53.818: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:18:53.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:53.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:53.837
  STEP: Creating projection with secret that has name projected-secret-test-458e63a3-6d1f-4b65-b58d-dbf4b4644f65 @ 11/18/23 13:18:53.839
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:18:53.844
  E1118 13:18:54.132492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:55.132704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:56.133591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:18:57.134291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:18:57.864
  Nov 18 13:18:57.867: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-secrets-c234109b-38c2-4c7f-bae9-a8caa94211db container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:18:57.875
  Nov 18 13:18:57.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2385" for this suite. @ 11/18/23 13:18:57.9
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 11/18/23 13:18:57.907
  Nov 18 13:18:57.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename endpointslice @ 11/18/23 13:18:57.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:57.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:57.926
  STEP: getting /apis @ 11/18/23 13:18:57.928
  STEP: getting /apis/discovery.k8s.io @ 11/18/23 13:18:57.93
  STEP: getting /apis/discovery.k8s.iov1 @ 11/18/23 13:18:57.931
  STEP: creating @ 11/18/23 13:18:57.932
  STEP: getting @ 11/18/23 13:18:57.947
  STEP: listing @ 11/18/23 13:18:57.95
  STEP: watching @ 11/18/23 13:18:57.953
  Nov 18 13:18:57.953: INFO: starting watch
  STEP: cluster-wide listing @ 11/18/23 13:18:57.954
  STEP: cluster-wide watching @ 11/18/23 13:18:57.958
  Nov 18 13:18:57.958: INFO: starting watch
  STEP: patching @ 11/18/23 13:18:57.958
  STEP: updating @ 11/18/23 13:18:57.963
  Nov 18 13:18:57.970: INFO: waiting for watch events with expected annotations
  Nov 18 13:18:57.970: INFO: saw patched and updated annotations
  STEP: deleting @ 11/18/23 13:18:57.97
  STEP: deleting a collection @ 11/18/23 13:18:57.982
  E1118 13:18:58.134933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:18:58.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-780" for this suite. @ 11/18/23 13:18:58.162
• [0.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 11/18/23 13:18:58.169
  Nov 18 13:18:58.169: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 13:18:58.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:18:58.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:18:58.188
  STEP: Creating a test headless service @ 11/18/23 13:18:58.19
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5408.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5408.svc.cluster.local;sleep 1; done
   @ 11/18/23 13:18:58.195
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5408.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5408.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5408.svc.cluster.local;sleep 1; done
   @ 11/18/23 13:18:58.195
  STEP: creating a pod to probe DNS @ 11/18/23 13:18:58.195
  STEP: submitting the pod to kubernetes @ 11/18/23 13:18:58.195
  E1118 13:18:59.135626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:00.136118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:19:00.214
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:19:00.217
  Nov 18 13:19:00.222: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.226: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.230: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.233: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.237: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.241: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.245: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.249: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5408.svc.cluster.local from pod dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57: the server could not find the requested resource (get pods dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57)
  Nov 18 13:19:00.249: INFO: Lookups using dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5408.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5408.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5408.svc.cluster.local jessie_udp@dns-test-service-2.dns-5408.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5408.svc.cluster.local]

  Nov 18 13:19:00.256: INFO: Pod client logs for webserver: 
  Nov 18 13:19:00.263: INFO: Pod client logs for querier: 
  Nov 18 13:19:00.269: INFO: Pod client logs for jessie-querier: 
  E1118 13:19:01.136243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:02.136454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:03.136972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:04.137171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:05.137388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:19:05.302: INFO: DNS probes using dns-5408/dns-test-0769c8dd-9fd8-4eac-aeba-2943cbc99b57 succeeded

  Nov 18 13:19:05.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:19:05.305
  STEP: deleting the test headless service @ 11/18/23 13:19:05.324
  STEP: Destroying namespace "dns-5408" for this suite. @ 11/18/23 13:19:05.343
• [7.181 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 11/18/23 13:19:05.351
  Nov 18 13:19:05.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename namespaces @ 11/18/23 13:19:05.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:19:05.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:19:05.368
  STEP: Updating Namespace "namespaces-6269" @ 11/18/23 13:19:05.37
  Nov 18 13:19:05.377: INFO: Namespace "namespaces-6269" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"30930671-658e-477e-9d28-1b9c29924156", "kubernetes.io/metadata.name":"namespaces-6269", "namespaces-6269":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Nov 18 13:19:05.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6269" for this suite. @ 11/18/23 13:19:05.381
• [0.038 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/18/23 13:19:05.389
  Nov 18 13:19:05.389: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:19:05.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:19:05.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:19:05.41
  STEP: Creating secret with name projected-secret-test-2dd23f0f-9732-49c4-ab59-33d6f665e0ab @ 11/18/23 13:19:05.412
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:19:05.416
  E1118 13:19:06.137477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:07.137640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:08.138536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:09.138755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:19:09.436
  Nov 18 13:19:09.438: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-secrets-ff9d8a28-4995-4114-b0d4-a56d047e022f container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:19:09.445
  Nov 18 13:19:09.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9964" for this suite. @ 11/18/23 13:19:09.466
• [4.084 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 11/18/23 13:19:09.473
  Nov 18 13:19:09.473: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename job @ 11/18/23 13:19:09.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:19:09.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:19:09.49
  STEP: Creating a job @ 11/18/23 13:19:09.492
  STEP: Ensuring active pods == parallelism @ 11/18/23 13:19:09.496
  E1118 13:19:10.139737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:11.139827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 11/18/23 13:19:11.5
  STEP: deleting Job.batch foo in namespace job-4732, will wait for the garbage collector to delete the pods @ 11/18/23 13:19:11.5
  Nov 18 13:19:11.560: INFO: Deleting Job.batch foo took: 5.715687ms
  Nov 18 13:19:11.660: INFO: Terminating Job.batch foo pods took: 100.613566ms
  E1118 13:19:12.140246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:13.141088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:14.141637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:15.142129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:16.142612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:17.143149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:18.144018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:19.144496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:20.145018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:21.145438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:22.145840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:23.146593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:24.147072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:25.147714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:26.148193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:27.148670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:28.149537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:29.149879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:30.150202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:31.150708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:32.151022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:33.151553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:34.152256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:35.152690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:36.152980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:37.153350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:38.154197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:39.154732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:40.155252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:41.155861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:42.156691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 11/18/23 13:19:43.061
  Nov 18 13:19:43.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4732" for this suite. @ 11/18/23 13:19:43.067
• [33.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 11/18/23 13:19:43.077
  Nov 18 13:19:43.077: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 13:19:43.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:19:43.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:19:43.096
  Nov 18 13:19:43.112: INFO: created pod
  E1118 13:19:43.157137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:44.157938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:45.158810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:46.158919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:19:47.123
  E1118 13:19:47.159904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:48.160072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:49.160206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:50.161167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:51.161313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:52.161414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:53.161538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:54.161726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:55.161880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:56.161996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:57.162193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:58.162323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:19:59.162475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:00.163190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:01.163429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:02.163518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:03.163845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:04.163901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:05.164120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:06.165127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:07.165274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:08.165667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:09.165789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:10.166048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:11.166190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:12.166479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:13.167091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:14.167300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:15.167505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:16.167715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:17.123: INFO: polling logs
  Nov 18 13:20:17.131: INFO: Pod logs: 
  I1118 13:19:43.843735       1 log.go:194] OK: Got token
  I1118 13:19:43.843804       1 log.go:194] validating with in-cluster discovery
  I1118 13:19:43.844041       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I1118 13:19:43.844074       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8155:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00021d250), NotBefore:(*jwt.NumericDate)(0xc00021d338), IssuedAt:(*jwt.NumericDate)(0xc00021d260), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8155", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"38b0ec22-91ea-42a7-a5b5-ecef8bfbe80a"}}}
  I1118 13:19:43.852533       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1118 13:19:43.857731       1 log.go:194] OK: Validated signature on JWT
  I1118 13:19:43.857797       1 log.go:194] OK: Got valid claims from token!
  I1118 13:19:43.857838       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8155:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000136998), NotBefore:(*jwt.NumericDate)(0xc0001369f0), IssuedAt:(*jwt.NumericDate)(0xc0001369a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8155", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"38b0ec22-91ea-42a7-a5b5-ecef8bfbe80a"}}}

  Nov 18 13:20:17.131: INFO: completed pod
  Nov 18 13:20:17.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8155" for this suite. @ 11/18/23 13:20:17.143
• [34.072 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/18/23 13:20:17.149
  Nov 18 13:20:17.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 13:20:17.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:17.166
  E1118 13:20:17.168359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:17.168
  Nov 18 13:20:17.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: creating the pod @ 11/18/23 13:20:17.17
  STEP: submitting the pod to kubernetes @ 11/18/23 13:20:17.17
  E1118 13:20:18.168953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:19.169109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:19.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-603" for this suite. @ 11/18/23 13:20:19.284
• [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 11/18/23 13:20:19.293
  Nov 18 13:20:19.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:20:19.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:19.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:19.312
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:20:19.315
  E1118 13:20:20.169864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:21.170149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:22.170216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:23.170705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:20:23.337
  Nov 18 13:20:23.339: INFO: Trying to get logs from node ip-172-31-39-133 pod downwardapi-volume-fc44296b-2503-46e6-8b0d-91f9662d67cd container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:20:23.353
  Nov 18 13:20:23.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3090" for this suite. @ 11/18/23 13:20:23.374
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/18/23 13:20:23.381
  Nov 18 13:20:23.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 13:20:23.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:23.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:23.401
  STEP: creating a Deployment @ 11/18/23 13:20:23.406
  STEP: waiting for Deployment to be created @ 11/18/23 13:20:23.41
  STEP: waiting for all Replicas to be Ready @ 11/18/23 13:20:23.411
  Nov 18 13:20:23.412: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.412: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.424: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.424: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.441: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.441: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.474: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Nov 18 13:20:23.474: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1118 13:20:24.171177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:24.747: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov 18 13:20:24.747: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Nov 18 13:20:25.039: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/18/23 13:20:25.039
  Nov 18 13:20:25.047: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/18/23 13:20:25.048
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 0
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.049: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.060: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.060: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.079: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.079: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:25.089: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:25.089: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:25.098: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:25.098: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  E1118 13:20:25.171392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:26.054: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:26.054: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:26.075: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  STEP: listing Deployments @ 11/18/23 13:20:26.075
  Nov 18 13:20:26.079: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/18/23 13:20:26.079
  Nov 18 13:20:26.087: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/18/23 13:20:26.087
  Nov 18 13:20:26.095: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:26.098: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:26.125: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:26.135: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:26.148: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1118 13:20:26.172114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:27.053: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:27.079: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:27.088: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:27.095: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Nov 18 13:20:27.101: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1118 13:20:27.172533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:28.173149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:28.782: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/18/23 13:20:28.805
  STEP: fetching the DeploymentStatus @ 11/18/23 13:20:28.815
  Nov 18 13:20:28.821: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 1
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 2
  Nov 18 13:20:28.822: INFO: observed Deployment test-deployment in namespace deployment-325 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/18/23 13:20:28.822
  Nov 18 13:20:28.831: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.832: INFO: observed event type MODIFIED
  Nov 18 13:20:28.835: INFO: Log out all the ReplicaSets if there is no deployment created
  Nov 18 13:20:28.840: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a321c9a-4623-48da-8d39-410a5fdd7beb",
      ResourceVersion: (string) (len=5) "25314",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910425,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a4dbe0a9-d5e0-4a90-a527-bffb2208524b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 34 64 62  65 30 61 39 2d 64 35 65  |":\"a4dbe0a9-d5e|
              00000130  30 2d 34 61 39 30 2d 61  35 32 37 2d 62 66 66 62  |0-4a90-a527-bffb|
              00000140  32 32 30 38 35 32 34 62  5c 22 7d 22 3a 7b 7d 7d  |2208524b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 18 13:20:28.845: INFO: pod: "test-deployment-64fd565c98-85hfc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-85hfc",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c68d42b-0e13-4411-89b8-75a1f482b65c",
      ResourceVersion: (string) (len=5) "25290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "3a321c9a-4623-48da-8d39-410a5fdd7beb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 61 33 32 31 63 39 61  |uid\":\"3a321c9a|
              000000a0  2d 34 36 32 33 2d 34 38  64 61 2d 38 64 33 39 2d  |-4623-48da-8d39-|
              000000b0  34 31 30 61 35 66 64 64  37 62 65 62 5c 22 7d 22  |410a5fdd7beb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 32 30 36 5c  |192.168.250.206\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2pz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2pz2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835910426,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://6497bbbde48a3a24eed75e6be80a3794cab53a880b5f858c67cb41277cd58a05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 18 13:20:28.847: INFO: pod: "test-deployment-64fd565c98-g988t":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-g988t",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e089b63-46b7-44f0-b469-597d3cee9006",
      ResourceVersion: (string) (len=5) "25310",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910425,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "3a321c9a-4623-48da-8d39-410a5fdd7beb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 61 33 32 31 63 39 61  |uid\":\"3a321c9a|
              000000a0  2d 34 36 32 33 2d 34 38  64 61 2d 38 64 33 39 2d  |-4623-48da-8d39-|
              000000b0  34 31 30 61 35 66 64 64  37 62 65 62 5c 22 7d 22  |410a5fdd7beb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 39 33 5c 22  |192.168.171.93\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k68l6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k68l6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910425,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835910425,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://ba318dcb31e74cb3037db8797f0aeedfe9eedb6796ac1df74a1dbfbc5969497b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 18 13:20:28.849: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67b6ce13-cc27-40c2-b1bc-c10faaf12e0a",
      ResourceVersion: (string) (len=5) "25211",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a4dbe0a9-d5e0-4a90-a527-bffb2208524b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 34 64 62  65 30 61 39 2d 64 35 65  |":\"a4dbe0a9-d5e|
              00000130  30 2d 34 61 39 30 2d 61  35 32 37 2d 62 66 66 62  |0-4a90-a527-bffb|
              00000140  32 32 30 38 35 32 34 62  5c 22 7d 22 3a 7b 7d 7d  |2208524b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 18 13:20:28.853: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ea736ba-0b9b-43f8-9c73-8fe76a8fdbd5",
      ResourceVersion: (string) (len=5) "25306",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a4dbe0a9-d5e0-4a90-a527-bffb2208524b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 34 64 62  65 30 61 39 2d 64 35 65  |":\"a4dbe0a9-d5e|
              00000130  30 2d 34 61 39 30 2d 61  35 32 37 2d 62 66 66 62  |0-4a90-a527-bffb|
              00000140  32 32 30 38 35 32 34 62  5c 22 7d 22 3a 7b 7d 7d  |2208524b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Nov 18 13:20:28.863: INFO: pod: "test-deployment-79ff746c4-jlq88":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-jlq88",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89a8a29b-399e-42a0-9181-9936372bb0a5",
      ResourceVersion: (string) (len=5) "25323",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910427,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "7ea736ba-0b9b-43f8-9c73-8fe76a8fdbd5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 65 61 37 33 36 62 61  |uid\":\"7ea736ba|
              000000a0  2d 30 62 39 62 2d 34 33  66 38 2d 39 63 37 33 2d  |-0b9b-43f8-9c73-|
              000000b0  38 66 65 37 36 61 38 66  64 62 64 35 5c 22 7d 22  |8fe76a8fdbd5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 31 39 39 5c  |192.168.250.199\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q76p4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q76p4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910427,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835910427,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://953ee8c0a70d803c39b1efd8d17346d2ec38a31aac17e09ce71931156abcc1e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 18 13:20:28.866: INFO: pod: "test-deployment-79ff746c4-snvgb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-snvgb",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-325",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baa34959-1c5f-47fe-989c-fd98c925d620",
      ResourceVersion: (string) (len=5) "25260",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "7ea736ba-0b9b-43f8-9c73-8fe76a8fdbd5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 65 61 37 33 36 62 61  |uid\":\"7ea736ba|
              000000a0  2d 30 62 39 62 2d 34 33  66 38 2d 39 63 37 33 2d  |-0b9b-43f8-9c73-|
              000000b0  38 66 65 37 36 61 38 66  64 62 64 35 5c 22 7d 22  |8fe76a8fdbd5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 37 31 2e 39 34 5c 22  |192.168.171.94\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lsj6c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lsj6c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-39-133",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910427,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.39.133",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.171.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.171.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835910426,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a49aad90b9a1a663ff85f7d08d6361ea2a8cfaa94a31c13a27b1f356ff1245f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Nov 18 13:20:28.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-325" for this suite. @ 11/18/23 13:20:28.872
• [5.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 11/18/23 13:20:28.878
  Nov 18 13:20:28.878: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 13:20:28.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:28.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:28.899
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/18/23 13:20:28.9
  Nov 18 13:20:28.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:20:29.173276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:30.174768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:31.175603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:32.176005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:33.177018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/18/23 13:20:34.083
  Nov 18 13:20:34.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:20:34.177086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:35.177591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:35.390: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:20:36.177663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:37.178591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:38.179473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:39.180285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:40.180412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:40.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8898" for this suite. @ 11/18/23 13:20:40.6
• [11.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 11/18/23 13:20:40.606
  Nov 18 13:20:40.606: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename lease-test @ 11/18/23 13:20:40.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:40.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:40.625
  Nov 18 13:20:40.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5974" for this suite. @ 11/18/23 13:20:40.681
• [0.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 11/18/23 13:20:40.687
  Nov 18 13:20:40.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:20:40.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:40.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:40.707
  STEP: creating service endpoint-test2 in namespace services-71 @ 11/18/23 13:20:40.709
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-71 to expose endpoints map[] @ 11/18/23 13:20:40.718
  Nov 18 13:20:40.721: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1118 13:20:41.180709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:41.728: INFO: successfully validated that service endpoint-test2 in namespace services-71 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-71 @ 11/18/23 13:20:41.728
  E1118 13:20:42.181592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:43.182669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-71 to expose endpoints map[pod1:[80]] @ 11/18/23 13:20:43.748
  Nov 18 13:20:43.759: INFO: successfully validated that service endpoint-test2 in namespace services-71 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/18/23 13:20:43.759
  Nov 18 13:20:43.759: INFO: Creating new exec pod
  E1118 13:20:44.183619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:45.183759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:46.184508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:46.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-71 exec execpodxjbvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 18 13:20:46.918: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 18 13:20:46.918: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:20:46.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-71 exec execpodxjbvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  Nov 18 13:20:47.059: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.20 80\nConnection to 10.152.183.20 80 port [tcp/http] succeeded!\n"
  Nov 18 13:20:47.059: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-71 @ 11/18/23 13:20:47.059
  E1118 13:20:47.185042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:48.186009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-71 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/18/23 13:20:49.075
  Nov 18 13:20:49.087: INFO: successfully validated that service endpoint-test2 in namespace services-71 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/18/23 13:20:49.087
  E1118 13:20:49.186607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:50.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-71 exec execpodxjbvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1118 13:20:50.187178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:50.231: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 18 13:20:50.231: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:20:50.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-71 exec execpodxjbvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  Nov 18 13:20:50.380: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.20 80\nConnection to 10.152.183.20 80 port [tcp/http] succeeded!\n"
  Nov 18 13:20:50.380: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-71 @ 11/18/23 13:20:50.38
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-71 to expose endpoints map[pod2:[80]] @ 11/18/23 13:20:50.397
  Nov 18 13:20:50.408: INFO: successfully validated that service endpoint-test2 in namespace services-71 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/18/23 13:20:50.408
  E1118 13:20:51.187235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:20:51.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-71 exec execpodxjbvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Nov 18 13:20:51.551: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Nov 18 13:20:51.551: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:20:51.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-71 exec execpodxjbvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  Nov 18 13:20:51.690: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.20 80\nConnection to 10.152.183.20 80 port [tcp/http] succeeded!\n"
  Nov 18 13:20:51.690: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-71 @ 11/18/23 13:20:51.69
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-71 to expose endpoints map[] @ 11/18/23 13:20:51.708
  Nov 18 13:20:51.715: INFO: successfully validated that service endpoint-test2 in namespace services-71 exposes endpoints map[]
  Nov 18 13:20:51.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-71" for this suite. @ 11/18/23 13:20:51.737
• [11.057 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 11/18/23 13:20:51.744
  Nov 18 13:20:51.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 13:20:51.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:51.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:51.762
  STEP: Creating secret with name secret-test-ed7f43d3-a1df-4aef-b674-224a7111cf90 @ 11/18/23 13:20:51.764
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:20:51.769
  E1118 13:20:52.187358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:53.187775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:54.188816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:55.189194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:20:55.787
  Nov 18 13:20:55.791: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-secrets-7e59c0f7-854b-4cf1-ae40-44179851aab0 container secret-env-test: <nil>
  STEP: delete the pod @ 11/18/23 13:20:55.798
  Nov 18 13:20:55.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9902" for this suite. @ 11/18/23 13:20:55.815
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/18/23 13:20:55.823
  Nov 18 13:20:55.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename tables @ 11/18/23 13:20:55.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:55.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:55.841
  Nov 18 13:20:55.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2469" for this suite. @ 11/18/23 13:20:55.848
• [0.032 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 11/18/23 13:20:55.854
  Nov 18 13:20:55.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename resourcequota @ 11/18/23 13:20:55.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:20:55.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:20:55.873
  E1118 13:20:56.190204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:57.190771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:58.191669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:20:59.192656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:00.192822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:01.193161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:02.193994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:03.194647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:04.195666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:05.196495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:06.196986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:07.197311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:08.197753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:09.198799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:10.199047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:11.199615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:12.199846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 11/18/23 13:21:12.879
  E1118 13:21:13.200665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:14.201180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:15.201726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:16.202586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:17.203379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/18/23 13:21:17.882
  STEP: Ensuring resource quota status is calculated @ 11/18/23 13:21:17.886
  E1118 13:21:18.203862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:19.204056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 11/18/23 13:21:19.891
  STEP: Ensuring resource quota status captures configMap creation @ 11/18/23 13:21:19.905
  E1118 13:21:20.204878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:21.205059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 11/18/23 13:21:21.909
  STEP: Ensuring resource quota status released usage @ 11/18/23 13:21:21.915
  E1118 13:21:22.205615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:23.205929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:21:23.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-867" for this suite. @ 11/18/23 13:21:23.922
• [28.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 11/18/23 13:21:23.929
  Nov 18 13:21:23.929: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename security-context-test @ 11/18/23 13:21:23.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:21:23.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:21:23.949
  E1118 13:21:24.206593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:25.206782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:26.207182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:27.207352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:21:27.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6632" for this suite. @ 11/18/23 13:21:27.973
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 11/18/23 13:21:27.98
  Nov 18 13:21:27.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 13:21:27.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:21:27.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:21:28
  STEP: create the rc @ 11/18/23 13:21:28.002
  W1118 13:21:28.009302      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1118 13:21:28.207695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:29.207817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:30.208066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:31.208091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:32.208206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/18/23 13:21:33.014
  STEP: wait for all pods to be garbage collected @ 11/18/23 13:21:33.02
  E1118 13:21:33.208385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:34.209168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:35.209791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:36.210003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:37.210185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/18/23 13:21:38.027
  W1118 13:21:38.031792      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 18 13:21:38.031: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 18 13:21:38.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6426" for this suite. @ 11/18/23 13:21:38.035
• [10.061 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 11/18/23 13:21:38.041
  Nov 18 13:21:38.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:21:38.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:21:38.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:21:38.072
  STEP: Creating configMap configmap-3378/configmap-test-40bcd3e8-b54c-4506-abdc-26d78fe07c2d @ 11/18/23 13:21:38.074
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:21:38.08
  E1118 13:21:38.211085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:39.211500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:40.212512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:41.212647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:21:42.1
  Nov 18 13:21:42.103: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-fad57c1f-d2b3-4bf3-a605-f5cbd6b17298 container env-test: <nil>
  STEP: delete the pod @ 11/18/23 13:21:42.115
  Nov 18 13:21:42.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3378" for this suite. @ 11/18/23 13:21:42.135
• [4.099 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 11/18/23 13:21:42.141
  Nov 18 13:21:42.141: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:21:42.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:21:42.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:21:42.161
  STEP: creating service in namespace services-7186 @ 11/18/23 13:21:42.162
  STEP: creating service affinity-clusterip-transition in namespace services-7186 @ 11/18/23 13:21:42.162
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7186 @ 11/18/23 13:21:42.175
  I1118 13:21:42.182169      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-7186, replica count: 3
  E1118 13:21:42.213558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:43.213892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:44.214450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:45.214572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:21:45.232783      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:21:45.238: INFO: Creating new exec pod
  E1118 13:21:46.214579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:47.215235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:48.215525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:21:48.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-7186 exec execpod-affinitymjbtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Nov 18 13:21:48.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Nov 18 13:21:48.397: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:21:48.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-7186 exec execpod-affinitymjbtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.55 80'
  Nov 18 13:21:48.548: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.55 80\nConnection to 10.152.183.55 80 port [tcp/http] succeeded!\n"
  Nov 18 13:21:48.548: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Nov 18 13:21:48.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-7186 exec execpod-affinitymjbtq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.55:80/ ; done'
  Nov 18 13:21:48.765: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n"
  Nov 18 13:21:48.765: INFO: stdout: "\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-s6wkj\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-s6wkj\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-s6wkj\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-s6wkj\naffinity-clusterip-transition-95knh\naffinity-clusterip-transition-s6wkj\naffinity-clusterip-transition-95knh"
  Nov 18 13:21:48.765: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-s6wkj
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-s6wkj
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-s6wkj
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-s6wkj
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-s6wkj
  Nov 18 13:21:48.766: INFO: Received response from host: affinity-clusterip-transition-95knh
  Nov 18 13:21:48.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-7186 exec execpod-affinitymjbtq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.55:80/ ; done'
  Nov 18 13:21:49.004: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.55:80/\n"
  Nov 18 13:21:49.004: INFO: stdout: "\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58\naffinity-clusterip-transition-ddv58"
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.004: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Received response from host: affinity-clusterip-transition-ddv58
  Nov 18 13:21:49.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 13:21:49.008: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7186, will wait for the garbage collector to delete the pods @ 11/18/23 13:21:49.022
  Nov 18 13:21:49.084: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.370727ms
  Nov 18 13:21:49.185: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.722791ms
  E1118 13:21:49.216289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:50.217106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:51.217452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:52.217882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7186" for this suite. @ 11/18/23 13:21:52.501
• [10.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 11/18/23 13:21:52.509
  Nov 18 13:21:52.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:21:52.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:21:52.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:21:52.528
  STEP: Creating configMap with name projected-configmap-test-volume-f6e5090a-5c4a-44a0-8107-b4a8dd133cfc @ 11/18/23 13:21:52.53
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:21:52.534
  E1118 13:21:53.217997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:54.218511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:55.219526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:56.219787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:21:56.552
  Nov 18 13:21:56.555: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-configmaps-a7552aad-267f-4b32-b3c2-03fdfe6b0404 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:21:56.562
  Nov 18 13:21:56.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8455" for this suite. @ 11/18/23 13:21:56.585
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 11/18/23 13:21:56.592
  Nov 18 13:21:56.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/18/23 13:21:56.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:21:56.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:21:56.609
  STEP: set up a multi version CRD @ 11/18/23 13:21:56.611
  Nov 18 13:21:56.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:21:57.220716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:58.221151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:21:59.222062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 11/18/23 13:21:59.846
  STEP: check the unserved version gets removed @ 11/18/23 13:21:59.863
  E1118 13:22:00.222760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/18/23 13:22:00.702
  E1118 13:22:01.222792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:02.223084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:03.223808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:03.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1951" for this suite. @ 11/18/23 13:22:03.301
• [6.715 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 11/18/23 13:22:03.308
  Nov 18 13:22:03.308: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/18/23 13:22:03.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:03.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:03.327
  Nov 18 13:22:03.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:22:03.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7850" for this suite. @ 11/18/23 13:22:03.875
• [0.575 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 11/18/23 13:22:03.883
  Nov 18 13:22:03.883: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pod-network-test @ 11/18/23 13:22:03.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:03.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:03.901
  STEP: Performing setup for networking test in namespace pod-network-test-1840 @ 11/18/23 13:22:03.903
  STEP: creating a selector @ 11/18/23 13:22:03.903
  STEP: Creating the service pods in kubernetes @ 11/18/23 13:22:03.903
  Nov 18 13:22:03.903: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1118 13:22:04.224039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:05.224432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:06.224848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:07.224984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:08.225747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:09.225824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:10.226429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:11.226578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:12.227186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:13.227348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:14.228426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:15.229162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/18/23 13:22:15.975
  E1118 13:22:16.230079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:17.230280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:17.991: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 18 13:22:17.991: INFO: Breadth first check of 192.168.250.211 on host 172.31.29.39...
  Nov 18 13:22:17.994: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.250.212:9080/dial?request=hostname&protocol=udp&host=192.168.250.211&port=8081&tries=1'] Namespace:pod-network-test-1840 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:22:17.994: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:22:17.995: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:22:17.995: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1840/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.250.212%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.250.211%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 18 13:22:18.078: INFO: Waiting for responses: map[]
  Nov 18 13:22:18.078: INFO: reached 192.168.250.211 after 0/1 tries
  Nov 18 13:22:18.078: INFO: Breadth first check of 192.168.171.99 on host 172.31.39.133...
  Nov 18 13:22:18.081: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.250.212:9080/dial?request=hostname&protocol=udp&host=192.168.171.99&port=8081&tries=1'] Namespace:pod-network-test-1840 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:22:18.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:22:18.081: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:22:18.081: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1840/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.250.212%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.171.99%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Nov 18 13:22:18.175: INFO: Waiting for responses: map[]
  Nov 18 13:22:18.175: INFO: reached 192.168.171.99 after 0/1 tries
  Nov 18 13:22:18.175: INFO: Breadth first check of 192.168.60.99 on host 172.31.84.152...
  Nov 18 13:22:18.178: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.250.212:9080/dial?request=hostname&protocol=udp&host=192.168.60.99&port=8081&tries=1'] Namespace:pod-network-test-1840 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:22:18.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:22:18.179: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:22:18.179: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1840/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.250.212%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.60.99%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1118 13:22:18.231049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:18.266: INFO: Waiting for responses: map[]
  Nov 18 13:22:18.266: INFO: reached 192.168.60.99 after 0/1 tries
  Nov 18 13:22:18.266: INFO: Going to retry 0 out of 3 pods....
  Nov 18 13:22:18.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1840" for this suite. @ 11/18/23 13:22:18.27
• [14.393 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/18/23 13:22:18.276
  Nov 18 13:22:18.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svc-latency @ 11/18/23 13:22:18.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:18.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:18.294
  Nov 18 13:22:18.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2635 @ 11/18/23 13:22:18.296
  I1118 13:22:18.302063      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2635, replica count: 1
  E1118 13:22:19.232063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:22:19.353738      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Nov 18 13:22:19.465: INFO: Created: latency-svc-q24nj
  Nov 18 13:22:19.471: INFO: Got endpoints: latency-svc-q24nj [16.516111ms]
  Nov 18 13:22:19.482: INFO: Created: latency-svc-98swk
  Nov 18 13:22:19.488: INFO: Got endpoints: latency-svc-98swk [16.878167ms]
  Nov 18 13:22:19.489: INFO: Created: latency-svc-lrngt
  Nov 18 13:22:19.494: INFO: Got endpoints: latency-svc-lrngt [23.339017ms]
  Nov 18 13:22:19.496: INFO: Created: latency-svc-bfb6b
  Nov 18 13:22:19.503: INFO: Got endpoints: latency-svc-bfb6b [32.184107ms]
  Nov 18 13:22:19.504: INFO: Created: latency-svc-ppd65
  Nov 18 13:22:19.509: INFO: Got endpoints: latency-svc-ppd65 [37.593619ms]
  Nov 18 13:22:19.513: INFO: Created: latency-svc-fbvrh
  Nov 18 13:22:19.516: INFO: Got endpoints: latency-svc-fbvrh [45.107838ms]
  Nov 18 13:22:19.519: INFO: Created: latency-svc-vwhbd
  Nov 18 13:22:19.524: INFO: Got endpoints: latency-svc-vwhbd [53.586661ms]
  Nov 18 13:22:19.525: INFO: Created: latency-svc-njghl
  Nov 18 13:22:19.531: INFO: Got endpoints: latency-svc-njghl [59.97576ms]
  Nov 18 13:22:19.533: INFO: Created: latency-svc-4nqxf
  Nov 18 13:22:19.538: INFO: Got endpoints: latency-svc-4nqxf [67.57181ms]
  Nov 18 13:22:19.542: INFO: Created: latency-svc-2x2kt
  Nov 18 13:22:19.548: INFO: Created: latency-svc-fbmsd
  Nov 18 13:22:19.548: INFO: Got endpoints: latency-svc-2x2kt [77.157422ms]
  Nov 18 13:22:19.555: INFO: Got endpoints: latency-svc-fbmsd [83.776435ms]
  Nov 18 13:22:19.556: INFO: Created: latency-svc-f7zh7
  Nov 18 13:22:19.562: INFO: Got endpoints: latency-svc-f7zh7 [90.848046ms]
  Nov 18 13:22:19.566: INFO: Created: latency-svc-9z8d2
  Nov 18 13:22:19.570: INFO: Created: latency-svc-tg8mq
  Nov 18 13:22:19.571: INFO: Got endpoints: latency-svc-9z8d2 [100.328437ms]
  Nov 18 13:22:19.578: INFO: Created: latency-svc-zdq49
  Nov 18 13:22:19.582: INFO: Got endpoints: latency-svc-zdq49 [111.009359ms]
  Nov 18 13:22:19.656: INFO: Got endpoints: latency-svc-tg8mq [185.337813ms]
  Nov 18 13:22:19.664: INFO: Created: latency-svc-mqgqv
  Nov 18 13:22:19.668: INFO: Got endpoints: latency-svc-mqgqv [197.48202ms]
  Nov 18 13:22:19.674: INFO: Created: latency-svc-5t7qw
  Nov 18 13:22:19.680: INFO: Got endpoints: latency-svc-5t7qw [192.602807ms]
  Nov 18 13:22:19.683: INFO: Created: latency-svc-tjz4t
  Nov 18 13:22:19.689: INFO: Got endpoints: latency-svc-tjz4t [194.917726ms]
  Nov 18 13:22:19.691: INFO: Created: latency-svc-f5sdf
  Nov 18 13:22:19.694: INFO: Got endpoints: latency-svc-f5sdf [191.252164ms]
  Nov 18 13:22:19.699: INFO: Created: latency-svc-lfzt7
  Nov 18 13:22:19.708: INFO: Created: latency-svc-2rkfb
  Nov 18 13:22:19.708: INFO: Got endpoints: latency-svc-lfzt7 [198.911974ms]
  Nov 18 13:22:19.712: INFO: Got endpoints: latency-svc-2rkfb [195.223141ms]
  Nov 18 13:22:19.716: INFO: Created: latency-svc-kjgkq
  Nov 18 13:22:19.720: INFO: Got endpoints: latency-svc-kjgkq [195.510716ms]
  Nov 18 13:22:19.722: INFO: Created: latency-svc-crnc7
  Nov 18 13:22:19.728: INFO: Got endpoints: latency-svc-crnc7 [196.820948ms]
  Nov 18 13:22:19.729: INFO: Created: latency-svc-2qvsj
  Nov 18 13:22:19.733: INFO: Got endpoints: latency-svc-2qvsj [194.489118ms]
  Nov 18 13:22:19.737: INFO: Created: latency-svc-fn6tj
  Nov 18 13:22:19.742: INFO: Got endpoints: latency-svc-fn6tj [193.517672ms]
  Nov 18 13:22:19.746: INFO: Created: latency-svc-2vr7t
  Nov 18 13:22:19.756: INFO: Got endpoints: latency-svc-2vr7t [201.551898ms]
  Nov 18 13:22:19.824: INFO: Created: latency-svc-hjqqm
  Nov 18 13:22:19.824: INFO: Created: latency-svc-jdnpd
  Nov 18 13:22:19.824: INFO: Created: latency-svc-6hlwk
  Nov 18 13:22:19.826: INFO: Created: latency-svc-xnw26
  Nov 18 13:22:19.826: INFO: Created: latency-svc-m8nnl
  Nov 18 13:22:19.828: INFO: Created: latency-svc-bpvlg
  Nov 18 13:22:19.828: INFO: Created: latency-svc-lrrgr
  Nov 18 13:22:19.828: INFO: Created: latency-svc-qv8w7
  Nov 18 13:22:19.828: INFO: Created: latency-svc-xgztn
  Nov 18 13:22:19.829: INFO: Created: latency-svc-dcqcv
  Nov 18 13:22:19.830: INFO: Created: latency-svc-zk4gn
  Nov 18 13:22:19.830: INFO: Created: latency-svc-h5mrq
  Nov 18 13:22:19.830: INFO: Created: latency-svc-jbz4w
  Nov 18 13:22:19.831: INFO: Created: latency-svc-g92t4
  Nov 18 13:22:19.831: INFO: Created: latency-svc-fcszq
  Nov 18 13:22:19.833: INFO: Got endpoints: latency-svc-hjqqm [143.559472ms]
  Nov 18 13:22:19.833: INFO: Got endpoints: latency-svc-jdnpd [152.399843ms]
  Nov 18 13:22:19.838: INFO: Got endpoints: latency-svc-6hlwk [95.924832ms]
  Nov 18 13:22:19.838: INFO: Got endpoints: latency-svc-g92t4 [81.478436ms]
  Nov 18 13:22:19.841: INFO: Got endpoints: latency-svc-m8nnl [129.732417ms]
  Nov 18 13:22:19.841: INFO: Got endpoints: latency-svc-bpvlg [279.453064ms]
  Nov 18 13:22:19.844: INFO: Got endpoints: latency-svc-xnw26 [272.17865ms]
  Nov 18 13:22:19.845: INFO: Got endpoints: latency-svc-xgztn [125.21102ms]
  Nov 18 13:22:19.848: INFO: Got endpoints: latency-svc-dcqcv [153.938819ms]
  Nov 18 13:22:19.853: INFO: Got endpoints: latency-svc-lrrgr [196.778507ms]
  Nov 18 13:22:19.856: INFO: Got endpoints: latency-svc-jbz4w [187.57166ms]
  Nov 18 13:22:19.856: INFO: Created: latency-svc-wj9md
  Nov 18 13:22:19.861: INFO: Created: latency-svc-4gdk8
  Nov 18 13:22:19.866: INFO: Created: latency-svc-bsscl
  Nov 18 13:22:19.873: INFO: Got endpoints: latency-svc-qv8w7 [164.858754ms]
  Nov 18 13:22:19.873: INFO: Created: latency-svc-nmwk2
  Nov 18 13:22:19.880: INFO: Created: latency-svc-kt4tb
  Nov 18 13:22:19.886: INFO: Created: latency-svc-n7pth
  Nov 18 13:22:19.893: INFO: Created: latency-svc-hj74v
  Nov 18 13:22:19.900: INFO: Created: latency-svc-v4qm5
  Nov 18 13:22:19.903: INFO: Created: latency-svc-fqv4z
  Nov 18 13:22:19.911: INFO: Created: latency-svc-zdwg2
  Nov 18 13:22:19.917: INFO: Created: latency-svc-hpv68
  Nov 18 13:22:19.922: INFO: Got endpoints: latency-svc-h5mrq [340.023265ms]
  Nov 18 13:22:19.924: INFO: Created: latency-svc-6fczp
  Nov 18 13:22:19.932: INFO: Created: latency-svc-whd2c
  Nov 18 13:22:19.969: INFO: Got endpoints: latency-svc-zk4gn [241.751082ms]
  Nov 18 13:22:19.979: INFO: Created: latency-svc-cq854
  Nov 18 13:22:20.020: INFO: Got endpoints: latency-svc-fcszq [287.193835ms]
  Nov 18 13:22:20.030: INFO: Created: latency-svc-7cnwd
  Nov 18 13:22:20.071: INFO: Got endpoints: latency-svc-wj9md [237.959138ms]
  Nov 18 13:22:20.081: INFO: Created: latency-svc-fkpvz
  Nov 18 13:22:20.121: INFO: Got endpoints: latency-svc-4gdk8 [287.682054ms]
  Nov 18 13:22:20.131: INFO: Created: latency-svc-7kx4k
  Nov 18 13:22:20.173: INFO: Got endpoints: latency-svc-bsscl [335.191602ms]
  Nov 18 13:22:20.182: INFO: Created: latency-svc-mvwcn
  Nov 18 13:22:20.219: INFO: Got endpoints: latency-svc-nmwk2 [381.162285ms]
  E1118 13:22:20.232841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:20.233: INFO: Created: latency-svc-fxktb
  Nov 18 13:22:20.270: INFO: Got endpoints: latency-svc-kt4tb [428.275095ms]
  Nov 18 13:22:20.279: INFO: Created: latency-svc-qmxl9
  Nov 18 13:22:20.322: INFO: Got endpoints: latency-svc-n7pth [480.416653ms]
  Nov 18 13:22:20.331: INFO: Created: latency-svc-j2t2c
  Nov 18 13:22:20.372: INFO: Got endpoints: latency-svc-hj74v [527.955131ms]
  Nov 18 13:22:20.381: INFO: Created: latency-svc-fqhkp
  Nov 18 13:22:20.419: INFO: Got endpoints: latency-svc-v4qm5 [573.943084ms]
  Nov 18 13:22:20.429: INFO: Created: latency-svc-wbnnq
  Nov 18 13:22:20.470: INFO: Got endpoints: latency-svc-fqv4z [621.86713ms]
  Nov 18 13:22:20.480: INFO: Created: latency-svc-xkb2p
  Nov 18 13:22:20.519: INFO: Got endpoints: latency-svc-zdwg2 [666.136822ms]
  Nov 18 13:22:20.531: INFO: Created: latency-svc-5kz2b
  Nov 18 13:22:20.569: INFO: Got endpoints: latency-svc-hpv68 [712.859487ms]
  Nov 18 13:22:20.580: INFO: Created: latency-svc-d8bxv
  Nov 18 13:22:20.620: INFO: Got endpoints: latency-svc-6fczp [747.438245ms]
  Nov 18 13:22:20.629: INFO: Created: latency-svc-q9shj
  Nov 18 13:22:20.671: INFO: Got endpoints: latency-svc-whd2c [748.617095ms]
  Nov 18 13:22:20.682: INFO: Created: latency-svc-f4qvl
  Nov 18 13:22:20.720: INFO: Got endpoints: latency-svc-cq854 [750.772613ms]
  Nov 18 13:22:20.729: INFO: Created: latency-svc-pdzkn
  Nov 18 13:22:20.770: INFO: Got endpoints: latency-svc-7cnwd [749.537031ms]
  Nov 18 13:22:20.782: INFO: Created: latency-svc-57f9n
  Nov 18 13:22:20.819: INFO: Got endpoints: latency-svc-fkpvz [748.376971ms]
  Nov 18 13:22:20.831: INFO: Created: latency-svc-wlx5m
  Nov 18 13:22:20.871: INFO: Got endpoints: latency-svc-7kx4k [750.151012ms]
  Nov 18 13:22:20.882: INFO: Created: latency-svc-t8bdh
  Nov 18 13:22:20.924: INFO: Got endpoints: latency-svc-mvwcn [750.689191ms]
  Nov 18 13:22:20.934: INFO: Created: latency-svc-z9nfn
  Nov 18 13:22:20.971: INFO: Got endpoints: latency-svc-fxktb [751.852401ms]
  Nov 18 13:22:20.981: INFO: Created: latency-svc-jpnpv
  Nov 18 13:22:21.020: INFO: Got endpoints: latency-svc-qmxl9 [750.242633ms]
  Nov 18 13:22:21.030: INFO: Created: latency-svc-b4d9w
  Nov 18 13:22:21.070: INFO: Got endpoints: latency-svc-j2t2c [747.682589ms]
  Nov 18 13:22:21.079: INFO: Created: latency-svc-rrn2j
  Nov 18 13:22:21.121: INFO: Got endpoints: latency-svc-fqhkp [748.849749ms]
  Nov 18 13:22:21.130: INFO: Created: latency-svc-b7q2p
  Nov 18 13:22:21.172: INFO: Got endpoints: latency-svc-wbnnq [753.191704ms]
  Nov 18 13:22:21.182: INFO: Created: latency-svc-v2gxd
  Nov 18 13:22:21.224: INFO: Got endpoints: latency-svc-xkb2p [753.436657ms]
  E1118 13:22:21.233411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:21.233: INFO: Created: latency-svc-bclcz
  Nov 18 13:22:21.272: INFO: Got endpoints: latency-svc-5kz2b [752.479951ms]
  Nov 18 13:22:21.283: INFO: Created: latency-svc-25f4l
  Nov 18 13:22:21.320: INFO: Got endpoints: latency-svc-d8bxv [750.473356ms]
  Nov 18 13:22:21.334: INFO: Created: latency-svc-7vqr6
  Nov 18 13:22:21.371: INFO: Got endpoints: latency-svc-q9shj [750.992025ms]
  Nov 18 13:22:21.380: INFO: Created: latency-svc-c96zf
  Nov 18 13:22:21.421: INFO: Got endpoints: latency-svc-f4qvl [749.934268ms]
  Nov 18 13:22:21.432: INFO: Created: latency-svc-5zv2f
  Nov 18 13:22:21.472: INFO: Got endpoints: latency-svc-pdzkn [751.420693ms]
  Nov 18 13:22:21.481: INFO: Created: latency-svc-q4jcb
  Nov 18 13:22:21.520: INFO: Got endpoints: latency-svc-57f9n [750.428126ms]
  Nov 18 13:22:21.531: INFO: Created: latency-svc-rwgdp
  Nov 18 13:22:21.569: INFO: Got endpoints: latency-svc-wlx5m [749.738924ms]
  Nov 18 13:22:21.579: INFO: Created: latency-svc-dhxb7
  Nov 18 13:22:21.621: INFO: Got endpoints: latency-svc-t8bdh [750.02315ms]
  Nov 18 13:22:21.631: INFO: Created: latency-svc-lsxdr
  Nov 18 13:22:21.672: INFO: Got endpoints: latency-svc-z9nfn [748.163407ms]
  Nov 18 13:22:21.681: INFO: Created: latency-svc-lrw6j
  Nov 18 13:22:21.724: INFO: Got endpoints: latency-svc-jpnpv [753.088561ms]
  Nov 18 13:22:21.734: INFO: Created: latency-svc-mmgw9
  Nov 18 13:22:21.770: INFO: Got endpoints: latency-svc-b4d9w [749.772295ms]
  Nov 18 13:22:21.779: INFO: Created: latency-svc-v27pm
  Nov 18 13:22:21.820: INFO: Got endpoints: latency-svc-rrn2j [750.376345ms]
  Nov 18 13:22:21.829: INFO: Created: latency-svc-nprq2
  Nov 18 13:22:21.871: INFO: Got endpoints: latency-svc-b7q2p [750.334324ms]
  Nov 18 13:22:21.881: INFO: Created: latency-svc-4jps4
  Nov 18 13:22:21.921: INFO: Got endpoints: latency-svc-v2gxd [748.84142ms]
  Nov 18 13:22:21.930: INFO: Created: latency-svc-f7vk9
  Nov 18 13:22:21.970: INFO: Got endpoints: latency-svc-bclcz [746.091472ms]
  Nov 18 13:22:21.981: INFO: Created: latency-svc-wq2xk
  Nov 18 13:22:22.019: INFO: Got endpoints: latency-svc-25f4l [747.11978ms]
  Nov 18 13:22:22.030: INFO: Created: latency-svc-jxrrb
  Nov 18 13:22:22.071: INFO: Got endpoints: latency-svc-7vqr6 [751.728818ms]
  Nov 18 13:22:22.081: INFO: Created: latency-svc-d52hb
  Nov 18 13:22:22.123: INFO: Got endpoints: latency-svc-c96zf [751.499354ms]
  Nov 18 13:22:22.133: INFO: Created: latency-svc-z9s4w
  Nov 18 13:22:22.171: INFO: Got endpoints: latency-svc-5zv2f [750.523188ms]
  Nov 18 13:22:22.182: INFO: Created: latency-svc-x9255
  Nov 18 13:22:22.225: INFO: Got endpoints: latency-svc-q4jcb [753.778003ms]
  E1118 13:22:22.233957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:22.237: INFO: Created: latency-svc-nzvp4
  Nov 18 13:22:22.271: INFO: Got endpoints: latency-svc-rwgdp [750.411526ms]
  Nov 18 13:22:22.281: INFO: Created: latency-svc-9nhbf
  Nov 18 13:22:22.321: INFO: Got endpoints: latency-svc-dhxb7 [751.83759ms]
  Nov 18 13:22:22.332: INFO: Created: latency-svc-nh5j9
  Nov 18 13:22:22.371: INFO: Got endpoints: latency-svc-lsxdr [749.896037ms]
  Nov 18 13:22:22.381: INFO: Created: latency-svc-4rvzz
  Nov 18 13:22:22.422: INFO: Got endpoints: latency-svc-lrw6j [750.189791ms]
  Nov 18 13:22:22.431: INFO: Created: latency-svc-q69cg
  Nov 18 13:22:22.472: INFO: Got endpoints: latency-svc-mmgw9 [747.855302ms]
  Nov 18 13:22:22.484: INFO: Created: latency-svc-lzzm4
  Nov 18 13:22:22.524: INFO: Got endpoints: latency-svc-v27pm [753.978616ms]
  Nov 18 13:22:22.534: INFO: Created: latency-svc-rwzvz
  Nov 18 13:22:22.575: INFO: Got endpoints: latency-svc-nprq2 [754.637138ms]
  Nov 18 13:22:22.584: INFO: Created: latency-svc-r7wbh
  Nov 18 13:22:22.622: INFO: Got endpoints: latency-svc-4jps4 [750.61309ms]
  Nov 18 13:22:22.633: INFO: Created: latency-svc-8n6w7
  Nov 18 13:22:22.670: INFO: Got endpoints: latency-svc-f7vk9 [748.991451ms]
  Nov 18 13:22:22.681: INFO: Created: latency-svc-cdn7b
  Nov 18 13:22:22.722: INFO: Got endpoints: latency-svc-wq2xk [752.146895ms]
  Nov 18 13:22:22.732: INFO: Created: latency-svc-zcjqr
  Nov 18 13:22:22.772: INFO: Got endpoints: latency-svc-jxrrb [753.344515ms]
  Nov 18 13:22:22.783: INFO: Created: latency-svc-vtzg7
  Nov 18 13:22:22.822: INFO: Got endpoints: latency-svc-d52hb [750.817003ms]
  Nov 18 13:22:22.832: INFO: Created: latency-svc-jbkzt
  Nov 18 13:22:22.870: INFO: Got endpoints: latency-svc-z9s4w [747.676129ms]
  Nov 18 13:22:22.882: INFO: Created: latency-svc-69p6x
  Nov 18 13:22:22.920: INFO: Got endpoints: latency-svc-x9255 [748.39697ms]
  Nov 18 13:22:22.930: INFO: Created: latency-svc-4g6jc
  Nov 18 13:22:22.976: INFO: Got endpoints: latency-svc-nzvp4 [750.256033ms]
  Nov 18 13:22:22.985: INFO: Created: latency-svc-rwvt9
  Nov 18 13:22:23.024: INFO: Got endpoints: latency-svc-9nhbf [752.744926ms]
  Nov 18 13:22:23.033: INFO: Created: latency-svc-f596l
  Nov 18 13:22:23.070: INFO: Got endpoints: latency-svc-nh5j9 [748.539004ms]
  Nov 18 13:22:23.081: INFO: Created: latency-svc-g9zc7
  Nov 18 13:22:23.120: INFO: Got endpoints: latency-svc-4rvzz [748.816079ms]
  Nov 18 13:22:23.130: INFO: Created: latency-svc-x5mhs
  Nov 18 13:22:23.171: INFO: Got endpoints: latency-svc-q69cg [748.976761ms]
  Nov 18 13:22:23.181: INFO: Created: latency-svc-gg4vn
  Nov 18 13:22:23.222: INFO: Got endpoints: latency-svc-lzzm4 [749.392208ms]
  Nov 18 13:22:23.232: INFO: Created: latency-svc-ck7fw
  E1118 13:22:23.234017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:23.272: INFO: Got endpoints: latency-svc-rwzvz [748.143747ms]
  Nov 18 13:22:23.281: INFO: Created: latency-svc-s689p
  Nov 18 13:22:23.324: INFO: Got endpoints: latency-svc-r7wbh [749.021022ms]
  Nov 18 13:22:23.336: INFO: Created: latency-svc-xzrkp
  Nov 18 13:22:23.371: INFO: Got endpoints: latency-svc-8n6w7 [749.219186ms]
  Nov 18 13:22:23.381: INFO: Created: latency-svc-z424x
  Nov 18 13:22:23.420: INFO: Got endpoints: latency-svc-cdn7b [749.345808ms]
  Nov 18 13:22:23.430: INFO: Created: latency-svc-ttxsd
  Nov 18 13:22:23.470: INFO: Got endpoints: latency-svc-zcjqr [748.028595ms]
  Nov 18 13:22:23.485: INFO: Created: latency-svc-hfq7p
  Nov 18 13:22:23.520: INFO: Got endpoints: latency-svc-vtzg7 [747.837662ms]
  Nov 18 13:22:23.530: INFO: Created: latency-svc-dk4cz
  Nov 18 13:22:23.572: INFO: Got endpoints: latency-svc-jbkzt [749.837956ms]
  Nov 18 13:22:23.583: INFO: Created: latency-svc-xk65j
  Nov 18 13:22:23.621: INFO: Got endpoints: latency-svc-69p6x [750.551488ms]
  Nov 18 13:22:23.630: INFO: Created: latency-svc-vq4z7
  Nov 18 13:22:23.670: INFO: Got endpoints: latency-svc-4g6jc [750.091691ms]
  Nov 18 13:22:23.680: INFO: Created: latency-svc-b24dk
  Nov 18 13:22:23.720: INFO: Got endpoints: latency-svc-rwvt9 [744.144389ms]
  Nov 18 13:22:23.730: INFO: Created: latency-svc-8ktsf
  Nov 18 13:22:23.771: INFO: Got endpoints: latency-svc-f596l [746.932357ms]
  Nov 18 13:22:23.782: INFO: Created: latency-svc-mdfh9
  Nov 18 13:22:23.820: INFO: Got endpoints: latency-svc-g9zc7 [749.953698ms]
  Nov 18 13:22:23.834: INFO: Created: latency-svc-gmm92
  Nov 18 13:22:23.870: INFO: Got endpoints: latency-svc-x5mhs [750.483717ms]
  Nov 18 13:22:23.887: INFO: Created: latency-svc-2vht5
  Nov 18 13:22:23.920: INFO: Got endpoints: latency-svc-gg4vn [749.042942ms]
  Nov 18 13:22:23.930: INFO: Created: latency-svc-hggsj
  Nov 18 13:22:23.971: INFO: Got endpoints: latency-svc-ck7fw [749.392418ms]
  Nov 18 13:22:23.985: INFO: Created: latency-svc-r42j7
  Nov 18 13:22:24.021: INFO: Got endpoints: latency-svc-s689p [748.648955ms]
  Nov 18 13:22:24.030: INFO: Created: latency-svc-xt8v9
  Nov 18 13:22:24.072: INFO: Got endpoints: latency-svc-xzrkp [748.425373ms]
  Nov 18 13:22:24.083: INFO: Created: latency-svc-wvzt9
  Nov 18 13:22:24.120: INFO: Got endpoints: latency-svc-z424x [749.326427ms]
  Nov 18 13:22:24.131: INFO: Created: latency-svc-qg2mv
  Nov 18 13:22:24.169: INFO: Got endpoints: latency-svc-ttxsd [749.709034ms]
  Nov 18 13:22:24.179: INFO: Created: latency-svc-nh2gd
  Nov 18 13:22:24.220: INFO: Got endpoints: latency-svc-hfq7p [750.264692ms]
  Nov 18 13:22:24.230: INFO: Created: latency-svc-dd9kv
  E1118 13:22:24.234633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:24.273: INFO: Got endpoints: latency-svc-dk4cz [752.956679ms]
  Nov 18 13:22:24.285: INFO: Created: latency-svc-x7pcq
  Nov 18 13:22:24.320: INFO: Got endpoints: latency-svc-xk65j [747.550348ms]
  Nov 18 13:22:24.330: INFO: Created: latency-svc-nxw8g
  Nov 18 13:22:24.370: INFO: Got endpoints: latency-svc-vq4z7 [749.048913ms]
  Nov 18 13:22:24.380: INFO: Created: latency-svc-qxgwq
  Nov 18 13:22:24.421: INFO: Got endpoints: latency-svc-b24dk [751.022286ms]
  Nov 18 13:22:24.431: INFO: Created: latency-svc-jq5pg
  Nov 18 13:22:24.471: INFO: Got endpoints: latency-svc-8ktsf [751.142167ms]
  Nov 18 13:22:24.483: INFO: Created: latency-svc-j4wx8
  Nov 18 13:22:24.522: INFO: Got endpoints: latency-svc-mdfh9 [750.949215ms]
  Nov 18 13:22:24.531: INFO: Created: latency-svc-cqfbt
  Nov 18 13:22:24.571: INFO: Got endpoints: latency-svc-gmm92 [750.873514ms]
  Nov 18 13:22:24.584: INFO: Created: latency-svc-d6rzg
  Nov 18 13:22:24.620: INFO: Got endpoints: latency-svc-2vht5 [749.901576ms]
  Nov 18 13:22:24.631: INFO: Created: latency-svc-rsnmm
  Nov 18 13:22:24.672: INFO: Got endpoints: latency-svc-hggsj [751.136708ms]
  Nov 18 13:22:24.681: INFO: Created: latency-svc-679sl
  Nov 18 13:22:24.722: INFO: Got endpoints: latency-svc-r42j7 [750.769992ms]
  Nov 18 13:22:24.732: INFO: Created: latency-svc-flm4d
  Nov 18 13:22:24.772: INFO: Got endpoints: latency-svc-xt8v9 [751.785459ms]
  Nov 18 13:22:24.781: INFO: Created: latency-svc-zzrfm
  Nov 18 13:22:24.821: INFO: Got endpoints: latency-svc-wvzt9 [748.254519ms]
  Nov 18 13:22:24.832: INFO: Created: latency-svc-c25fd
  Nov 18 13:22:24.870: INFO: Got endpoints: latency-svc-qg2mv [749.052962ms]
  Nov 18 13:22:24.879: INFO: Created: latency-svc-nnp8z
  Nov 18 13:22:24.921: INFO: Got endpoints: latency-svc-nh2gd [751.26204ms]
  Nov 18 13:22:24.930: INFO: Created: latency-svc-pqb5c
  Nov 18 13:22:24.973: INFO: Got endpoints: latency-svc-dd9kv [752.926179ms]
  Nov 18 13:22:24.984: INFO: Created: latency-svc-nt7hm
  Nov 18 13:22:25.022: INFO: Got endpoints: latency-svc-x7pcq [748.654116ms]
  Nov 18 13:22:25.033: INFO: Created: latency-svc-qx7c6
  Nov 18 13:22:25.070: INFO: Got endpoints: latency-svc-nxw8g [750.361525ms]
  Nov 18 13:22:25.080: INFO: Created: latency-svc-t6rbv
  Nov 18 13:22:25.120: INFO: Got endpoints: latency-svc-qxgwq [749.786715ms]
  Nov 18 13:22:25.132: INFO: Created: latency-svc-qxd7x
  Nov 18 13:22:25.170: INFO: Got endpoints: latency-svc-jq5pg [749.242206ms]
  Nov 18 13:22:25.179: INFO: Created: latency-svc-qkxmc
  Nov 18 13:22:25.221: INFO: Got endpoints: latency-svc-j4wx8 [750.018169ms]
  Nov 18 13:22:25.232: INFO: Created: latency-svc-cns77
  E1118 13:22:25.235701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:25.321: INFO: Got endpoints: latency-svc-d6rzg [750.781192ms]
  Nov 18 13:22:25.370: INFO: Got endpoints: latency-svc-rsnmm [749.691873ms]
  Nov 18 13:22:25.399: INFO: Got endpoints: latency-svc-cqfbt [877.276354ms]
  Nov 18 13:22:25.403: INFO: Created: latency-svc-2xb4t
  Nov 18 13:22:25.407: INFO: Created: latency-svc-jlbtz
  Nov 18 13:22:25.414: INFO: Created: latency-svc-5cmv2
  Nov 18 13:22:25.420: INFO: Got endpoints: latency-svc-679sl [748.532554ms]
  Nov 18 13:22:25.431: INFO: Created: latency-svc-2xtsq
  Nov 18 13:22:25.472: INFO: Got endpoints: latency-svc-flm4d [749.914787ms]
  Nov 18 13:22:25.482: INFO: Created: latency-svc-p68cp
  Nov 18 13:22:25.519: INFO: Got endpoints: latency-svc-zzrfm [746.384727ms]
  Nov 18 13:22:25.528: INFO: Created: latency-svc-sj9gb
  Nov 18 13:22:25.572: INFO: Got endpoints: latency-svc-c25fd [750.983136ms]
  Nov 18 13:22:25.583: INFO: Created: latency-svc-8vxkj
  Nov 18 13:22:25.620: INFO: Got endpoints: latency-svc-nnp8z [750.138321ms]
  Nov 18 13:22:25.631: INFO: Created: latency-svc-528tk
  Nov 18 13:22:25.670: INFO: Got endpoints: latency-svc-pqb5c [749.418968ms]
  Nov 18 13:22:25.686: INFO: Created: latency-svc-csktz
  Nov 18 13:22:25.721: INFO: Got endpoints: latency-svc-nt7hm [748.150347ms]
  Nov 18 13:22:25.732: INFO: Created: latency-svc-5zr2d
  Nov 18 13:22:25.777: INFO: Got endpoints: latency-svc-qx7c6 [754.435094ms]
  Nov 18 13:22:25.787: INFO: Created: latency-svc-cr4xg
  Nov 18 13:22:25.820: INFO: Got endpoints: latency-svc-t6rbv [750.044829ms]
  Nov 18 13:22:25.830: INFO: Created: latency-svc-2r89w
  Nov 18 13:22:25.870: INFO: Got endpoints: latency-svc-qxd7x [749.921588ms]
  Nov 18 13:22:25.880: INFO: Created: latency-svc-c828x
  Nov 18 13:22:25.921: INFO: Got endpoints: latency-svc-qkxmc [750.603729ms]
  Nov 18 13:22:25.931: INFO: Created: latency-svc-429g9
  Nov 18 13:22:25.969: INFO: Got endpoints: latency-svc-cns77 [747.624939ms]
  Nov 18 13:22:25.977: INFO: Created: latency-svc-xpnjb
  Nov 18 13:22:26.021: INFO: Got endpoints: latency-svc-2xb4t [699.638642ms]
  Nov 18 13:22:26.031: INFO: Created: latency-svc-dkhtx
  Nov 18 13:22:26.069: INFO: Got endpoints: latency-svc-jlbtz [699.342587ms]
  Nov 18 13:22:26.080: INFO: Created: latency-svc-p4kg8
  Nov 18 13:22:26.119: INFO: Got endpoints: latency-svc-5cmv2 [719.663393ms]
  Nov 18 13:22:26.129: INFO: Created: latency-svc-6j7jn
  Nov 18 13:22:26.172: INFO: Got endpoints: latency-svc-2xtsq [751.800759ms]
  Nov 18 13:22:26.182: INFO: Created: latency-svc-gx6xb
  Nov 18 13:22:26.221: INFO: Got endpoints: latency-svc-p68cp [749.46759ms]
  Nov 18 13:22:26.231: INFO: Created: latency-svc-dhzbd
  E1118 13:22:26.236472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:26.269: INFO: Got endpoints: latency-svc-sj9gb [749.741185ms]
  Nov 18 13:22:26.280: INFO: Created: latency-svc-4jbll
  Nov 18 13:22:26.320: INFO: Got endpoints: latency-svc-8vxkj [748.183737ms]
  Nov 18 13:22:26.331: INFO: Created: latency-svc-vbtph
  Nov 18 13:22:26.370: INFO: Got endpoints: latency-svc-528tk [750.102971ms]
  Nov 18 13:22:26.380: INFO: Created: latency-svc-jht2q
  Nov 18 13:22:26.421: INFO: Got endpoints: latency-svc-csktz [750.836153ms]
  Nov 18 13:22:26.430: INFO: Created: latency-svc-449dw
  Nov 18 13:22:26.472: INFO: Got endpoints: latency-svc-5zr2d [750.841472ms]
  Nov 18 13:22:26.484: INFO: Created: latency-svc-rq48k
  Nov 18 13:22:26.520: INFO: Got endpoints: latency-svc-cr4xg [743.450057ms]
  Nov 18 13:22:26.532: INFO: Created: latency-svc-fxnd9
  Nov 18 13:22:26.569: INFO: Got endpoints: latency-svc-2r89w [749.409498ms]
  Nov 18 13:22:26.579: INFO: Created: latency-svc-qlzw7
  Nov 18 13:22:26.620: INFO: Got endpoints: latency-svc-c828x [749.791415ms]
  Nov 18 13:22:26.631: INFO: Created: latency-svc-bjfz7
  Nov 18 13:22:26.670: INFO: Got endpoints: latency-svc-429g9 [749.296667ms]
  Nov 18 13:22:26.680: INFO: Created: latency-svc-zkbfw
  Nov 18 13:22:26.721: INFO: Got endpoints: latency-svc-xpnjb [751.89994ms]
  Nov 18 13:22:26.729: INFO: Created: latency-svc-jbcp4
  Nov 18 13:22:26.772: INFO: Got endpoints: latency-svc-dkhtx [750.573669ms]
  Nov 18 13:22:26.782: INFO: Created: latency-svc-6pp8q
  Nov 18 13:22:26.819: INFO: Got endpoints: latency-svc-p4kg8 [749.910937ms]
  Nov 18 13:22:26.829: INFO: Created: latency-svc-mrkc9
  Nov 18 13:22:26.871: INFO: Got endpoints: latency-svc-6j7jn [752.149645ms]
  Nov 18 13:22:26.879: INFO: Created: latency-svc-sm97x
  Nov 18 13:22:26.921: INFO: Got endpoints: latency-svc-gx6xb [749.248456ms]
  Nov 18 13:22:26.932: INFO: Created: latency-svc-zrf9h
  Nov 18 13:22:26.971: INFO: Got endpoints: latency-svc-dhzbd [750.003659ms]
  Nov 18 13:22:26.981: INFO: Created: latency-svc-wr9cl
  Nov 18 13:22:27.021: INFO: Got endpoints: latency-svc-4jbll [752.332159ms]
  Nov 18 13:22:27.031: INFO: Created: latency-svc-cmdvp
  Nov 18 13:22:27.070: INFO: Got endpoints: latency-svc-vbtph [750.258543ms]
  Nov 18 13:22:27.082: INFO: Created: latency-svc-k58bc
  Nov 18 13:22:27.122: INFO: Got endpoints: latency-svc-jht2q [751.656447ms]
  Nov 18 13:22:27.132: INFO: Created: latency-svc-mjr6l
  Nov 18 13:22:27.170: INFO: Got endpoints: latency-svc-449dw [748.824179ms]
  Nov 18 13:22:27.179: INFO: Created: latency-svc-ztzdt
  Nov 18 13:22:27.221: INFO: Got endpoints: latency-svc-rq48k [748.937311ms]
  Nov 18 13:22:27.231: INFO: Created: latency-svc-jtc5v
  E1118 13:22:27.237265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:27.271: INFO: Got endpoints: latency-svc-fxnd9 [751.166998ms]
  Nov 18 13:22:27.280: INFO: Created: latency-svc-gbdj9
  Nov 18 13:22:27.320: INFO: Got endpoints: latency-svc-qlzw7 [750.686701ms]
  Nov 18 13:22:27.371: INFO: Got endpoints: latency-svc-bjfz7 [751.471474ms]
  Nov 18 13:22:27.423: INFO: Got endpoints: latency-svc-zkbfw [752.501771ms]
  Nov 18 13:22:27.470: INFO: Got endpoints: latency-svc-jbcp4 [748.740617ms]
  Nov 18 13:22:27.522: INFO: Got endpoints: latency-svc-6pp8q [749.839836ms]
  Nov 18 13:22:27.570: INFO: Got endpoints: latency-svc-mrkc9 [750.764412ms]
  Nov 18 13:22:27.621: INFO: Got endpoints: latency-svc-sm97x [750.175651ms]
  Nov 18 13:22:27.670: INFO: Got endpoints: latency-svc-zrf9h [749.110144ms]
  Nov 18 13:22:27.721: INFO: Got endpoints: latency-svc-wr9cl [749.907548ms]
  Nov 18 13:22:27.770: INFO: Got endpoints: latency-svc-cmdvp [749.013622ms]
  Nov 18 13:22:27.821: INFO: Got endpoints: latency-svc-k58bc [751.014536ms]
  Nov 18 13:22:27.870: INFO: Got endpoints: latency-svc-mjr6l [748.140488ms]
  Nov 18 13:22:27.921: INFO: Got endpoints: latency-svc-ztzdt [750.828363ms]
  Nov 18 13:22:27.970: INFO: Got endpoints: latency-svc-jtc5v [748.547304ms]
  Nov 18 13:22:28.020: INFO: Got endpoints: latency-svc-gbdj9 [749.144724ms]
  Nov 18 13:22:28.020: INFO: Latencies: [16.878167ms 23.339017ms 32.184107ms 37.593619ms 45.107838ms 53.586661ms 59.97576ms 67.57181ms 77.157422ms 81.478436ms 83.776435ms 90.848046ms 95.924832ms 100.328437ms 111.009359ms 125.21102ms 129.732417ms 143.559472ms 152.399843ms 153.938819ms 164.858754ms 185.337813ms 187.57166ms 191.252164ms 192.602807ms 193.517672ms 194.489118ms 194.917726ms 195.223141ms 195.510716ms 196.778507ms 196.820948ms 197.48202ms 198.911974ms 201.551898ms 237.959138ms 241.751082ms 272.17865ms 279.453064ms 287.193835ms 287.682054ms 335.191602ms 340.023265ms 381.162285ms 428.275095ms 480.416653ms 527.955131ms 573.943084ms 621.86713ms 666.136822ms 699.342587ms 699.638642ms 712.859487ms 719.663393ms 743.450057ms 744.144389ms 746.091472ms 746.384727ms 746.932357ms 747.11978ms 747.438245ms 747.550348ms 747.624939ms 747.676129ms 747.682589ms 747.837662ms 747.855302ms 748.028595ms 748.140488ms 748.143747ms 748.150347ms 748.163407ms 748.183737ms 748.254519ms 748.376971ms 748.39697ms 748.425373ms 748.532554ms 748.539004ms 748.547304ms 748.617095ms 748.648955ms 748.654116ms 748.740617ms 748.816079ms 748.824179ms 748.84142ms 748.849749ms 748.937311ms 748.976761ms 748.991451ms 749.013622ms 749.021022ms 749.042942ms 749.048913ms 749.052962ms 749.110144ms 749.144724ms 749.219186ms 749.242206ms 749.248456ms 749.296667ms 749.326427ms 749.345808ms 749.392208ms 749.392418ms 749.409498ms 749.418968ms 749.46759ms 749.537031ms 749.691873ms 749.709034ms 749.738924ms 749.741185ms 749.772295ms 749.786715ms 749.791415ms 749.837956ms 749.839836ms 749.896037ms 749.901576ms 749.907548ms 749.910937ms 749.914787ms 749.921588ms 749.934268ms 749.953698ms 750.003659ms 750.018169ms 750.02315ms 750.044829ms 750.091691ms 750.102971ms 750.138321ms 750.151012ms 750.175651ms 750.189791ms 750.242633ms 750.256033ms 750.258543ms 750.264692ms 750.334324ms 750.361525ms 750.376345ms 750.411526ms 750.428126ms 750.473356ms 750.483717ms 750.523188ms 750.551488ms 750.573669ms 750.603729ms 750.61309ms 750.686701ms 750.689191ms 750.764412ms 750.769992ms 750.772613ms 750.781192ms 750.817003ms 750.828363ms 750.836153ms 750.841472ms 750.873514ms 750.949215ms 750.983136ms 750.992025ms 751.014536ms 751.022286ms 751.136708ms 751.142167ms 751.166998ms 751.26204ms 751.420693ms 751.471474ms 751.499354ms 751.656447ms 751.728818ms 751.785459ms 751.800759ms 751.83759ms 751.852401ms 751.89994ms 752.146895ms 752.149645ms 752.332159ms 752.479951ms 752.501771ms 752.744926ms 752.926179ms 752.956679ms 753.088561ms 753.191704ms 753.344515ms 753.436657ms 753.778003ms 753.978616ms 754.435094ms 754.637138ms 877.276354ms]
  Nov 18 13:22:28.021: INFO: 50 %ile: 749.248456ms
  Nov 18 13:22:28.021: INFO: 90 %ile: 751.83759ms
  Nov 18 13:22:28.021: INFO: 99 %ile: 754.637138ms
  Nov 18 13:22:28.021: INFO: Total sample count: 200
  Nov 18 13:22:28.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2635" for this suite. @ 11/18/23 13:22:28.026
• [9.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 11/18/23 13:22:28.033
  Nov 18 13:22:28.033: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 13:22:28.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:28.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:28.05
  E1118 13:22:28.237993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:29.238147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:30.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Nov 18 13:22:30.073: INFO: Deleting pod "var-expansion-9596591d-090a-4f02-9996-c5877caa8a61" in namespace "var-expansion-3582"
  Nov 18 13:22:30.079: INFO: Wait up to 5m0s for pod "var-expansion-9596591d-090a-4f02-9996-c5877caa8a61" to be fully deleted
  E1118 13:22:30.238678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:31.238897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-3582" for this suite. @ 11/18/23 13:22:32.086
• [4.059 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 11/18/23 13:22:32.092
  Nov 18 13:22:32.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 13:22:32.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:32.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:32.11
  STEP: create the rc1 @ 11/18/23 13:22:32.115
  STEP: create the rc2 @ 11/18/23 13:22:32.121
  E1118 13:22:32.239791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:33.245258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:34.245826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:35.246763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:36.247306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:37.248199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/18/23 13:22:38.132
  E1118 13:22:38.248912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/18/23 13:22:38.625
  STEP: wait for the rc to be deleted @ 11/18/23 13:22:38.632
  E1118 13:22:39.249037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:40.249825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:41.250766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:42.251003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:43.252062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:43.644: INFO: 92 pods remaining
  Nov 18 13:22:43.644: INFO: 92 pods has nil DeletionTimestamp
  Nov 18 13:22:43.644: INFO: 
  E1118 13:22:44.252121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:45.253137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:46.253247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:47.253355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:48.253728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:48.644: INFO: 57 pods remaining
  Nov 18 13:22:48.644: INFO: 57 pods has nil DeletionTimestamp
  Nov 18 13:22:48.644: INFO: 
  E1118 13:22:49.254123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:50.254302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:51.254502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:52.254706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:53.255778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/18/23 13:22:53.643
  W1118 13:22:53.647773      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 18 13:22:53.647: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 18 13:22:53.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-25m7p" in namespace "gc-5749"
  Nov 18 13:22:53.665: INFO: Deleting pod "simpletest-rc-to-be-deleted-25mdn" in namespace "gc-5749"
  Nov 18 13:22:53.680: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qv97" in namespace "gc-5749"
  Nov 18 13:22:53.696: INFO: Deleting pod "simpletest-rc-to-be-deleted-2r742" in namespace "gc-5749"
  Nov 18 13:22:53.711: INFO: Deleting pod "simpletest-rc-to-be-deleted-2sw9k" in namespace "gc-5749"
  Nov 18 13:22:53.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-459pg" in namespace "gc-5749"
  Nov 18 13:22:53.742: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ffvn" in namespace "gc-5749"
  Nov 18 13:22:53.756: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m929" in namespace "gc-5749"
  Nov 18 13:22:53.765: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s9lt" in namespace "gc-5749"
  Nov 18 13:22:53.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zrvt" in namespace "gc-5749"
  Nov 18 13:22:53.793: INFO: Deleting pod "simpletest-rc-to-be-deleted-54hsg" in namespace "gc-5749"
  Nov 18 13:22:53.807: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qwmr" in namespace "gc-5749"
  Nov 18 13:22:53.822: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hltr" in namespace "gc-5749"
  Nov 18 13:22:53.836: INFO: Deleting pod "simpletest-rc-to-be-deleted-6m29w" in namespace "gc-5749"
  Nov 18 13:22:53.954: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tzlg" in namespace "gc-5749"
  Nov 18 13:22:53.969: INFO: Deleting pod "simpletest-rc-to-be-deleted-756z2" in namespace "gc-5749"
  Nov 18 13:22:53.979: INFO: Deleting pod "simpletest-rc-to-be-deleted-79mv7" in namespace "gc-5749"
  Nov 18 13:22:53.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-7d2tf" in namespace "gc-5749"
  Nov 18 13:22:54.014: INFO: Deleting pod "simpletest-rc-to-be-deleted-7rjqz" in namespace "gc-5749"
  Nov 18 13:22:54.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zs2f" in namespace "gc-5749"
  Nov 18 13:22:54.036: INFO: Deleting pod "simpletest-rc-to-be-deleted-855nw" in namespace "gc-5749"
  Nov 18 13:22:54.051: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dqwx" in namespace "gc-5749"
  Nov 18 13:22:54.063: INFO: Deleting pod "simpletest-rc-to-be-deleted-8lpr8" in namespace "gc-5749"
  Nov 18 13:22:54.077: INFO: Deleting pod "simpletest-rc-to-be-deleted-9msbh" in namespace "gc-5749"
  Nov 18 13:22:54.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rsnr" in namespace "gc-5749"
  Nov 18 13:22:54.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-9sjck" in namespace "gc-5749"
  Nov 18 13:22:54.123: INFO: Deleting pod "simpletest-rc-to-be-deleted-9x4jj" in namespace "gc-5749"
  Nov 18 13:22:54.139: INFO: Deleting pod "simpletest-rc-to-be-deleted-b7pf9" in namespace "gc-5749"
  Nov 18 13:22:54.152: INFO: Deleting pod "simpletest-rc-to-be-deleted-bc76d" in namespace "gc-5749"
  Nov 18 13:22:54.169: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhshk" in namespace "gc-5749"
  Nov 18 13:22:54.184: INFO: Deleting pod "simpletest-rc-to-be-deleted-blfqp" in namespace "gc-5749"
  Nov 18 13:22:54.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8xx6" in namespace "gc-5749"
  Nov 18 13:22:54.215: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqg7r" in namespace "gc-5749"
  Nov 18 13:22:54.229: INFO: Deleting pod "simpletest-rc-to-be-deleted-cxzdk" in namespace "gc-5749"
  Nov 18 13:22:54.245: INFO: Deleting pod "simpletest-rc-to-be-deleted-czttg" in namespace "gc-5749"
  E1118 13:22:54.255991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:22:54.256: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddqjv" in namespace "gc-5749"
  Nov 18 13:22:54.276: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgdn7" in namespace "gc-5749"
  Nov 18 13:22:54.293: INFO: Deleting pod "simpletest-rc-to-be-deleted-dj5gz" in namespace "gc-5749"
  Nov 18 13:22:54.307: INFO: Deleting pod "simpletest-rc-to-be-deleted-dp75h" in namespace "gc-5749"
  Nov 18 13:22:54.325: INFO: Deleting pod "simpletest-rc-to-be-deleted-dshp4" in namespace "gc-5749"
  Nov 18 13:22:54.337: INFO: Deleting pod "simpletest-rc-to-be-deleted-f272g" in namespace "gc-5749"
  Nov 18 13:22:54.352: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwq4r" in namespace "gc-5749"
  Nov 18 13:22:54.371: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4pcq" in namespace "gc-5749"
  Nov 18 13:22:54.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-gcn66" in namespace "gc-5749"
  Nov 18 13:22:54.398: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggjfd" in namespace "gc-5749"
  Nov 18 13:22:54.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqjwq" in namespace "gc-5749"
  Nov 18 13:22:54.432: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnslr" in namespace "gc-5749"
  Nov 18 13:22:54.444: INFO: Deleting pod "simpletest-rc-to-be-deleted-hw7r8" in namespace "gc-5749"
  Nov 18 13:22:54.464: INFO: Deleting pod "simpletest-rc-to-be-deleted-jd52r" in namespace "gc-5749"
  Nov 18 13:22:54.479: INFO: Deleting pod "simpletest-rc-to-be-deleted-jgt5j" in namespace "gc-5749"
  Nov 18 13:22:54.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5749" for this suite. @ 11/18/23 13:22:54.503
• [22.418 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/18/23 13:22:54.511
  Nov 18 13:22:54.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-runtime @ 11/18/23 13:22:54.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:54.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:54.529
  STEP: create the container @ 11/18/23 13:22:54.533
  W1118 13:22:54.542452      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/18/23 13:22:54.542
  E1118 13:22:55.257949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:56.258188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:57.259150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:22:58.260238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/18/23 13:22:58.561
  STEP: the container should be terminated @ 11/18/23 13:22:58.564
  STEP: the termination message should be set @ 11/18/23 13:22:58.564
  Nov 18 13:22:58.564: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/18/23 13:22:58.564
  Nov 18 13:22:58.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-538" for this suite. @ 11/18/23 13:22:58.585
• [4.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/18/23 13:22:58.592
  Nov 18 13:22:58.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 13:22:58.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:58.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:58.614
  Nov 18 13:22:58.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5147" for this suite. @ 11/18/23 13:22:58.666
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 11/18/23 13:22:58.677
  Nov 18 13:22:58.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pod-network-test @ 11/18/23 13:22:58.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:22:58.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:22:58.698
  STEP: Performing setup for networking test in namespace pod-network-test-823 @ 11/18/23 13:22:58.7
  STEP: creating a selector @ 11/18/23 13:22:58.7
  STEP: Creating the service pods in kubernetes @ 11/18/23 13:22:58.7
  Nov 18 13:22:58.700: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1118 13:22:59.261160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:00.261252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:01.261329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:02.261887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:03.261903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:04.262831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:05.263850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:06.263984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:07.264145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:08.265138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:09.265864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:10.266713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/18/23 13:23:10.776
  E1118 13:23:11.267438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:12.267558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:12.802: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Nov 18 13:23:12.802: INFO: Going to poll 192.168.250.250 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 18 13:23:12.806: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.250.250 8081 | grep -v '^\s*$'] Namespace:pod-network-test-823 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:23:12.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:23:12.806: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:23:12.806: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-823/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.250.250+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1118 13:23:13.267707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:13.892: INFO: Found all 1 expected endpoints: [netserver-0]
  Nov 18 13:23:13.892: INFO: Going to poll 192.168.171.73 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 18 13:23:13.895: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.171.73 8081 | grep -v '^\s*$'] Namespace:pod-network-test-823 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:23:13.895: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:23:13.896: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:23:13.896: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-823/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.171.73+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1118 13:23:14.267795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:14.989: INFO: Found all 1 expected endpoints: [netserver-1]
  Nov 18 13:23:14.989: INFO: Going to poll 192.168.60.76 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Nov 18 13:23:14.994: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.60.76 8081 | grep -v '^\s*$'] Namespace:pod-network-test-823 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:23:14.994: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:23:14.995: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:23:14.995: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-823/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.60.76+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1118 13:23:15.268729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:16.085: INFO: Found all 1 expected endpoints: [netserver-2]
  Nov 18 13:23:16.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-823" for this suite. @ 11/18/23 13:23:16.089
• [17.419 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 11/18/23 13:23:16.097
  Nov 18 13:23:16.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:23:16.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:23:16.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:23:16.116
  STEP: Creating configMap with name projected-configmap-test-volume-b06b1a9b-89aa-413f-b577-4c06014dfc92 @ 11/18/23 13:23:16.118
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:23:16.121
  E1118 13:23:16.269129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:17.269716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:18.269742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:19.270030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:23:20.139
  Nov 18 13:23:20.142: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-projected-configmaps-58aa9d97-a58e-4d5c-bec0-0153e3fc6781 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:23:20.156
  Nov 18 13:23:20.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8642" for this suite. @ 11/18/23 13:23:20.178
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 11/18/23 13:23:20.186
  Nov 18 13:23:20.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 13:23:20.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:23:20.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:23:20.203
  STEP: Creating service test in namespace statefulset-3085 @ 11/18/23 13:23:20.204
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/18/23 13:23:20.209
  STEP: Creating stateful set ss in namespace statefulset-3085 @ 11/18/23 13:23:20.215
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3085 @ 11/18/23 13:23:20.222
  Nov 18 13:23:20.224: INFO: Found 0 stateful pods, waiting for 1
  E1118 13:23:20.271013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:21.271289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:22.272236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:23.272514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:24.273184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:25.273362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:26.273575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:27.273674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:28.274126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:29.274308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:30.229: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/18/23 13:23:30.229
  Nov 18 13:23:30.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1118 13:23:30.274713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:30.377: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:23:30.377: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:23:30.377: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:23:30.380: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1118 13:23:31.275515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:32.275736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:33.276767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:34.277149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:35.277297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:36.277557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:37.278308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:38.278428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:39.278574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:40.278615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:40.384: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:23:40.384: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 18 13:23:40.398: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999983s
  E1118 13:23:41.279476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:41.402: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996827049s
  E1118 13:23:42.280000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:42.405: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.993391564s
  E1118 13:23:43.280076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:43.409: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.989217834s
  E1118 13:23:44.280604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:44.413: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.985769467s
  E1118 13:23:45.280681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:45.417: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.98163757s
  E1118 13:23:46.280767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:46.421: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.977538474s
  E1118 13:23:47.280891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:47.424: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.974485406s
  E1118 13:23:48.281509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:48.429: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.969798479s
  E1118 13:23:49.282087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:23:49.432: INFO: Verifying statefulset ss doesn't scale past 1 for another 966.271283ms
  E1118 13:23:50.282658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3085 @ 11/18/23 13:23:50.432
  Nov 18 13:23:50.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 13:23:50.591: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 13:23:50.591: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:23:50.591: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:23:50.594: INFO: Found 1 stateful pods, waiting for 3
  E1118 13:23:51.282942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:52.283725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:53.283822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:54.284081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:55.284215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:56.285177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:57.285347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:58.285902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:23:59.286899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:00.287103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:00.598: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 13:24:00.598: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Nov 18 13:24:00.598: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/18/23 13:24:00.598
  STEP: Scale down will halt with unhealthy stateful pod @ 11/18/23 13:24:00.598
  Nov 18 13:24:00.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 13:24:00.738: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:24:00.738: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:24:00.738: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:24:00.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 13:24:00.886: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:24:00.886: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:24:00.886: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:24:00.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Nov 18 13:24:01.058: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Nov 18 13:24:01.058: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Nov 18 13:24:01.058: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Nov 18 13:24:01.059: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Nov 18 13:24:01.061: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E1118 13:24:01.288112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:02.289179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:03.289488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:04.289703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:05.289923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:06.290199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:07.290303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:08.290922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:09.291097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:10.291344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:11.068: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:24:11.068: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:24:11.068: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Nov 18 13:24:11.081: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999982s
  E1118 13:24:11.292032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:12.085: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996518275s
  E1118 13:24:12.292864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:13.088: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992709745s
  E1118 13:24:13.293034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:14.092: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98920546s
  E1118 13:24:14.294029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:15.096: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.985534482s
  E1118 13:24:15.294360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:16.100: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.98220559s
  E1118 13:24:16.295143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:17.104: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.977383602s
  E1118 13:24:17.295150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:18.108: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.973338558s
  E1118 13:24:18.295468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:19.111: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.970121387s
  E1118 13:24:19.296114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:20.115: INFO: Verifying statefulset ss doesn't scale past 3 for another 966.4617ms
  E1118 13:24:20.296851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3085 @ 11/18/23 13:24:21.116
  Nov 18 13:24:21.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 13:24:21.254: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 13:24:21.254: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:24:21.254: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:24:21.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1118 13:24:21.297730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:21.395: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 13:24:21.395: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:24:21.395: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:24:21.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=statefulset-3085 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Nov 18 13:24:21.533: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Nov 18 13:24:21.533: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Nov 18 13:24:21.533: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Nov 18 13:24:21.533: INFO: Scaling statefulset ss to 0
  E1118 13:24:22.298003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:23.298069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:24.298768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:25.298964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:26.299219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:27.299565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:28.300111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:29.301102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:30.301242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:31.301404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/18/23 13:24:31.547
  Nov 18 13:24:31.547: INFO: Deleting all statefulset in ns statefulset-3085
  Nov 18 13:24:31.550: INFO: Scaling statefulset ss to 0
  Nov 18 13:24:31.560: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 13:24:31.563: INFO: Deleting statefulset ss
  Nov 18 13:24:31.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3085" for this suite. @ 11/18/23 13:24:31.577
• [71.398 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/18/23 13:24:31.585
  Nov 18 13:24:31.585: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-runtime @ 11/18/23 13:24:31.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:24:31.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:24:31.605
  STEP: create the container @ 11/18/23 13:24:31.607
  W1118 13:24:31.619123      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/18/23 13:24:31.619
  E1118 13:24:32.301816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:33.302266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:34.302849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/18/23 13:24:34.633
  STEP: the container should be terminated @ 11/18/23 13:24:34.635
  STEP: the termination message should be set @ 11/18/23 13:24:34.635
  Nov 18 13:24:34.635: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/18/23 13:24:34.635
  Nov 18 13:24:34.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1507" for this suite. @ 11/18/23 13:24:34.656
• [3.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 11/18/23 13:24:34.662
  Nov 18 13:24:34.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:24:34.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:24:34.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:24:34.683
  STEP: Creating configMap with name configmap-test-volume-map-1cb8222f-5cd3-4a01-a5a6-179865d6e007 @ 11/18/23 13:24:34.685
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:24:34.691
  E1118 13:24:35.303045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:36.303157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:37.304027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:38.304061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:24:38.71
  Nov 18 13:24:38.713: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-d33692a7-5164-4606-8739-e96cd1e0c535 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:24:38.73
  Nov 18 13:24:38.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5532" for this suite. @ 11/18/23 13:24:38.749
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 11/18/23 13:24:38.756
  Nov 18 13:24:38.756: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:24:38.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:24:38.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:24:38.775
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:24:38.777
  E1118 13:24:39.304718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:40.305141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:41.305903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:42.306707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:24:42.798
  Nov 18 13:24:42.801: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-633003fc-5041-4296-bc26-8cbb327e247e container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:24:42.807
  Nov 18 13:24:42.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8844" for this suite. @ 11/18/23 13:24:42.828
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 11/18/23 13:24:42.835
  Nov 18 13:24:42.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replicaset @ 11/18/23 13:24:42.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:24:42.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:24:42.854
  STEP: Create a Replicaset @ 11/18/23 13:24:42.859
  STEP: Verify that the required pods have come up. @ 11/18/23 13:24:42.866
  Nov 18 13:24:42.868: INFO: Pod name sample-pod: Found 0 pods out of 1
  E1118 13:24:43.307598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:44.307806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:45.307971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:46.308083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:47.309193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:24:47.873: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/18/23 13:24:47.873
  STEP: Getting /status @ 11/18/23 13:24:47.873
  Nov 18 13:24:47.876: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/18/23 13:24:47.876
  Nov 18 13:24:47.884: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/18/23 13:24:47.884
  Nov 18 13:24:47.885: INFO: Observed &ReplicaSet event: ADDED
  Nov 18 13:24:47.885: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.885: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.885: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.885: INFO: Found replicaset test-rs in namespace replicaset-8931 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Nov 18 13:24:47.885: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/18/23 13:24:47.885
  Nov 18 13:24:47.885: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Nov 18 13:24:47.890: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/18/23 13:24:47.89
  Nov 18 13:24:47.891: INFO: Observed &ReplicaSet event: ADDED
  Nov 18 13:24:47.891: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.892: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.892: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.892: INFO: Observed replicaset test-rs in namespace replicaset-8931 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 18 13:24:47.892: INFO: Observed &ReplicaSet event: MODIFIED
  Nov 18 13:24:47.892: INFO: Found replicaset test-rs in namespace replicaset-8931 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Nov 18 13:24:47.892: INFO: Replicaset test-rs has a patched status
  Nov 18 13:24:47.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8931" for this suite. @ 11/18/23 13:24:47.895
• [5.068 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 11/18/23 13:24:47.903
  Nov 18 13:24:47.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 13:24:47.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:24:47.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:24:47.925
  STEP: create the rc @ 11/18/23 13:24:47.932
  W1118 13:24:47.937555      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1118 13:24:48.309794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:49.314587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:50.324866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:51.325772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:52.328132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:53.329140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/18/23 13:24:53.94
  STEP: wait for the rc to be deleted @ 11/18/23 13:24:53.946
  E1118 13:24:54.329387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:55.329607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:56.329816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:57.330049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:24:58.330360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/18/23 13:24:58.949
  E1118 13:24:59.331371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:00.331616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:01.331903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:02.332075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:03.333242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:04.333425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:05.333568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:06.333775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:07.333971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:08.334389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:09.335236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:10.335444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:11.335681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:12.336766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:13.336903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:14.337105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:15.337473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:16.337992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:17.338458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:18.338916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:19.339221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:20.339350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:21.339548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:22.339743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:23.340215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:24.340427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:25.341169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:26.341367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:27.341554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:28.341971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/18/23 13:25:28.96
  W1118 13:25:28.966335      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 18 13:25:28.966: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 18 13:25:28.966: INFO: Deleting pod "simpletest.rc-2hhbs" in namespace "gc-7534"
  Nov 18 13:25:28.981: INFO: Deleting pod "simpletest.rc-2mr62" in namespace "gc-7534"
  Nov 18 13:25:28.992: INFO: Deleting pod "simpletest.rc-56cn4" in namespace "gc-7534"
  Nov 18 13:25:29.006: INFO: Deleting pod "simpletest.rc-56vzs" in namespace "gc-7534"
  Nov 18 13:25:29.022: INFO: Deleting pod "simpletest.rc-575jt" in namespace "gc-7534"
  Nov 18 13:25:29.035: INFO: Deleting pod "simpletest.rc-5f9c9" in namespace "gc-7534"
  Nov 18 13:25:29.048: INFO: Deleting pod "simpletest.rc-5fpwr" in namespace "gc-7534"
  Nov 18 13:25:29.063: INFO: Deleting pod "simpletest.rc-5whx2" in namespace "gc-7534"
  Nov 18 13:25:29.074: INFO: Deleting pod "simpletest.rc-5z457" in namespace "gc-7534"
  Nov 18 13:25:29.090: INFO: Deleting pod "simpletest.rc-662tc" in namespace "gc-7534"
  Nov 18 13:25:29.105: INFO: Deleting pod "simpletest.rc-6hvrx" in namespace "gc-7534"
  Nov 18 13:25:29.120: INFO: Deleting pod "simpletest.rc-7lj7v" in namespace "gc-7534"
  Nov 18 13:25:29.134: INFO: Deleting pod "simpletest.rc-7p9x7" in namespace "gc-7534"
  Nov 18 13:25:29.149: INFO: Deleting pod "simpletest.rc-7q5b7" in namespace "gc-7534"
  Nov 18 13:25:29.162: INFO: Deleting pod "simpletest.rc-7tdzp" in namespace "gc-7534"
  Nov 18 13:25:29.179: INFO: Deleting pod "simpletest.rc-7v99v" in namespace "gc-7534"
  Nov 18 13:25:29.194: INFO: Deleting pod "simpletest.rc-8bqhz" in namespace "gc-7534"
  Nov 18 13:25:29.206: INFO: Deleting pod "simpletest.rc-8jccr" in namespace "gc-7534"
  Nov 18 13:25:29.222: INFO: Deleting pod "simpletest.rc-8tx7f" in namespace "gc-7534"
  Nov 18 13:25:29.238: INFO: Deleting pod "simpletest.rc-94gkm" in namespace "gc-7534"
  Nov 18 13:25:29.256: INFO: Deleting pod "simpletest.rc-95z99" in namespace "gc-7534"
  Nov 18 13:25:29.271: INFO: Deleting pod "simpletest.rc-998xp" in namespace "gc-7534"
  Nov 18 13:25:29.282: INFO: Deleting pod "simpletest.rc-9pzmv" in namespace "gc-7534"
  Nov 18 13:25:29.296: INFO: Deleting pod "simpletest.rc-b79vv" in namespace "gc-7534"
  Nov 18 13:25:29.320: INFO: Deleting pod "simpletest.rc-bk6kr" in namespace "gc-7534"
  E1118 13:25:29.342916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:29.353: INFO: Deleting pod "simpletest.rc-bqkd4" in namespace "gc-7534"
  Nov 18 13:25:29.369: INFO: Deleting pod "simpletest.rc-bskdh" in namespace "gc-7534"
  Nov 18 13:25:29.381: INFO: Deleting pod "simpletest.rc-c25k4" in namespace "gc-7534"
  Nov 18 13:25:29.404: INFO: Deleting pod "simpletest.rc-cnppd" in namespace "gc-7534"
  Nov 18 13:25:29.421: INFO: Deleting pod "simpletest.rc-crftj" in namespace "gc-7534"
  Nov 18 13:25:29.437: INFO: Deleting pod "simpletest.rc-d2qbx" in namespace "gc-7534"
  Nov 18 13:25:29.449: INFO: Deleting pod "simpletest.rc-d6t7s" in namespace "gc-7534"
  Nov 18 13:25:29.464: INFO: Deleting pod "simpletest.rc-d897q" in namespace "gc-7534"
  Nov 18 13:25:29.484: INFO: Deleting pod "simpletest.rc-g2wt6" in namespace "gc-7534"
  Nov 18 13:25:29.501: INFO: Deleting pod "simpletest.rc-g62lq" in namespace "gc-7534"
  Nov 18 13:25:29.523: INFO: Deleting pod "simpletest.rc-glcfw" in namespace "gc-7534"
  Nov 18 13:25:29.543: INFO: Deleting pod "simpletest.rc-glfq8" in namespace "gc-7534"
  Nov 18 13:25:29.561: INFO: Deleting pod "simpletest.rc-gpqtd" in namespace "gc-7534"
  Nov 18 13:25:29.580: INFO: Deleting pod "simpletest.rc-gxb8m" in namespace "gc-7534"
  Nov 18 13:25:29.599: INFO: Deleting pod "simpletest.rc-hpd2n" in namespace "gc-7534"
  Nov 18 13:25:29.619: INFO: Deleting pod "simpletest.rc-j8r5w" in namespace "gc-7534"
  Nov 18 13:25:29.636: INFO: Deleting pod "simpletest.rc-jj7k8" in namespace "gc-7534"
  Nov 18 13:25:29.653: INFO: Deleting pod "simpletest.rc-jq85s" in namespace "gc-7534"
  Nov 18 13:25:29.673: INFO: Deleting pod "simpletest.rc-k7g2v" in namespace "gc-7534"
  Nov 18 13:25:29.700: INFO: Deleting pod "simpletest.rc-k7w7q" in namespace "gc-7534"
  Nov 18 13:25:29.721: INFO: Deleting pod "simpletest.rc-k9vjp" in namespace "gc-7534"
  Nov 18 13:25:29.740: INFO: Deleting pod "simpletest.rc-kdvmv" in namespace "gc-7534"
  Nov 18 13:25:29.760: INFO: Deleting pod "simpletest.rc-knrcv" in namespace "gc-7534"
  Nov 18 13:25:29.776: INFO: Deleting pod "simpletest.rc-ksnq9" in namespace "gc-7534"
  Nov 18 13:25:29.795: INFO: Deleting pod "simpletest.rc-kvhft" in namespace "gc-7534"
  Nov 18 13:25:29.817: INFO: Deleting pod "simpletest.rc-l2wk4" in namespace "gc-7534"
  Nov 18 13:25:29.839: INFO: Deleting pod "simpletest.rc-lbb5b" in namespace "gc-7534"
  Nov 18 13:25:29.856: INFO: Deleting pod "simpletest.rc-lfzr8" in namespace "gc-7534"
  Nov 18 13:25:29.880: INFO: Deleting pod "simpletest.rc-lsssp" in namespace "gc-7534"
  Nov 18 13:25:29.897: INFO: Deleting pod "simpletest.rc-lwg25" in namespace "gc-7534"
  Nov 18 13:25:29.914: INFO: Deleting pod "simpletest.rc-m5bkk" in namespace "gc-7534"
  Nov 18 13:25:29.938: INFO: Deleting pod "simpletest.rc-m8tst" in namespace "gc-7534"
  Nov 18 13:25:29.957: INFO: Deleting pod "simpletest.rc-mhbtl" in namespace "gc-7534"
  Nov 18 13:25:29.973: INFO: Deleting pod "simpletest.rc-mnq79" in namespace "gc-7534"
  Nov 18 13:25:30.000: INFO: Deleting pod "simpletest.rc-mpk4j" in namespace "gc-7534"
  Nov 18 13:25:30.034: INFO: Deleting pod "simpletest.rc-msq82" in namespace "gc-7534"
  Nov 18 13:25:30.045: INFO: Deleting pod "simpletest.rc-npxhh" in namespace "gc-7534"
  Nov 18 13:25:30.060: INFO: Deleting pod "simpletest.rc-nrmnr" in namespace "gc-7534"
  Nov 18 13:25:30.073: INFO: Deleting pod "simpletest.rc-p7gz2" in namespace "gc-7534"
  Nov 18 13:25:30.091: INFO: Deleting pod "simpletest.rc-q2nvn" in namespace "gc-7534"
  Nov 18 13:25:30.107: INFO: Deleting pod "simpletest.rc-q6ktf" in namespace "gc-7534"
  Nov 18 13:25:30.116: INFO: Deleting pod "simpletest.rc-qfxt4" in namespace "gc-7534"
  Nov 18 13:25:30.128: INFO: Deleting pod "simpletest.rc-qk5wc" in namespace "gc-7534"
  Nov 18 13:25:30.147: INFO: Deleting pod "simpletest.rc-qmqf7" in namespace "gc-7534"
  Nov 18 13:25:30.160: INFO: Deleting pod "simpletest.rc-qpd8t" in namespace "gc-7534"
  Nov 18 13:25:30.174: INFO: Deleting pod "simpletest.rc-rmgjs" in namespace "gc-7534"
  Nov 18 13:25:30.192: INFO: Deleting pod "simpletest.rc-rp2fh" in namespace "gc-7534"
  Nov 18 13:25:30.210: INFO: Deleting pod "simpletest.rc-rsp7v" in namespace "gc-7534"
  Nov 18 13:25:30.228: INFO: Deleting pod "simpletest.rc-rznxv" in namespace "gc-7534"
  Nov 18 13:25:30.269: INFO: Deleting pod "simpletest.rc-rzqjk" in namespace "gc-7534"
  Nov 18 13:25:30.320: INFO: Deleting pod "simpletest.rc-s4ws7" in namespace "gc-7534"
  E1118 13:25:30.344001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:30.365: INFO: Deleting pod "simpletest.rc-szgj5" in namespace "gc-7534"
  Nov 18 13:25:30.412: INFO: Deleting pod "simpletest.rc-t2wfx" in namespace "gc-7534"
  Nov 18 13:25:30.468: INFO: Deleting pod "simpletest.rc-t8pmz" in namespace "gc-7534"
  Nov 18 13:25:30.527: INFO: Deleting pod "simpletest.rc-tmv5x" in namespace "gc-7534"
  Nov 18 13:25:30.568: INFO: Deleting pod "simpletest.rc-tnjzh" in namespace "gc-7534"
  Nov 18 13:25:30.619: INFO: Deleting pod "simpletest.rc-tx4b7" in namespace "gc-7534"
  Nov 18 13:25:30.676: INFO: Deleting pod "simpletest.rc-vmf2l" in namespace "gc-7534"
  Nov 18 13:25:30.721: INFO: Deleting pod "simpletest.rc-wdxvw" in namespace "gc-7534"
  Nov 18 13:25:30.767: INFO: Deleting pod "simpletest.rc-wg9w5" in namespace "gc-7534"
  Nov 18 13:25:30.824: INFO: Deleting pod "simpletest.rc-whl5r" in namespace "gc-7534"
  Nov 18 13:25:30.864: INFO: Deleting pod "simpletest.rc-wqcbk" in namespace "gc-7534"
  Nov 18 13:25:30.920: INFO: Deleting pod "simpletest.rc-wr65f" in namespace "gc-7534"
  Nov 18 13:25:30.963: INFO: Deleting pod "simpletest.rc-ws8gk" in namespace "gc-7534"
  Nov 18 13:25:31.021: INFO: Deleting pod "simpletest.rc-x2bcl" in namespace "gc-7534"
  Nov 18 13:25:31.073: INFO: Deleting pod "simpletest.rc-x5njg" in namespace "gc-7534"
  Nov 18 13:25:31.117: INFO: Deleting pod "simpletest.rc-xbd7d" in namespace "gc-7534"
  Nov 18 13:25:31.173: INFO: Deleting pod "simpletest.rc-xk6pl" in namespace "gc-7534"
  Nov 18 13:25:31.219: INFO: Deleting pod "simpletest.rc-xlp8k" in namespace "gc-7534"
  Nov 18 13:25:31.276: INFO: Deleting pod "simpletest.rc-xlzd2" in namespace "gc-7534"
  Nov 18 13:25:31.326: INFO: Deleting pod "simpletest.rc-z4tpw" in namespace "gc-7534"
  E1118 13:25:31.344956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:31.377: INFO: Deleting pod "simpletest.rc-z9srf" in namespace "gc-7534"
  Nov 18 13:25:31.414: INFO: Deleting pod "simpletest.rc-znzdh" in namespace "gc-7534"
  Nov 18 13:25:31.470: INFO: Deleting pod "simpletest.rc-zqx6t" in namespace "gc-7534"
  Nov 18 13:25:31.521: INFO: Deleting pod "simpletest.rc-ztf57" in namespace "gc-7534"
  Nov 18 13:25:31.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7534" for this suite. @ 11/18/23 13:25:31.606
• [43.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/18/23 13:25:31.666
  Nov 18 13:25:31.667: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:25:31.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:25:31.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:25:31.694
  STEP: Creating projection with secret that has name projected-secret-test-60972c0b-6dcc-4a8a-885b-743b95e01099 @ 11/18/23 13:25:31.696
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:25:31.701
  E1118 13:25:32.345724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:33.345731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:34.346712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:35.346839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:25:35.725
  Nov 18 13:25:35.727: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-secrets-c2b567e0-d121-449f-be30-d8e80dc347a2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:25:35.735
  Nov 18 13:25:35.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2115" for this suite. @ 11/18/23 13:25:35.755
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 11/18/23 13:25:35.762
  Nov 18 13:25:35.762: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename security-context-test @ 11/18/23 13:25:35.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:25:35.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:25:35.781
  E1118 13:25:36.347086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:37.347202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:38.347348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:39.347456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:39.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7208" for this suite. @ 11/18/23 13:25:39.812
• [4.055 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 11/18/23 13:25:39.817
  Nov 18 13:25:39.817: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 13:25:39.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:25:39.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:25:39.836
  STEP: Creating a pod to test substitution in container's args @ 11/18/23 13:25:39.838
  E1118 13:25:40.348450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:41.349171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:42.349406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:43.349827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:25:43.859
  Nov 18 13:25:43.861: INFO: Trying to get logs from node ip-172-31-29-39 pod var-expansion-37f33161-59f1-4fdd-abf1-e440c2d85040 container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 13:25:43.868
  Nov 18 13:25:43.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2596" for this suite. @ 11/18/23 13:25:43.885
• [4.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/18/23 13:25:43.892
  Nov 18 13:25:43.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/18/23 13:25:43.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:25:43.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:25:43.914
  STEP: Creating 50 configmaps @ 11/18/23 13:25:43.916
  STEP: Creating RC which spawns configmap-volume pods @ 11/18/23 13:25:44.147
  Nov 18 13:25:44.251: INFO: Pod name wrapped-volume-race-d7228c96-9f2e-4588-9f8a-29baea4cb098: Found 4 pods out of 5
  E1118 13:25:44.350421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:45.350607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:46.350774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:47.351027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:48.351381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:49.260: INFO: Pod name wrapped-volume-race-d7228c96-9f2e-4588-9f8a-29baea4cb098: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/18/23 13:25:49.26
  STEP: Creating RC which spawns configmap-volume pods @ 11/18/23 13:25:49.279
  Nov 18 13:25:49.292: INFO: Pod name wrapped-volume-race-2eb3624e-0267-4ab4-b090-f4dd185eb4d1: Found 0 pods out of 5
  E1118 13:25:49.351443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:50.351657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:51.351875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:52.351934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:53.352199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:54.298: INFO: Pod name wrapped-volume-race-2eb3624e-0267-4ab4-b090-f4dd185eb4d1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/18/23 13:25:54.298
  STEP: Creating RC which spawns configmap-volume pods @ 11/18/23 13:25:54.317
  Nov 18 13:25:54.330: INFO: Pod name wrapped-volume-race-e5adbd12-4992-4293-baa7-83895030ed20: Found 0 pods out of 5
  E1118 13:25:54.352831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:55.352993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:56.353201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:57.353314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:25:58.353587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:59.341: INFO: Pod name wrapped-volume-race-e5adbd12-4992-4293-baa7-83895030ed20: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/18/23 13:25:59.341
  E1118 13:25:59.353692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:25:59.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-e5adbd12-4992-4293-baa7-83895030ed20 in namespace emptydir-wrapper-1709, will wait for the garbage collector to delete the pods @ 11/18/23 13:25:59.36
  Nov 18 13:25:59.421: INFO: Deleting ReplicationController wrapped-volume-race-e5adbd12-4992-4293-baa7-83895030ed20 took: 6.001138ms
  Nov 18 13:25:59.521: INFO: Terminating ReplicationController wrapped-volume-race-e5adbd12-4992-4293-baa7-83895030ed20 pods took: 100.228619ms
  E1118 13:26:00.354452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2eb3624e-0267-4ab4-b090-f4dd185eb4d1 in namespace emptydir-wrapper-1709, will wait for the garbage collector to delete the pods @ 11/18/23 13:26:01.322
  E1118 13:26:01.355048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:26:01.385: INFO: Deleting ReplicationController wrapped-volume-race-2eb3624e-0267-4ab4-b090-f4dd185eb4d1 took: 8.517902ms
  Nov 18 13:26:01.486: INFO: Terminating ReplicationController wrapped-volume-race-2eb3624e-0267-4ab4-b090-f4dd185eb4d1 pods took: 100.609026ms
  E1118 13:26:02.355859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-d7228c96-9f2e-4588-9f8a-29baea4cb098 in namespace emptydir-wrapper-1709, will wait for the garbage collector to delete the pods @ 11/18/23 13:26:02.487
  Nov 18 13:26:02.547: INFO: Deleting ReplicationController wrapped-volume-race-d7228c96-9f2e-4588-9f8a-29baea4cb098 took: 6.113264ms
  Nov 18 13:26:02.647: INFO: Terminating ReplicationController wrapped-volume-race-d7228c96-9f2e-4588-9f8a-29baea4cb098 pods took: 100.242929ms
  E1118 13:26:03.356489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 11/18/23 13:26:03.848
  STEP: Destroying namespace "emptydir-wrapper-1709" for this suite. @ 11/18/23 13:26:04.16
• [20.275 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 11/18/23 13:26:04.167
  Nov 18 13:26:04.167: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 13:26:04.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:04.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:04.186
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/18/23 13:26:04.188
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/18/23 13:26:04.188
  STEP: creating a pod to probe DNS @ 11/18/23 13:26:04.188
  STEP: submitting the pod to kubernetes @ 11/18/23 13:26:04.188
  E1118 13:26:04.356539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:05.357662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:26:06.203
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:26:06.206
  Nov 18 13:26:06.223: INFO: DNS probes using dns-9686/dns-test-7701ffd6-5b13-482b-8309-5a4b31fad778 succeeded

  Nov 18 13:26:06.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:26:06.227
  STEP: Destroying namespace "dns-9686" for this suite. @ 11/18/23 13:26:06.243
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/18/23 13:26:06.252
  Nov 18 13:26:06.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 13:26:06.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:06.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:06.271
  Nov 18 13:26:06.282: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E1118 13:26:06.357639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:07.357907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:08.358356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:09.358557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:10.359378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:26:11.288: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/18/23 13:26:11.288
  Nov 18 13:26:11.288: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/18/23 13:26:11.296
  Nov 18 13:26:11.307: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2051",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37b552a6-435e-4cf0-acfa-ba9ff3d185b5",
      ResourceVersion: (string) (len=5) "34866",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910771,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 13:26:11.311: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Nov 18 13:26:11.311: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Nov 18 13:26:11.312: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2051",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aede70be-4322-4b5e-890a-99d2d23ff147",
      ResourceVersion: (string) (len=5) "34867",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "37b552a6-435e-4cf0-acfa-ba9ff3d185b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 37 62 35 35 32 61  |"uid\":\"37b552a|
              00000040  36 2d 34 33 35 65 2d 34  63 66 30 2d 61 63 66 61  |6-435e-4cf0-acfa|
              00000050  2d 62 61 39 66 66 33 64  31 38 35 62 35 5c 22 7d  |-ba9ff3d185b5\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 13:26:11.318: INFO: Pod "test-cleanup-controller-bvmbt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-bvmbt",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2051",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa962037-bb87-4deb-a2c9-5cfed37e70d9",
      ResourceVersion: (string) (len=5) "34758",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "aede70be-4322-4b5e-890a-99d2d23ff147",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  61 65 64 65 37 30 62 65  |uid\":\"aede70be|
              00000080  2d 34 33 32 32 2d 34 62  35 65 2d 38 39 30 61 2d  |-4322-4b5e-890a-|
              00000090  39 39 64 32 64 32 33 66  66 31 34 37 5c 22 7d 22  |99d2d23ff147\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 35 30 2e 32 32 35 5c  |192.168.250.225\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8rtbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8rtbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835910766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.250.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.250.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835910766,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63835910767,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e5fa5bff4910b0d37a2f40c04dd1493591de26fc534ce57dccf1f196bb84edce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 13:26:11.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2051" for this suite. @ 11/18/23 13:26:11.325
• [5.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 11/18/23 13:26:11.337
  Nov 18 13:26:11.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:26:11.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:11.358
  E1118 13:26:11.359407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:11.36
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:26:11.362
  E1118 13:26:12.360478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:13.361173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:14.361536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:15.361775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:26:15.382
  Nov 18 13:26:15.385: INFO: Trying to get logs from node ip-172-31-39-133 pod downwardapi-volume-099d2cc2-919f-48f0-b7e2-aa9dec6e5d44 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:26:15.402
  Nov 18 13:26:15.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3870" for this suite. @ 11/18/23 13:26:15.426
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 11/18/23 13:26:15.432
  Nov 18 13:26:15.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:26:15.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:15.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:15.452
  STEP: starting the proxy server @ 11/18/23 13:26:15.454
  Nov 18 13:26:15.454: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9132 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/18/23 13:26:15.496
  Nov 18 13:26:15.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9132" for this suite. @ 11/18/23 13:26:15.509
• [0.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 11/18/23 13:26:15.52
  Nov 18 13:26:15.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 13:26:15.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:15.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:15.536
  Nov 18 13:26:15.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  W1118 13:26:15.539361      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001651fe0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1118 13:26:16.362165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:17.363272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1118 13:26:18.075377      22 warnings.go:70] unknown field "alpha"
  W1118 13:26:18.075408      22 warnings.go:70] unknown field "beta"
  W1118 13:26:18.075414      22 warnings.go:70] unknown field "delta"
  W1118 13:26:18.075420      22 warnings.go:70] unknown field "epsilon"
  W1118 13:26:18.075425      22 warnings.go:70] unknown field "gamma"
  E1118 13:26:18.364043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:26:18.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4905" for this suite. @ 11/18/23 13:26:18.614
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 11/18/23 13:26:18.621
  Nov 18 13:26:18.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-webhook @ 11/18/23 13:26:18.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:18.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:18.641
  STEP: Setting up server cert @ 11/18/23 13:26:18.643
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/18/23 13:26:18.977
  STEP: Deploying the custom resource conversion webhook pod @ 11/18/23 13:26:18.986
  STEP: Wait for the deployment to be ready @ 11/18/23 13:26:18.997
  Nov 18 13:26:19.005: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1118 13:26:19.364512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:20.365460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:26:21.015
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:26:21.026
  E1118 13:26:21.365565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:26:22.026: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov 18 13:26:22.033: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:26:22.366165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:23.366886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:24.367888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/18/23 13:26:24.596
  STEP: v2 custom resource should be converted @ 11/18/23 13:26:24.601
  Nov 18 13:26:24.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2541" for this suite. @ 11/18/23 13:26:25.16
• [6.549 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 11/18/23 13:26:25.171
  Nov 18 13:26:25.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:26:25.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:25.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:25.189
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:26:25.191
  E1118 13:26:25.368585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:26.369163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:27.369802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:28.370301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:26:29.212
  Nov 18 13:26:29.215: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-71e2158f-9c53-42e3-9465-aa504d7e9018 container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:26:29.222
  Nov 18 13:26:29.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-208" for this suite. @ 11/18/23 13:26:29.242
• [4.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 11/18/23 13:26:29.249
  Nov 18 13:26:29.249: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:26:29.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:26:29.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:26:29.267
  STEP: Creating configMap with name cm-test-opt-del-d489a648-6f11-4423-a13d-97a9b85c19c8 @ 11/18/23 13:26:29.275
  STEP: Creating configMap with name cm-test-opt-upd-9b8b9a42-9436-4c48-bc57-291636e9dafb @ 11/18/23 13:26:29.278
  STEP: Creating the pod @ 11/18/23 13:26:29.283
  E1118 13:26:29.370870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:30.371380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d489a648-6f11-4423-a13d-97a9b85c19c8 @ 11/18/23 13:26:31.324
  STEP: Updating configmap cm-test-opt-upd-9b8b9a42-9436-4c48-bc57-291636e9dafb @ 11/18/23 13:26:31.329
  STEP: Creating configMap with name cm-test-opt-create-d6201126-3d22-4f84-a7f7-df5b4a8325c9 @ 11/18/23 13:26:31.335
  STEP: waiting to observe update in volume @ 11/18/23 13:26:31.339
  E1118 13:26:31.371760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:32.371985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:33.372340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:34.373158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:35.374072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:36.374265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:37.374787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:38.375423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:39.375772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:40.376073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:41.376187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:42.376734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:43.376922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:44.377476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:45.377821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:46.378843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:47.379189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:48.379568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:49.379765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:50.380363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:51.381177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:52.381294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:53.381688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:54.381791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:55.382029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:56.382423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:57.382536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:58.383328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:26:59.383503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:00.383832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:01.384043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:02.384093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:03.385134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:04.385963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:05.386171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:06.386458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:07.387134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:08.388177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:09.388349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:10.389185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:11.389367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:12.390180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:13.390293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:14.390932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:15.391329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:16.392026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:17.392237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:18.392226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:19.392367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:20.392445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:21.393165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:22.393344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:23.393494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:24.393970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:25.394071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:26.394907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:27.395072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:28.395529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:29.395771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:30.395832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:31.396852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:32.396958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:33.397254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:34.397404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:35.398055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:27:35.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6617" for this suite. @ 11/18/23 13:27:35.644
• [66.401 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 11/18/23 13:27:35.65
  Nov 18 13:27:35.650: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:27:35.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:27:35.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:27:35.672
  STEP: Creating configMap with name configmap-test-volume-258ba459-4fa5-4224-8174-a5e1995814a9 @ 11/18/23 13:27:35.673
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:27:35.679
  E1118 13:27:36.399107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:37.399296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:38.399666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:39.400112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:27:39.699
  Nov 18 13:27:39.702: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-configmaps-66f96ab4-b70e-4bf1-a2ad-2fad89f90e53 container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:27:39.709
  Nov 18 13:27:39.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4566" for this suite. @ 11/18/23 13:27:39.73
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/18/23 13:27:39.736
  Nov 18 13:27:39.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename cronjob @ 11/18/23 13:27:39.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:27:39.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:27:39.755
  STEP: Creating a cronjob @ 11/18/23 13:27:39.757
  STEP: Ensuring more than one job is running at a time @ 11/18/23 13:27:39.762
  E1118 13:27:40.400217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:41.401183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:42.402017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:43.402422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:44.402568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:45.402796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:46.402867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:47.403091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:48.404123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:49.404212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:50.404570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:51.405189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:52.405427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:53.405774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:54.406203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:55.406502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:56.406577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:57.406711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:58.406974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:27:59.407376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:00.407862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:01.408025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:02.408074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:03.408399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:04.409210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:05.409321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:06.409438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:07.409583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:08.410247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:09.410481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:10.410660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:11.411375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:12.411760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:13.412092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:14.413163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:15.413669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:16.413876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:17.414115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:18.414989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:19.415174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:20.415467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:21.416179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:22.416777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:23.416999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:24.417678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:25.417842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:26.418823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:27.419009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:28.419281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:29.419430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:30.419535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:31.419726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:32.420026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:33.420117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:34.420526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:35.421157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:36.421720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:37.421880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:38.422899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:39.423301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:40.423868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:41.424104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:42.424311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:43.425143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:44.425563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:45.426270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:46.426817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:47.426992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:48.427643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:49.427837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:50.428112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:51.429163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:52.430014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:53.430305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:54.430718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:55.430917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:56.431154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:57.431288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:58.431355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:28:59.431466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:00.431652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:01.431999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/18/23 13:29:01.767
  STEP: Removing cronjob @ 11/18/23 13:29:01.77
  Nov 18 13:29:01.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5614" for this suite. @ 11/18/23 13:29:01.781
• [82.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/18/23 13:29:01.792
  Nov 18 13:29:01.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename proxy @ 11/18/23 13:29:01.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:01.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:01.821
  Nov 18 13:29:01.823: INFO: Creating pod...
  E1118 13:29:02.432107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:03.433151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:03.842: INFO: Creating service...
  Nov 18 13:29:03.854: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/DELETE
  Nov 18 13:29:03.860: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 18 13:29:03.860: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/GET
  Nov 18 13:29:03.864: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov 18 13:29:03.864: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/HEAD
  Nov 18 13:29:03.868: INFO: http.Client request:HEAD | StatusCode:200
  Nov 18 13:29:03.868: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/OPTIONS
  Nov 18 13:29:03.872: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 18 13:29:03.872: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/PATCH
  Nov 18 13:29:03.875: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 18 13:29:03.875: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/POST
  Nov 18 13:29:03.883: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 18 13:29:03.883: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/pods/agnhost/proxy/some/path/with/PUT
  Nov 18 13:29:03.887: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 18 13:29:03.887: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/DELETE
  Nov 18 13:29:03.892: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Nov 18 13:29:03.892: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/GET
  Nov 18 13:29:03.898: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Nov 18 13:29:03.898: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/HEAD
  Nov 18 13:29:03.904: INFO: http.Client request:HEAD | StatusCode:200
  Nov 18 13:29:03.904: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/OPTIONS
  Nov 18 13:29:03.909: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Nov 18 13:29:03.909: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/PATCH
  Nov 18 13:29:03.919: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Nov 18 13:29:03.919: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/POST
  Nov 18 13:29:03.925: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Nov 18 13:29:03.925: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1387/services/test-service/proxy/some/path/with/PUT
  Nov 18 13:29:03.930: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Nov 18 13:29:03.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1387" for this suite. @ 11/18/23 13:29:03.934
• [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 11/18/23 13:29:03.941
  Nov 18 13:29:03.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/18/23 13:29:03.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:03.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:03.962
  Nov 18 13:29:03.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:29:04.433629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:04.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8778" for this suite. @ 11/18/23 13:29:04.987
• [1.055 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 11/18/23 13:29:04.996
  Nov 18 13:29:04.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename limitrange @ 11/18/23 13:29:04.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:05.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:05.014
  STEP: Creating a LimitRange @ 11/18/23 13:29:05.016
  STEP: Setting up watch @ 11/18/23 13:29:05.016
  STEP: Submitting a LimitRange @ 11/18/23 13:29:05.12
  STEP: Verifying LimitRange creation was observed @ 11/18/23 13:29:05.124
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/18/23 13:29:05.124
  Nov 18 13:29:05.127: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov 18 13:29:05.127: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/18/23 13:29:05.127
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/18/23 13:29:05.133
  Nov 18 13:29:05.136: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Nov 18 13:29:05.136: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/18/23 13:29:05.136
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/18/23 13:29:05.143
  Nov 18 13:29:05.146: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Nov 18 13:29:05.146: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/18/23 13:29:05.146
  STEP: Failing to create a Pod with more than max resources @ 11/18/23 13:29:05.148
  STEP: Updating a LimitRange @ 11/18/23 13:29:05.149
  STEP: Verifying LimitRange updating is effective @ 11/18/23 13:29:05.155
  E1118 13:29:05.433794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:06.433977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/18/23 13:29:07.159
  STEP: Failing to create a Pod with more than max resources @ 11/18/23 13:29:07.164
  STEP: Deleting a LimitRange @ 11/18/23 13:29:07.166
  STEP: Verifying the LimitRange was deleted @ 11/18/23 13:29:07.176
  E1118 13:29:07.434425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:08.434888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:09.435090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:10.435210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:11.436239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:12.180: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/18/23 13:29:12.181
  Nov 18 13:29:12.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1435" for this suite. @ 11/18/23 13:29:12.191
• [7.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/18/23 13:29:12.2
  Nov 18 13:29:12.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:29:12.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:12.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:12.219
  STEP: Creating configMap with name configmap-projected-all-test-volume-bc77006d-5512-45ac-8372-8e4bb1d5998d @ 11/18/23 13:29:12.221
  STEP: Creating secret with name secret-projected-all-test-volume-0247b2c3-2982-4896-99e3-c8ed875f6871 @ 11/18/23 13:29:12.226
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/18/23 13:29:12.229
  E1118 13:29:12.437053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:13.437880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:14.438794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:15.439252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:29:16.247
  Nov 18 13:29:16.249: INFO: Trying to get logs from node ip-172-31-29-39 pod projected-volume-e34b87ce-2d66-42da-bffd-c46df57bba3f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:29:16.265
  Nov 18 13:29:16.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4673" for this suite. @ 11/18/23 13:29:16.286
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/18/23 13:29:16.292
  Nov 18 13:29:16.292: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:29:16.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:16.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:16.312
  STEP: Creating projection with secret that has name projected-secret-test-a73080de-4dbe-4d38-ab76-e4efe82edafe @ 11/18/23 13:29:16.314
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:29:16.318
  E1118 13:29:16.440081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:17.441174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:18.441732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:19.441895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:29:20.338
  Nov 18 13:29:20.341: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-secrets-9dc86299-61fa-42e8-9400-7ebae145b877 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:29:20.348
  Nov 18 13:29:20.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5046" for this suite. @ 11/18/23 13:29:20.368
• [4.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/18/23 13:29:20.374
  Nov 18 13:29:20.374: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename containers @ 11/18/23 13:29:20.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:20.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:20.392
  STEP: Creating a pod to test override command @ 11/18/23 13:29:20.394
  E1118 13:29:20.442613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:21.443712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:22.443758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:23.444111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:29:24.414
  Nov 18 13:29:24.417: INFO: Trying to get logs from node ip-172-31-29-39 pod client-containers-4431611e-4019-4f98-95a1-79c9e3b28620 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:29:24.423
  Nov 18 13:29:24.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4984" for this suite. @ 11/18/23 13:29:24.44
  E1118 13:29:24.444949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/18/23 13:29:24.447
  Nov 18 13:29:24.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 13:29:24.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:24.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:24.464
  Nov 18 13:29:24.466: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: creating the pod @ 11/18/23 13:29:24.466
  STEP: submitting the pod to kubernetes @ 11/18/23 13:29:24.466
  E1118 13:29:25.445795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:26.446268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:26.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3552" for this suite. @ 11/18/23 13:29:26.506
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 11/18/23 13:29:26.513
  Nov 18 13:29:26.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:29:26.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:26.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:26.531
  STEP: Creating configMap with name configmap-test-volume-460ec2d5-4519-4f7d-9392-59c6dbbe67fe @ 11/18/23 13:29:26.533
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:29:26.537
  E1118 13:29:27.447161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:28.447570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:29.447745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:30.447868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:29:30.553
  Nov 18 13:29:30.556: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-configmaps-20b255af-10b9-4082-88f0-2deb4251c927 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:29:30.562
  Nov 18 13:29:30.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3431" for this suite. @ 11/18/23 13:29:30.585
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 11/18/23 13:29:30.592
  Nov 18 13:29:30.592: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename disruption @ 11/18/23 13:29:30.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:30.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:30.614
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/18/23 13:29:30.615
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:29:30.62
  E1118 13:29:31.448110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:32.448152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/18/23 13:29:32.631
  STEP: Waiting for all pods to be running @ 11/18/23 13:29:32.631
  Nov 18 13:29:32.633: INFO: pods: 0 < 3
  E1118 13:29:33.449152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:34.449369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/18/23 13:29:34.637
  STEP: Updating the pdb to allow a pod to be evicted @ 11/18/23 13:29:34.649
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:29:34.657
  E1118 13:29:35.449975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:36.450157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/18/23 13:29:36.665
  STEP: Waiting for all pods to be running @ 11/18/23 13:29:36.665
  STEP: Waiting for the pdb to observed all healthy pods @ 11/18/23 13:29:36.668
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/18/23 13:29:36.694
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:29:36.706
  E1118 13:29:37.451078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:38.451613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/18/23 13:29:38.72
  STEP: locating a running pod @ 11/18/23 13:29:38.723
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/18/23 13:29:38.732
  STEP: Waiting for the pdb to be deleted @ 11/18/23 13:29:38.738
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/18/23 13:29:38.741
  STEP: Waiting for all pods to be running @ 11/18/23 13:29:38.741
  Nov 18 13:29:38.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5393" for this suite. @ 11/18/23 13:29:38.765
• [8.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 11/18/23 13:29:38.78
  Nov 18 13:29:38.780: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replicaset @ 11/18/23 13:29:38.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:38.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:38.803
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/18/23 13:29:38.805
  E1118 13:29:39.452498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:40.452745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 11/18/23 13:29:40.821
  STEP: Then the orphan pod is adopted @ 11/18/23 13:29:40.826
  E1118 13:29:41.452833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 11/18/23 13:29:41.832
  Nov 18 13:29:41.835: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/18/23 13:29:41.845
  E1118 13:29:42.453170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:42.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9924" for this suite. @ 11/18/23 13:29:42.856
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 11/18/23 13:29:42.868
  Nov 18 13:29:42.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:29:42.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:42.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:42.889
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:29:42.891
  E1118 13:29:43.453976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:44.454158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:45.454643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:46.454807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:29:46.912
  Nov 18 13:29:46.915: INFO: Trying to get logs from node ip-172-31-29-39 pod downwardapi-volume-93bdad3c-3208-453a-940a-5dd6b20a2a6e container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:29:46.922
  Nov 18 13:29:46.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2023" for this suite. @ 11/18/23 13:29:46.942
• [4.079 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/18/23 13:29:46.948
  Nov 18 13:29:46.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 13:29:46.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:46.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:46.965
  Nov 18 13:29:46.985: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/18/23 13:29:46.991
  Nov 18 13:29:46.995: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:46.995: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:46.998: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:29:46.998: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:29:47.455509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:48.002: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:48.002: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:48.006: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 13:29:48.006: INFO: Node ip-172-31-39-133 is running 0 daemon pod, expected 1
  E1118 13:29:48.455568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:49.085: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:49.086: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:49.089: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:29:49.089: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/18/23 13:29:49.1
  STEP: Check that daemon pods images are updated. @ 11/18/23 13:29:49.111
  Nov 18 13:29:49.114: INFO: Wrong image for pod: daemon-set-68qws. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:49.114: INFO: Wrong image for pod: daemon-set-jvz2n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:49.114: INFO: Wrong image for pod: daemon-set-rw4kv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:49.125: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:49.125: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1118 13:29:49.455662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:50.128: INFO: Pod daemon-set-2v5gp is not available
  Nov 18 13:29:50.128: INFO: Wrong image for pod: daemon-set-68qws. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:50.128: INFO: Wrong image for pod: daemon-set-jvz2n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:50.132: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:50.132: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1118 13:29:50.456522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:51.129: INFO: Wrong image for pod: daemon-set-jvz2n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:51.134: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:51.134: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1118 13:29:51.457165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:52.130: INFO: Wrong image for pod: daemon-set-jvz2n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Nov 18 13:29:52.130: INFO: Pod daemon-set-kszz9 is not available
  Nov 18 13:29:52.134: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:52.134: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1118 13:29:52.457392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:53.129: INFO: Pod daemon-set-lxxw5 is not available
  Nov 18 13:29:53.132: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:53.132: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/18/23 13:29:53.132
  Nov 18 13:29:53.136: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:53.136: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:53.138: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 13:29:53.138: INFO: Node ip-172-31-84-152 is running 0 daemon pod, expected 1
  E1118 13:29:53.458176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:54.142: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:54.142: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:54.145: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Nov 18 13:29:54.145: INFO: Node ip-172-31-84-152 is running 0 daemon pod, expected 1
  E1118 13:29:54.458210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:55.142: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:55.142: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:29:55.146: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:29:55.146: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/18/23 13:29:55.16
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8317, will wait for the garbage collector to delete the pods @ 11/18/23 13:29:55.16
  Nov 18 13:29:55.220: INFO: Deleting DaemonSet.extensions daemon-set took: 5.665583ms
  Nov 18 13:29:55.320: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.242283ms
  E1118 13:29:55.458755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:56.459453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:29:56.624: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:29:56.624: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 18 13:29:56.627: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36400"},"items":null}

  Nov 18 13:29:56.629: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36400"},"items":null}

  Nov 18 13:29:56.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8317" for this suite. @ 11/18/23 13:29:56.645
• [9.704 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 11/18/23 13:29:56.652
  Nov 18 13:29:56.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:29:56.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:29:56.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:29:56.673
  STEP: Setting up server cert @ 11/18/23 13:29:56.693
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:29:57.11
  STEP: Deploying the webhook pod @ 11/18/23 13:29:57.116
  STEP: Wait for the deployment to be ready @ 11/18/23 13:29:57.126
  Nov 18 13:29:57.132: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:29:57.460101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:29:58.461178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:29:59.141
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:29:59.152
  E1118 13:29:59.461996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:00.152: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/18/23 13:30:00.159
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/18/23 13:30:00.176
  STEP: Creating a configMap that should not be mutated @ 11/18/23 13:30:00.181
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/18/23 13:30:00.193
  STEP: Creating a configMap that should be mutated @ 11/18/23 13:30:00.2
  Nov 18 13:30:00.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9257" for this suite. @ 11/18/23 13:30:00.267
  STEP: Destroying namespace "webhook-markers-3937" for this suite. @ 11/18/23 13:30:00.277
• [3.631 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 11/18/23 13:30:00.283
  Nov 18 13:30:00.283: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename namespaces @ 11/18/23 13:30:00.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:00.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:00.3
  STEP: Creating namespace "e2e-ns-svxsc" @ 11/18/23 13:30:00.302
  Nov 18 13:30:00.321: INFO: Namespace "e2e-ns-svxsc-3952" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-svxsc-3952" @ 11/18/23 13:30:00.321
  Nov 18 13:30:00.330: INFO: Namespace "e2e-ns-svxsc-3952" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-svxsc-3952" @ 11/18/23 13:30:00.33
  Nov 18 13:30:00.343: INFO: Namespace "e2e-ns-svxsc-3952" has []v1.FinalizerName{"kubernetes"}
  Nov 18 13:30:00.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1575" for this suite. @ 11/18/23 13:30:00.347
  STEP: Destroying namespace "e2e-ns-svxsc-3952" for this suite. @ 11/18/23 13:30:00.353
• [0.076 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 11/18/23 13:30:00.359
  Nov 18 13:30:00.359: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replication-controller @ 11/18/23 13:30:00.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:00.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:00.381
  STEP: Given a ReplicationController is created @ 11/18/23 13:30:00.382
  STEP: When the matched label of one of its pods change @ 11/18/23 13:30:00.389
  Nov 18 13:30:00.391: INFO: Pod name pod-release: Found 0 pods out of 1
  E1118 13:30:00.462828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:01.463346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:02.463553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:03.464045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:04.464118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:05.395: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/18/23 13:30:05.407
  E1118 13:30:05.464856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:06.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4854" for this suite. @ 11/18/23 13:30:06.418
• [6.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 11/18/23 13:30:06.426
  Nov 18 13:30:06.426: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename disruption @ 11/18/23 13:30:06.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:06.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:06.448
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:30:06.454
  E1118 13:30:06.465098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:07.465323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 11/18/23 13:30:08.462
  E1118 13:30:08.465456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/18/23 13:30:08.473
  Nov 18 13:30:08.477: INFO: running pods: 0 < 1
  E1118 13:30:09.466329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:10.467438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/18/23 13:30:10.481
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:30:10.492
  STEP: Patching PodDisruptionBudget status @ 11/18/23 13:30:10.5
  STEP: Waiting for the pdb to be processed @ 11/18/23 13:30:10.507
  Nov 18 13:30:10.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5211" for this suite. @ 11/18/23 13:30:10.514
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/18/23 13:30:10.523
  Nov 18 13:30:10.524: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename containers @ 11/18/23 13:30:10.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:10.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:10.545
  E1118 13:30:11.468083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:12.468103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:12.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2272" for this suite. @ 11/18/23 13:30:12.576
• [2.058 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 11/18/23 13:30:12.582
  Nov 18 13:30:12.582: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replicaset @ 11/18/23 13:30:12.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:12.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:12.603
  STEP: Create a ReplicaSet @ 11/18/23 13:30:12.605
  STEP: Verify that the required pods have come up @ 11/18/23 13:30:12.611
  Nov 18 13:30:12.614: INFO: Pod name sample-pod: Found 0 pods out of 3
  E1118 13:30:13.468844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:14.468976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:15.469210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:16.469556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:17.469658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:17.619: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/18/23 13:30:17.619
  Nov 18 13:30:17.621: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/18/23 13:30:17.621
  STEP: DeleteCollection of the ReplicaSets @ 11/18/23 13:30:17.625
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/18/23 13:30:17.633
  Nov 18 13:30:17.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1456" for this suite. @ 11/18/23 13:30:17.64
• [5.069 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 11/18/23 13:30:17.652
  Nov 18 13:30:17.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:30:17.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:17.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:17.675
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/18/23 13:30:17.677
  E1118 13:30:18.469891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:19.470096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:20.470150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:21.470290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:30:21.701
  Nov 18 13:30:21.704: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-89da93ff-5c1e-491a-a60f-280e09a80a54 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:30:21.711
  Nov 18 13:30:21.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4044" for this suite. @ 11/18/23 13:30:21.733
• [4.088 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 11/18/23 13:30:21.74
  Nov 18 13:30:21.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename svcaccounts @ 11/18/23 13:30:21.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:21.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:21.76
  Nov 18 13:30:21.779: INFO: created pod pod-service-account-defaultsa
  Nov 18 13:30:21.779: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Nov 18 13:30:21.787: INFO: created pod pod-service-account-mountsa
  Nov 18 13:30:21.787: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Nov 18 13:30:21.792: INFO: created pod pod-service-account-nomountsa
  Nov 18 13:30:21.792: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Nov 18 13:30:21.796: INFO: created pod pod-service-account-defaultsa-mountspec
  Nov 18 13:30:21.796: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Nov 18 13:30:21.805: INFO: created pod pod-service-account-mountsa-mountspec
  Nov 18 13:30:21.805: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Nov 18 13:30:21.815: INFO: created pod pod-service-account-nomountsa-mountspec
  Nov 18 13:30:21.815: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Nov 18 13:30:21.821: INFO: created pod pod-service-account-defaultsa-nomountspec
  Nov 18 13:30:21.821: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Nov 18 13:30:21.831: INFO: created pod pod-service-account-mountsa-nomountspec
  Nov 18 13:30:21.831: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Nov 18 13:30:21.837: INFO: created pod pod-service-account-nomountsa-nomountspec
  Nov 18 13:30:21.837: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Nov 18 13:30:21.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8848" for this suite. @ 11/18/23 13:30:21.845
• [0.112 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 11/18/23 13:30:21.852
  Nov 18 13:30:21.852: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:30:21.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:21.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:21.882
  STEP: creating all guestbook components @ 11/18/23 13:30:21.884
  Nov 18 13:30:21.884: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Nov 18 13:30:21.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 create -f -'
  Nov 18 13:30:22.098: INFO: stderr: ""
  Nov 18 13:30:22.098: INFO: stdout: "service/agnhost-replica created\n"
  Nov 18 13:30:22.098: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Nov 18 13:30:22.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 create -f -'
  Nov 18 13:30:22.293: INFO: stderr: ""
  Nov 18 13:30:22.293: INFO: stdout: "service/agnhost-primary created\n"
  Nov 18 13:30:22.293: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Nov 18 13:30:22.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 create -f -'
  E1118 13:30:22.470872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:22.473: INFO: stderr: ""
  Nov 18 13:30:22.473: INFO: stdout: "service/frontend created\n"
  Nov 18 13:30:22.473: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Nov 18 13:30:22.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 create -f -'
  Nov 18 13:30:22.620: INFO: stderr: ""
  Nov 18 13:30:22.620: INFO: stdout: "deployment.apps/frontend created\n"
  Nov 18 13:30:22.620: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov 18 13:30:22.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 create -f -'
  Nov 18 13:30:22.774: INFO: stderr: ""
  Nov 18 13:30:22.774: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Nov 18 13:30:22.774: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Nov 18 13:30:22.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 create -f -'
  Nov 18 13:30:22.923: INFO: stderr: ""
  Nov 18 13:30:22.923: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/18/23 13:30:22.923
  Nov 18 13:30:22.923: INFO: Waiting for all frontend pods to be Running.
  E1118 13:30:23.471460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:24.472165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:25.473183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:26.473736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:27.473937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:30:27.974: INFO: Waiting for frontend to serve content.
  Nov 18 13:30:27.986: INFO: Trying to add a new entry to the guestbook.
  Nov 18 13:30:27.999: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/18/23 13:30:28.009
  Nov 18 13:30:28.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 delete --grace-period=0 --force -f -'
  Nov 18 13:30:28.081: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:30:28.081: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/18/23 13:30:28.082
  Nov 18 13:30:28.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 delete --grace-period=0 --force -f -'
  Nov 18 13:30:28.154: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:30:28.154: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/18/23 13:30:28.154
  Nov 18 13:30:28.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 delete --grace-period=0 --force -f -'
  Nov 18 13:30:28.230: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:30:28.230: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/18/23 13:30:28.23
  Nov 18 13:30:28.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 delete --grace-period=0 --force -f -'
  Nov 18 13:30:28.292: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:30:28.292: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/18/23 13:30:28.292
  Nov 18 13:30:28.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 delete --grace-period=0 --force -f -'
  Nov 18 13:30:28.357: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:30:28.357: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/18/23 13:30:28.357
  Nov 18 13:30:28.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-2488 delete --grace-period=0 --force -f -'
  Nov 18 13:30:28.434: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Nov 18 13:30:28.434: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Nov 18 13:30:28.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2488" for this suite. @ 11/18/23 13:30:28.439
• [6.594 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 11/18/23 13:30:28.447
  Nov 18 13:30:28.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename configmap @ 11/18/23 13:30:28.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:28.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:28.465
  STEP: creating a ConfigMap @ 11/18/23 13:30:28.467
  STEP: fetching the ConfigMap @ 11/18/23 13:30:28.471
  E1118 13:30:28.473950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the ConfigMap @ 11/18/23 13:30:28.474
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/18/23 13:30:28.48
  STEP: deleting the ConfigMap by collection with a label selector @ 11/18/23 13:30:28.483
  STEP: listing all ConfigMaps in test namespace @ 11/18/23 13:30:28.492
  Nov 18 13:30:28.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2193" for this suite. @ 11/18/23 13:30:28.498
• [0.059 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 11/18/23 13:30:28.506
  Nov 18 13:30:28.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:30:28.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:30:28.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:30:28.525
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-092ef84c-5880-4033-8fa8-fc0fce183995 @ 11/18/23 13:30:28.53
  STEP: Creating the pod @ 11/18/23 13:30:28.536
  E1118 13:30:29.474902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:30.474994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-092ef84c-5880-4033-8fa8-fc0fce183995 @ 11/18/23 13:30:30.562
  STEP: waiting to observe update in volume @ 11/18/23 13:30:30.566
  E1118 13:30:31.475918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:32.476133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:33.476184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:34.476299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:35.477183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:36.477294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:37.477880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:38.478417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:39.478437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:40.478820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:41.479826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:42.480726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:43.481161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:44.481308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:45.482359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:46.482587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:47.482719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:48.483290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:49.484038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:50.484186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:51.485120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:52.485822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:53.486275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:54.486724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:55.486915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:56.487123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:57.487725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:58.488287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:30:59.488733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:00.489179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:01.489557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:02.489944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:03.490228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:04.490360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:05.491298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:06.491509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:07.492419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:08.493181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:09.494100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:10.494299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:11.494977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:12.495124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:13.495656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:14.496219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:15.496570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:16.496564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:17.496579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:18.497122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:19.497433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:20.497541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:21.497966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:22.498127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:23.498389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:24.498615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:25.499681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:26.499946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:27.500903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:28.501427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:29.502381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:30.502857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:31.503464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:32.503641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:33.503922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:34.504143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:35.505190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:36.505596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:31:36.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6141" for this suite. @ 11/18/23 13:31:36.863
• [68.364 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 11/18/23 13:31:36.87
  Nov 18 13:31:36.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename dns @ 11/18/23 13:31:36.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:31:36.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:31:36.886
  STEP: Creating a test headless service @ 11/18/23 13:31:36.889
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6012.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6012.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/18/23 13:31:36.894
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6012.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6012.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/18/23 13:31:36.894
  STEP: creating a pod to probe DNS @ 11/18/23 13:31:36.894
  STEP: submitting the pod to kubernetes @ 11/18/23 13:31:36.894
  E1118 13:31:37.506399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:38.506994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/18/23 13:31:38.912
  STEP: looking for the results for each expected name from probers @ 11/18/23 13:31:38.915
  Nov 18 13:31:38.932: INFO: DNS probes using dns-6012/dns-test-73337b7c-b1dc-4294-bc54-22c027071d2f succeeded

  Nov 18 13:31:38.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:31:38.935
  STEP: deleting the test headless service @ 11/18/23 13:31:38.95
  STEP: Destroying namespace "dns-6012" for this suite. @ 11/18/23 13:31:38.962
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/18/23 13:31:38.971
  Nov 18 13:31:38.972: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-watch @ 11/18/23 13:31:38.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:31:38.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:31:38.989
  Nov 18 13:31:38.991: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:31:39.507677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:40.508079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:41.509136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 11/18/23 13:31:41.524
  Nov 18 13:31:41.529: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-18T13:31:41Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-18T13:31:41Z]] name:name1 resourceVersion:37507 uid:40563e21-d942-4a3e-8f88-ed9351eb8e04] num:map[num1:9223372036854775807 num2:1000000]]}
  E1118 13:31:42.509286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:43.509349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:44.509592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:45.509782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:46.509856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:47.510441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:48.510831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:49.511081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:50.511246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:51.511445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 11/18/23 13:31:51.53
  Nov 18 13:31:51.536: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-18T13:31:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-18T13:31:51Z]] name:name2 resourceVersion:37559 uid:31db7a9c-e8fd-494a-ba76-7598acc5b610] num:map[num1:9223372036854775807 num2:1000000]]}
  E1118 13:31:52.512048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:53.512201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:54.513154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:55.513344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:56.513956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:57.514316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:58.515074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:31:59.515261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:00.515460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:01.515625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 11/18/23 13:32:01.536
  Nov 18 13:32:01.544: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-18T13:31:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-18T13:32:01Z]] name:name1 resourceVersion:37578 uid:40563e21-d942-4a3e-8f88-ed9351eb8e04] num:map[num1:9223372036854775807 num2:1000000]]}
  E1118 13:32:02.516090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:03.516221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:04.517166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:05.517361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:06.517552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:07.518562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:08.518633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:09.518795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:10.518981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:11.519175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 11/18/23 13:32:11.544
  Nov 18 13:32:11.550: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-18T13:31:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-18T13:32:11Z]] name:name2 resourceVersion:37598 uid:31db7a9c-e8fd-494a-ba76-7598acc5b610] num:map[num1:9223372036854775807 num2:1000000]]}
  E1118 13:32:12.519438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:13.519644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:14.519855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:15.520082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:16.520940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:17.521666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:18.521807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:19.521943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:20.522250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:21.522392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 11/18/23 13:32:21.55
  Nov 18 13:32:21.558: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-18T13:31:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-18T13:32:01Z]] name:name1 resourceVersion:37618 uid:40563e21-d942-4a3e-8f88-ed9351eb8e04] num:map[num1:9223372036854775807 num2:1000000]]}
  E1118 13:32:22.523282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:23.523490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:24.524203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:25.525206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:26.525399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:27.525614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:28.526123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:29.526264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:30.527036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:31.527144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 11/18/23 13:32:31.558
  Nov 18 13:32:31.565: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-11-18T13:31:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-11-18T13:32:11Z]] name:name2 resourceVersion:37638 uid:31db7a9c-e8fd-494a-ba76-7598acc5b610] num:map[num1:9223372036854775807 num2:1000000]]}
  E1118 13:32:32.528135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:33.529167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:34.529364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:35.529553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:36.529937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:37.530495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:38.530686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:39.530842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:40.530940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:41.531113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:32:42.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7295" for this suite. @ 11/18/23 13:32:42.082
• [63.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 11/18/23 13:32:42.089
  Nov 18 13:32:42.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename services @ 11/18/23 13:32:42.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:32:42.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:32:42.109
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8875 @ 11/18/23 13:32:42.111
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/18/23 13:32:42.121
  STEP: creating service externalsvc in namespace services-8875 @ 11/18/23 13:32:42.121
  STEP: creating replication controller externalsvc in namespace services-8875 @ 11/18/23 13:32:42.137
  I1118 13:32:42.145132      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8875, replica count: 2
  E1118 13:32:42.531548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:43.531830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:44.532750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1118 13:32:45.196616      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/18/23 13:32:45.2
  Nov 18 13:32:45.212: INFO: Creating new exec pod
  E1118 13:32:45.533721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:46.533953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:32:47.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=services-8875 exec execpoddzpjc -- /bin/sh -x -c nslookup clusterip-service.services-8875.svc.cluster.local'
  Nov 18 13:32:47.398: INFO: stderr: "+ nslookup clusterip-service.services-8875.svc.cluster.local\n"
  Nov 18 13:32:47.398: INFO: stdout: "Server:\t\t10.152.183.211\nAddress:\t10.152.183.211#53\n\nclusterip-service.services-8875.svc.cluster.local\tcanonical name = externalsvc.services-8875.svc.cluster.local.\nName:\texternalsvc.services-8875.svc.cluster.local\nAddress: 10.152.183.174\n\n"
  Nov 18 13:32:47.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-8875, will wait for the garbage collector to delete the pods @ 11/18/23 13:32:47.401
  Nov 18 13:32:47.461: INFO: Deleting ReplicationController externalsvc took: 6.268929ms
  E1118 13:32:47.534531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:32:47.561: INFO: Terminating ReplicationController externalsvc pods took: 100.229033ms
  E1118 13:32:48.534993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:49.535400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:32:50.280: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-8875" for this suite. @ 11/18/23 13:32:50.292
• [8.210 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 11/18/23 13:32:50.299
  Nov 18 13:32:50.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename field-validation @ 11/18/23 13:32:50.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:32:50.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:32:50.317
  Nov 18 13:32:50.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:32:50.535919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:51.536288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:52.536781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1118 13:32:52.856457      22 warnings.go:70] unknown field "alpha"
  W1118 13:32:52.856476      22 warnings.go:70] unknown field "beta"
  W1118 13:32:52.856482      22 warnings.go:70] unknown field "delta"
  W1118 13:32:52.856488      22 warnings.go:70] unknown field "epsilon"
  W1118 13:32:52.856493      22 warnings.go:70] unknown field "gamma"
  Nov 18 13:32:53.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5454" for this suite. @ 11/18/23 13:32:53.405
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/18/23 13:32:53.414
  Nov 18 13:32:53.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename deployment @ 11/18/23 13:32:53.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:32:53.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:32:53.432
  Nov 18 13:32:53.434: INFO: Creating deployment "test-recreate-deployment"
  Nov 18 13:32:53.440: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Nov 18 13:32:53.447: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E1118 13:32:53.537061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:54.537380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:32:55.454: INFO: Waiting deployment "test-recreate-deployment" to complete
  Nov 18 13:32:55.458: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Nov 18 13:32:55.467: INFO: Updating deployment test-recreate-deployment
  Nov 18 13:32:55.467: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E1118 13:32:55.537588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:32:55.543: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28778266-4b77-41e2-a65c-26bbb0b8b365",
      ResourceVersion: (string) (len=5) "37880",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835911173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Nov 18 13:32:55.548: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ee07754-cdb1-4d1d-8524-e6d06763ac9d",
      ResourceVersion: (string) (len=5) "37875",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835911175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "28778266-4b77-41e2-a65c-26bbb0b8b365",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 37 37 38 32  36 36 2d 34 62 37 37 2d  |\"28778266-4b77-|
              00000120  34 31 65 32 2d 61 36 35  63 2d 32 36 62 62 62 30  |41e2-a65c-26bbb0|
              00000130  62 38 62 33 36 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b8b365\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 13:32:55.549: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Nov 18 13:32:55.549: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23dee470-ebe1-46a0-b88c-c5737f9ac6b7",
      ResourceVersion: (string) (len=5) "37866",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835911173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "28778266-4b77-41e2-a65c-26bbb0b8b365",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 37 37 38 32  36 36 2d 34 62 37 37 2d  |\"28778266-4b77-|
              00000120  34 31 65 32 2d 61 36 35  63 2d 32 36 62 62 62 30  |41e2-a65c-26bbb0|
              00000130  62 38 62 33 36 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b8b365\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Nov 18 13:32:55.555: INFO: Pod "test-recreate-deployment-76fb77d45-6nvvj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-6nvvj",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c7052d6-c783-4938-82a9-1a1a13182109",
      ResourceVersion: (string) (len=5) "37878",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835911175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "0ee07754-cdb1-4d1d-8524-e6d06763ac9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  65 30 37 37 35 34 2d 63  |d\":\"0ee07754-c|
              00000090  64 62 31 2d 34 64 31 64  2d 38 35 32 34 2d 65 36  |db1-4d1d-8524-e6|
              000000a0  64 30 36 37 36 33 61 63  39 64 5c 22 7d 22 3a 7b  |d06763ac9d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nch9t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nch9t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-29-39",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63835911175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.29.39",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63835911175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Nov 18 13:32:55.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7209" for this suite. @ 11/18/23 13:32:55.56
• [2.154 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 11/18/23 13:32:55.568
  Nov 18 13:32:55.568: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename runtimeclass @ 11/18/23 13:32:55.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:32:55.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:32:55.591
  STEP: Deleting RuntimeClass runtimeclass-1828-delete-me @ 11/18/23 13:32:55.6
  STEP: Waiting for the RuntimeClass to disappear @ 11/18/23 13:32:55.605
  Nov 18 13:32:55.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1828" for this suite. @ 11/18/23 13:32:55.618
• [0.055 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 11/18/23 13:32:55.624
  Nov 18 13:32:55.624: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 13:32:55.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:32:55.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:32:55.641
  Nov 18 13:32:55.672: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"841dfde5-7ca9-4d19-b7e7-ee52550b6a03", Controller:(*bool)(0xc003c6898e), BlockOwnerDeletion:(*bool)(0xc003c6898f)}}
  Nov 18 13:32:55.677: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"92e555e4-e8f6-46bd-9a85-a41cb464b5df", Controller:(*bool)(0xc003c68bbe), BlockOwnerDeletion:(*bool)(0xc003c68bbf)}}
  Nov 18 13:32:55.684: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"dd935b99-5326-44c2-91fe-44a48be26e5a", Controller:(*bool)(0xc003c68de6), BlockOwnerDeletion:(*bool)(0xc003c68de7)}}
  E1118 13:32:56.538358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:57.538878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:58.538968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:32:59.539169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:00.539356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:00.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8804" for this suite. @ 11/18/23 13:33:00.699
• [5.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/18/23 13:33:00.707
  Nov 18 13:33:00.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename secrets @ 11/18/23 13:33:00.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:33:00.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:33:00.727
  STEP: Creating secret with name secret-test-bbbf3468-cce0-40fe-a526-d4f2c3aa395b @ 11/18/23 13:33:00.728
  STEP: Creating a pod to test consume secrets @ 11/18/23 13:33:00.732
  E1118 13:33:01.540351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:02.540798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:03.541458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:04.541693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:33:04.752
  Nov 18 13:33:04.755: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-secrets-09aa55da-9eb8-4c20-9c17-dc20df3d09dd container secret-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:33:04.764
  Nov 18 13:33:04.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7054" for this suite. @ 11/18/23 13:33:04.781
• [4.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 11/18/23 13:33:04.79
  Nov 18 13:33:04.790: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename gc @ 11/18/23 13:33:04.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:33:04.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:33:04.807
  STEP: create the rc @ 11/18/23 13:33:04.813
  W1118 13:33:04.817654      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1118 13:33:05.542325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:06.542628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:07.546039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:08.549075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:09.549168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:10.549472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/18/23 13:33:10.822
  STEP: wait for the rc to be deleted @ 11/18/23 13:33:10.83
  E1118 13:33:11.549995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:11.843: INFO: 80 pods remaining
  Nov 18 13:33:11.843: INFO: 80 pods has nil DeletionTimestamp
  Nov 18 13:33:11.843: INFO: 
  E1118 13:33:12.550629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:12.841: INFO: 71 pods remaining
  Nov 18 13:33:12.841: INFO: 71 pods has nil DeletionTimestamp
  Nov 18 13:33:12.841: INFO: 
  E1118 13:33:13.550774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:13.840: INFO: 60 pods remaining
  Nov 18 13:33:13.840: INFO: 60 pods has nil DeletionTimestamp
  Nov 18 13:33:13.840: INFO: 
  E1118 13:33:14.551452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:14.839: INFO: 40 pods remaining
  Nov 18 13:33:14.839: INFO: 40 pods has nil DeletionTimestamp
  Nov 18 13:33:14.839: INFO: 
  E1118 13:33:15.551791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:15.838: INFO: 31 pods remaining
  Nov 18 13:33:15.838: INFO: 31 pods has nil DeletionTimestamp
  Nov 18 13:33:15.838: INFO: 
  E1118 13:33:16.552103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:16.837: INFO: 20 pods remaining
  Nov 18 13:33:16.837: INFO: 20 pods has nil DeletionTimestamp
  Nov 18 13:33:16.837: INFO: 
  E1118 13:33:17.552764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/18/23 13:33:17.837
  W1118 13:33:17.842497      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Nov 18 13:33:17.842: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Nov 18 13:33:17.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1863" for this suite. @ 11/18/23 13:33:17.848
• [13.066 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 11/18/23 13:33:17.856
  Nov 18 13:33:17.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 13:33:17.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:33:17.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:33:17.878
  STEP: Creating pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222 @ 11/18/23 13:33:17.88
  E1118 13:33:18.552903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:19.553136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 13:33:19.9
  Nov 18 13:33:19.903: INFO: Initial restart count of pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc is 0
  Nov 18 13:33:19.906: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:20.554117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:21.554355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:21.910: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:22.555022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:23.555218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:23.914: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:24.556041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:25.556139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:25.918: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:26.557186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:27.557667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:27.922: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:28.557929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:29.558163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:29.926: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:30.559098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:31.560131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:31.930: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:32.560716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:33.561184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:33.934: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:34.561287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:35.561477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:35.939: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:36.561725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:37.562634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:37.943: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:38.562715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:39.562900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:39.946: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:40.563698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:41.563937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:41.950: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:42.564724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:43.565011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:43.954: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:44.565073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:45.565870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:45.959: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:46.566306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:47.566819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:47.964: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:48.566894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:49.567981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:49.968: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:50.568099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:51.568293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:51.972: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:52.569095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:53.569280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:53.976: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:54.569408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:55.569593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:55.980: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:56.570372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:57.570788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:57.984: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:33:58.570787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:33:59.570986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:33:59.987: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:00.571174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:01.571369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:01.994: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:02.571678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:03.571857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:03.997: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:04.572587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:05.572835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:06.001: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:06.573145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:07.573585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:08.005: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:08.573679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:09.573903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:10.010: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:10.574691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:11.574850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:12.013: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:12.575503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:13.575662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:14.017: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:14.576433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:15.576561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:16.022: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:16.576671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:17.577760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:18.025: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:18.577812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:19.577973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:20.030: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:20.578747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:21.579201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:22.034: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  E1118 13:34:22.579472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:23.580040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:24.038: INFO: Get pod test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc in namespace container-probe-3222
  Nov 18 13:34:24.038: INFO: Restart count of pod container-probe-3222/test-grpc-99d42ba8-2e3c-4dfa-94de-1b8febc252dc is now 1 (1m4.134451602s elapsed)
  Nov 18 13:34:24.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:34:24.041
  STEP: Destroying namespace "container-probe-3222" for this suite. @ 11/18/23 13:34:24.055
• [66.207 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 11/18/23 13:34:24.062
  Nov 18 13:34:24.062: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:34:24.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:34:24.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:34:24.081
  STEP: Setting up server cert @ 11/18/23 13:34:24.106
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:34:24.38
  STEP: Deploying the webhook pod @ 11/18/23 13:34:24.387
  STEP: Wait for the deployment to be ready @ 11/18/23 13:34:24.4
  Nov 18 13:34:24.406: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:34:24.580543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:25.581173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:34:26.416
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:34:26.427
  E1118 13:34:26.581901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:27.427: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/18/23 13:34:27.434
  STEP: create a pod that should be denied by the webhook @ 11/18/23 13:34:27.45
  STEP: create a pod that causes the webhook to hang @ 11/18/23 13:34:27.464
  E1118 13:34:27.582862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:28.583007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:29.583142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:30.583573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:31.583699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:32.584065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:33.584258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:34.584493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:35.585157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:36.585341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 11/18/23 13:34:37.47
  STEP: create a configmap that should be admitted by the webhook @ 11/18/23 13:34:37.479
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/18/23 13:34:37.488
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/18/23 13:34:37.496
  STEP: create a namespace that bypass the webhook @ 11/18/23 13:34:37.501
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/18/23 13:34:37.52
  Nov 18 13:34:37.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3429" for this suite. @ 11/18/23 13:34:37.582
  E1118 13:34:37.585515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-7154" for this suite. @ 11/18/23 13:34:37.592
  STEP: Destroying namespace "exempted-namespace-7382" for this suite. @ 11/18/23 13:34:37.598
• [13.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/18/23 13:34:37.607
  Nov 18 13:34:37.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename events @ 11/18/23 13:34:37.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:34:37.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:34:37.628
  STEP: creating a test event @ 11/18/23 13:34:37.63
  STEP: listing events in all namespaces @ 11/18/23 13:34:37.637
  STEP: listing events in test namespace @ 11/18/23 13:34:37.641
  STEP: listing events with field selection filtering on source @ 11/18/23 13:34:37.643
  STEP: listing events with field selection filtering on reportingController @ 11/18/23 13:34:37.647
  STEP: getting the test event @ 11/18/23 13:34:37.65
  STEP: patching the test event @ 11/18/23 13:34:37.653
  STEP: getting the test event @ 11/18/23 13:34:37.664
  STEP: updating the test event @ 11/18/23 13:34:37.667
  STEP: getting the test event @ 11/18/23 13:34:37.673
  STEP: deleting the test event @ 11/18/23 13:34:37.676
  STEP: listing events in all namespaces @ 11/18/23 13:34:37.684
  STEP: listing events in test namespace @ 11/18/23 13:34:37.687
  Nov 18 13:34:37.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9643" for this suite. @ 11/18/23 13:34:37.694
• [0.094 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 11/18/23 13:34:37.701
  Nov 18 13:34:37.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename container-probe @ 11/18/23 13:34:37.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:34:37.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:34:37.722
  STEP: Creating pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833 @ 11/18/23 13:34:37.724
  E1118 13:34:38.586543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:39.586840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/18/23 13:34:39.741
  Nov 18 13:34:39.744: INFO: Initial restart count of pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 is 0
  Nov 18 13:34:39.747: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:40.587878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:41.588127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:41.752: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:42.588335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:43.589178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:43.756: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:44.590212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:45.590449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:45.760: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:46.591253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:47.591666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:47.765: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:48.592082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:49.593135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:49.769: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:50.593202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:51.593369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:51.772: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:52.593691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:53.594413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:53.776: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:54.594837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:55.594953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:55.780: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:56.595100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:57.595552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:57.785: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:34:58.596028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:34:59.596152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:34:59.788: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:00.597171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:01.597367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:01.792: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:02.597738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:03.597967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:03.797: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:04.598314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:05.598599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:05.801: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:06.598712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:07.599283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:07.805: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:08.599758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:09.599942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:09.809: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:10.600277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:11.601165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:11.814: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:12.601146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:13.601365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:13.818: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:14.602154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:15.602495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:15.822: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:16.603384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:17.604252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:17.826: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:18.605094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:19.605314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:19.830: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:20.606226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:21.606382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:21.833: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:22.606679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:23.606838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:23.838: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:24.607260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:25.607453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:25.842: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:26.607728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:27.608721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:27.846: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:28.609047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:29.609217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:29.849: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:30.609297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:31.609441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:31.854: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:32.609646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:33.610061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:33.860: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:34.610340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:35.610533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:35.865: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:36.610799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:37.611658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:37.869: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:38.612742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:39.613182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:39.874: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:40.613528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:41.613680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:41.878: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:42.614516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:43.614850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:43.882: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:44.615766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:45.616161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:45.887: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:46.616646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:47.617145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:47.892: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:48.617713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:49.617874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:49.895: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:50.618350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:51.618486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:51.899: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:52.618792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:53.618844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:53.904: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:54.618919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:55.619392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:55.908: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:56.620336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:57.620832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:57.913: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:35:58.620997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:35:59.621175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:35:59.916: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:00.621421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:01.621591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:01.920: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:02.621715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:03.621888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:03.925: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:04.622933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:05.624014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:05.928: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:06.624132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:07.624599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:07.933: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:08.625010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:09.625125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:09.936: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:10.625169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:11.625318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:11.940: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:12.626396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:13.626630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:13.944: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:14.626768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:15.626965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:15.948: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:16.627899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:17.628724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:17.952: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:18.629131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:19.629305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:19.956: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:20.629535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:21.629720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:21.960: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:22.630115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:23.630297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:23.964: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:24.630983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:25.631072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:25.968: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:26.631925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:27.632540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:27.973: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:28.633272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:29.633391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:29.977: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:30.633484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:31.633637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:31.980: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:32.634589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:33.635404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:33.983: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:34.635432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:35.635613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:35.987: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:36.636391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:37.636885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:37.992: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:38.637228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:39.637339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:39.995: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:40.638067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:41.638239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:41.999: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:42.638562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:43.638745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:44.003: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:44.639232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:45.639431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:46.006: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:46.639463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:47.639916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:48.011: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:48.640050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:49.640173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:50.014: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:50.641118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:51.641642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:52.018: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:52.642513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:53.642678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:54.022: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:54.642759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:55.642951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:56.026: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:56.643024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:57.643416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:36:58.031: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:36:58.643788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:36:59.644088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:00.034: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:00.644184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:01.645144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:02.038: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:02.645695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:03.645819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:04.043: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:04.646711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:05.646897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:06.046: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:06.647903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:07.648041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:08.050: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:08.648962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:09.649134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:10.053: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:10.649314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:11.649496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:12.057: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:12.650116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:13.651015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:14.061: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:14.651091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:15.651535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:16.066: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:16.651453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:17.652036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:18.070: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:18.652053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:19.653123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:20.075: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:20.653688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:21.653864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:22.079: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:22.654450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:23.654631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:24.083: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:24.654797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:25.655008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:26.086: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:26.655083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:27.655749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:28.091: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:28.656022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:29.656129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:30.094: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:30.657179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:31.657354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:32.098: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:32.657427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:33.657779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:34.102: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:34.658084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:35.658269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:36.106: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:36.658544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:37.658990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:38.110: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:38.660058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:39.660167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:40.114: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:40.661097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:41.661237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:42.117: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:42.661527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:43.661735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:44.121: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:44.662085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:45.662481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:46.125: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:46.662545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:47.662973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:48.129: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:48.663451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:49.663553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:50.132: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:50.664584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:51.665141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:52.137: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:52.665164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:53.665303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:54.140: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:54.665886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:55.666515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:56.145: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:56.666560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:57.667054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:37:58.149: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:37:58.667101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:37:59.667281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:00.153: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:00.667904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:01.668089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:02.157: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:02.668755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:03.668908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:04.160: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:04.669380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:05.669562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:06.164: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:06.670210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:07.670722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:08.169: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:08.670804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:09.670932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:10.173: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:10.671664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:11.671851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:12.177: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:12.672837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:13.673183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:14.181: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:14.673659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:15.673870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:16.185: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:16.674602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:17.675086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:18.189: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:18.675172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:19.675335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:20.193: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:20.675992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:21.676181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:22.197: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:22.677128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:23.677218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:24.201: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:24.678000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:25.678413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:26.205: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:26.679474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:27.679917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:28.210: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:28.680844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:29.681033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:30.214: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:30.681672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:31.681828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:32.217: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:32.682252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:33.682612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:34.221: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:34.683267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:35.684216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:36.225: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:36.684497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:37.684972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:38.229: INFO: Get pod test-grpc-4c0e32ed-67e1-4e93-b668-c7fbc5358be8 in namespace container-probe-4833
  E1118 13:38:38.685014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:39.685134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:40.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 11/18/23 13:38:40.235
  STEP: Destroying namespace "container-probe-4833" for this suite. @ 11/18/23 13:38:40.249
• [242.556 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 11/18/23 13:38:40.257
  Nov 18 13:38:40.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:38:40.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:38:40.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:38:40.275
  STEP: validating api versions @ 11/18/23 13:38:40.277
  Nov 18 13:38:40.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-3337 api-versions'
  Nov 18 13:38:40.331: INFO: stderr: ""
  Nov 18 13:38:40.331: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Nov 18 13:38:40.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3337" for this suite. @ 11/18/23 13:38:40.334
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 11/18/23 13:38:40.343
  Nov 18 13:38:40.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:38:40.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:38:40.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:38:40.366
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/18/23 13:38:40.368
  Nov 18 13:38:40.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-8207 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Nov 18 13:38:40.435: INFO: stderr: ""
  Nov 18 13:38:40.435: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/18/23 13:38:40.435
  E1118 13:38:40.685570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:41.686417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:42.686864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:43.687070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:44.687314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/18/23 13:38:45.487
  Nov 18 13:38:45.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-8207 get pod e2e-test-httpd-pod -o json'
  Nov 18 13:38:45.543: INFO: stderr: ""
  Nov 18 13:38:45.543: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-11-18T13:38:40Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8207\",\n        \"resourceVersion\": \"41217\",\n        \"uid\": \"deb0af26-c28a-4a0e-89c1-70d953a3bdce\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-g7g9d\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-29-39\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-g7g9d\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-18T13:38:40Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-18T13:38:41Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-18T13:38:41Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-11-18T13:38:40Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://8f13094d85f32b366d918db3dcd641c27d139c1ce82f961f0cb8cc007b728801\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-11-18T13:38:41Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.29.39\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.250.235\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.250.235\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-11-18T13:38:40Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/18/23 13:38:45.543
  Nov 18 13:38:45.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-8207 replace -f -'
  E1118 13:38:45.688004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:45.719: INFO: stderr: ""
  Nov 18 13:38:45.719: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 11/18/23 13:38:45.719
  Nov 18 13:38:45.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-8207 delete pods e2e-test-httpd-pod'
  E1118 13:38:46.688082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:47.226: INFO: stderr: ""
  Nov 18 13:38:47.226: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Nov 18 13:38:47.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8207" for this suite. @ 11/18/23 13:38:47.23
• [6.893 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 11/18/23 13:38:47.237
  Nov 18 13:38:47.237: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename job @ 11/18/23 13:38:47.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:38:47.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:38:47.259
  STEP: Creating Indexed job @ 11/18/23 13:38:47.262
  STEP: Ensuring job reaches completions @ 11/18/23 13:38:47.267
  E1118 13:38:47.688133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:48.688560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:49.688621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:50.689189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:51.689422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:52.689756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:53.690521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:54.690739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 11/18/23 13:38:55.271
  Nov 18 13:38:55.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2130" for this suite. @ 11/18/23 13:38:55.279
• [8.048 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 11/18/23 13:38:55.285
  Nov 18 13:38:55.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:38:55.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:38:55.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:38:55.304
  STEP: Setting up server cert @ 11/18/23 13:38:55.328
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:38:55.673
  STEP: Deploying the webhook pod @ 11/18/23 13:38:55.682
  E1118 13:38:55.691376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 11/18/23 13:38:55.695
  Nov 18 13:38:55.701: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1118 13:38:56.692364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:38:57.693419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:38:57.711
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:38:57.72
  E1118 13:38:58.693546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:38:58.720: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/18/23 13:38:58.728
  STEP: create a configmap that should be updated by the webhook @ 11/18/23 13:38:58.744
  Nov 18 13:38:58.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1600" for this suite. @ 11/18/23 13:38:58.811
  STEP: Destroying namespace "webhook-markers-3011" for this suite. @ 11/18/23 13:38:58.819
• [3.540 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 11/18/23 13:38:58.826
  Nov 18 13:38:58.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:38:58.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:38:58.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:38:58.843
  STEP: Creating a pod to test downward api env vars @ 11/18/23 13:38:58.844
  E1118 13:38:59.694577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:00.694822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:01.695461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:02.695845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:39:02.868
  Nov 18 13:39:02.872: INFO: Trying to get logs from node ip-172-31-29-39 pod downward-api-6360ba00-203b-46bf-8f54-9dd43e9ee86b container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 13:39:02.893
  Nov 18 13:39:02.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8839" for this suite. @ 11/18/23 13:39:02.917
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/18/23 13:39:02.927
  Nov 18 13:39:02.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename init-container @ 11/18/23 13:39:02.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:02.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:02.945
  STEP: creating the pod @ 11/18/23 13:39:02.947
  Nov 18 13:39:02.947: INFO: PodSpec: initContainers in spec.initContainers
  E1118 13:39:03.696705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:04.697148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:05.698097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:39:06.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5343" for this suite. @ 11/18/23 13:39:06.457
• [3.536 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/18/23 13:39:06.463
  Nov 18 13:39:06.464: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/18/23 13:39:06.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:06.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:06.487
  STEP: creating a target pod @ 11/18/23 13:39:06.489
  E1118 13:39:06.699015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:07.699667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/18/23 13:39:08.507
  E1118 13:39:08.700562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:09.700724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/18/23 13:39:10.52
  Nov 18 13:39:10.520: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7375 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:39:10.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:39:10.521: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:39:10.521: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7375/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Nov 18 13:39:10.616: INFO: Exec stderr: ""
  Nov 18 13:39:10.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7375" for this suite. @ 11/18/23 13:39:10.627
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/18/23 13:39:10.634
  Nov 18 13:39:10.634: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-pred @ 11/18/23 13:39:10.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:10.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:10.65
  Nov 18 13:39:10.652: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Nov 18 13:39:10.660: INFO: Waiting for terminating namespaces to be deleted...
  Nov 18 13:39:10.663: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-29-39 before test
  Nov 18 13:39:10.668: INFO: ephemeral-containers-target-pod from ephemeral-containers-test-7375 started at 2023-11-18 13:39:06 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.668: INFO: 	Container test-container-1 ready: true, restart count 0
  Nov 18 13:39:10.668: INFO: nginx-ingress-controller-kubernetes-worker-qbglx from ingress-nginx-kubernetes-worker started at 2023-11-18 12:22:56 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.668: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 13:39:10.668: INFO: pod-init-e011b2c1-0743-40da-9ff4-b9b5abd9b5de from init-container-5343 started at 2023-11-18 13:39:02 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.668: INFO: 	Container run1 ready: false, restart count 0
  Nov 18 13:39:10.668: INFO: calico-node-jhvhh from kube-system started at 2023-11-18 12:03:19 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.668: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 13:39:10.668: INFO: sonobuoy from sonobuoy started at 2023-11-18 12:07:39 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.668: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Nov 18 13:39:10.668: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-82h4q from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:39:10.668: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:39:10.668: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 13:39:10.668: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-39-133 before test
  Nov 18 13:39:10.674: INFO: nginx-ingress-controller-kubernetes-worker-shggc from ingress-nginx-kubernetes-worker started at 2023-11-18 12:06:20 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.674: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 13:39:10.674: INFO: calico-node-tkwzz from kube-system started at 2023-11-18 12:05:20 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.674: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 13:39:10.674: INFO: sonobuoy-e2e-job-f65b309e6af444df from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:39:10.674: INFO: 	Container e2e ready: true, restart count 0
  Nov 18 13:39:10.674: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:39:10.674: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-rfbpr from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:39:10.674: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:39:10.674: INFO: 	Container systemd-logs ready: true, restart count 0
  Nov 18 13:39:10.674: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-152 before test
  Nov 18 13:39:10.679: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-kqk4n from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: nginx-ingress-controller-kubernetes-worker-wgb9l from ingress-nginx-kubernetes-worker started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: calico-kube-controllers-7969dc6c97-rm6qf from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: calico-node-8czmk from kube-system started at 2023-11-18 11:57:04 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container calico-node ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: coredns-59cfb5bf46-nzp45 from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container coredns ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: kube-state-metrics-78c475f58b-cv4rn from kube-system started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: metrics-server-v0.6.3-69d7fbfdf8-ppqvb from kube-system started at 2023-11-18 11:57:27 +0000 UTC (2 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container metrics-server ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: dashboard-metrics-scraper-5dd7cb5fc-z67sf from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: kubernetes-dashboard-7b899cb9d9-9kpt7 from kubernetes-dashboard started at 2023-11-18 11:57:27 +0000 UTC (1 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-kntjb from sonobuoy started at 2023-11-18 12:07:42 +0000 UTC (2 container statuses recorded)
  Nov 18 13:39:10.679: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Nov 18 13:39:10.679: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-29-39 @ 11/18/23 13:39:10.695
  E1118 13:39:10.701523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node has the label node ip-172-31-39-133 @ 11/18/23 13:39:10.706
  STEP: verifying the node has the label node ip-172-31-84-152 @ 11/18/23 13:39:10.717
  Nov 18 13:39:10.729: INFO: Pod ephemeral-containers-target-pod requesting resource cpu=0m on Node ip-172-31-29-39
  Nov 18 13:39:10.729: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-kqk4n requesting resource cpu=10m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod nginx-ingress-controller-kubernetes-worker-qbglx requesting resource cpu=0m on Node ip-172-31-29-39
  Nov 18 13:39:10.729: INFO: Pod nginx-ingress-controller-kubernetes-worker-shggc requesting resource cpu=0m on Node ip-172-31-39-133
  Nov 18 13:39:10.729: INFO: Pod nginx-ingress-controller-kubernetes-worker-wgb9l requesting resource cpu=0m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod calico-kube-controllers-7969dc6c97-rm6qf requesting resource cpu=0m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod calico-node-8czmk requesting resource cpu=250m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod calico-node-jhvhh requesting resource cpu=250m on Node ip-172-31-29-39
  Nov 18 13:39:10.729: INFO: Pod calico-node-tkwzz requesting resource cpu=250m on Node ip-172-31-39-133
  Nov 18 13:39:10.729: INFO: Pod coredns-59cfb5bf46-nzp45 requesting resource cpu=100m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod kube-state-metrics-78c475f58b-cv4rn requesting resource cpu=0m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-ppqvb requesting resource cpu=5m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-z67sf requesting resource cpu=0m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod kubernetes-dashboard-7b899cb9d9-9kpt7 requesting resource cpu=0m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-29-39
  Nov 18 13:39:10.729: INFO: Pod sonobuoy-e2e-job-f65b309e6af444df requesting resource cpu=0m on Node ip-172-31-39-133
  Nov 18 13:39:10.729: INFO: Pod sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-82h4q requesting resource cpu=0m on Node ip-172-31-29-39
  Nov 18 13:39:10.729: INFO: Pod sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-kntjb requesting resource cpu=0m on Node ip-172-31-84-152
  Nov 18 13:39:10.729: INFO: Pod sonobuoy-systemd-logs-daemon-set-ad4c8d29612941dc-rfbpr requesting resource cpu=0m on Node ip-172-31-39-133
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/18/23 13:39:10.729
  Nov 18 13:39:10.729: INFO: Creating a pod which consumes cpu=2625m on Node ip-172-31-29-39
  Nov 18 13:39:10.738: INFO: Creating a pod which consumes cpu=2625m on Node ip-172-31-39-133
  Nov 18 13:39:10.743: INFO: Creating a pod which consumes cpu=2544m on Node ip-172-31-84-152
  E1118 13:39:11.702298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:12.703314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/18/23 13:39:12.766
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a.1798bb41d513e7dd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3602/filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a to ip-172-31-39-133] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a.1798bb41f84aa737], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a.1798bb41f93c3cb5], Reason = [Created], Message = [Created container filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a.1798bb41ff22fe37], Reason = [Started], Message = [Started container filler-pod-31538ddf-0541-401c-8699-8b83df82ff6a] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0.1798bb41d4753167], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3602/filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0 to ip-172-31-29-39] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0.1798bb41f84e5b89], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0.1798bb41f9a874cf], Reason = [Created], Message = [Created container filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0.1798bb42006b3571], Reason = [Started], Message = [Started container filler-pod-5a41c566-e119-4229-8704-cc98ebad46d0] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815.1798bb41d62d35ff], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3602/filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815 to ip-172-31-84-152] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815.1798bb41f93cc1ce], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815.1798bb41fa40af93], Reason = [Created], Message = [Created container filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815.1798bb42003f51e0], Reason = [Started], Message = [Started container filler-pod-ca69be98-acb6-4146-b79d-13fc6eda9815] @ 11/18/23 13:39:12.769
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1798bb425238e3c0], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 11/18/23 13:39:12.858
  E1118 13:39:13.703820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-29-39 @ 11/18/23 13:39:13.779
  STEP: verifying the node doesn't have the label node @ 11/18/23 13:39:13.79
  STEP: removing the label node off the node ip-172-31-39-133 @ 11/18/23 13:39:13.794
  STEP: verifying the node doesn't have the label node @ 11/18/23 13:39:13.806
  STEP: removing the label node off the node ip-172-31-84-152 @ 11/18/23 13:39:13.809
  STEP: verifying the node doesn't have the label node @ 11/18/23 13:39:13.819
  Nov 18 13:39:13.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3602" for this suite. @ 11/18/23 13:39:13.828
• [3.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 11/18/23 13:39:13.839
  Nov 18 13:39:13.839: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename events @ 11/18/23 13:39:13.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:13.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:13.857
  STEP: Create set of events @ 11/18/23 13:39:13.859
  Nov 18 13:39:13.863: INFO: created test-event-1
  Nov 18 13:39:13.867: INFO: created test-event-2
  Nov 18 13:39:13.871: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/18/23 13:39:13.871
  STEP: delete collection of events @ 11/18/23 13:39:13.874
  Nov 18 13:39:13.874: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/18/23 13:39:13.898
  Nov 18 13:39:13.898: INFO: requesting list of events to confirm quantity
  Nov 18 13:39:13.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5386" for this suite. @ 11/18/23 13:39:13.904
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 11/18/23 13:39:13.913
  Nov 18 13:39:13.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:39:13.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:13.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:13.933
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:39:13.935
  E1118 13:39:14.704145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:15.704668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:16.704513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:17.705008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:39:17.955
  Nov 18 13:39:17.957: INFO: Trying to get logs from node ip-172-31-39-133 pod downwardapi-volume-44299783-5f32-47a1-a544-df7c293f041a container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:39:17.976
  Nov 18 13:39:17.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4082" for this suite. @ 11/18/23 13:39:17.995
• [4.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 11/18/23 13:39:18.002
  Nov 18 13:39:18.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename downward-api @ 11/18/23 13:39:18.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:18.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:18.02
  STEP: Creating a pod to test downward api env vars @ 11/18/23 13:39:18.022
  E1118 13:39:18.705906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:19.706503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:20.707166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:21.707364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:39:22.042
  Nov 18 13:39:22.044: INFO: Trying to get logs from node ip-172-31-29-39 pod downward-api-3e8c6576-22bc-43c1-93ac-341ad2e2588b container dapi-container: <nil>
  STEP: delete the pod @ 11/18/23 13:39:22.052
  Nov 18 13:39:22.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9820" for this suite. @ 11/18/23 13:39:22.073
• [4.077 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 11/18/23 13:39:22.079
  Nov 18 13:39:22.079: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:39:22.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:22.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:22.096
  STEP: Creating configMap with name projected-configmap-test-volume-map-314b58af-0528-4a7a-a17e-81bd7bb840e9 @ 11/18/23 13:39:22.098
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:39:22.102
  E1118 13:39:22.707850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:23.708030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:24.708079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:25.708094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:39:26.121
  Nov 18 13:39:26.125: INFO: Trying to get logs from node ip-172-31-39-133 pod pod-projected-configmaps-4d51651a-173e-4123-9220-a803e6fc9f39 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:39:26.131
  Nov 18 13:39:26.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3799" for this suite. @ 11/18/23 13:39:26.151
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 11/18/23 13:39:26.161
  Nov 18 13:39:26.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename security-context @ 11/18/23 13:39:26.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:26.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:26.178
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/18/23 13:39:26.18
  E1118 13:39:26.709170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:27.709801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:28.710214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:29.710486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:39:30.2
  Nov 18 13:39:30.203: INFO: Trying to get logs from node ip-172-31-39-133 pod security-context-830e4fcf-7eec-4b83-a68c-580a31bab019 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:39:30.209
  Nov 18 13:39:30.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2006" for this suite. @ 11/18/23 13:39:30.23
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 11/18/23 13:39:30.238
  Nov 18 13:39:30.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/18/23 13:39:30.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:39:30.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:39:30.257
  Nov 18 13:39:30.258: INFO: Waiting up to 1m0s for all nodes to be ready
  E1118 13:39:30.711464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:31.711802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:32.711834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:33.712080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:34.712941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:35.713132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:36.714176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:37.714811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:38.715114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:39.715270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:40.715944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:41.716053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:42.716267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:43.717184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:44.717790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:45.717970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:46.718922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:47.719397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:48.719676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:49.719920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:50.720619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:51.721123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:52.721653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:53.721814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:54.721821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:55.722013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:56.722174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:57.722780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:58.722875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:39:59.723089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:00.723445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:01.723639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:02.724165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:03.725192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:04.725988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:05.726721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:06.727612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:07.728080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:08.728559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:09.729114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:10.729356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:11.729640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:12.730130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:13.730347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:14.730380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:15.730584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:16.730778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:17.731258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:18.731625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:19.731824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:20.731990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:21.732250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:22.732750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:23.733205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:24.733798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:25.733922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:26.734160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:27.734812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:28.735479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:29.735646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:40:30.273: INFO: Waiting for terminating namespaces to be deleted...
  Nov 18 13:40:30.276: INFO: Starting informer...
  STEP: Starting pods... @ 11/18/23 13:40:30.276
  Nov 18 13:40:30.493: INFO: Pod1 is running on ip-172-31-29-39. Tainting Node
  E1118 13:40:30.736356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:31.737008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:40:32.713: INFO: Pod2 is running on ip-172-31-29-39. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/18/23 13:40:32.713
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/18/23 13:40:32.723
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/18/23 13:40:32.726
  E1118 13:40:32.737641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:33.737839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:34.738054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:35.738174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:36.738251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:37.738320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:40:38.420: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E1118 13:40:38.738656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:39.738855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:40.739038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:41.739222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:42.739388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:43.739581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:44.739887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:45.740109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:46.741142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:47.741756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:48.742567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:49.742709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:50.742861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:51.743040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:52.743387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:53.743578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:54.743780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:55.744016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:56.744224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:57.744476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:40:58.463: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Nov 18 13:40:58.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/18/23 13:40:58.476
  STEP: Destroying namespace "taint-multiple-pods-7922" for this suite. @ 11/18/23 13:40:58.479
• [88.248 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 11/18/23 13:40:58.486
  Nov 18 13:40:58.486: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename sched-preemption @ 11/18/23 13:40:58.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:40:58.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:40:58.508
  Nov 18 13:40:58.524: INFO: Waiting up to 1m0s for all nodes to be ready
  E1118 13:40:58.744958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:40:59.745035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:00.745514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:01.745623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:02.746020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:03.746891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:04.747454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:05.747620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:06.747699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:07.747744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:08.747863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:09.748650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:10.748742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:11.749110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:12.749584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:13.749806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:14.750438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:15.750619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:16.751261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:17.751939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:18.752275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:19.753117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:20.754077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:21.754270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:22.754585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:23.754808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:24.755283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:25.755479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:26.756141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:27.756714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:28.757097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:29.757282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:30.757772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:31.758362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:32.758674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:33.758874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:34.758914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:35.759016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:36.759441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:37.760006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:38.760361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:39.761344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:40.761802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:41.761993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:42.762148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:43.762311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:44.762987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:45.763175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:46.763614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:47.763818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:48.764686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:49.764750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:50.764933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:51.765045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:52.765191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:53.765319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:54.765644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:55.766476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:56.766535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:57.767013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:41:58.542: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/18/23 13:41:58.545
  Nov 18 13:41:58.567: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Nov 18 13:41:58.572: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Nov 18 13:41:58.589: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Nov 18 13:41:58.595: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Nov 18 13:41:58.614: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Nov 18 13:41:58.622: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/18/23 13:41:58.622
  E1118 13:41:58.767390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:41:59.767584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/18/23 13:42:00.644
  E1118 13:42:00.768038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:01.768120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:02.768876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:03.769814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:04.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2835" for this suite. @ 11/18/23 13:42:04.763
  E1118 13:42:04.769815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [66.284 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 11/18/23 13:42:04.77
  Nov 18 13:42:04.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:42:04.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:04.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:04.793
  STEP: Creating the pod @ 11/18/23 13:42:04.795
  E1118 13:42:05.770344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:06.770510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:07.344: INFO: Successfully updated pod "labelsupdate9b605882-cc7e-4b6d-92ee-f53ccb083292"
  E1118 13:42:07.770874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:08.771071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:09.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7268" for this suite. @ 11/18/23 13:42:09.366
• [4.604 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/18/23 13:42:09.374
  Nov 18 13:42:09.374: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename init-container @ 11/18/23 13:42:09.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:09.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:09.392
  STEP: creating the pod @ 11/18/23 13:42:09.394
  Nov 18 13:42:09.394: INFO: PodSpec: initContainers in spec.initContainers
  E1118 13:42:09.771504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:10.771629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:11.772516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:12.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9548" for this suite. @ 11/18/23 13:42:12.57
• [3.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/18/23 13:42:12.58
  Nov 18 13:42:12.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename init-container @ 11/18/23 13:42:12.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:12.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:12.601
  STEP: creating the pod @ 11/18/23 13:42:12.603
  Nov 18 13:42:12.603: INFO: PodSpec: initContainers in spec.initContainers
  E1118 13:42:12.772904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:13.773646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:14.774241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:15.775164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:16.776153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:17.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3672" for this suite. @ 11/18/23 13:42:17.34
• [4.765 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 11/18/23 13:42:17.345
  Nov 18 13:42:17.345: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:42:17.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:17.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:17.365
  STEP: Creating a pod to test downward API volume plugin @ 11/18/23 13:42:17.367
  E1118 13:42:17.776640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:18.777021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:19.777694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:20.777900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:42:21.39
  Nov 18 13:42:21.393: INFO: Trying to get logs from node ip-172-31-39-133 pod downwardapi-volume-f0fff715-a946-4ce9-881a-262e7b30830d container client-container: <nil>
  STEP: delete the pod @ 11/18/23 13:42:21.406
  Nov 18 13:42:21.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3165" for this suite. @ 11/18/23 13:42:21.429
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 11/18/23 13:42:21.436
  Nov 18 13:42:21.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:42:21.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:21.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:21.456
  STEP: Creating Pod @ 11/18/23 13:42:21.458
  E1118 13:42:21.778832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:22.779309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 11/18/23 13:42:23.472
  Nov 18 13:42:23.472: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5488 PodName:pod-sharedvolume-c1585dc0-65b7-4d2e-be04-6fbaf6ba06a2 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Nov 18 13:42:23.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  Nov 18 13:42:23.473: INFO: ExecWithOptions: Clientset creation
  Nov 18 13:42:23.473: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-5488/pods/pod-sharedvolume-c1585dc0-65b7-4d2e-be04-6fbaf6ba06a2/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Nov 18 13:42:23.555: INFO: Exec stderr: ""
  Nov 18 13:42:23.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5488" for this suite. @ 11/18/23 13:42:23.56
• [2.131 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/18/23 13:42:23.567
  Nov 18 13:42:23.567: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename daemonsets @ 11/18/23 13:42:23.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:23.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:23.587
  Nov 18 13:42:23.612: INFO: Create a RollingUpdate DaemonSet
  Nov 18 13:42:23.617: INFO: Check that daemon pods launch on every node of the cluster
  Nov 18 13:42:23.620: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:23.620: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:23.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:42:23.623: INFO: Node ip-172-31-29-39 is running 0 daemon pod, expected 1
  E1118 13:42:23.780076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:24.628: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:24.628: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:24.632: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Nov 18 13:42:24.632: INFO: Node ip-172-31-39-133 is running 0 daemon pod, expected 1
  E1118 13:42:24.780252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:25.627: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:25.627: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:25.631: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Nov 18 13:42:25.631: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Nov 18 13:42:25.631: INFO: Update the DaemonSet to trigger a rollout
  Nov 18 13:42:25.641: INFO: Updating DaemonSet daemon-set
  E1118 13:42:25.780402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:26.657: INFO: Roll back the DaemonSet before rollout is complete
  Nov 18 13:42:26.667: INFO: Updating DaemonSet daemon-set
  Nov 18 13:42:26.667: INFO: Make sure DaemonSet rollback is complete
  Nov 18 13:42:26.671: INFO: Wrong image for pod: daemon-set-c4fsd. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Nov 18 13:42:26.671: INFO: Pod daemon-set-c4fsd is not available
  Nov 18 13:42:26.675: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:26.675: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1118 13:42:26.780794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:27.682: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:27.682: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1118 13:42:27.780826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:28.681: INFO: Pod daemon-set-dwlh5 is not available
  Nov 18 13:42:28.686: INFO: DaemonSet pods can't tolerate node ip-172-31-30-119 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Nov 18 13:42:28.686: INFO: DaemonSet pods can't tolerate node ip-172-31-35-28 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/18/23 13:42:28.692
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-780, will wait for the garbage collector to delete the pods @ 11/18/23 13:42:28.692
  Nov 18 13:42:28.753: INFO: Deleting DaemonSet.extensions daemon-set took: 6.057329ms
  E1118 13:42:28.780917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:28.853: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.178124ms
  E1118 13:42:29.781731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:30.257: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Nov 18 13:42:30.257: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Nov 18 13:42:30.260: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42889"},"items":null}

  Nov 18 13:42:30.262: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42889"},"items":null}

  Nov 18 13:42:30.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-780" for this suite. @ 11/18/23 13:42:30.278
• [6.717 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 11/18/23 13:42:30.285
  Nov 18 13:42:30.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename kubectl @ 11/18/23 13:42:30.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:30.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:30.303
  STEP: validating cluster-info @ 11/18/23 13:42:30.305
  Nov 18 13:42:30.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1361467531 --namespace=kubectl-9084 cluster-info'
  Nov 18 13:42:30.364: INFO: stderr: ""
  Nov 18 13:42:30.364: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Nov 18 13:42:30.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9084" for this suite. @ 11/18/23 13:42:30.368
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/18/23 13:42:30.375
  Nov 18 13:42:30.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename prestop @ 11/18/23 13:42:30.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:30.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:30.393
  STEP: Creating server pod server in namespace prestop-1288 @ 11/18/23 13:42:30.395
  STEP: Waiting for pods to come up. @ 11/18/23 13:42:30.402
  E1118 13:42:30.781899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:31.782199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1288 @ 11/18/23 13:42:32.415
  E1118 13:42:32.782400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:33.782503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 11/18/23 13:42:34.431
  E1118 13:42:34.783156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:35.783844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:36.784016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:37.784529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:38.785131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:39.445: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Nov 18 13:42:39.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 11/18/23 13:42:39.448
  STEP: Destroying namespace "prestop-1288" for this suite. @ 11/18/23 13:42:39.463
• [9.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 11/18/23 13:42:39.47
  Nov 18 13:42:39.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:42:39.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:39.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:39.489
  STEP: Creating configMap with name projected-configmap-test-volume-map-e9315c43-5568-4517-8ef8-1cbdd64f3a0b @ 11/18/23 13:42:39.491
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:42:39.496
  E1118 13:42:39.785267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:40.785414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:41.785493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:42.785892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:42:43.517
  Nov 18 13:42:43.520: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-configmaps-56b888f8-27c4-47de-9e00-be8562e96f95 container agnhost-container: <nil>
  STEP: delete the pod @ 11/18/23 13:42:43.527
  Nov 18 13:42:43.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3188" for this suite. @ 11/18/23 13:42:43.549
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 11/18/23 13:42:43.555
  Nov 18 13:42:43.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename runtimeclass @ 11/18/23 13:42:43.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:43.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:43.577
  STEP: getting /apis @ 11/18/23 13:42:43.579
  STEP: getting /apis/node.k8s.io @ 11/18/23 13:42:43.582
  STEP: getting /apis/node.k8s.io/v1 @ 11/18/23 13:42:43.583
  STEP: creating @ 11/18/23 13:42:43.583
  STEP: watching @ 11/18/23 13:42:43.602
  Nov 18 13:42:43.602: INFO: starting watch
  STEP: getting @ 11/18/23 13:42:43.607
  STEP: listing @ 11/18/23 13:42:43.61
  STEP: patching @ 11/18/23 13:42:43.613
  STEP: updating @ 11/18/23 13:42:43.617
  Nov 18 13:42:43.622: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 11/18/23 13:42:43.622
  STEP: deleting a collection @ 11/18/23 13:42:43.633
  Nov 18 13:42:43.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5938" for this suite. @ 11/18/23 13:42:43.653
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 11/18/23 13:42:43.66
  Nov 18 13:42:43.661: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:42:43.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:43.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:43.68
  STEP: Setting up server cert @ 11/18/23 13:42:43.704
  E1118 13:42:43.786003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:42:44.074
  STEP: Deploying the webhook pod @ 11/18/23 13:42:44.082
  STEP: Wait for the deployment to be ready @ 11/18/23 13:42:44.093
  Nov 18 13:42:44.101: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1118 13:42:44.786143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:45.786374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:42:46.11
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:42:46.12
  E1118 13:42:46.787111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:47.121: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Nov 18 13:42:47.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1952-crds.webhook.example.com via the AdmissionRegistration API @ 11/18/23 13:42:47.634
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/18/23 13:42:47.651
  E1118 13:42:47.787648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:48.788298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:49.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1118 13:42:49.789285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1960" for this suite. @ 11/18/23 13:42:50.252
  STEP: Destroying namespace "webhook-markers-435" for this suite. @ 11/18/23 13:42:50.259
• [6.605 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 11/18/23 13:42:50.266
  Nov 18 13:42:50.266: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename crd-webhook @ 11/18/23 13:42:50.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:50.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:50.284
  STEP: Setting up server cert @ 11/18/23 13:42:50.286
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/18/23 13:42:50.466
  STEP: Deploying the custom resource conversion webhook pod @ 11/18/23 13:42:50.472
  STEP: Wait for the deployment to be ready @ 11/18/23 13:42:50.482
  Nov 18 13:42:50.489: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1118 13:42:50.789738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:51.790054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:42:52.499
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:42:52.511
  E1118 13:42:52.790064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:42:53.512: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Nov 18 13:42:53.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  E1118 13:42:53.790932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:54.790974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:55.791219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/18/23 13:42:56.08
  STEP: Create a v2 custom resource @ 11/18/23 13:42:56.095
  STEP: List CRs in v1 @ 11/18/23 13:42:56.123
  STEP: List CRs in v2 @ 11/18/23 13:42:56.132
  Nov 18 13:42:56.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1055" for this suite. @ 11/18/23 13:42:56.691
• [6.434 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 11/18/23 13:42:56.7
  Nov 18 13:42:56.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename projected @ 11/18/23 13:42:56.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:42:56.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:42:56.719
  STEP: Creating configMap with name projected-configmap-test-volume-edce5c21-ae81-41f6-9845-8b2934ec1a28 @ 11/18/23 13:42:56.721
  STEP: Creating a pod to test consume configMaps @ 11/18/23 13:42:56.725
  E1118 13:42:56.791999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:57.792448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:58.793452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:42:59.793675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:43:00.747
  Nov 18 13:43:00.750: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-projected-configmaps-8eb50065-1ecb-4742-900c-56bc18e2f74a container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/18/23 13:43:00.757
  Nov 18 13:43:00.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1109" for this suite. @ 11/18/23 13:43:00.778
• [4.083 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 11/18/23 13:43:00.784
  Nov 18 13:43:00.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename emptydir @ 11/18/23 13:43:00.784
  E1118 13:43:00.794102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:43:00.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:43:00.804
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/18/23 13:43:00.805
  E1118 13:43:01.794690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:02.795116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:03.795233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:04.795437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/18/23 13:43:04.831
  Nov 18 13:43:04.834: INFO: Trying to get logs from node ip-172-31-29-39 pod pod-b2cb34f5-6577-42bc-bd6f-2821717ba715 container test-container: <nil>
  STEP: delete the pod @ 11/18/23 13:43:04.844
  Nov 18 13:43:04.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8211" for this suite. @ 11/18/23 13:43:04.87
• [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 11/18/23 13:43:04.878
  Nov 18 13:43:04.878: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename aggregator @ 11/18/23 13:43:04.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:43:04.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:43:04.897
  Nov 18 13:43:04.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Registering the sample API server. @ 11/18/23 13:43:04.899
  Nov 18 13:43:05.074: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Nov 18 13:43:05.102: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E1118 13:43:05.796169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:06.797142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:07.140: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:07.797873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:08.798001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:09.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:09.798469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:10.798680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:11.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:11.799567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:12.799903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:13.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:13.800315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:14.801190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:15.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:15.801201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:16.801381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:17.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:17.801444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:18.802455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:19.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:19.803030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:20.803246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:21.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:21.804104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:22.804191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:23.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:23.805179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:24.805397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:25.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:25.806347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:26.806499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:27.144: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1118 13:43:27.806612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:28.806768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:29.260: INFO: Waited 111.183024ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/18/23 13:43:29.294
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/18/23 13:43:29.297
  STEP: List APIServices @ 11/18/23 13:43:29.305
  Nov 18 13:43:29.309: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/18/23 13:43:29.309
  Nov 18 13:43:29.319: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/18/23 13:43:29.319
  Nov 18 13:43:29.329: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.November, 18, 13, 43, 29, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/18/23 13:43:29.329
  Nov 18 13:43:29.332: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-11-18 13:43:29 +0000 UTC Passed all checks passed}
  Nov 18 13:43:29.332: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 18 13:43:29.332: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/18/23 13:43:29.332
  Nov 18 13:43:29.342: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1812460158" @ 11/18/23 13:43:29.342
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/18/23 13:43:29.351
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/18/23 13:43:29.358
  STEP: Patch APIService Status @ 11/18/23 13:43:29.361
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/18/23 13:43:29.369
  Nov 18 13:43:29.372: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-11-18 13:43:29 +0000 UTC Passed all checks passed}
  Nov 18 13:43:29.372: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Nov 18 13:43:29.372: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Nov 18 13:43:29.372: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 11/18/23 13:43:29.372
  STEP: Confirm that the generated APIService has been deleted @ 11/18/23 13:43:29.376
  Nov 18 13:43:29.376: INFO: Requesting list of APIServices to confirm quantity
  Nov 18 13:43:29.380: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Nov 18 13:43:29.380: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Nov 18 13:43:29.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-497" for this suite. @ 11/18/23 13:43:29.488
• [24.619 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 11/18/23 13:43:29.496
  Nov 18 13:43:29.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename replication-controller @ 11/18/23 13:43:29.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:43:29.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:43:29.517
  STEP: Creating replication controller my-hostname-basic-20eba477-c182-4d04-b92d-88d3ebbb0724 @ 11/18/23 13:43:29.519
  Nov 18 13:43:29.527: INFO: Pod name my-hostname-basic-20eba477-c182-4d04-b92d-88d3ebbb0724: Found 0 pods out of 1
  E1118 13:43:29.807595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:30.807752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:31.808005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:32.808082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:33.809194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:43:34.531: INFO: Pod name my-hostname-basic-20eba477-c182-4d04-b92d-88d3ebbb0724: Found 1 pods out of 1
  Nov 18 13:43:34.531: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-20eba477-c182-4d04-b92d-88d3ebbb0724" are running
  Nov 18 13:43:34.534: INFO: Pod "my-hostname-basic-20eba477-c182-4d04-b92d-88d3ebbb0724-qsff5" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 13:43:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 13:43:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 13:43:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-11-18 13:43:29 +0000 UTC Reason: Message:}])
  Nov 18 13:43:34.534: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/18/23 13:43:34.534
  Nov 18 13:43:34.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7919" for this suite. @ 11/18/23 13:43:34.55
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 11/18/23 13:43:34.558
  Nov 18 13:43:34.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename var-expansion @ 11/18/23 13:43:34.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:43:34.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:43:34.584
  STEP: creating the pod with failed condition @ 11/18/23 13:43:34.585
  E1118 13:43:34.809621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:35.810028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:36.810763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:37.811279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:38.811483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:39.811718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:40.811902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:41.812048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:42.812842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:43.813137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:44.813511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:45.813710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:46.814064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:47.814458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:48.814876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:49.815128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:50.815122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:51.815299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:52.815460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:53.815996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:54.816419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:55.817271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:56.818028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:57.819043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:58.819732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:43:59.819923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:00.820910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:01.821059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:02.821645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:03.821829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:04.822637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:05.822865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:06.823819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:07.824490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:08.824720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:09.824855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:10.825860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:11.826015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:12.826725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:13.826924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:14.827253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:15.827440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:16.827864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:17.828365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:18.828398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:19.829132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:20.829918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:21.830136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:22.830223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:23.830404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:24.831006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:25.831186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:26.831680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:27.832142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:28.832371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:29.832516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:30.833099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:31.833274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:32.833526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:33.833710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:34.834260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:35.834497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:36.834943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:37.835492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:38.835800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:39.836801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:40.837680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:41.837725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:42.838167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:43.838403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:44.838856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:45.839061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:46.839648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:47.839870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:48.840034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:49.841158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:50.841790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:51.842018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:52.842919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:53.843100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:54.843555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:55.843728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:56.844015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:57.844419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:58.844895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:44:59.845050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:00.845669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:01.845886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:02.846194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:03.846387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:04.847254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:05.847421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:06.848045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:07.848605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:08.849139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:09.849342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:10.849776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:11.849917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:12.850296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:13.850466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:14.850472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:15.850648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:16.851442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:17.851972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:18.852857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:19.853041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:20.853540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:21.853753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:22.854114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:23.854356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:24.854675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:25.854858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:26.855211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:27.855716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:28.856188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:29.857132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:30.858155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:31.859103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:32.859585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:33.860684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 11/18/23 13:45:34.597
  E1118 13:45:34.861203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:45:35.110: INFO: Successfully updated pod "var-expansion-0f8c9bf9-db5c-4a9c-8ed4-24978a9d0168"
  STEP: waiting for pod running @ 11/18/23 13:45:35.111
  E1118 13:45:35.861790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:36.861982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/18/23 13:45:37.117
  Nov 18 13:45:37.117: INFO: Deleting pod "var-expansion-0f8c9bf9-db5c-4a9c-8ed4-24978a9d0168" in namespace "var-expansion-3063"
  Nov 18 13:45:37.126: INFO: Wait up to 5m0s for pod "var-expansion-0f8c9bf9-db5c-4a9c-8ed4-24978a9d0168" to be fully deleted
  E1118 13:45:37.862450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:38.862582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:39.862999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:40.863184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:41.863205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:42.864260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:43.865232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:44.865313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:45.866303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:46.866514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:47.866604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:48.866748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:49.867395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:50.867569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:51.868026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:52.868328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:53.868643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:54.869175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:55.869985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:56.870692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:57.870926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:58.870985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:45:59.871756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:00.872368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:01.873264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:02.873542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:03.873652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:04.874329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:05.874832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:06.875763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:07.876561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:08.876684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:46:09.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3063" for this suite. @ 11/18/23 13:46:09.201
• [154.651 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 11/18/23 13:46:09.209
  Nov 18 13:46:09.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename webhook @ 11/18/23 13:46:09.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:46:09.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:46:09.229
  STEP: Setting up server cert @ 11/18/23 13:46:09.251
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/18/23 13:46:09.716
  STEP: Deploying the webhook pod @ 11/18/23 13:46:09.724
  STEP: Wait for the deployment to be ready @ 11/18/23 13:46:09.736
  Nov 18 13:46:09.743: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1118 13:46:09.876953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:10.877126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/18/23 13:46:11.753
  STEP: Verifying the service has paired with the endpoint @ 11/18/23 13:46:11.763
  E1118 13:46:11.877492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:46:12.763: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/18/23 13:46:12.77
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/18/23 13:46:12.787
  STEP: Creating a dummy validating-webhook-configuration object @ 11/18/23 13:46:12.797
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/18/23 13:46:12.812
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/18/23 13:46:12.819
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/18/23 13:46:12.828
  Nov 18 13:46:12.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1118 13:46:12.877981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-8913" for this suite. @ 11/18/23 13:46:12.895
  STEP: Destroying namespace "webhook-markers-6898" for this suite. @ 11/18/23 13:46:12.902
• [3.699 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 11/18/23 13:46:12.908
  Nov 18 13:46:12.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename statefulset @ 11/18/23 13:46:12.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:46:12.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:46:12.931
  STEP: Creating service test in namespace statefulset-5107 @ 11/18/23 13:46:12.933
  STEP: Creating statefulset ss in namespace statefulset-5107 @ 11/18/23 13:46:12.937
  Nov 18 13:46:12.947: INFO: Found 0 stateful pods, waiting for 1
  E1118 13:46:13.878483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:14.878712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:15.878952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:16.879165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:17.879532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:18.879694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:19.880010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:20.880058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:21.881153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:22.881226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:46:22.951: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/18/23 13:46:22.957
  STEP: updating a scale subresource @ 11/18/23 13:46:22.96
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/18/23 13:46:22.965
  STEP: Patch a scale subresource @ 11/18/23 13:46:22.968
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/18/23 13:46:22.975
  Nov 18 13:46:22.982: INFO: Deleting all statefulset in ns statefulset-5107
  Nov 18 13:46:22.987: INFO: Scaling statefulset ss to 0
  E1118 13:46:23.882295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:24.882414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:25.882621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:26.882819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:27.882928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:28.883089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:29.883241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:30.883337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:31.883520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:32.883825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:46:33.006: INFO: Waiting for statefulset status.replicas updated to 0
  Nov 18 13:46:33.009: INFO: Deleting statefulset ss
  Nov 18 13:46:33.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5107" for this suite. @ 11/18/23 13:46:33.025
• [20.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/18/23 13:46:33.039
  Nov 18 13:46:33.039: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename pods @ 11/18/23 13:46:33.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:46:33.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:46:33.06
  STEP: creating the pod @ 11/18/23 13:46:33.061
  STEP: submitting the pod to kubernetes @ 11/18/23 13:46:33.061
  W1118 13:46:33.072769      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1118 13:46:33.884102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:34.885177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/18/23 13:46:35.082
  STEP: updating the pod @ 11/18/23 13:46:35.085
  Nov 18 13:46:35.597: INFO: Successfully updated pod "pod-update-activedeadlineseconds-c8c7424b-c7e8-401c-8dd2-5ad3be49f07a"
  E1118 13:46:35.885543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:36.885682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:37.886274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1118 13:46:38.886523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Nov 18 13:46:39.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7973" for this suite. @ 11/18/23 13:46:39.61
• [6.578 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 11/18/23 13:46:39.618
  Nov 18 13:46:39.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1361467531
  STEP: Building a namespace api object, basename namespaces @ 11/18/23 13:46:39.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/18/23 13:46:39.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/18/23 13:46:39.636
  STEP: creating a Namespace @ 11/18/23 13:46:39.638
  STEP: patching the Namespace @ 11/18/23 13:46:39.658
  STEP: get the Namespace and ensuring it has the label @ 11/18/23 13:46:39.663
  Nov 18 13:46:39.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3549" for this suite. @ 11/18/23 13:46:39.673
  STEP: Destroying namespace "nspatchtest-8d87a2cd-ce35-40b1-90ee-f17426f07511-1102" for this suite. @ 11/18/23 13:46:39.678
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Nov 18 13:46:39.686: INFO: Running AfterSuite actions on node 1
  Nov 18 13:46:39.686: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.047 seconds]
------------------------------

Ran 380 of 7389 Specs in 5922.003 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h38m42.301176862s
Test Suite Passed
