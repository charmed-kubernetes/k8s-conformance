  I0902 12:11:39.215186      19 e2e.go:117] Starting e2e run "56db386c-a21b-483e-bc80-b650b2d5b819" on Ginkgo node 1
  Sep  2 12:11:39.241: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1693656699 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep  2 12:11:39.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 12:11:39.425: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep  2 12:11:39.466: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep  2 12:11:39.471: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Sep  2 12:11:39.471: INFO: e2e test version: v1.28.1
  Sep  2 12:11:39.473: INFO: kube-apiserver version: v1.28.1
  Sep  2 12:11:39.473: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 12:11:39.478: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/02/23 12:11:39.921
  Sep  2 12:11:39.921: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:11:39.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:11:39.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:11:39.945
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 12:11:39.949
  STEP: Saw pod success @ 09/02/23 12:12:02.019
  Sep  2 12:12:02.024: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-e1a7626b-62ac-4802-921c-9a0f4e0f51aa container client-container: <nil>
  STEP: delete the pod @ 09/02/23 12:12:02.049
  Sep  2 12:12:02.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6137" for this suite. @ 09/02/23 12:12:02.09
• [22.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/02/23 12:12:02.1
  Sep  2 12:12:02.100: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename security-context-test @ 09/02/23 12:12:02.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:02.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:02.126
  Sep  2 12:12:06.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5959" for this suite. @ 09/02/23 12:12:06.162
• [4.069 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/02/23 12:12:06.169
  Sep  2 12:12:06.169: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 12:12:06.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:06.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:06.19
  Sep  2 12:12:06.205: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Sep  2 12:12:11.211: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/23 12:12:11.211
  Sep  2 12:12:11.211: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/02/23 12:12:11.224
  Sep  2 12:12:11.239: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1030976e-5f43-4024-acc2-4a74bf680252",
      ResourceVersion: (string) (len=4) "3102",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829253531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 12:12:11.246: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6093c8c4-7919-4b8b-9f79-ccbe47967c1b",
      ResourceVersion: (string) (len=4) "3104",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829253531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1030976e-5f43-4024-acc2-4a74bf680252",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 33 30 39 37  36 65 2d 35 66 34 33 2d  |\"1030976e-5f43-|
              00000120  34 30 32 34 2d 61 63 63  32 2d 34 61 37 34 62 66  |4024-acc2-4a74bf|
              00000130  36 38 30 32 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |680252\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 12:12:11.248: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Sep  2 12:12:11.248: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15cd3167-7733-405e-a2cb-8cf4879586a5",
      ResourceVersion: (string) (len=4) "3103",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829253526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1030976e-5f43-4024-acc2-4a74bf680252",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 30 33 30 39 37 36  |"uid\":\"1030976|
              00000040  65 2d 35 66 34 33 2d 34  30 32 34 2d 61 63 63 32  |e-5f43-4024-acc2|
              00000050  2d 34 61 37 34 62 66 36  38 30 32 35 32 5c 22 7d  |-4a74bf680252\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 12:12:11.256: INFO: Pod "test-cleanup-controller-qtgbb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-qtgbb",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76cd13ec-2bd9-4e95-9346-11ec2ff76b75",
      ResourceVersion: (string) (len=4) "3095",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829253526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "15cd3167-7733-405e-a2cb-8cf4879586a5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 35 63 64 33 31 36 37  |uid\":\"15cd3167|
              00000080  2d 37 37 33 33 2d 34 30  35 65 2d 61 32 63 62 2d  |-7733-405e-a2cb-|
              00000090  38 63 66 34 38 37 39 35  38 36 61 35 5c 22 7d 22  |8cf4879586a5\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 34 5c 22 7d  |192.168.141.4\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86xbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86xbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.141.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.141.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829253526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829253530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf23b21f3b9bdc91d4f3320b97edd268c6495cd81594ea850708d5a05f71acbf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 12:12:11.259: INFO: Pod "test-cleanup-deployment-58dcc84f74-67cvc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-67cvc",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-2860",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95f1dd8f-7d48-4dc3-932a-625e397f4d74",
      ResourceVersion: (string) (len=4) "3105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829253531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "6093c8c4-7919-4b8b-9f79-ccbe47967c1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829253531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  39 33 63 38 63 34 2d 37  |d\":\"6093c8c4-7|
              00000090  39 31 39 2d 34 62 38 62  2d 39 66 37 39 2d 63 63  |919-4b8b-9f79-cc|
              000000a0  62 65 34 37 39 36 37 63  31 62 5c 22 7d 22 3a 7b  |be47967c1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4s5m7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4s5m7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 12:12:11.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2860" for this suite. @ 09/02/23 12:12:11.27
• [5.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/02/23 12:12:11.284
  Sep  2 12:12:11.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:12:11.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:11.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:11.312
  STEP: Creating configMap with name projected-configmap-test-volume-edd83349-b34f-4c10-8bfc-0074caedb6aa @ 09/02/23 12:12:11.319
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:12:11.324
  STEP: Saw pod success @ 09/02/23 12:12:17.356
  Sep  2 12:12:17.360: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-projected-configmaps-6755dd14-622d-4d67-a829-80f178d02d7d container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 12:12:17.382
  Sep  2 12:12:17.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1676" for this suite. @ 09/02/23 12:12:17.405
• [6.128 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/02/23 12:12:17.413
  Sep  2 12:12:17.413: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename events @ 09/02/23 12:12:17.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:17.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:17.44
  STEP: Create set of events @ 09/02/23 12:12:17.444
  Sep  2 12:12:17.449: INFO: created test-event-1
  Sep  2 12:12:17.454: INFO: created test-event-2
  Sep  2 12:12:17.460: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/02/23 12:12:17.46
  STEP: delete collection of events @ 09/02/23 12:12:17.463
  Sep  2 12:12:17.463: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/02/23 12:12:17.487
  Sep  2 12:12:17.487: INFO: requesting list of events to confirm quantity
  Sep  2 12:12:17.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9433" for this suite. @ 09/02/23 12:12:17.495
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/02/23 12:12:17.502
  Sep  2 12:12:17.502: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 12:12:17.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:17.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:17.524
  STEP: Creating pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491 @ 09/02/23 12:12:17.528
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 12:12:21.553
  Sep  2 12:12:21.557: INFO: Initial restart count of pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca is 0
  Sep  2 12:12:21.561: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:23.568: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:25.574: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:27.579: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:29.583: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:31.589: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:33.594: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:35.599: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:37.604: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:39.610: INFO: Get pod liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca in namespace container-probe-9491
  Sep  2 12:12:39.610: INFO: Restart count of pod container-probe-9491/liveness-32b47a54-b4cb-446e-83d8-d4d9920660ca is now 1 (18.052797067s elapsed)
  Sep  2 12:12:39.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:12:39.615
  STEP: Destroying namespace "container-probe-9491" for this suite. @ 09/02/23 12:12:39.63
• [22.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/02/23 12:12:39.637
  Sep  2 12:12:39.637: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:12:39.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:39.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:39.66
  STEP: Creating projection with secret that has name projected-secret-test-map-c0d9ccb5-73c7-4b0f-adba-05c4572fc7b4 @ 09/02/23 12:12:39.665
  STEP: Creating a pod to test consume secrets @ 09/02/23 12:12:39.671
  STEP: Saw pod success @ 09/02/23 12:12:43.695
  Sep  2 12:12:43.699: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-secrets-6c212c84-68ae-49af-ac96-079f75296696 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 12:12:43.707
  Sep  2 12:12:43.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8883" for this suite. @ 09/02/23 12:12:43.726
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/02/23 12:12:43.733
  Sep  2 12:12:43.733: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 12:12:43.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:12:43.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:12:43.753
  STEP: Creating service test in namespace statefulset-7911 @ 09/02/23 12:12:43.757
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/02/23 12:12:43.763
  STEP: Creating stateful set ss in namespace statefulset-7911 @ 09/02/23 12:12:43.767
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7911 @ 09/02/23 12:12:43.774
  Sep  2 12:12:43.778: INFO: Found 0 stateful pods, waiting for 1
  Sep  2 12:12:53.786: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/02/23 12:12:53.787
  Sep  2 12:12:53.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 12:12:53.947: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 12:12:53.947: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 12:12:53.947: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 12:12:53.952: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep  2 12:13:03.957: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 12:13:03.957: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  2 12:13:03.977: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999754s
  Sep  2 12:13:04.982: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994303138s
  Sep  2 12:13:05.987: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989683636s
  Sep  2 12:13:06.992: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984960719s
  Sep  2 12:13:07.998: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.97951501s
  Sep  2 12:13:09.008: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.974374588s
  Sep  2 12:13:10.013: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.963136618s
  Sep  2 12:13:11.018: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.958651475s
  Sep  2 12:13:12.022: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.954450591s
  Sep  2 12:13:13.027: INFO: Verifying statefulset ss doesn't scale past 1 for another 949.737139ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7911 @ 09/02/23 12:13:14.027
  Sep  2 12:13:14.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 12:13:14.181: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 12:13:14.181: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 12:13:14.181: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 12:13:14.186: INFO: Found 1 stateful pods, waiting for 3
  Sep  2 12:13:24.194: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:13:24.194: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:13:24.194: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/02/23 12:13:24.194
  STEP: Scale down will halt with unhealthy stateful pod @ 09/02/23 12:13:24.194
  Sep  2 12:13:24.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 12:13:24.337: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 12:13:24.337: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 12:13:24.337: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 12:13:24.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 12:13:24.484: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 12:13:24.484: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 12:13:24.484: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 12:13:24.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 12:13:24.628: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 12:13:24.628: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 12:13:24.628: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 12:13:24.628: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  2 12:13:24.633: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Sep  2 12:13:34.644: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 12:13:34.644: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 12:13:34.644: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 12:13:34.658: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999828s
  Sep  2 12:13:35.664: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995555491s
  Sep  2 12:13:36.670: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988858241s
  Sep  2 12:13:37.675: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.983480865s
  Sep  2 12:13:38.681: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978228055s
  Sep  2 12:13:39.685: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.972854783s
  Sep  2 12:13:40.691: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967574533s
  Sep  2 12:13:41.696: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963193051s
  Sep  2 12:13:42.701: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.957394502s
  Sep  2 12:13:43.706: INFO: Verifying statefulset ss doesn't scale past 3 for another 952.699323ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7911 @ 09/02/23 12:13:44.707
  Sep  2 12:13:44.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 12:13:44.867: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 12:13:44.867: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 12:13:44.867: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 12:13:44.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 12:13:45.009: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 12:13:45.009: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 12:13:45.009: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 12:13:45.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-7911 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 12:13:45.146: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 12:13:45.146: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 12:13:45.146: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 12:13:45.146: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/02/23 12:13:55.163
  Sep  2 12:13:55.163: INFO: Deleting all statefulset in ns statefulset-7911
  Sep  2 12:13:55.168: INFO: Scaling statefulset ss to 0
  Sep  2 12:13:55.180: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 12:13:55.184: INFO: Deleting statefulset ss
  Sep  2 12:13:55.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7911" for this suite. @ 09/02/23 12:13:55.202
• [71.477 seconds]
------------------------------
SSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/02/23 12:13:55.21
  Sep  2 12:13:55.210: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename conformance-tests @ 09/02/23 12:13:55.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:13:55.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:13:55.237
  STEP: Getting node addresses @ 09/02/23 12:13:55.243
  Sep  2 12:13:55.243: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep  2 12:13:55.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-613" for this suite. @ 09/02/23 12:13:55.254
• [0.051 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/02/23 12:13:55.261
  Sep  2 12:13:55.261: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replicaset @ 09/02/23 12:13:55.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:13:55.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:13:55.287
  Sep  2 12:13:55.291: INFO: Creating ReplicaSet my-hostname-basic-a46ca7bf-be61-49a0-b952-30bde9dd4aa7
  Sep  2 12:13:55.301: INFO: Pod name my-hostname-basic-a46ca7bf-be61-49a0-b952-30bde9dd4aa7: Found 0 pods out of 1
  Sep  2 12:14:00.306: INFO: Pod name my-hostname-basic-a46ca7bf-be61-49a0-b952-30bde9dd4aa7: Found 1 pods out of 1
  Sep  2 12:14:00.306: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a46ca7bf-be61-49a0-b952-30bde9dd4aa7" is running
  Sep  2 12:14:00.310: INFO: Pod "my-hostname-basic-a46ca7bf-be61-49a0-b952-30bde9dd4aa7-75x6q" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:13:55 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:13:56 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:13:56 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:13:55 +0000 UTC Reason: Message:}])
  Sep  2 12:14:00.310: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/02/23 12:14:00.31
  Sep  2 12:14:00.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9318" for this suite. @ 09/02/23 12:14:00.329
• [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/02/23 12:14:00.336
  Sep  2 12:14:00.336: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:14:00.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:14:00.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:14:00.371
  STEP: Setting up server cert @ 09/02/23 12:14:00.429
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:14:00.863
  STEP: Deploying the webhook pod @ 09/02/23 12:14:00.873
  STEP: Wait for the deployment to be ready @ 09/02/23 12:14:00.886
  Sep  2 12:14:00.895: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 12:14:02.907
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:14:02.917
  Sep  2 12:14:03.918: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/02/23 12:14:03.926
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/02/23 12:14:03.944
  Sep  2 12:14:03.944: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 12:14:03.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9864" for this suite. @ 09/02/23 12:14:04.007
  STEP: Destroying namespace "webhook-markers-9381" for this suite. @ 09/02/23 12:14:04.018
• [3.689 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/02/23 12:14:04.026
  Sep  2 12:14:04.026: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/23 12:14:04.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:14:04.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:14:04.048
  Sep  2 12:14:04.123: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 12:14:04.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9845" for this suite. @ 09/02/23 12:14:04.676
• [0.658 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/02/23 12:14:04.684
  Sep  2 12:14:04.684: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 12:14:04.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:14:04.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:14:04.711
  STEP: apply creating a deployment @ 09/02/23 12:14:04.715
  Sep  2 12:14:04.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4906" for this suite. @ 09/02/23 12:14:04.736
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/02/23 12:14:04.745
  Sep  2 12:14:04.745: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 12:14:04.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:14:04.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:14:04.768
  STEP: Counting existing ResourceQuota @ 09/02/23 12:14:04.772
  STEP: Creating a ResourceQuota @ 09/02/23 12:14:09.777
  STEP: Ensuring resource quota status is calculated @ 09/02/23 12:14:09.783
  STEP: Creating a Pod that fits quota @ 09/02/23 12:14:11.787
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/02/23 12:14:11.804
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/02/23 12:14:13.809
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/02/23 12:14:13.813
  STEP: Ensuring a pod cannot update its resource requirements @ 09/02/23 12:14:13.815
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/02/23 12:14:13.82
  STEP: Deleting the pod @ 09/02/23 12:14:15.825
  STEP: Ensuring resource quota status released the pod usage @ 09/02/23 12:14:15.841
  Sep  2 12:14:17.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4875" for this suite. @ 09/02/23 12:14:17.852
• [13.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/02/23 12:14:17.861
  Sep  2 12:14:17.861: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 12:14:17.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:14:17.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:14:17.884
  STEP: Creating a pod to test downward api env vars @ 09/02/23 12:14:17.888
  STEP: Saw pod success @ 09/02/23 12:14:21.909
  Sep  2 12:14:21.914: INFO: Trying to get logs from node ip-172-31-7-35 pod downward-api-92389714-a6de-473d-a650-3ea62270b784 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 12:14:21.929
  Sep  2 12:14:21.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9749" for this suite. @ 09/02/23 12:14:21.949
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/02/23 12:14:21.956
  Sep  2 12:14:21.956: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 12:14:21.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:14:21.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:14:21.979
  STEP: creating the pod with failed condition @ 09/02/23 12:14:21.983
  STEP: updating the pod @ 09/02/23 12:16:21.994
  Sep  2 12:16:22.508: INFO: Successfully updated pod "var-expansion-4052970e-8a88-4ec9-8c43-f7ba0e41f75a"
  STEP: waiting for pod running @ 09/02/23 12:16:22.508
  STEP: deleting the pod gracefully @ 09/02/23 12:16:24.518
  Sep  2 12:16:24.518: INFO: Deleting pod "var-expansion-4052970e-8a88-4ec9-8c43-f7ba0e41f75a" in namespace "var-expansion-1739"
  Sep  2 12:16:24.525: INFO: Wait up to 5m0s for pod "var-expansion-4052970e-8a88-4ec9-8c43-f7ba0e41f75a" to be fully deleted
  Sep  2 12:16:56.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1739" for this suite. @ 09/02/23 12:16:56.618
• [154.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/02/23 12:16:56.626
  Sep  2 12:16:56.626: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename events @ 09/02/23 12:16:56.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:16:56.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:16:56.648
  STEP: creating a test event @ 09/02/23 12:16:56.652
  STEP: listing events in all namespaces @ 09/02/23 12:16:56.66
  STEP: listing events in test namespace @ 09/02/23 12:16:56.669
  STEP: listing events with field selection filtering on source @ 09/02/23 12:16:56.672
  STEP: listing events with field selection filtering on reportingController @ 09/02/23 12:16:56.676
  STEP: getting the test event @ 09/02/23 12:16:56.681
  STEP: patching the test event @ 09/02/23 12:16:56.684
  STEP: getting the test event @ 09/02/23 12:16:56.694
  STEP: updating the test event @ 09/02/23 12:16:56.698
  STEP: getting the test event @ 09/02/23 12:16:56.705
  STEP: deleting the test event @ 09/02/23 12:16:56.709
  STEP: listing events in all namespaces @ 09/02/23 12:16:56.718
  STEP: listing events in test namespace @ 09/02/23 12:16:56.727
  Sep  2 12:16:56.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6742" for this suite. @ 09/02/23 12:16:56.736
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/02/23 12:16:56.746
  Sep  2 12:16:56.746: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 12:16:56.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:16:56.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:16:56.77
  STEP: Creating the pod @ 09/02/23 12:16:56.774
  Sep  2 12:16:59.325: INFO: Successfully updated pod "labelsupdatea82eb504-a848-48aa-9114-25da9ca654e8"
  Sep  2 12:17:01.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7585" for this suite. @ 09/02/23 12:17:01.348
• [4.610 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/02/23 12:17:01.356
  Sep  2 12:17:01.356: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/23 12:17:01.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:17:01.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:17:01.38
  Sep  2 12:17:01.404: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep  2 12:18:01.431: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/02/23 12:18:01.434
  Sep  2 12:18:01.434: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/02/23 12:18:01.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:01.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:01.466
  Sep  2 12:18:01.504: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep  2 12:18:01.509: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep  2 12:18:01.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 12:18:01.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6887" for this suite. @ 09/02/23 12:18:01.59
  STEP: Destroying namespace "sched-preemption-2626" for this suite. @ 09/02/23 12:18:01.597
• [60.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/02/23 12:18:01.607
  Sep  2 12:18:01.607: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:18:01.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:01.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:01.629
  STEP: create deployment with httpd image @ 09/02/23 12:18:01.633
  Sep  2 12:18:01.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-8367 create -f -'
  Sep  2 12:18:01.810: INFO: stderr: ""
  Sep  2 12:18:01.810: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/02/23 12:18:01.81
  Sep  2 12:18:01.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-8367 diff -f -'
  Sep  2 12:18:01.953: INFO: rc: 1
  Sep  2 12:18:01.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-8367 delete -f -'
  Sep  2 12:18:02.017: INFO: stderr: ""
  Sep  2 12:18:02.017: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep  2 12:18:02.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8367" for this suite. @ 09/02/23 12:18:02.022
• [0.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/02/23 12:18:02.033
  Sep  2 12:18:02.033: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:18:02.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:02.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:02.055
  STEP: creating Agnhost RC @ 09/02/23 12:18:02.063
  Sep  2 12:18:02.063: INFO: namespace kubectl-7917
  Sep  2 12:18:02.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-7917 create -f -'
  Sep  2 12:18:02.272: INFO: stderr: ""
  Sep  2 12:18:02.272: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/23 12:18:02.272
  Sep  2 12:18:03.277: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 12:18:03.277: INFO: Found 0 / 1
  Sep  2 12:18:04.277: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 12:18:04.278: INFO: Found 1 / 1
  Sep  2 12:18:04.278: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep  2 12:18:04.282: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 12:18:04.282: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  2 12:18:04.282: INFO: wait on agnhost-primary startup in kubectl-7917 
  Sep  2 12:18:04.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-7917 logs agnhost-primary-kxrps agnhost-primary'
  Sep  2 12:18:04.370: INFO: stderr: ""
  Sep  2 12:18:04.370: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/02/23 12:18:04.37
  Sep  2 12:18:04.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-7917 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep  2 12:18:04.459: INFO: stderr: ""
  Sep  2 12:18:04.459: INFO: stdout: "service/rm2 exposed\n"
  Sep  2 12:18:04.464: INFO: Service rm2 in namespace kubectl-7917 found.
  STEP: exposing service @ 09/02/23 12:18:06.473
  Sep  2 12:18:06.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-7917 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep  2 12:18:06.602: INFO: stderr: ""
  Sep  2 12:18:06.602: INFO: stdout: "service/rm3 exposed\n"
  Sep  2 12:18:06.606: INFO: Service rm3 in namespace kubectl-7917 found.
  Sep  2 12:18:08.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7917" for this suite. @ 09/02/23 12:18:08.621
• [6.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/02/23 12:18:08.628
  Sep  2 12:18:08.628: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 12:18:08.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:08.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:08.652
  STEP: Create a pod @ 09/02/23 12:18:08.657
  STEP: patching /status @ 09/02/23 12:18:10.675
  Sep  2 12:18:10.682: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep  2 12:18:10.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-253" for this suite. @ 09/02/23 12:18:10.686
• [2.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/02/23 12:18:10.695
  Sep  2 12:18:10.695: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 12:18:10.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:10.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:10.723
  STEP: create the rc @ 09/02/23 12:18:10.731
  W0902 12:18:10.736912      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/02/23 12:18:16.741
  STEP: wait for the rc to be deleted @ 09/02/23 12:18:16.756
  Sep  2 12:18:17.775: INFO: 80 pods remaining
  Sep  2 12:18:17.775: INFO: 80 pods has nil DeletionTimestamp
  Sep  2 12:18:17.775: INFO: 
  Sep  2 12:18:18.798: INFO: 70 pods remaining
  Sep  2 12:18:18.799: INFO: 70 pods has nil DeletionTimestamp
  Sep  2 12:18:18.799: INFO: 
  Sep  2 12:18:19.805: INFO: 60 pods remaining
  Sep  2 12:18:19.805: INFO: 60 pods has nil DeletionTimestamp
  Sep  2 12:18:19.805: INFO: 
  Sep  2 12:18:20.768: INFO: 40 pods remaining
  Sep  2 12:18:20.768: INFO: 40 pods has nil DeletionTimestamp
  Sep  2 12:18:20.768: INFO: 
  Sep  2 12:18:21.771: INFO: 31 pods remaining
  Sep  2 12:18:21.771: INFO: 30 pods has nil DeletionTimestamp
  Sep  2 12:18:21.771: INFO: 
  Sep  2 12:18:22.767: INFO: 20 pods remaining
  Sep  2 12:18:22.767: INFO: 20 pods has nil DeletionTimestamp
  Sep  2 12:18:22.767: INFO: 
  STEP: Gathering metrics @ 09/02/23 12:18:23.765
  W0902 12:18:23.773795      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  2 12:18:23.773: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  2 12:18:23.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3722" for this suite. @ 09/02/23 12:18:23.779
• [13.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/02/23 12:18:23.789
  Sep  2 12:18:23.789: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:18:23.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:23.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:23.816
  STEP: Setting up server cert @ 09/02/23 12:18:23.85
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:18:25.304
  STEP: Deploying the webhook pod @ 09/02/23 12:18:25.313
  STEP: Wait for the deployment to be ready @ 09/02/23 12:18:25.33
  Sep  2 12:18:25.355: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Sep  2 12:18:27.366: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep  2 12:18:29.374: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 12, 18, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/02/23 12:18:31.373
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:18:31.387
  Sep  2 12:18:32.389: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  2 12:18:32.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8875-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/23 12:18:32.915
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/02/23 12:18:32.933
  Sep  2 12:18:34.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8926" for this suite. @ 09/02/23 12:18:35.537
  STEP: Destroying namespace "webhook-markers-6841" for this suite. @ 09/02/23 12:18:35.544
• [11.763 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/02/23 12:18:35.552
  Sep  2 12:18:35.552: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename namespaces @ 09/02/23 12:18:35.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:35.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:35.576
  STEP: Updating Namespace "namespaces-7719" @ 09/02/23 12:18:35.585
  Sep  2 12:18:35.595: INFO: Namespace "namespaces-7719" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"56db386c-a21b-483e-bc80-b650b2d5b819", "kubernetes.io/metadata.name":"namespaces-7719", "namespaces-7719":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep  2 12:18:35.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7719" for this suite. @ 09/02/23 12:18:35.602
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/02/23 12:18:35.614
  Sep  2 12:18:35.614: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:18:35.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:35.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:35.636
  STEP: validating api versions @ 09/02/23 12:18:35.641
  Sep  2 12:18:35.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5790 api-versions'
  Sep  2 12:18:35.744: INFO: stderr: ""
  Sep  2 12:18:35.744: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Sep  2 12:18:35.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5790" for this suite. @ 09/02/23 12:18:35.749
• [0.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/02/23 12:18:35.757
  Sep  2 12:18:35.757: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replicaset @ 09/02/23 12:18:35.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:35.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:35.781
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/02/23 12:18:35.785
  STEP: When a replicaset with a matching selector is created @ 09/02/23 12:18:37.808
  STEP: Then the orphan pod is adopted @ 09/02/23 12:18:37.813
  STEP: When the matched label of one of its pods change @ 09/02/23 12:18:38.821
  Sep  2 12:18:38.825: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/02/23 12:18:38.837
  Sep  2 12:18:39.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9831" for this suite. @ 09/02/23 12:18:39.852
• [4.102 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/02/23 12:18:39.859
  Sep  2 12:18:39.859: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename job @ 09/02/23 12:18:39.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:39.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:39.881
  STEP: Creating a job @ 09/02/23 12:18:39.885
  STEP: Ensuring active pods == parallelism @ 09/02/23 12:18:39.892
  STEP: Orphaning one of the Job's Pods @ 09/02/23 12:18:43.898
  Sep  2 12:18:44.418: INFO: Successfully updated pod "adopt-release-k585x"
  STEP: Checking that the Job readopts the Pod @ 09/02/23 12:18:44.418
  STEP: Removing the labels from the Job's Pod @ 09/02/23 12:18:46.428
  Sep  2 12:18:46.944: INFO: Successfully updated pod "adopt-release-k585x"
  STEP: Checking that the Job releases the Pod @ 09/02/23 12:18:46.944
  Sep  2 12:18:48.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4125" for this suite. @ 09/02/23 12:18:48.961
• [9.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/02/23 12:18:48.973
  Sep  2 12:18:48.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 12:18:48.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:48.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:48.997
  STEP: create the deployment @ 09/02/23 12:18:49.002
  W0902 12:18:49.010423      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/02/23 12:18:49.01
  STEP: delete the deployment @ 09/02/23 12:18:49.016
  STEP: wait for all rs to be garbage collected @ 09/02/23 12:18:49.028
  STEP: expected 0 rs, got 1 rs @ 09/02/23 12:18:49.032
  STEP: expected 0 pods, got 2 pods @ 09/02/23 12:18:49.037
  STEP: Gathering metrics @ 09/02/23 12:18:49.552
  W0902 12:18:49.559062      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  2 12:18:49.559: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  2 12:18:49.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9096" for this suite. @ 09/02/23 12:18:49.564
• [0.599 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/02/23 12:18:49.572
  Sep  2 12:18:49.572: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 12:18:49.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:49.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:49.604
  STEP: Creating configMap with name configmap-test-volume-map-0488d66d-279c-48c1-aafb-f8b5ccc93c5a @ 09/02/23 12:18:49.608
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:18:49.614
  STEP: Saw pod success @ 09/02/23 12:18:53.638
  Sep  2 12:18:53.642: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-configmaps-a1fb8127-db7a-49bb-bc1c-b8e473ab66b8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 12:18:53.659
  Sep  2 12:18:53.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-705" for this suite. @ 09/02/23 12:18:53.684
• [4.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/02/23 12:18:53.693
  Sep  2 12:18:53.693: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename init-container @ 09/02/23 12:18:53.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:53.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:53.714
  STEP: creating the pod @ 09/02/23 12:18:53.718
  Sep  2 12:18:53.719: INFO: PodSpec: initContainers in spec.initContainers
  Sep  2 12:18:58.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1438" for this suite. @ 09/02/23 12:18:58.143
• [4.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/02/23 12:18:58.154
  Sep  2 12:18:58.154: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 12:18:58.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:18:58.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:18:58.178
  STEP: Creating configMap configmap-8907/configmap-test-301f8132-ce09-47dc-ada7-d968927b8007 @ 09/02/23 12:18:58.183
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:18:58.188
  STEP: Saw pod success @ 09/02/23 12:19:02.209
  Sep  2 12:19:02.213: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-configmaps-2fe3e721-0086-4549-b9ec-98e59fd247a3 container env-test: <nil>
  STEP: delete the pod @ 09/02/23 12:19:02.233
  Sep  2 12:19:02.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8907" for this suite. @ 09/02/23 12:19:02.253
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/02/23 12:19:02.263
  Sep  2 12:19:02.263: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 12:19:02.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:19:02.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:19:02.287
  STEP: Creating pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847 @ 09/02/23 12:19:02.292
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 12:19:04.315
  Sep  2 12:19:04.321: INFO: Initial restart count of pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f is 0
  Sep  2 12:19:04.325: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:06.329: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:08.334: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:10.340: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:12.345: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:14.351: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:16.356: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:18.361: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:20.365: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:22.371: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:24.378: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:26.383: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:28.389: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:30.394: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:32.399: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:34.406: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:36.411: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:38.416: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:40.421: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:42.426: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:44.432: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:46.437: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:48.441: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:50.447: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:52.452: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:54.458: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:56.462: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:19:58.467: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:00.472: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:02.477: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:04.483: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:06.488: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:08.493: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:10.498: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:12.502: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:14.508: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:16.512: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:18.517: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:20.522: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:22.527: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:24.533: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:26.538: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:28.542: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:30.547: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:32.552: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:34.558: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:36.563: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:38.571: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:40.577: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:42.581: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:44.587: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:46.592: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:48.596: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:50.603: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:52.607: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:54.615: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:56.620: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:20:58.625: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:00.630: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:02.634: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:04.640: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:06.645: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:08.650: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:10.656: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:12.660: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:14.666: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:16.671: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:18.676: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:20.681: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:22.685: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:24.690: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:26.695: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:28.700: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:30.705: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:32.711: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:34.716: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:36.720: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:38.725: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:40.729: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:42.733: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:44.739: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:46.744: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:48.749: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:50.754: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:52.758: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:54.764: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:56.769: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:21:58.774: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:00.780: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:02.786: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:04.792: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:06.797: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:08.802: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:10.807: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:12.812: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:14.818: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:16.824: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:18.829: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:20.833: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:22.841: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:24.848: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:26.854: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:28.860: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:30.865: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:32.871: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:34.876: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:36.880: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:38.885: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:40.890: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:42.895: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:44.901: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:46.906: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:48.912: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:50.916: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:52.921: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:54.927: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:56.932: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:22:58.936: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:23:00.941: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:23:02.947: INFO: Get pod test-webserver-da693361-09cc-4c65-9cae-0e7a5e038b8f in namespace container-probe-847
  Sep  2 12:23:04.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:23:04.954
  STEP: Destroying namespace "container-probe-847" for this suite. @ 09/02/23 12:23:05.096
• [242.842 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/02/23 12:23:05.105
  Sep  2 12:23:05.105: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:23:05.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:23:05.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:23:05.132
  STEP: creating all guestbook components @ 09/02/23 12:23:05.138
  Sep  2 12:23:05.138: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep  2 12:23:05.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 create -f -'
  Sep  2 12:23:05.469: INFO: stderr: ""
  Sep  2 12:23:05.469: INFO: stdout: "service/agnhost-replica created\n"
  Sep  2 12:23:05.469: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep  2 12:23:05.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 create -f -'
  Sep  2 12:23:05.685: INFO: stderr: ""
  Sep  2 12:23:05.685: INFO: stdout: "service/agnhost-primary created\n"
  Sep  2 12:23:05.685: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep  2 12:23:05.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 create -f -'
  Sep  2 12:23:05.889: INFO: stderr: ""
  Sep  2 12:23:05.889: INFO: stdout: "service/frontend created\n"
  Sep  2 12:23:05.889: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep  2 12:23:05.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 create -f -'
  Sep  2 12:23:06.050: INFO: stderr: ""
  Sep  2 12:23:06.050: INFO: stdout: "deployment.apps/frontend created\n"
  Sep  2 12:23:06.050: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep  2 12:23:06.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 create -f -'
  Sep  2 12:23:06.219: INFO: stderr: ""
  Sep  2 12:23:06.219: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep  2 12:23:06.219: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep  2 12:23:06.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 create -f -'
  Sep  2 12:23:06.387: INFO: stderr: ""
  Sep  2 12:23:06.387: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/02/23 12:23:06.387
  Sep  2 12:23:06.387: INFO: Waiting for all frontend pods to be Running.
  Sep  2 12:23:11.438: INFO: Waiting for frontend to serve content.
  Sep  2 12:23:11.449: INFO: Trying to add a new entry to the guestbook.
  Sep  2 12:23:11.462: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/02/23 12:23:11.474
  Sep  2 12:23:11.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 delete --grace-period=0 --force -f -'
  Sep  2 12:23:11.550: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:23:11.550: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/23 12:23:11.55
  Sep  2 12:23:11.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 delete --grace-period=0 --force -f -'
  Sep  2 12:23:11.627: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:23:11.627: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/23 12:23:11.627
  Sep  2 12:23:11.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 delete --grace-period=0 --force -f -'
  Sep  2 12:23:11.720: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:23:11.720: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/23 12:23:11.72
  Sep  2 12:23:11.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 delete --grace-period=0 --force -f -'
  Sep  2 12:23:11.785: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:23:11.785: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/23 12:23:11.785
  Sep  2 12:23:11.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 delete --grace-period=0 --force -f -'
  Sep  2 12:23:11.868: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:23:11.868: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/02/23 12:23:11.868
  Sep  2 12:23:11.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-5849 delete --grace-period=0 --force -f -'
  Sep  2 12:23:11.960: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:23:11.960: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep  2 12:23:11.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5849" for this suite. @ 09/02/23 12:23:11.965
• [6.869 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/02/23 12:23:11.975
  Sep  2 12:23:11.975: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 12:23:11.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:23:11.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:23:11.999
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4499 @ 09/02/23 12:23:12.009
  STEP: changing the ExternalName service to type=ClusterIP @ 09/02/23 12:23:12.016
  STEP: creating replication controller externalname-service in namespace services-4499 @ 09/02/23 12:23:12.032
  I0902 12:23:12.040682      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4499, replica count: 2
  I0902 12:23:15.091327      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 12:23:15.091: INFO: Creating new exec pod
  Sep  2 12:23:18.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4499 exec execpodqpr44 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep  2 12:23:18.265: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep  2 12:23:18.266: INFO: stdout: "externalname-service-fkjfs"
  Sep  2 12:23:18.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4499 exec execpodqpr44 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.74 80'
  Sep  2 12:23:18.406: INFO: stderr: "+ nc -v -t -w 2 10.152.183.74 80\n+ echo hostName\nConnection to 10.152.183.74 80 port [tcp/http] succeeded!\n"
  Sep  2 12:23:18.406: INFO: stdout: ""
  Sep  2 12:23:19.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4499 exec execpodqpr44 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.74 80'
  Sep  2 12:23:19.538: INFO: stderr: "+ nc -v -t -w 2 10.152.183.74 80\nConnection to 10.152.183.74 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 12:23:19.538: INFO: stdout: "externalname-service-fkjfs"
  Sep  2 12:23:19.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 12:23:19.544: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-4499" for this suite. @ 09/02/23 12:23:19.561
• [7.594 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/02/23 12:23:19.569
  Sep  2 12:23:19.569: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 12:23:19.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:23:19.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:23:19.591
  STEP: Creating configMap with name configmap-test-volume-101ba527-c870-4ad0-b4d0-f1302b22474d @ 09/02/23 12:23:19.595
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:23:19.601
  STEP: Saw pod success @ 09/02/23 12:23:23.622
  Sep  2 12:23:23.626: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-configmaps-711743e3-6962-48a3-93d0-d1a75f79be68 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 12:23:23.647
  Sep  2 12:23:23.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4692" for this suite. @ 09/02/23 12:23:23.671
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/02/23 12:23:23.68
  Sep  2 12:23:23.680: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/02/23 12:23:23.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:23:23.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:23:23.702
  STEP: Creating 50 configmaps @ 09/02/23 12:23:23.706
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/23 12:23:23.949
  Sep  2 12:23:24.049: INFO: Pod name wrapped-volume-race-4141fc8a-49e2-46c6-91cf-26b4acc0ee77: Found 3 pods out of 5
  Sep  2 12:23:29.061: INFO: Pod name wrapped-volume-race-4141fc8a-49e2-46c6-91cf-26b4acc0ee77: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/23 12:23:29.061
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/23 12:23:29.086
  Sep  2 12:23:29.102: INFO: Pod name wrapped-volume-race-d106eb0e-ff40-471a-8c1f-abb71f030e90: Found 0 pods out of 5
  Sep  2 12:23:34.112: INFO: Pod name wrapped-volume-race-d106eb0e-ff40-471a-8c1f-abb71f030e90: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/23 12:23:34.113
  STEP: Creating RC which spawns configmap-volume pods @ 09/02/23 12:23:34.137
  Sep  2 12:23:34.153: INFO: Pod name wrapped-volume-race-233f832b-2789-42db-9676-13b5518dcf17: Found 0 pods out of 5
  Sep  2 12:23:39.163: INFO: Pod name wrapped-volume-race-233f832b-2789-42db-9676-13b5518dcf17: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/02/23 12:23:39.163
  Sep  2 12:23:39.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-233f832b-2789-42db-9676-13b5518dcf17 in namespace emptydir-wrapper-74, will wait for the garbage collector to delete the pods @ 09/02/23 12:23:39.192
  Sep  2 12:23:39.254: INFO: Deleting ReplicationController wrapped-volume-race-233f832b-2789-42db-9676-13b5518dcf17 took: 7.744546ms
  Sep  2 12:23:39.355: INFO: Terminating ReplicationController wrapped-volume-race-233f832b-2789-42db-9676-13b5518dcf17 pods took: 100.38353ms
  STEP: deleting ReplicationController wrapped-volume-race-d106eb0e-ff40-471a-8c1f-abb71f030e90 in namespace emptydir-wrapper-74, will wait for the garbage collector to delete the pods @ 09/02/23 12:23:41.255
  Sep  2 12:23:41.318: INFO: Deleting ReplicationController wrapped-volume-race-d106eb0e-ff40-471a-8c1f-abb71f030e90 took: 8.154663ms
  Sep  2 12:23:41.419: INFO: Terminating ReplicationController wrapped-volume-race-d106eb0e-ff40-471a-8c1f-abb71f030e90 pods took: 100.714893ms
  STEP: deleting ReplicationController wrapped-volume-race-4141fc8a-49e2-46c6-91cf-26b4acc0ee77 in namespace emptydir-wrapper-74, will wait for the garbage collector to delete the pods @ 09/02/23 12:23:43.319
  Sep  2 12:23:43.383: INFO: Deleting ReplicationController wrapped-volume-race-4141fc8a-49e2-46c6-91cf-26b4acc0ee77 took: 8.548608ms
  Sep  2 12:23:43.484: INFO: Terminating ReplicationController wrapped-volume-race-4141fc8a-49e2-46c6-91cf-26b4acc0ee77 pods took: 101.006578ms
  STEP: Cleaning up the configMaps @ 09/02/23 12:23:45.284
  STEP: Destroying namespace "emptydir-wrapper-74" for this suite. @ 09/02/23 12:23:45.621
• [21.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/02/23 12:23:45.631
  Sep  2 12:23:45.631: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 12:23:45.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:23:45.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:23:45.655
  STEP: Creating service test in namespace statefulset-8438 @ 09/02/23 12:23:45.66
  STEP: Creating a new StatefulSet @ 09/02/23 12:23:45.665
  Sep  2 12:23:45.674: INFO: Found 0 stateful pods, waiting for 3
  Sep  2 12:23:55.680: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:23:55.680: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:23:55.680: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:23:55.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8438 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 12:23:55.843: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 12:23:55.843: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 12:23:55.843: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/02/23 12:24:05.861
  Sep  2 12:24:05.882: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/02/23 12:24:05.882
  STEP: Updating Pods in reverse ordinal order @ 09/02/23 12:24:15.899
  Sep  2 12:24:15.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8438 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 12:24:16.032: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 12:24:16.032: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 12:24:16.032: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 09/02/23 12:24:36.057
  Sep  2 12:24:36.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8438 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 12:24:36.211: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 12:24:36.211: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 12:24:36.211: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 12:24:46.256: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/02/23 12:24:56.278
  Sep  2 12:24:56.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8438 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 12:24:56.437: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 12:24:56.437: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 12:24:56.437: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 12:25:06.464: INFO: Waiting for StatefulSet statefulset-8438/ss2 to complete update
  Sep  2 12:25:16.474: INFO: Deleting all statefulset in ns statefulset-8438
  Sep  2 12:25:16.478: INFO: Scaling statefulset ss2 to 0
  Sep  2 12:25:26.498: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 12:25:26.502: INFO: Deleting statefulset ss2
  Sep  2 12:25:26.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8438" for this suite. @ 09/02/23 12:25:26.521
• [100.897 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/02/23 12:25:26.528
  Sep  2 12:25:26.528: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:25:26.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:25:26.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:25:26.55
  STEP: Creating configMap with name projected-configmap-test-volume-map-08371921-9e7e-4b5e-8666-e04117b09f19 @ 09/02/23 12:25:26.554
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:25:26.559
  STEP: Saw pod success @ 09/02/23 12:25:30.58
  Sep  2 12:25:30.584: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-configmaps-948c9aee-5731-49f1-b90a-c402a8db982a container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 12:25:30.603
  Sep  2 12:25:30.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3786" for this suite. @ 09/02/23 12:25:30.624
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/02/23 12:25:30.634
  Sep  2 12:25:30.634: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 12:25:30.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:25:30.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:25:30.655
  Sep  2 12:25:30.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: creating the pod @ 09/02/23 12:25:30.659
  STEP: submitting the pod to kubernetes @ 09/02/23 12:25:30.659
  Sep  2 12:25:32.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4128" for this suite. @ 09/02/23 12:25:32.785
• [2.160 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/02/23 12:25:32.794
  Sep  2 12:25:32.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 12:25:32.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:25:32.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:25:32.817
  Sep  2 12:25:32.844: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/02/23 12:25:32.85
  Sep  2 12:25:32.853: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:32.853: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/02/23 12:25:32.853
  Sep  2 12:25:32.876: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:32.876: INFO: Node ip-172-31-7-35 is running 0 daemon pod, expected 1
  Sep  2 12:25:33.880: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:33.880: INFO: Node ip-172-31-7-35 is running 0 daemon pod, expected 1
  Sep  2 12:25:34.880: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  2 12:25:34.880: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/02/23 12:25:34.885
  Sep  2 12:25:34.901: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  2 12:25:34.901: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Sep  2 12:25:35.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:35.906: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/02/23 12:25:35.906
  Sep  2 12:25:35.922: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:35.922: INFO: Node ip-172-31-7-35 is running 0 daemon pod, expected 1
  Sep  2 12:25:36.927: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:36.927: INFO: Node ip-172-31-7-35 is running 0 daemon pod, expected 1
  Sep  2 12:25:37.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:37.926: INFO: Node ip-172-31-7-35 is running 0 daemon pod, expected 1
  Sep  2 12:25:38.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  2 12:25:38.926: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/23 12:25:38.934
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8779, will wait for the garbage collector to delete the pods @ 09/02/23 12:25:38.934
  Sep  2 12:25:38.996: INFO: Deleting DaemonSet.extensions daemon-set took: 6.972285ms
  Sep  2 12:25:39.096: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.265871ms
  Sep  2 12:25:41.801: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 12:25:41.801: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  2 12:25:41.806: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9930"},"items":null}

  Sep  2 12:25:41.810: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9930"},"items":null}

  Sep  2 12:25:41.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8779" for this suite. @ 09/02/23 12:25:41.839
• [9.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/02/23 12:25:41.847
  Sep  2 12:25:41.848: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:25:41.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:25:41.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:25:41.869
  STEP: Setting up server cert @ 09/02/23 12:25:41.896
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:25:42.156
  STEP: Deploying the webhook pod @ 09/02/23 12:25:42.165
  STEP: Wait for the deployment to be ready @ 09/02/23 12:25:42.175
  Sep  2 12:25:42.184: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 12:25:44.197
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:25:44.209
  Sep  2 12:25:45.209: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/02/23 12:25:45.218
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/02/23 12:25:45.241
  STEP: Creating a configMap that should not be mutated @ 09/02/23 12:25:45.249
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/02/23 12:25:45.261
  STEP: Creating a configMap that should be mutated @ 09/02/23 12:25:45.272
  Sep  2 12:25:45.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4358" for this suite. @ 09/02/23 12:25:45.342
  STEP: Destroying namespace "webhook-markers-8037" for this suite. @ 09/02/23 12:25:45.351
• [3.513 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/02/23 12:25:45.361
  Sep  2 12:25:45.361: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 12:25:45.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:25:45.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:25:45.381
  Sep  2 12:25:45.385: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/02/23 12:25:46.721
  Sep  2 12:25:46.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 create -f -'
  Sep  2 12:25:47.195: INFO: stderr: ""
  Sep  2 12:25:47.195: INFO: stdout: "e2e-test-crd-publish-openapi-7933-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep  2 12:25:47.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 delete e2e-test-crd-publish-openapi-7933-crds test-foo'
  Sep  2 12:25:47.266: INFO: stderr: ""
  Sep  2 12:25:47.266: INFO: stdout: "e2e-test-crd-publish-openapi-7933-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep  2 12:25:47.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 apply -f -'
  Sep  2 12:25:47.410: INFO: stderr: ""
  Sep  2 12:25:47.410: INFO: stdout: "e2e-test-crd-publish-openapi-7933-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep  2 12:25:47.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 delete e2e-test-crd-publish-openapi-7933-crds test-foo'
  Sep  2 12:25:47.479: INFO: stderr: ""
  Sep  2 12:25:47.479: INFO: stdout: "e2e-test-crd-publish-openapi-7933-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/02/23 12:25:47.479
  Sep  2 12:25:47.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 create -f -'
  Sep  2 12:25:47.623: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/02/23 12:25:47.623
  Sep  2 12:25:47.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 create -f -'
  Sep  2 12:25:47.766: INFO: rc: 1
  Sep  2 12:25:47.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 apply -f -'
  Sep  2 12:25:48.097: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/02/23 12:25:48.097
  Sep  2 12:25:48.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 create -f -'
  Sep  2 12:25:48.236: INFO: rc: 1
  Sep  2 12:25:48.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 --namespace=crd-publish-openapi-4366 apply -f -'
  Sep  2 12:25:48.385: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/02/23 12:25:48.386
  Sep  2 12:25:48.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 explain e2e-test-crd-publish-openapi-7933-crds'
  Sep  2 12:25:48.522: INFO: stderr: ""
  Sep  2 12:25:48.522: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7933-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/02/23 12:25:48.522
  Sep  2 12:25:48.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 explain e2e-test-crd-publish-openapi-7933-crds.metadata'
  Sep  2 12:25:48.657: INFO: stderr: ""
  Sep  2 12:25:48.657: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7933-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep  2 12:25:48.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 explain e2e-test-crd-publish-openapi-7933-crds.spec'
  Sep  2 12:25:48.792: INFO: stderr: ""
  Sep  2 12:25:48.792: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7933-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep  2 12:25:48.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 explain e2e-test-crd-publish-openapi-7933-crds.spec.bars'
  Sep  2 12:25:48.927: INFO: stderr: ""
  Sep  2 12:25:48.927: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7933-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/02/23 12:25:48.927
  Sep  2 12:25:48.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-4366 explain e2e-test-crd-publish-openapi-7933-crds.spec.bars2'
  Sep  2 12:25:49.061: INFO: rc: 1
  Sep  2 12:25:50.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4366" for this suite. @ 09/02/23 12:25:50.478
• [5.125 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/02/23 12:25:50.486
  Sep  2 12:25:50.486: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 12:25:50.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:25:50.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:25:50.508
  STEP: creating service in namespace services-4761 @ 09/02/23 12:25:50.513
  STEP: creating service affinity-clusterip-transition in namespace services-4761 @ 09/02/23 12:25:50.513
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4761 @ 09/02/23 12:25:50.524
  I0902 12:25:50.531229      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4761, replica count: 3
  I0902 12:25:53.581933      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 12:25:53.589: INFO: Creating new exec pod
  Sep  2 12:25:56.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4761 exec execpod-affinitybjkkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep  2 12:25:56.756: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep  2 12:25:56.756: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 12:25:56.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4761 exec execpod-affinitybjkkj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.43 80'
  Sep  2 12:25:56.907: INFO: stderr: "+ nc -v -t -w 2 10.152.183.43 80\n+ echo hostName\nConnection to 10.152.183.43 80 port [tcp/http] succeeded!\n"
  Sep  2 12:25:56.907: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 12:25:56.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4761 exec execpod-affinitybjkkj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.43:80/ ; done'
  Sep  2 12:25:57.142: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n"
  Sep  2 12:25:57.142: INFO: stdout: "\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-7j47j\naffinity-clusterip-transition-7j47j\naffinity-clusterip-transition-7j47j\naffinity-clusterip-transition-2k7h5\naffinity-clusterip-transition-2k7h5\naffinity-clusterip-transition-7j47j\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-2k7h5\naffinity-clusterip-transition-2k7h5\naffinity-clusterip-transition-7j47j\naffinity-clusterip-transition-7j47j\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-7j47j"
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-2k7h5
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-2k7h5
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-2k7h5
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-2k7h5
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.142: INFO: Received response from host: affinity-clusterip-transition-7j47j
  Sep  2 12:25:57.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4761 exec execpod-affinitybjkkj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.43:80/ ; done'
  Sep  2 12:25:57.383: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.43:80/\n"
  Sep  2 12:25:57.383: INFO: stdout: "\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r\naffinity-clusterip-transition-t8v8r"
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Received response from host: affinity-clusterip-transition-t8v8r
  Sep  2 12:25:57.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 12:25:57.390: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4761, will wait for the garbage collector to delete the pods @ 09/02/23 12:25:57.406
  Sep  2 12:25:57.472: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.881351ms
  Sep  2 12:25:57.573: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.029862ms
  STEP: Destroying namespace "services-4761" for this suite. @ 09/02/23 12:26:00.89
• [10.413 seconds]
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/02/23 12:26:00.899
  Sep  2 12:26:00.899: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:26:00.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:00.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:00.92
  STEP: Creating secret with name s-test-opt-del-846752b2-df7e-49ad-b7a7-c732e6857990 @ 09/02/23 12:26:00.999
  STEP: Creating secret with name s-test-opt-upd-3a72be0a-ce5b-48ac-8eb3-f7317aae7af3 @ 09/02/23 12:26:01.007
  STEP: Creating the pod @ 09/02/23 12:26:01.012
  STEP: Deleting secret s-test-opt-del-846752b2-df7e-49ad-b7a7-c732e6857990 @ 09/02/23 12:26:03.059
  STEP: Updating secret s-test-opt-upd-3a72be0a-ce5b-48ac-8eb3-f7317aae7af3 @ 09/02/23 12:26:03.074
  STEP: Creating secret with name s-test-opt-create-28c414fc-bfb2-4313-8314-5d112ece4776 @ 09/02/23 12:26:03.08
  STEP: waiting to observe update in volume @ 09/02/23 12:26:03.085
  Sep  2 12:26:07.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2679" for this suite. @ 09/02/23 12:26:07.129
• [6.237 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/02/23 12:26:07.137
  Sep  2 12:26:07.137: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replication-controller @ 09/02/23 12:26:07.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:07.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:07.159
  STEP: Creating replication controller my-hostname-basic-d5eff3f0-7283-4968-8026-829998361979 @ 09/02/23 12:26:07.163
  Sep  2 12:26:07.173: INFO: Pod name my-hostname-basic-d5eff3f0-7283-4968-8026-829998361979: Found 0 pods out of 1
  Sep  2 12:26:12.178: INFO: Pod name my-hostname-basic-d5eff3f0-7283-4968-8026-829998361979: Found 1 pods out of 1
  Sep  2 12:26:12.178: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-d5eff3f0-7283-4968-8026-829998361979" are running
  Sep  2 12:26:12.182: INFO: Pod "my-hostname-basic-d5eff3f0-7283-4968-8026-829998361979-xqts5" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:26:07 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:26:08 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:26:08 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-02 12:26:07 +0000 UTC Reason: Message:}])
  Sep  2 12:26:12.182: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/02/23 12:26:12.182
  Sep  2 12:26:12.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-397" for this suite. @ 09/02/23 12:26:12.2
• [5.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/02/23 12:26:12.209
  Sep  2 12:26:12.209: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 12:26:12.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:12.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:12.233
  Sep  2 12:26:12.236: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep  2 12:26:12.245: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep  2 12:26:17.253: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/23 12:26:17.253
  Sep  2 12:26:17.253: INFO: Creating deployment "test-rolling-update-deployment"
  Sep  2 12:26:17.258: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep  2 12:26:17.268: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Sep  2 12:26:19.279: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep  2 12:26:19.282: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep  2 12:26:19.294: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61c1e146-c745-4f99-8595-63b4fab5316d",
      ResourceVersion: (string) (len=5) "10426",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829254377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 12:26:19.299: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5f14ad4-785f-4ef4-982f-9fee4db18d29",
      ResourceVersion: (string) (len=5) "10416",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829254377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "61c1e146-c745-4f99-8595-63b4fab5316d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 63 31 65 31  34 36 2d 63 37 34 35 2d  |\"61c1e146-c745-|
              00000120  34 66 39 39 2d 38 35 39  35 2d 36 33 62 34 66 61  |4f99-8595-63b4fa|
              00000130  62 35 33 31 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b5316d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 12:26:19.301: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep  2 12:26:19.301: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e96bba65-f506-4fa0-afcb-bf2b79466f53",
      ResourceVersion: (string) (len=5) "10425",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829254372,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "61c1e146-c745-4f99-8595-63b4fab5316d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 31 63 31 65 31 34  |"uid\":\"61c1e14|
              000000b0  36 2d 63 37 34 35 2d 34  66 39 39 2d 38 35 39 35  |6-c745-4f99-8595|
              000000c0  2d 36 33 62 34 66 61 62  35 33 31 36 64 5c 22 7d  |-63b4fab5316d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 12:26:19.307: INFO: Pod "test-rolling-update-deployment-7f5c55c64-n9nw6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-n9nw6",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=14) "deployment-746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc0a58b6-ca4c-4e97-a78a-12cb555d5c92",
      ResourceVersion: (string) (len=5) "10415",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829254377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "d5f14ad4-785f-4ef4-982f-9fee4db18d29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  66 31 34 61 64 34 2d 37  |d\":\"d5f14ad4-7|
              00000090  38 35 66 2d 34 65 66 34  2d 39 38 32 66 2d 39 66  |85f-4ef4-982f-9f|
              000000a0  65 65 34 64 62 31 38 64  32 39 5c 22 7d 22 3a 7b  |ee4db18d29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 36 5c 22 7d  |192.168.141.6\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76bfp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76bfp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829254377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.141.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.141.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829254377,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829254378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://4111d1774c554a80e5cf7f4c61f1922ab8eeb9ea368e9f60040bb4d59d242632",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 12:26:19.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-746" for this suite. @ 09/02/23 12:26:19.315
• [7.113 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/02/23 12:26:19.323
  Sep  2 12:26:19.323: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/23 12:26:19.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:19.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:19.343
  Sep  2 12:26:21.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3928" for this suite. @ 09/02/23 12:26:21.383
• [2.067 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/02/23 12:26:21.39
  Sep  2 12:26:21.390: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 12:26:21.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:21.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:21.412
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 12:26:21.416
  STEP: Saw pod success @ 09/02/23 12:26:25.438
  Sep  2 12:26:25.442: INFO: Trying to get logs from node ip-172-31-35-65 pod downwardapi-volume-c8db09d4-e14b-4f99-9b4b-874a90c0d152 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 12:26:25.459
  Sep  2 12:26:25.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8196" for this suite. @ 09/02/23 12:26:25.48
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/02/23 12:26:25.488
  Sep  2 12:26:25.488: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:26:25.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:25.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:25.51
  STEP: Setting up server cert @ 09/02/23 12:26:25.535
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:26:26.04
  STEP: Deploying the webhook pod @ 09/02/23 12:26:26.048
  STEP: Wait for the deployment to be ready @ 09/02/23 12:26:26.06
  Sep  2 12:26:26.068: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 12:26:28.08
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:26:28.09
  Sep  2 12:26:29.091: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/02/23 12:26:29.099
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/23 12:26:29.115
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/02/23 12:26:29.142
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/23 12:26:29.159
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/02/23 12:26:29.177
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/23 12:26:29.187
  Sep  2 12:26:29.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6962" for this suite. @ 09/02/23 12:26:29.251
  STEP: Destroying namespace "webhook-markers-5440" for this suite. @ 09/02/23 12:26:29.261
• [3.780 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/02/23 12:26:29.269
  Sep  2 12:26:29.269: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename cronjob @ 09/02/23 12:26:29.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:26:29.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:26:29.295
  STEP: Creating a cronjob @ 09/02/23 12:26:29.299
  STEP: Ensuring more than one job is running at a time @ 09/02/23 12:26:29.306
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/02/23 12:28:01.311
  STEP: Removing cronjob @ 09/02/23 12:28:01.315
  Sep  2 12:28:01.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6407" for this suite. @ 09/02/23 12:28:01.326
• [92.063 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/02/23 12:28:01.332
  Sep  2 12:28:01.332: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename events @ 09/02/23 12:28:01.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:28:01.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:28:01.362
  STEP: creating a test event @ 09/02/23 12:28:01.367
  STEP: listing all events in all namespaces @ 09/02/23 12:28:01.373
  STEP: patching the test event @ 09/02/23 12:28:01.381
  STEP: fetching the test event @ 09/02/23 12:28:01.389
  STEP: updating the test event @ 09/02/23 12:28:01.393
  STEP: getting the test event @ 09/02/23 12:28:01.403
  STEP: deleting the test event @ 09/02/23 12:28:01.407
  STEP: listing all events in all namespaces @ 09/02/23 12:28:01.414
  Sep  2 12:28:01.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2886" for this suite. @ 09/02/23 12:28:01.427
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/02/23 12:28:01.434
  Sep  2 12:28:01.434: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 12:28:01.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:28:01.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:28:01.456
  STEP: Creating pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360 @ 09/02/23 12:28:01.46
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 12:28:03.478
  Sep  2 12:28:03.483: INFO: Initial restart count of pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 is 0
  Sep  2 12:28:03.486: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:05.491: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:07.496: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:09.501: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:11.505: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:13.510: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:15.515: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:17.520: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:19.525: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:21.530: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:23.535: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:25.540: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:27.545: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:29.549: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:31.556: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:33.562: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:35.567: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:37.572: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:39.577: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:41.582: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:43.587: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:45.592: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:47.597: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:49.602: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:51.607: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:53.613: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:55.618: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:57.622: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:28:59.628: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:01.632: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:03.637: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:05.642: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:07.647: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:09.652: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:11.656: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:13.661: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:15.667: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:17.673: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:19.677: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:21.682: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:23.687: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:25.693: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:27.698: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:29.702: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:31.708: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:33.713: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:35.718: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:37.722: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:39.726: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:41.731: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:43.737: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:45.741: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:47.745: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:49.751: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:51.756: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:53.762: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:55.765: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:57.770: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:29:59.777: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:01.782: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:03.787: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:05.792: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:07.798: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:09.803: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:11.809: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:13.816: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:15.820: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:17.825: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:19.830: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:21.836: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:23.841: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:25.848: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:27.852: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:29.858: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:31.863: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:33.869: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:35.874: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:37.879: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:39.883: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:41.888: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:43.894: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:45.898: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:47.903: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:49.908: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:51.912: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:53.918: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:55.924: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:57.929: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:30:59.934: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:01.939: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:03.945: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:05.951: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:07.955: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:09.960: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:11.965: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:13.971: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:15.976: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:17.981: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:19.986: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:21.992: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:23.997: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:26.003: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:28.008: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:30.014: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:32.019: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:34.025: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:36.030: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:38.035: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:40.040: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:42.045: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:44.051: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:46.056: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:48.062: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:50.066: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:52.071: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:54.077: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:56.082: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:31:58.087: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:32:00.094: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:32:02.099: INFO: Get pod liveness-82e7fdd6-f7ee-4119-81a5-83fde83f5b87 in namespace container-probe-3360
  Sep  2 12:32:04.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:32:04.106
  STEP: Destroying namespace "container-probe-3360" for this suite. @ 09/02/23 12:32:04.118
• [242.692 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/02/23 12:32:04.127
  Sep  2 12:32:04.127: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 12:32:04.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:32:04.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:32:04.148
  STEP: Creating a pod to test env composition @ 09/02/23 12:32:04.152
  STEP: Saw pod success @ 09/02/23 12:32:08.173
  Sep  2 12:32:08.177: INFO: Trying to get logs from node ip-172-31-7-35 pod var-expansion-51a8de44-a2d1-4206-aa0f-0ff1bf8a0804 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 12:32:08.196
  Sep  2 12:32:08.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7555" for this suite. @ 09/02/23 12:32:08.218
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/02/23 12:32:08.225
  Sep  2 12:32:08.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 12:32:08.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:32:08.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:32:08.246
  STEP: Creating a pod to test downward api env vars @ 09/02/23 12:32:08.25
  STEP: Saw pod success @ 09/02/23 12:32:12.276
  Sep  2 12:32:12.280: INFO: Trying to get logs from node ip-172-31-7-35 pod downward-api-e2e652f6-5d03-4bf3-a7d6-74efc55a232c container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 12:32:12.289
  Sep  2 12:32:12.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8038" for this suite. @ 09/02/23 12:32:12.317
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/02/23 12:32:12.326
  Sep  2 12:32:12.326: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/23 12:32:12.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:32:12.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:32:12.35
  Sep  2 12:32:12.369: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep  2 12:33:12.397: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/02/23 12:33:12.402
  Sep  2 12:33:12.435: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep  2 12:33:12.442: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep  2 12:33:12.468: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep  2 12:33:12.476: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep  2 12:33:12.497: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep  2 12:33:12.504: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/02/23 12:33:12.504
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/02/23 12:33:16.538
  Sep  2 12:33:20.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5138" for this suite. @ 09/02/23 12:33:20.651
• [68.333 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/02/23 12:33:20.659
  Sep  2 12:33:20.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:33:20.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:20.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:20.695
  Sep  2 12:33:20.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 create -f -'
  Sep  2 12:33:21.302: INFO: stderr: ""
  Sep  2 12:33:21.302: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep  2 12:33:21.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 create -f -'
  Sep  2 12:33:21.500: INFO: stderr: ""
  Sep  2 12:33:21.500: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/23 12:33:21.5
  Sep  2 12:33:22.506: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 12:33:22.506: INFO: Found 0 / 1
  Sep  2 12:33:23.505: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 12:33:23.505: INFO: Found 1 / 1
  Sep  2 12:33:23.505: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep  2 12:33:23.509: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 12:33:23.509: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  2 12:33:23.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 describe pod agnhost-primary-qkq6t'
  Sep  2 12:33:23.637: INFO: stderr: ""
  Sep  2 12:33:23.637: INFO: stdout: "Name:             agnhost-primary-qkq6t\nNamespace:        kubectl-1160\nPriority:         0\nService Account:  default\nNode:             ip-172-31-7-35/172.31.7.35\nStart Time:       Sat, 02 Sep 2023 12:33:21 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.141.43\nIPs:\n  IP:           192.168.141.43\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7d23c9950ec26b1784e71240ef5fd5403b31779a3c39ae6b2a1cb0d3caaed657\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 02 Sep 2023 12:33:22 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ztx52 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-ztx52:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1160/agnhost-primary-qkq6t to ip-172-31-7-35\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Sep  2 12:33:23.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 describe rc agnhost-primary'
  Sep  2 12:33:23.711: INFO: stderr: ""
  Sep  2 12:33:23.711: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1160\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-qkq6t\n"
  Sep  2 12:33:23.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 describe service agnhost-primary'
  Sep  2 12:33:23.785: INFO: stderr: ""
  Sep  2 12:33:23.785: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1160\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.151\nIPs:               10.152.183.151\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.141.43:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Sep  2 12:33:23.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 describe node ip-172-31-17-196'
  Sep  2 12:33:23.991: INFO: stderr: ""
  Sep  2 12:33:23.992: INFO: stdout: "Name:               ip-172-31-17-196\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-17-196\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 02 Sep 2023 11:56:53 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-17-196\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 02 Sep 2023 12:33:18 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 02 Sep 2023 11:57:44 +0000   Sat, 02 Sep 2023 11:57:44 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 02 Sep 2023 12:32:15 +0000   Sat, 02 Sep 2023 12:02:10 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 02 Sep 2023 12:32:15 +0000   Sat, 02 Sep 2023 12:02:10 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 02 Sep 2023 12:32:15 +0000   Sat, 02 Sep 2023 12:02:10 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 02 Sep 2023 12:32:15 +0000   Sat, 02 Sep 2023 12:02:10 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.17.196\n  Hostname:    ip-172-31-17-196\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16066236Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15963836Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec252c52b6c21a9656977cd79b52263a\n  System UUID:                ec252c52-b6c2-1a96-5697-7cd79b52263a\n  Boot ID:                    9f7fcb38-8414-48f8-97f1-45bf4a8016b1\n  Kernel Version:             6.2.0-1010-aws\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.28.1\n  Kube-Proxy Version:         v1.28.1\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-tn5r8                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         36m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-fsq6l    0 (0%)        0 (0%)      0 (0%)           0 (0%)         21m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                 From             Message\n  ----    ------                   ----                ----             -------\n  Normal  Starting                 35m                 kube-proxy       \n  Normal  Starting                 31m                 kube-proxy       \n  Normal  Starting                 30m                 kube-proxy       \n  Normal  Starting                 29m                 kube-proxy       \n  Normal  RegisteredNode           36m                 node-controller  Node ip-172-31-17-196 event: Registered Node ip-172-31-17-196 in Controller\n  Normal  NodeNotReady             31m                 node-controller  Node ip-172-31-17-196 status is now: NodeNotReady\n  Normal  NodeHasSufficientMemory  31m (x16 over 37m)  kubelet          Node ip-172-31-17-196 status is now: NodeHasSufficientMemory\n"
  Sep  2 12:33:23.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1160 describe namespace kubectl-1160'
  Sep  2 12:33:24.063: INFO: stderr: ""
  Sep  2 12:33:24.063: INFO: stdout: "Name:         kubectl-1160\nLabels:       e2e-framework=kubectl\n              e2e-run=56db386c-a21b-483e-bc80-b650b2d5b819\n              kubernetes.io/metadata.name=kubectl-1160\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep  2 12:33:24.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1160" for this suite. @ 09/02/23 12:33:24.068
• [3.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/02/23 12:33:24.077
  Sep  2 12:33:24.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/02/23 12:33:24.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:24.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:24.112
  STEP: Creating two CSIDrivers @ 09/02/23 12:33:24.116
  STEP: Getting "inline-driver-648638a8-e474-4e2d-830d-f6a3b6b24492" & "inline-driver-9d9c2810-68b3-4670-b4ce-06f1ef7dfb48" @ 09/02/23 12:33:24.134
  STEP: Patching the CSIDriver "inline-driver-9d9c2810-68b3-4670-b4ce-06f1ef7dfb48" @ 09/02/23 12:33:24.141
  STEP: Updating the CSIDriver "inline-driver-9d9c2810-68b3-4670-b4ce-06f1ef7dfb48" @ 09/02/23 12:33:24.147
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9904" @ 09/02/23 12:33:24.156
  STEP: Deleting CSIDriver "inline-driver-648638a8-e474-4e2d-830d-f6a3b6b24492" @ 09/02/23 12:33:24.159
  STEP: Confirm deletion of CSIDriver "inline-driver-648638a8-e474-4e2d-830d-f6a3b6b24492" @ 09/02/23 12:33:24.166
  STEP: Deleting CSIDriver "inline-driver-9d9c2810-68b3-4670-b4ce-06f1ef7dfb48" via DeleteCollection @ 09/02/23 12:33:24.169
  STEP: Confirm deletion of CSIDriver "inline-driver-9d9c2810-68b3-4670-b4ce-06f1ef7dfb48" @ 09/02/23 12:33:24.177
  Sep  2 12:33:24.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9904" for this suite. @ 09/02/23 12:33:24.186
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/02/23 12:33:24.196
  Sep  2 12:33:24.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename ingress @ 09/02/23 12:33:24.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:24.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:24.221
  STEP: getting /apis @ 09/02/23 12:33:24.225
  STEP: getting /apis/networking.k8s.io @ 09/02/23 12:33:24.23
  STEP: getting /apis/networking.k8s.iov1 @ 09/02/23 12:33:24.232
  STEP: creating @ 09/02/23 12:33:24.234
  STEP: getting @ 09/02/23 12:33:24.255
  STEP: listing @ 09/02/23 12:33:24.258
  STEP: watching @ 09/02/23 12:33:24.262
  Sep  2 12:33:24.262: INFO: starting watch
  STEP: cluster-wide listing @ 09/02/23 12:33:24.264
  STEP: cluster-wide watching @ 09/02/23 12:33:24.27
  Sep  2 12:33:24.270: INFO: starting watch
  STEP: patching @ 09/02/23 12:33:24.271
  STEP: updating @ 09/02/23 12:33:24.278
  Sep  2 12:33:24.296: INFO: waiting for watch events with expected annotations
  Sep  2 12:33:24.296: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/02/23 12:33:24.296
  STEP: updating /status @ 09/02/23 12:33:24.304
  STEP: get /status @ 09/02/23 12:33:24.314
  STEP: deleting @ 09/02/23 12:33:24.318
  STEP: deleting a collection @ 09/02/23 12:33:24.345
  Sep  2 12:33:24.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1899" for this suite. @ 09/02/23 12:33:24.368
• [0.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/02/23 12:33:24.379
  Sep  2 12:33:24.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 12:33:24.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:24.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:24.41
  STEP: creating service multi-endpoint-test in namespace services-6210 @ 09/02/23 12:33:24.415
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6210 to expose endpoints map[] @ 09/02/23 12:33:24.426
  Sep  2 12:33:24.447: INFO: successfully validated that service multi-endpoint-test in namespace services-6210 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6210 @ 09/02/23 12:33:24.447
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6210 to expose endpoints map[pod1:[100]] @ 09/02/23 12:33:26.47
  Sep  2 12:33:26.483: INFO: successfully validated that service multi-endpoint-test in namespace services-6210 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6210 @ 09/02/23 12:33:26.483
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6210 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/02/23 12:33:28.501
  Sep  2 12:33:28.518: INFO: successfully validated that service multi-endpoint-test in namespace services-6210 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/02/23 12:33:28.518
  Sep  2 12:33:28.518: INFO: Creating new exec pod
  Sep  2 12:33:31.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6210 exec execpodcjzmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep  2 12:33:31.683: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep  2 12:33:31.683: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 12:33:31.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6210 exec execpodcjzmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  Sep  2 12:33:31.828: INFO: stderr: "+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 12:33:31.828: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 12:33:31.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6210 exec execpodcjzmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep  2 12:33:31.979: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep  2 12:33:31.980: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 12:33:31.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6210 exec execpodcjzmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 81'
  Sep  2 12:33:32.120: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 81\nConnection to 10.152.183.180 81 port [tcp/*] succeeded!\n"
  Sep  2 12:33:32.120: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6210 @ 09/02/23 12:33:32.12
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6210 to expose endpoints map[pod2:[101]] @ 09/02/23 12:33:32.14
  Sep  2 12:33:33.167: INFO: successfully validated that service multi-endpoint-test in namespace services-6210 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6210 @ 09/02/23 12:33:33.167
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6210 to expose endpoints map[] @ 09/02/23 12:33:33.182
  Sep  2 12:33:34.206: INFO: successfully validated that service multi-endpoint-test in namespace services-6210 exposes endpoints map[]
  Sep  2 12:33:34.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6210" for this suite. @ 09/02/23 12:33:34.226
• [9.855 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/02/23 12:33:34.235
  Sep  2 12:33:34.235: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replicaset @ 09/02/23 12:33:34.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:34.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:34.258
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/02/23 12:33:34.262
  Sep  2 12:33:34.272: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep  2 12:33:39.277: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/23 12:33:39.277
  STEP: getting scale subresource @ 09/02/23 12:33:39.277
  STEP: updating a scale subresource @ 09/02/23 12:33:39.281
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/02/23 12:33:39.288
  STEP: Patch a scale subresource @ 09/02/23 12:33:39.293
  Sep  2 12:33:39.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9021" for this suite. @ 09/02/23 12:33:39.31
• [5.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/02/23 12:33:39.331
  Sep  2 12:33:39.331: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:33:39.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:39.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:39.359
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/23 12:33:39.364
  Sep  2 12:33:39.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4650 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep  2 12:33:39.431: INFO: stderr: ""
  Sep  2 12:33:39.431: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/02/23 12:33:39.431
  Sep  2 12:33:39.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4650 delete pods e2e-test-httpd-pod'
  Sep  2 12:33:40.667: INFO: stderr: ""
  Sep  2 12:33:40.667: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep  2 12:33:40.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4650" for this suite. @ 09/02/23 12:33:40.673
• [1.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/02/23 12:33:40.685
  Sep  2 12:33:40.685: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 12:33:40.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:33:40.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:33:40.706
  STEP: Creating service test in namespace statefulset-2054 @ 09/02/23 12:33:40.714
  Sep  2 12:33:40.731: INFO: Found 0 stateful pods, waiting for 1
  Sep  2 12:33:50.737: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/02/23 12:33:50.744
  W0902 12:33:50.754815      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep  2 12:33:50.762: INFO: Found 1 stateful pods, waiting for 2
  Sep  2 12:34:00.769: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:34:00.769: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/02/23 12:34:00.777
  STEP: Delete all of the StatefulSets @ 09/02/23 12:34:00.781
  STEP: Verify that StatefulSets have been deleted @ 09/02/23 12:34:00.789
  Sep  2 12:34:00.792: INFO: Deleting all statefulset in ns statefulset-2054
  Sep  2 12:34:00.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2054" for this suite. @ 09/02/23 12:34:00.813
• [20.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/02/23 12:34:00.823
  Sep  2 12:34:00.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-webhook @ 09/02/23 12:34:00.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:00.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:00.848
  STEP: Setting up server cert @ 09/02/23 12:34:00.853
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/23 12:34:01.502
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/23 12:34:01.511
  STEP: Wait for the deployment to be ready @ 09/02/23 12:34:01.525
  Sep  2 12:34:01.533: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 12:34:03.547
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:34:03.559
  Sep  2 12:34:04.560: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep  2 12:34:04.569: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Creating a v1 custom resource @ 09/02/23 12:34:07.148
  STEP: Create a v2 custom resource @ 09/02/23 12:34:07.171
  STEP: List CRs in v1 @ 09/02/23 12:34:07.214
  STEP: List CRs in v2 @ 09/02/23 12:34:07.219
  Sep  2 12:34:07.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1736" for this suite. @ 09/02/23 12:34:07.788
• [6.977 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/02/23 12:34:07.8
  Sep  2 12:34:07.800: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 12:34:07.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:07.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:07.824
  STEP: Creating secret with name s-test-opt-del-fbe1d6d3-4030-4d1c-945c-b0603124f769 @ 09/02/23 12:34:07.833
  STEP: Creating secret with name s-test-opt-upd-066e5396-65f5-4e85-b1a7-0f6af8d747bd @ 09/02/23 12:34:07.838
  STEP: Creating the pod @ 09/02/23 12:34:07.843
  STEP: Deleting secret s-test-opt-del-fbe1d6d3-4030-4d1c-945c-b0603124f769 @ 09/02/23 12:34:09.896
  STEP: Updating secret s-test-opt-upd-066e5396-65f5-4e85-b1a7-0f6af8d747bd @ 09/02/23 12:34:09.903
  STEP: Creating secret with name s-test-opt-create-03641d51-b2a3-45fb-a422-bce40d24a8a7 @ 09/02/23 12:34:09.909
  STEP: waiting to observe update in volume @ 09/02/23 12:34:09.914
  Sep  2 12:34:13.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3950" for this suite. @ 09/02/23 12:34:13.956
• [6.164 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/02/23 12:34:13.967
  Sep  2 12:34:13.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/02/23 12:34:13.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:13.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:13.989
  Sep  2 12:34:16.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/02/23 12:34:16.033
  STEP: Cleaning up the configmap @ 09/02/23 12:34:16.04
  STEP: Cleaning up the pod @ 09/02/23 12:34:16.046
  STEP: Destroying namespace "emptydir-wrapper-8141" for this suite. @ 09/02/23 12:34:16.057
• [2.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/02/23 12:34:16.066
  Sep  2 12:34:16.066: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 12:34:16.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:16.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:16.087
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/02/23 12:34:16.091
  STEP: Saw pod success @ 09/02/23 12:34:20.115
  Sep  2 12:34:20.119: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-858273db-ef30-4419-9a09-73fb4be5c65f container test-container: <nil>
  STEP: delete the pod @ 09/02/23 12:34:20.139
  Sep  2 12:34:20.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-414" for this suite. @ 09/02/23 12:34:20.159
• [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/02/23 12:34:20.167
  Sep  2 12:34:20.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 12:34:20.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:20.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:20.19
  STEP: Creating a pod to test substitution in container's args @ 09/02/23 12:34:20.198
  STEP: Saw pod success @ 09/02/23 12:34:24.224
  Sep  2 12:34:24.228: INFO: Trying to get logs from node ip-172-31-7-35 pod var-expansion-5f38f493-4ab8-47be-9d2b-608e1a05071e container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 12:34:24.236
  Sep  2 12:34:24.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5117" for this suite. @ 09/02/23 12:34:24.26
• [4.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/02/23 12:34:24.268
  Sep  2 12:34:24.268: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 12:34:24.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:24.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:24.293
  STEP: Creating secret with name secret-test-347a2894-44cd-4794-9458-c213492ef935 @ 09/02/23 12:34:24.298
  STEP: Creating a pod to test consume secrets @ 09/02/23 12:34:24.305
  STEP: Saw pod success @ 09/02/23 12:34:28.329
  Sep  2 12:34:28.333: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-secrets-a7f50272-9454-4475-8714-34bd16db8832 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 12:34:28.341
  Sep  2 12:34:28.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1832" for this suite. @ 09/02/23 12:34:28.363
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/02/23 12:34:28.371
  Sep  2 12:34:28.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename podtemplate @ 09/02/23 12:34:28.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:28.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:28.392
  STEP: Create a pod template @ 09/02/23 12:34:28.4
  STEP: Replace a pod template @ 09/02/23 12:34:28.407
  Sep  2 12:34:28.417: INFO: Found updated podtemplate annotation: "true"

  Sep  2 12:34:28.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7330" for this suite. @ 09/02/23 12:34:28.421
• [0.057 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/02/23 12:34:28.428
  Sep  2 12:34:28.428: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 12:34:28.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:28.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:28.449
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/02/23 12:34:28.453
  Sep  2 12:34:28.454: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 12:34:29.877: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 12:34:35.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1276" for this suite. @ 09/02/23 12:34:35.211
• [6.790 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/02/23 12:34:35.219
  Sep  2 12:34:35.219: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/23 12:34:35.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:35.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:35.241
  Sep  2 12:34:35.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-895" for this suite. @ 09/02/23 12:34:35.276
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/02/23 12:34:35.286
  Sep  2 12:34:35.286: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 12:34:35.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:35.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:35.304
  STEP: creating a collection of services @ 09/02/23 12:34:35.307
  Sep  2 12:34:35.307: INFO: Creating e2e-svc-a-vrhjw
  Sep  2 12:34:35.315: INFO: Creating e2e-svc-b-tl9lz
  Sep  2 12:34:35.327: INFO: Creating e2e-svc-c-r7z7v
  STEP: deleting service collection @ 09/02/23 12:34:35.34
  Sep  2 12:34:35.371: INFO: Collection of services has been deleted
  Sep  2 12:34:35.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9046" for this suite. @ 09/02/23 12:34:35.376
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/02/23 12:34:35.384
  Sep  2 12:34:35.384: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:34:35.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:35.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:35.405
  STEP: Creating projection with secret that has name projected-secret-test-a004ab17-00e8-4b36-8d1c-b4083e5d876a @ 09/02/23 12:34:35.408
  STEP: Creating a pod to test consume secrets @ 09/02/23 12:34:35.413
  STEP: Saw pod success @ 09/02/23 12:34:39.437
  Sep  2 12:34:39.441: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-secrets-f9cd5d57-17bb-4bd5-8185-44696a97ccca container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 12:34:39.456
  Sep  2 12:34:39.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5894" for this suite. @ 09/02/23 12:34:39.477
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/02/23 12:34:39.486
  Sep  2 12:34:39.486: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 12:34:39.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:39.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:39.505
  STEP: Creating secret with name secret-test-e1addfff-b215-497a-a1cb-8c0b2c402719 @ 09/02/23 12:34:39.529
  STEP: Creating a pod to test consume secrets @ 09/02/23 12:34:39.533
  STEP: Saw pod success @ 09/02/23 12:34:43.556
  Sep  2 12:34:43.565: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-secrets-e3b5def9-ca74-42bd-9020-57455dab7969 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 12:34:43.573
  Sep  2 12:34:43.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5366" for this suite. @ 09/02/23 12:34:43.607
  STEP: Destroying namespace "secret-namespace-7560" for this suite. @ 09/02/23 12:34:43.62
• [4.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/02/23 12:34:43.629
  Sep  2 12:34:43.629: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:34:43.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:43.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:43.65
  STEP: Setting up server cert @ 09/02/23 12:34:43.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:34:44.19
  STEP: Deploying the webhook pod @ 09/02/23 12:34:44.199
  STEP: Wait for the deployment to be ready @ 09/02/23 12:34:44.21
  Sep  2 12:34:44.216: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/02/23 12:34:46.227
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:34:46.246
  Sep  2 12:34:47.246: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/02/23 12:34:47.253
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/02/23 12:34:47.254
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/02/23 12:34:47.254
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/02/23 12:34:47.254
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/02/23 12:34:47.256
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/02/23 12:34:47.256
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/02/23 12:34:47.257
  Sep  2 12:34:47.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3250" for this suite. @ 09/02/23 12:34:47.302
  STEP: Destroying namespace "webhook-markers-9381" for this suite. @ 09/02/23 12:34:47.31
• [3.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/02/23 12:34:47.321
  Sep  2 12:34:47.321: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename limitrange @ 09/02/23 12:34:47.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:47.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:47.34
  STEP: Creating LimitRange "e2e-limitrange-kfrb5" in namespace "limitrange-5849" @ 09/02/23 12:34:47.343
  STEP: Creating another limitRange in another namespace @ 09/02/23 12:34:47.348
  Sep  2 12:34:47.364: INFO: Namespace "e2e-limitrange-kfrb5-4023" created
  Sep  2 12:34:47.364: INFO: Creating LimitRange "e2e-limitrange-kfrb5" in namespace "e2e-limitrange-kfrb5-4023"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-kfrb5" @ 09/02/23 12:34:47.371
  Sep  2 12:34:47.374: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-kfrb5" in "limitrange-5849" namespace @ 09/02/23 12:34:47.374
  Sep  2 12:34:47.380: INFO: LimitRange "e2e-limitrange-kfrb5" has been patched
  STEP: Delete LimitRange "e2e-limitrange-kfrb5" by Collection with labelSelector: "e2e-limitrange-kfrb5=patched" @ 09/02/23 12:34:47.38
  STEP: Confirm that the limitRange "e2e-limitrange-kfrb5" has been deleted @ 09/02/23 12:34:47.388
  Sep  2 12:34:47.388: INFO: Requesting list of LimitRange to confirm quantity
  Sep  2 12:34:47.391: INFO: Found 0 LimitRange with label "e2e-limitrange-kfrb5=patched"
  Sep  2 12:34:47.391: INFO: LimitRange "e2e-limitrange-kfrb5" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-kfrb5" @ 09/02/23 12:34:47.391
  Sep  2 12:34:47.396: INFO: Found 1 limitRange
  Sep  2 12:34:47.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5849" for this suite. @ 09/02/23 12:34:47.4
  STEP: Destroying namespace "e2e-limitrange-kfrb5-4023" for this suite. @ 09/02/23 12:34:47.406
• [0.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/02/23 12:34:47.413
  Sep  2 12:34:47.413: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 12:34:47.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:47.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:47.433
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 12:34:47.436
  STEP: Saw pod success @ 09/02/23 12:34:51.461
  Sep  2 12:34:51.466: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-1405da13-3be4-4b53-bf99-5f6a61164987 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 12:34:51.472
  Sep  2 12:34:51.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7180" for this suite. @ 09/02/23 12:34:51.499
• [4.093 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/02/23 12:34:51.507
  Sep  2 12:34:51.507: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 12:34:51.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:34:51.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:34:51.528
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4071 @ 09/02/23 12:34:51.532
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/02/23 12:34:51.54
  STEP: creating service externalsvc in namespace services-4071 @ 09/02/23 12:34:51.54
  STEP: creating replication controller externalsvc in namespace services-4071 @ 09/02/23 12:34:51.561
  I0902 12:34:51.571753      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4071, replica count: 2
  I0902 12:34:54.623687      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/02/23 12:34:54.628
  Sep  2 12:34:54.641: INFO: Creating new exec pod
  Sep  2 12:34:56.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-4071 exec execpodfbk8w -- /bin/sh -x -c nslookup clusterip-service.services-4071.svc.cluster.local'
  Sep  2 12:34:56.827: INFO: stderr: "+ nslookup clusterip-service.services-4071.svc.cluster.local\n"
  Sep  2 12:34:56.827: INFO: stdout: "Server:\t\t10.152.183.152\nAddress:\t10.152.183.152#53\n\nclusterip-service.services-4071.svc.cluster.local\tcanonical name = externalsvc.services-4071.svc.cluster.local.\nName:\texternalsvc.services-4071.svc.cluster.local\nAddress: 10.152.183.123\n\n"
  Sep  2 12:34:56.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-4071, will wait for the garbage collector to delete the pods @ 09/02/23 12:34:56.832
  Sep  2 12:34:56.892: INFO: Deleting ReplicationController externalsvc took: 6.142576ms
  Sep  2 12:34:56.992: INFO: Terminating ReplicationController externalsvc pods took: 100.137106ms
  Sep  2 12:35:00.211: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-4071" for this suite. @ 09/02/23 12:35:00.226
• [8.728 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/02/23 12:35:00.236
  Sep  2 12:35:00.236: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename cronjob @ 09/02/23 12:35:00.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:35:00.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:35:00.258
  STEP: Creating a ReplaceConcurrent cronjob @ 09/02/23 12:35:00.263
  STEP: Ensuring a job is scheduled @ 09/02/23 12:35:00.271
  STEP: Ensuring exactly one is scheduled @ 09/02/23 12:36:00.275
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/02/23 12:36:00.279
  STEP: Ensuring the job is replaced with a new one @ 09/02/23 12:36:00.282
  STEP: Removing cronjob @ 09/02/23 12:37:00.286
  Sep  2 12:37:00.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7519" for this suite. @ 09/02/23 12:37:00.298
• [120.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/02/23 12:37:00.308
  Sep  2 12:37:00.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 12:37:00.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:37:00.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:37:00.331
  STEP: Creating a test headless service @ 09/02/23 12:37:00.335
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2414 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2414;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2414 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2414;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2414.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2414.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2414.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2414.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2414.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2414.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2414.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2414.svc;check="$$(dig +notcp +noall +answer +search 243.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.243_udp@PTR;check="$$(dig +tcp +noall +answer +search 243.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.243_tcp@PTR;sleep 1; done
   @ 09/02/23 12:37:00.357
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2414 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2414;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2414 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2414;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2414.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2414.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2414.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2414.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2414.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2414.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2414.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2414.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2414.svc;check="$$(dig +notcp +noall +answer +search 243.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.243_udp@PTR;check="$$(dig +tcp +noall +answer +search 243.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.243_tcp@PTR;sleep 1; done
   @ 09/02/23 12:37:00.357
  STEP: creating a pod to probe DNS @ 09/02/23 12:37:00.358
  STEP: submitting the pod to kubernetes @ 09/02/23 12:37:00.358
  STEP: retrieving the pod @ 09/02/23 12:37:08.395
  STEP: looking for the results for each expected name from probers @ 09/02/23 12:37:08.399
  Sep  2 12:37:08.403: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.408: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.412: INFO: Unable to read wheezy_udp@dns-test-service.dns-2414 from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.415: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2414 from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.420: INFO: Unable to read wheezy_udp@dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.424: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.427: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.431: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.450: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.454: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.458: INFO: Unable to read jessie_udp@dns-test-service.dns-2414 from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.461: INFO: Unable to read jessie_tcp@dns-test-service.dns-2414 from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.466: INFO: Unable to read jessie_udp@dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.469: INFO: Unable to read jessie_tcp@dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.473: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.477: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2414.svc from pod dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb: the server could not find the requested resource (get pods dns-test-4dae8044-00e7-4402-8558-8503470033bb)
  Sep  2 12:37:08.492: INFO: Lookups using dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2414 wheezy_tcp@dns-test-service.dns-2414 wheezy_udp@dns-test-service.dns-2414.svc wheezy_tcp@dns-test-service.dns-2414.svc wheezy_udp@_http._tcp.dns-test-service.dns-2414.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2414.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2414 jessie_tcp@dns-test-service.dns-2414 jessie_udp@dns-test-service.dns-2414.svc jessie_tcp@dns-test-service.dns-2414.svc jessie_udp@_http._tcp.dns-test-service.dns-2414.svc jessie_tcp@_http._tcp.dns-test-service.dns-2414.svc]

  Sep  2 12:37:08.509: INFO: Pod client logs for webserver: 
  Sep  2 12:37:08.516: INFO: Pod client logs for querier: 
  Sep  2 12:37:08.522: INFO: Pod client logs for jessie-querier: 
  Sep  2 12:37:13.625: INFO: DNS probes using dns-2414/dns-test-4dae8044-00e7-4402-8558-8503470033bb succeeded

  Sep  2 12:37:13.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:37:13.629
  STEP: deleting the test service @ 09/02/23 12:37:13.646
  STEP: deleting the test headless service @ 09/02/23 12:37:13.679
  STEP: Destroying namespace "dns-2414" for this suite. @ 09/02/23 12:37:13.696
• [13.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/02/23 12:37:13.705
  Sep  2 12:37:13.705: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename cronjob @ 09/02/23 12:37:13.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:37:13.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:37:13.725
  STEP: Creating a suspended cronjob @ 09/02/23 12:37:13.729
  STEP: Ensuring no jobs are scheduled @ 09/02/23 12:37:13.733
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/02/23 12:42:13.743
  STEP: Removing cronjob @ 09/02/23 12:42:13.746
  Sep  2 12:42:13.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3936" for this suite. @ 09/02/23 12:42:13.757
• [300.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/02/23 12:42:13.766
  Sep  2 12:42:13.766: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:42:13.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:42:13.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:42:13.794
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-8b04c02d-0543-462a-a60c-547b09efed78 @ 09/02/23 12:42:13.803
  STEP: Creating the pod @ 09/02/23 12:42:13.81
  STEP: Updating configmap projected-configmap-test-upd-8b04c02d-0543-462a-a60c-547b09efed78 @ 09/02/23 12:42:15.855
  STEP: waiting to observe update in volume @ 09/02/23 12:42:15.86
  Sep  2 12:43:24.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5633" for this suite. @ 09/02/23 12:43:24.161
• [70.402 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/02/23 12:43:24.168
  Sep  2 12:43:24.168: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 12:43:24.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:43:24.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:43:24.186
  Sep  2 12:43:24.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2131" for this suite. @ 09/02/23 12:43:24.195
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/02/23 12:43:24.205
  Sep  2 12:43:24.205: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:43:24.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:43:24.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:43:24.227
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 12:43:24.23
  STEP: Saw pod success @ 09/02/23 12:43:28.258
  Sep  2 12:43:28.262: INFO: Trying to get logs from node ip-172-31-35-65 pod downwardapi-volume-84941ee8-7454-4ed9-904b-cc7f325ffc4b container client-container: <nil>
  STEP: delete the pod @ 09/02/23 12:43:28.28
  Sep  2 12:43:28.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8020" for this suite. @ 09/02/23 12:43:28.3
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/02/23 12:43:28.308
  Sep  2 12:43:28.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 12:43:28.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:43:28.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:43:28.338
  STEP: Creating configMap with name configmap-test-upd-38133477-2781-4777-98a5-72ca2ec5620d @ 09/02/23 12:43:28.346
  STEP: Creating the pod @ 09/02/23 12:43:28.35
  STEP: Updating configmap configmap-test-upd-38133477-2781-4777-98a5-72ca2ec5620d @ 09/02/23 12:43:30.377
  STEP: waiting to observe update in volume @ 09/02/23 12:43:30.382
  Sep  2 12:43:34.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3881" for this suite. @ 09/02/23 12:43:34.409
• [6.108 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/02/23 12:43:34.417
  Sep  2 12:43:34.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename subpath @ 09/02/23 12:43:34.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:43:34.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:43:34.44
  STEP: Setting up data @ 09/02/23 12:43:34.443
  STEP: Creating pod pod-subpath-test-downwardapi-jhxz @ 09/02/23 12:43:34.452
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/23 12:43:34.452
  STEP: Saw pod success @ 09/02/23 12:43:58.519
  Sep  2 12:43:58.524: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-subpath-test-downwardapi-jhxz container test-container-subpath-downwardapi-jhxz: <nil>
  STEP: delete the pod @ 09/02/23 12:43:58.531
  STEP: Deleting pod pod-subpath-test-downwardapi-jhxz @ 09/02/23 12:43:58.544
  Sep  2 12:43:58.544: INFO: Deleting pod "pod-subpath-test-downwardapi-jhxz" in namespace "subpath-7994"
  Sep  2 12:43:58.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7994" for this suite. @ 09/02/23 12:43:58.552
• [24.141 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/02/23 12:43:58.559
  Sep  2 12:43:58.559: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename disruption @ 09/02/23 12:43:58.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:43:58.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:43:58.578
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/02/23 12:43:58.585
  STEP: Waiting for the pdb to be processed @ 09/02/23 12:43:58.591
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/02/23 12:44:00.604
  STEP: Waiting for all pods to be running @ 09/02/23 12:44:00.604
  Sep  2 12:44:00.608: INFO: pods: 0 < 3
  Sep  2 12:44:02.613: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 09/02/23 12:44:04.614
  STEP: Updating the pdb to allow a pod to be evicted @ 09/02/23 12:44:04.624
  STEP: Waiting for the pdb to be processed @ 09/02/23 12:44:04.632
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/02/23 12:44:06.64
  STEP: Waiting for all pods to be running @ 09/02/23 12:44:06.64
  STEP: Waiting for the pdb to observed all healthy pods @ 09/02/23 12:44:06.643
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/02/23 12:44:06.671
  STEP: Waiting for the pdb to be processed @ 09/02/23 12:44:06.698
  STEP: Waiting for all pods to be running @ 09/02/23 12:44:08.713
  STEP: locating a running pod @ 09/02/23 12:44:08.716
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/02/23 12:44:08.726
  STEP: Waiting for the pdb to be deleted @ 09/02/23 12:44:08.732
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/02/23 12:44:08.735
  STEP: Waiting for all pods to be running @ 09/02/23 12:44:08.735
  Sep  2 12:44:08.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9342" for this suite. @ 09/02/23 12:44:08.757
• [10.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/02/23 12:44:08.772
  Sep  2 12:44:08.772: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename disruption @ 09/02/23 12:44:08.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:44:08.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:44:08.794
  STEP: Waiting for the pdb to be processed @ 09/02/23 12:44:08.809
  STEP: Updating PodDisruptionBudget status @ 09/02/23 12:44:10.817
  STEP: Waiting for all pods to be running @ 09/02/23 12:44:10.824
  Sep  2 12:44:10.829: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 09/02/23 12:44:12.833
  STEP: Waiting for the pdb to be processed @ 09/02/23 12:44:12.848
  STEP: Patching PodDisruptionBudget status @ 09/02/23 12:44:12.855
  STEP: Waiting for the pdb to be processed @ 09/02/23 12:44:12.865
  Sep  2 12:44:12.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3249" for this suite. @ 09/02/23 12:44:12.875
• [4.109 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/02/23 12:44:12.882
  Sep  2 12:44:12.882: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 12:44:12.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:44:12.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:44:12.902
  STEP: creating a replication controller @ 09/02/23 12:44:12.906
  Sep  2 12:44:12.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 create -f -'
  Sep  2 12:44:13.092: INFO: stderr: ""
  Sep  2 12:44:13.092: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/23 12:44:13.092
  Sep  2 12:44:13.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 12:44:13.160: INFO: stderr: ""
  Sep  2 12:44:13.160: INFO: stdout: "update-demo-nautilus-h8ttg update-demo-nautilus-zhcpw "
  Sep  2 12:44:13.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 12:44:13.223: INFO: stderr: ""
  Sep  2 12:44:13.223: INFO: stdout: ""
  Sep  2 12:44:13.223: INFO: update-demo-nautilus-h8ttg is created but not running
  Sep  2 12:44:18.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 12:44:18.290: INFO: stderr: ""
  Sep  2 12:44:18.290: INFO: stdout: "update-demo-nautilus-h8ttg update-demo-nautilus-zhcpw "
  Sep  2 12:44:18.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 12:44:18.355: INFO: stderr: ""
  Sep  2 12:44:18.355: INFO: stdout: "true"
  Sep  2 12:44:18.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 12:44:18.416: INFO: stderr: ""
  Sep  2 12:44:18.416: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 12:44:18.416: INFO: validating pod update-demo-nautilus-h8ttg
  Sep  2 12:44:18.422: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 12:44:18.422: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 12:44:18.422: INFO: update-demo-nautilus-h8ttg is verified up and running
  Sep  2 12:44:18.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-zhcpw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 12:44:18.484: INFO: stderr: ""
  Sep  2 12:44:18.484: INFO: stdout: "true"
  Sep  2 12:44:18.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-zhcpw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 12:44:18.544: INFO: stderr: ""
  Sep  2 12:44:18.544: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 12:44:18.544: INFO: validating pod update-demo-nautilus-zhcpw
  Sep  2 12:44:18.549: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 12:44:18.549: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 12:44:18.549: INFO: update-demo-nautilus-zhcpw is verified up and running
  STEP: scaling down the replication controller @ 09/02/23 12:44:18.549
  Sep  2 12:44:18.550: INFO: scanned /root for discovery docs: <nil>
  Sep  2 12:44:18.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Sep  2 12:44:19.632: INFO: stderr: ""
  Sep  2 12:44:19.632: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/23 12:44:19.632
  Sep  2 12:44:19.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 12:44:19.697: INFO: stderr: ""
  Sep  2 12:44:19.697: INFO: stdout: "update-demo-nautilus-h8ttg update-demo-nautilus-zhcpw "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/02/23 12:44:19.697
  Sep  2 12:44:24.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 12:44:24.760: INFO: stderr: ""
  Sep  2 12:44:24.760: INFO: stdout: "update-demo-nautilus-h8ttg "
  Sep  2 12:44:24.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 12:44:24.820: INFO: stderr: ""
  Sep  2 12:44:24.820: INFO: stdout: "true"
  Sep  2 12:44:24.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 12:44:24.879: INFO: stderr: ""
  Sep  2 12:44:24.879: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 12:44:24.879: INFO: validating pod update-demo-nautilus-h8ttg
  Sep  2 12:44:24.884: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 12:44:24.884: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 12:44:24.884: INFO: update-demo-nautilus-h8ttg is verified up and running
  STEP: scaling up the replication controller @ 09/02/23 12:44:24.884
  Sep  2 12:44:24.885: INFO: scanned /root for discovery docs: <nil>
  Sep  2 12:44:24.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Sep  2 12:44:25.967: INFO: stderr: ""
  Sep  2 12:44:25.967: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/23 12:44:25.967
  Sep  2 12:44:25.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 12:44:26.031: INFO: stderr: ""
  Sep  2 12:44:26.032: INFO: stdout: "update-demo-nautilus-h46cv update-demo-nautilus-h8ttg "
  Sep  2 12:44:26.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h46cv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 12:44:26.093: INFO: stderr: ""
  Sep  2 12:44:26.093: INFO: stdout: "true"
  Sep  2 12:44:26.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h46cv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 12:44:26.155: INFO: stderr: ""
  Sep  2 12:44:26.155: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 12:44:26.155: INFO: validating pod update-demo-nautilus-h46cv
  Sep  2 12:44:26.161: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 12:44:26.161: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 12:44:26.161: INFO: update-demo-nautilus-h46cv is verified up and running
  Sep  2 12:44:26.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 12:44:26.222: INFO: stderr: ""
  Sep  2 12:44:26.222: INFO: stdout: "true"
  Sep  2 12:44:26.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods update-demo-nautilus-h8ttg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 12:44:26.283: INFO: stderr: ""
  Sep  2 12:44:26.283: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 12:44:26.283: INFO: validating pod update-demo-nautilus-h8ttg
  Sep  2 12:44:26.287: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 12:44:26.287: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 12:44:26.287: INFO: update-demo-nautilus-h8ttg is verified up and running
  STEP: using delete to clean up resources @ 09/02/23 12:44:26.287
  Sep  2 12:44:26.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 delete --grace-period=0 --force -f -'
  Sep  2 12:44:26.352: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 12:44:26.352: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep  2 12:44:26.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get rc,svc -l name=update-demo --no-headers'
  Sep  2 12:44:26.440: INFO: stderr: "No resources found in kubectl-3870 namespace.\n"
  Sep  2 12:44:26.440: INFO: stdout: ""
  Sep  2 12:44:26.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3870 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep  2 12:44:26.508: INFO: stderr: ""
  Sep  2 12:44:26.508: INFO: stdout: ""
  Sep  2 12:44:26.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3870" for this suite. @ 09/02/23 12:44:26.512
• [13.638 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/02/23 12:44:26.521
  Sep  2 12:44:26.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename endpointslice @ 09/02/23 12:44:26.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:44:26.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:44:26.541
  STEP: getting /apis @ 09/02/23 12:44:26.544
  STEP: getting /apis/discovery.k8s.io @ 09/02/23 12:44:26.548
  STEP: getting /apis/discovery.k8s.iov1 @ 09/02/23 12:44:26.549
  STEP: creating @ 09/02/23 12:44:26.551
  STEP: getting @ 09/02/23 12:44:26.565
  STEP: listing @ 09/02/23 12:44:26.568
  STEP: watching @ 09/02/23 12:44:26.571
  Sep  2 12:44:26.571: INFO: starting watch
  STEP: cluster-wide listing @ 09/02/23 12:44:26.573
  STEP: cluster-wide watching @ 09/02/23 12:44:26.576
  Sep  2 12:44:26.576: INFO: starting watch
  STEP: patching @ 09/02/23 12:44:26.577
  STEP: updating @ 09/02/23 12:44:26.583
  Sep  2 12:44:26.593: INFO: waiting for watch events with expected annotations
  Sep  2 12:44:26.593: INFO: saw patched and updated annotations
  STEP: deleting @ 09/02/23 12:44:26.593
  STEP: deleting a collection @ 09/02/23 12:44:26.605
  Sep  2 12:44:26.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2998" for this suite. @ 09/02/23 12:44:26.623
• [0.109 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/02/23 12:44:26.63
  Sep  2 12:44:26.630: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 12:44:26.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:44:26.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:44:26.651
  STEP: Creating service test in namespace statefulset-781 @ 09/02/23 12:44:26.655
  STEP: Creating a new StatefulSet @ 09/02/23 12:44:26.66
  Sep  2 12:44:26.684: INFO: Found 0 stateful pods, waiting for 3
  Sep  2 12:44:36.693: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:44:36.693: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:44:36.693: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/02/23 12:44:36.704
  Sep  2 12:44:36.724: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/02/23 12:44:36.724
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/02/23 12:44:46.74
  STEP: Performing a canary update @ 09/02/23 12:44:46.741
  Sep  2 12:44:46.761: INFO: Updating stateful set ss2
  Sep  2 12:44:46.767: INFO: Waiting for Pod statefulset-781/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/02/23 12:44:56.776
  Sep  2 12:44:56.832: INFO: Found 2 stateful pods, waiting for 3
  Sep  2 12:45:06.838: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:45:06.838: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 12:45:06.838: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/02/23 12:45:06.844
  Sep  2 12:45:06.864: INFO: Updating stateful set ss2
  Sep  2 12:45:06.870: INFO: Waiting for Pod statefulset-781/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep  2 12:45:16.902: INFO: Updating stateful set ss2
  Sep  2 12:45:16.914: INFO: Waiting for StatefulSet statefulset-781/ss2 to complete update
  Sep  2 12:45:16.914: INFO: Waiting for Pod statefulset-781/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep  2 12:45:26.926: INFO: Deleting all statefulset in ns statefulset-781
  Sep  2 12:45:26.929: INFO: Scaling statefulset ss2 to 0
  Sep  2 12:45:36.948: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 12:45:36.951: INFO: Deleting statefulset ss2
  Sep  2 12:45:36.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-781" for this suite. @ 09/02/23 12:45:36.972
• [70.348 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/02/23 12:45:36.979
  Sep  2 12:45:36.979: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename podtemplate @ 09/02/23 12:45:36.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:45:36.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:45:37.001
  STEP: Create set of pod templates @ 09/02/23 12:45:37.004
  Sep  2 12:45:37.010: INFO: created test-podtemplate-1
  Sep  2 12:45:37.015: INFO: created test-podtemplate-2
  Sep  2 12:45:37.020: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/02/23 12:45:37.02
  STEP: delete collection of pod templates @ 09/02/23 12:45:37.023
  Sep  2 12:45:37.023: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/02/23 12:45:37.042
  Sep  2 12:45:37.042: INFO: requesting list of pod templates to confirm quantity
  Sep  2 12:45:37.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9353" for this suite. @ 09/02/23 12:45:37.049
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/02/23 12:45:37.058
  Sep  2 12:45:37.058: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:45:37.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:45:37.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:45:37.078
  STEP: Setting up server cert @ 09/02/23 12:45:37.1
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:45:37.705
  STEP: Deploying the webhook pod @ 09/02/23 12:45:37.714
  STEP: Wait for the deployment to be ready @ 09/02/23 12:45:37.726
  Sep  2 12:45:37.735: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/02/23 12:45:39.748
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:45:39.757
  Sep  2 12:45:40.757: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  2 12:45:40.764: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9885-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/23 12:45:41.277
  STEP: Creating a custom resource while v1 is storage version @ 09/02/23 12:45:41.293
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/02/23 12:45:43.34
  STEP: Patching the custom resource while v2 is storage version @ 09/02/23 12:45:43.447
  Sep  2 12:45:43.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-204" for this suite. @ 09/02/23 12:45:44.159
  STEP: Destroying namespace "webhook-markers-6696" for this suite. @ 09/02/23 12:45:44.167
• [7.116 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/02/23 12:45:44.174
  Sep  2 12:45:44.174: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename subpath @ 09/02/23 12:45:44.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:45:44.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:45:44.192
  STEP: Setting up data @ 09/02/23 12:45:44.196
  STEP: Creating pod pod-subpath-test-configmap-z9bq @ 09/02/23 12:45:44.205
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/23 12:45:44.205
  STEP: Saw pod success @ 09/02/23 12:46:08.282
  Sep  2 12:46:08.285: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-subpath-test-configmap-z9bq container test-container-subpath-configmap-z9bq: <nil>
  STEP: delete the pod @ 09/02/23 12:46:08.301
  STEP: Deleting pod pod-subpath-test-configmap-z9bq @ 09/02/23 12:46:08.322
  Sep  2 12:46:08.322: INFO: Deleting pod "pod-subpath-test-configmap-z9bq" in namespace "subpath-9474"
  Sep  2 12:46:08.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9474" for this suite. @ 09/02/23 12:46:08.33
• [24.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/02/23 12:46:08.34
  Sep  2 12:46:08.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 12:46:08.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:46:08.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:46:08.36
  STEP: Creating a test headless service @ 09/02/23 12:46:08.363
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7806.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7806.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7806.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7806.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 146.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.146_udp@PTR;check="$$(dig +tcp +noall +answer +search 146.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.146_tcp@PTR;sleep 1; done
   @ 09/02/23 12:46:08.379
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7806.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7806.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7806.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7806.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7806.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 146.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.146_udp@PTR;check="$$(dig +tcp +noall +answer +search 146.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.146_tcp@PTR;sleep 1; done
   @ 09/02/23 12:46:08.379
  STEP: creating a pod to probe DNS @ 09/02/23 12:46:08.379
  STEP: submitting the pod to kubernetes @ 09/02/23 12:46:08.379
  STEP: retrieving the pod @ 09/02/23 12:46:10.406
  STEP: looking for the results for each expected name from probers @ 09/02/23 12:46:10.41
  Sep  2 12:46:10.415: INFO: Unable to read wheezy_udp@dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.418: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.423: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.426: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.445: INFO: Unable to read jessie_udp@dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.450: INFO: Unable to read jessie_tcp@dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.453: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.458: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local from pod dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc: the server could not find the requested resource (get pods dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc)
  Sep  2 12:46:10.476: INFO: Lookups using dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc failed for: [wheezy_udp@dns-test-service.dns-7806.svc.cluster.local wheezy_tcp@dns-test-service.dns-7806.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local jessie_udp@dns-test-service.dns-7806.svc.cluster.local jessie_tcp@dns-test-service.dns-7806.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7806.svc.cluster.local]

  Sep  2 12:46:10.483: INFO: Pod client logs for webserver: 
  Sep  2 12:46:10.490: INFO: Pod client logs for querier: 
  Sep  2 12:46:10.497: INFO: Pod client logs for jessie-querier: 
  Sep  2 12:46:15.559: INFO: DNS probes using dns-7806/dns-test-117e8077-8ab5-4606-a6d6-44904c2592dc succeeded

  Sep  2 12:46:15.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:46:15.563
  STEP: deleting the test service @ 09/02/23 12:46:15.582
  STEP: deleting the test headless service @ 09/02/23 12:46:15.61
  STEP: Destroying namespace "dns-7806" for this suite. @ 09/02/23 12:46:15.624
• [7.291 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/02/23 12:46:15.631
  Sep  2 12:46:15.631: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replication-controller @ 09/02/23 12:46:15.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:46:15.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:46:15.651
  Sep  2 12:46:15.655: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/02/23 12:46:16.667
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/02/23 12:46:16.674
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/02/23 12:46:17.682
  Sep  2 12:46:17.692: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/02/23 12:46:17.692
  Sep  2 12:46:18.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9460" for this suite. @ 09/02/23 12:46:18.706
• [3.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/02/23 12:46:18.715
  Sep  2 12:46:18.715: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename cronjob @ 09/02/23 12:46:18.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:46:18.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:46:18.736
  STEP: Creating a ForbidConcurrent cronjob @ 09/02/23 12:46:18.739
  STEP: Ensuring a job is scheduled @ 09/02/23 12:46:18.746
  STEP: Ensuring exactly one is scheduled @ 09/02/23 12:47:00.75
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/02/23 12:47:00.753
  STEP: Ensuring no more jobs are scheduled @ 09/02/23 12:47:00.757
  STEP: Removing cronjob @ 09/02/23 12:52:00.765
  Sep  2 12:52:00.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4340" for this suite. @ 09/02/23 12:52:00.777
• [342.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/02/23 12:52:00.788
  Sep  2 12:52:00.788: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:52:00.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:52:00.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:52:00.815
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 12:52:00.822
  STEP: Saw pod success @ 09/02/23 12:52:04.847
  Sep  2 12:52:04.851: INFO: Trying to get logs from node ip-172-31-35-65 pod downwardapi-volume-1efac087-1ddc-42ac-8cf9-e3788738c98d container client-container: <nil>
  STEP: delete the pod @ 09/02/23 12:52:04.869
  Sep  2 12:52:04.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6462" for this suite. @ 09/02/23 12:52:04.888
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/02/23 12:52:04.896
  Sep  2 12:52:04.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 12:52:04.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:52:04.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:52:04.913
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/02/23 12:52:04.917
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/02/23 12:52:04.917
  STEP: creating a pod to probe DNS @ 09/02/23 12:52:04.917
  STEP: submitting the pod to kubernetes @ 09/02/23 12:52:04.917
  STEP: retrieving the pod @ 09/02/23 12:52:06.936
  STEP: looking for the results for each expected name from probers @ 09/02/23 12:52:06.94
  Sep  2 12:52:06.956: INFO: DNS probes using dns-6239/dns-test-e0b177c6-2962-483d-822c-51329cf46173 succeeded

  Sep  2 12:52:06.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:52:06.961
  STEP: Destroying namespace "dns-6239" for this suite. @ 09/02/23 12:52:06.972
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/02/23 12:52:06.981
  Sep  2 12:52:06.981: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-runtime @ 09/02/23 12:52:06.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:52:06.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:52:07
  STEP: create the container @ 09/02/23 12:52:07.003
  W0902 12:52:07.009530      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/02/23 12:52:07.009
  STEP: get the container status @ 09/02/23 12:52:11.029
  STEP: the container should be terminated @ 09/02/23 12:52:11.033
  STEP: the termination message should be set @ 09/02/23 12:52:11.033
  Sep  2 12:52:11.033: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/02/23 12:52:11.033
  Sep  2 12:52:11.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2139" for this suite. @ 09/02/23 12:52:11.053
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/02/23 12:52:11.061
  Sep  2 12:52:11.061: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 12:52:11.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:52:11.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:52:11.081
  STEP: create the rc @ 09/02/23 12:52:11.089
  W0902 12:52:11.094170      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/02/23 12:52:17.098
  STEP: wait for the rc to be deleted @ 09/02/23 12:52:17.109
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/02/23 12:52:22.113
  STEP: Gathering metrics @ 09/02/23 12:52:52.125
  W0902 12:52:52.133575      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  2 12:52:52.133: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  2 12:52:52.133: INFO: Deleting pod "simpletest.rc-26llr" in namespace "gc-4543"
  Sep  2 12:52:52.146: INFO: Deleting pod "simpletest.rc-2bhlh" in namespace "gc-4543"
  Sep  2 12:52:52.164: INFO: Deleting pod "simpletest.rc-2bhwk" in namespace "gc-4543"
  Sep  2 12:52:52.178: INFO: Deleting pod "simpletest.rc-44qmb" in namespace "gc-4543"
  Sep  2 12:52:52.193: INFO: Deleting pod "simpletest.rc-4rg8k" in namespace "gc-4543"
  Sep  2 12:52:52.206: INFO: Deleting pod "simpletest.rc-4sxxc" in namespace "gc-4543"
  Sep  2 12:52:52.222: INFO: Deleting pod "simpletest.rc-55r5c" in namespace "gc-4543"
  Sep  2 12:52:52.234: INFO: Deleting pod "simpletest.rc-59dxx" in namespace "gc-4543"
  Sep  2 12:52:52.248: INFO: Deleting pod "simpletest.rc-5dt64" in namespace "gc-4543"
  Sep  2 12:52:52.263: INFO: Deleting pod "simpletest.rc-5fqcr" in namespace "gc-4543"
  Sep  2 12:52:52.276: INFO: Deleting pod "simpletest.rc-5srm8" in namespace "gc-4543"
  Sep  2 12:52:52.289: INFO: Deleting pod "simpletest.rc-5srv4" in namespace "gc-4543"
  Sep  2 12:52:52.301: INFO: Deleting pod "simpletest.rc-692fh" in namespace "gc-4543"
  Sep  2 12:52:52.314: INFO: Deleting pod "simpletest.rc-6h2gv" in namespace "gc-4543"
  Sep  2 12:52:52.325: INFO: Deleting pod "simpletest.rc-6kghc" in namespace "gc-4543"
  Sep  2 12:52:52.339: INFO: Deleting pod "simpletest.rc-6ndtq" in namespace "gc-4543"
  Sep  2 12:52:52.351: INFO: Deleting pod "simpletest.rc-7dt5j" in namespace "gc-4543"
  Sep  2 12:52:52.363: INFO: Deleting pod "simpletest.rc-7f7gc" in namespace "gc-4543"
  Sep  2 12:52:52.378: INFO: Deleting pod "simpletest.rc-7gg5x" in namespace "gc-4543"
  Sep  2 12:52:52.389: INFO: Deleting pod "simpletest.rc-7lzjg" in namespace "gc-4543"
  Sep  2 12:52:52.401: INFO: Deleting pod "simpletest.rc-7tdq2" in namespace "gc-4543"
  Sep  2 12:52:52.414: INFO: Deleting pod "simpletest.rc-8xzmd" in namespace "gc-4543"
  Sep  2 12:52:52.428: INFO: Deleting pod "simpletest.rc-8zkcb" in namespace "gc-4543"
  Sep  2 12:52:52.441: INFO: Deleting pod "simpletest.rc-8zwq5" in namespace "gc-4543"
  Sep  2 12:52:52.453: INFO: Deleting pod "simpletest.rc-9snkk" in namespace "gc-4543"
  Sep  2 12:52:52.466: INFO: Deleting pod "simpletest.rc-bdz4d" in namespace "gc-4543"
  Sep  2 12:52:52.478: INFO: Deleting pod "simpletest.rc-cgx5f" in namespace "gc-4543"
  Sep  2 12:52:52.493: INFO: Deleting pod "simpletest.rc-clcw6" in namespace "gc-4543"
  Sep  2 12:52:52.507: INFO: Deleting pod "simpletest.rc-d4k69" in namespace "gc-4543"
  Sep  2 12:52:52.523: INFO: Deleting pod "simpletest.rc-d66j4" in namespace "gc-4543"
  Sep  2 12:52:52.536: INFO: Deleting pod "simpletest.rc-dbv4l" in namespace "gc-4543"
  Sep  2 12:52:52.553: INFO: Deleting pod "simpletest.rc-dddvn" in namespace "gc-4543"
  Sep  2 12:52:52.566: INFO: Deleting pod "simpletest.rc-dmwj7" in namespace "gc-4543"
  Sep  2 12:52:52.577: INFO: Deleting pod "simpletest.rc-dp8fj" in namespace "gc-4543"
  Sep  2 12:52:52.589: INFO: Deleting pod "simpletest.rc-dqk42" in namespace "gc-4543"
  Sep  2 12:52:52.602: INFO: Deleting pod "simpletest.rc-dvxs9" in namespace "gc-4543"
  Sep  2 12:52:52.613: INFO: Deleting pod "simpletest.rc-f2nf5" in namespace "gc-4543"
  Sep  2 12:52:52.626: INFO: Deleting pod "simpletest.rc-fhlgp" in namespace "gc-4543"
  Sep  2 12:52:52.638: INFO: Deleting pod "simpletest.rc-gczr2" in namespace "gc-4543"
  Sep  2 12:52:52.652: INFO: Deleting pod "simpletest.rc-gptct" in namespace "gc-4543"
  Sep  2 12:52:52.668: INFO: Deleting pod "simpletest.rc-hbbqb" in namespace "gc-4543"
  Sep  2 12:52:52.681: INFO: Deleting pod "simpletest.rc-hnpqh" in namespace "gc-4543"
  Sep  2 12:52:52.693: INFO: Deleting pod "simpletest.rc-hqbgj" in namespace "gc-4543"
  Sep  2 12:52:52.720: INFO: Deleting pod "simpletest.rc-ht2j7" in namespace "gc-4543"
  Sep  2 12:52:52.732: INFO: Deleting pod "simpletest.rc-ht9nj" in namespace "gc-4543"
  Sep  2 12:52:52.743: INFO: Deleting pod "simpletest.rc-jk4mk" in namespace "gc-4543"
  Sep  2 12:52:52.758: INFO: Deleting pod "simpletest.rc-jzhd4" in namespace "gc-4543"
  Sep  2 12:52:52.772: INFO: Deleting pod "simpletest.rc-jzlbq" in namespace "gc-4543"
  Sep  2 12:52:52.786: INFO: Deleting pod "simpletest.rc-kdbxv" in namespace "gc-4543"
  Sep  2 12:52:52.802: INFO: Deleting pod "simpletest.rc-kkmkp" in namespace "gc-4543"
  Sep  2 12:52:52.813: INFO: Deleting pod "simpletest.rc-kw4vs" in namespace "gc-4543"
  Sep  2 12:52:52.830: INFO: Deleting pod "simpletest.rc-kx852" in namespace "gc-4543"
  Sep  2 12:52:52.841: INFO: Deleting pod "simpletest.rc-l472t" in namespace "gc-4543"
  Sep  2 12:52:52.851: INFO: Deleting pod "simpletest.rc-l9qsf" in namespace "gc-4543"
  Sep  2 12:52:52.869: INFO: Deleting pod "simpletest.rc-lsvjm" in namespace "gc-4543"
  Sep  2 12:52:52.888: INFO: Deleting pod "simpletest.rc-m7gsb" in namespace "gc-4543"
  Sep  2 12:52:52.904: INFO: Deleting pod "simpletest.rc-mbhfx" in namespace "gc-4543"
  Sep  2 12:52:52.920: INFO: Deleting pod "simpletest.rc-mfkcd" in namespace "gc-4543"
  Sep  2 12:52:52.936: INFO: Deleting pod "simpletest.rc-mh2x4" in namespace "gc-4543"
  Sep  2 12:52:52.949: INFO: Deleting pod "simpletest.rc-mhzll" in namespace "gc-4543"
  Sep  2 12:52:52.964: INFO: Deleting pod "simpletest.rc-mqs89" in namespace "gc-4543"
  Sep  2 12:52:52.978: INFO: Deleting pod "simpletest.rc-mtj56" in namespace "gc-4543"
  Sep  2 12:52:52.993: INFO: Deleting pod "simpletest.rc-mvxpq" in namespace "gc-4543"
  Sep  2 12:52:53.005: INFO: Deleting pod "simpletest.rc-n4pwv" in namespace "gc-4543"
  Sep  2 12:52:53.021: INFO: Deleting pod "simpletest.rc-n858r" in namespace "gc-4543"
  Sep  2 12:52:53.035: INFO: Deleting pod "simpletest.rc-nhd7s" in namespace "gc-4543"
  Sep  2 12:52:53.045: INFO: Deleting pod "simpletest.rc-nmn6h" in namespace "gc-4543"
  Sep  2 12:52:53.074: INFO: Deleting pod "simpletest.rc-p9tng" in namespace "gc-4543"
  Sep  2 12:52:53.152: INFO: Deleting pod "simpletest.rc-ph7k9" in namespace "gc-4543"
  Sep  2 12:52:53.204: INFO: Deleting pod "simpletest.rc-pk2xh" in namespace "gc-4543"
  Sep  2 12:52:53.234: INFO: Deleting pod "simpletest.rc-pr26l" in namespace "gc-4543"
  Sep  2 12:52:53.277: INFO: Deleting pod "simpletest.rc-pw7bj" in namespace "gc-4543"
  Sep  2 12:52:53.391: INFO: Deleting pod "simpletest.rc-r5qjm" in namespace "gc-4543"
  Sep  2 12:52:53.413: INFO: Deleting pod "simpletest.rc-r64sq" in namespace "gc-4543"
  Sep  2 12:52:53.432: INFO: Deleting pod "simpletest.rc-r7nk5" in namespace "gc-4543"
  Sep  2 12:52:53.494: INFO: Deleting pod "simpletest.rc-r7wh7" in namespace "gc-4543"
  Sep  2 12:52:53.534: INFO: Deleting pod "simpletest.rc-rldfw" in namespace "gc-4543"
  Sep  2 12:52:53.580: INFO: Deleting pod "simpletest.rc-rw5nr" in namespace "gc-4543"
  Sep  2 12:52:53.627: INFO: Deleting pod "simpletest.rc-s22cr" in namespace "gc-4543"
  Sep  2 12:52:53.686: INFO: Deleting pod "simpletest.rc-s2sr8" in namespace "gc-4543"
  Sep  2 12:52:53.734: INFO: Deleting pod "simpletest.rc-s578g" in namespace "gc-4543"
  Sep  2 12:52:53.796: INFO: Deleting pod "simpletest.rc-skgvn" in namespace "gc-4543"
  Sep  2 12:52:53.844: INFO: Deleting pod "simpletest.rc-ssngd" in namespace "gc-4543"
  Sep  2 12:52:53.886: INFO: Deleting pod "simpletest.rc-swr9w" in namespace "gc-4543"
  Sep  2 12:52:53.928: INFO: Deleting pod "simpletest.rc-trbkb" in namespace "gc-4543"
  Sep  2 12:52:53.983: INFO: Deleting pod "simpletest.rc-tvttp" in namespace "gc-4543"
  Sep  2 12:52:54.026: INFO: Deleting pod "simpletest.rc-v868z" in namespace "gc-4543"
  Sep  2 12:52:54.075: INFO: Deleting pod "simpletest.rc-vqvrh" in namespace "gc-4543"
  Sep  2 12:52:54.127: INFO: Deleting pod "simpletest.rc-vvvk6" in namespace "gc-4543"
  Sep  2 12:52:54.177: INFO: Deleting pod "simpletest.rc-w4xnb" in namespace "gc-4543"
  Sep  2 12:52:54.228: INFO: Deleting pod "simpletest.rc-wc5cw" in namespace "gc-4543"
  Sep  2 12:52:54.280: INFO: Deleting pod "simpletest.rc-wpjfm" in namespace "gc-4543"
  Sep  2 12:52:54.388: INFO: Deleting pod "simpletest.rc-ws65f" in namespace "gc-4543"
  Sep  2 12:52:54.422: INFO: Deleting pod "simpletest.rc-x8dqk" in namespace "gc-4543"
  Sep  2 12:52:54.436: INFO: Deleting pod "simpletest.rc-xdfw2" in namespace "gc-4543"
  Sep  2 12:52:54.479: INFO: Deleting pod "simpletest.rc-xjkh2" in namespace "gc-4543"
  Sep  2 12:52:54.532: INFO: Deleting pod "simpletest.rc-xp88f" in namespace "gc-4543"
  Sep  2 12:52:54.579: INFO: Deleting pod "simpletest.rc-xrb8f" in namespace "gc-4543"
  Sep  2 12:52:54.630: INFO: Deleting pod "simpletest.rc-zgcgk" in namespace "gc-4543"
  Sep  2 12:52:54.677: INFO: Deleting pod "simpletest.rc-zpch7" in namespace "gc-4543"
  Sep  2 12:52:54.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4543" for this suite. @ 09/02/23 12:52:54.769
• [43.761 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/02/23 12:52:54.823
  Sep  2 12:52:54.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 12:52:54.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:52:54.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:52:54.851
  STEP: Creating configMap with name configmap-test-volume-4151bef4-377a-433d-ad7e-67350c5162f0 @ 09/02/23 12:52:54.854
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:52:54.859
  STEP: Saw pod success @ 09/02/23 12:53:02.91
  Sep  2 12:53:02.913: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-configmaps-8a56114e-448f-4b6e-8c45-31844e383e83 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 12:53:02.936
  Sep  2 12:53:02.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9619" for this suite. @ 09/02/23 12:53:02.962
• [8.145 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/02/23 12:53:02.969
  Sep  2 12:53:02.969: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 12:53:02.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:53:02.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:53:02.993
  STEP: Creating a pod to test downward api env vars @ 09/02/23 12:53:03
  STEP: Saw pod success @ 09/02/23 12:53:07.022
  Sep  2 12:53:07.026: INFO: Trying to get logs from node ip-172-31-7-35 pod downward-api-f2934352-6a14-442f-899d-05b4265dab7f container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 12:53:07.033
  Sep  2 12:53:07.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6471" for this suite. @ 09/02/23 12:53:07.054
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/02/23 12:53:07.062
  Sep  2 12:53:07.062: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 12:53:07.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:53:07.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:53:07.083
  STEP: Counting existing ResourceQuota @ 09/02/23 12:53:07.087
  STEP: Creating a ResourceQuota @ 09/02/23 12:53:12.09
  STEP: Ensuring resource quota status is calculated @ 09/02/23 12:53:12.095
  Sep  2 12:53:14.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7220" for this suite. @ 09/02/23 12:53:14.104
• [7.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/02/23 12:53:14.116
  Sep  2 12:53:14.116: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-runtime @ 09/02/23 12:53:14.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:53:14.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:53:14.147
  STEP: create the container @ 09/02/23 12:53:14.151
  W0902 12:53:14.159880      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/02/23 12:53:14.16
  STEP: get the container status @ 09/02/23 12:53:17.179
  STEP: the container should be terminated @ 09/02/23 12:53:17.183
  STEP: the termination message should be set @ 09/02/23 12:53:17.183
  Sep  2 12:53:17.183: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/02/23 12:53:17.183
  Sep  2 12:53:17.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5051" for this suite. @ 09/02/23 12:53:17.203
• [3.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/02/23 12:53:17.211
  Sep  2 12:53:17.211: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 12:53:17.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:53:17.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:53:17.23
  STEP: create the deployment @ 09/02/23 12:53:17.233
  W0902 12:53:17.239610      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/02/23 12:53:17.239
  STEP: delete the deployment @ 09/02/23 12:53:17.754
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/02/23 12:53:17.764
  STEP: Gathering metrics @ 09/02/23 12:53:18.288
  W0902 12:53:18.294125      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  2 12:53:18.294: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  2 12:53:18.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4266" for this suite. @ 09/02/23 12:53:18.298
• [1.093 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/02/23 12:53:18.305
  Sep  2 12:53:18.305: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename subpath @ 09/02/23 12:53:18.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:53:18.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:53:18.326
  STEP: Setting up data @ 09/02/23 12:53:18.329
  STEP: Creating pod pod-subpath-test-projected-mv5n @ 09/02/23 12:53:18.339
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/23 12:53:18.339
  STEP: Saw pod success @ 09/02/23 12:53:42.412
  Sep  2 12:53:42.415: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-subpath-test-projected-mv5n container test-container-subpath-projected-mv5n: <nil>
  STEP: delete the pod @ 09/02/23 12:53:42.422
  STEP: Deleting pod pod-subpath-test-projected-mv5n @ 09/02/23 12:53:42.44
  Sep  2 12:53:42.440: INFO: Deleting pod "pod-subpath-test-projected-mv5n" in namespace "subpath-4774"
  Sep  2 12:53:42.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4774" for this suite. @ 09/02/23 12:53:42.448
• [24.149 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/02/23 12:53:42.454
  Sep  2 12:53:42.454: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 12:53:42.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:53:42.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:53:42.475
  STEP: Creating pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849 @ 09/02/23 12:53:42.479
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 12:53:44.5
  Sep  2 12:53:44.504: INFO: Initial restart count of pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 is 0
  Sep  2 12:53:44.508: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:46.514: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:48.519: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:50.523: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:52.529: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:54.534: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:56.539: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:53:58.544: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:00.548: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:02.552: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:04.557: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:04.557: INFO: Restart count of pod container-probe-4849/liveness-d434301f-654a-45a4-b238-fa03d21f6d13 is now 1 (20.05350168s elapsed)
  Sep  2 12:54:06.562: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:08.566: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:10.570: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:12.574: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:14.578: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:16.582: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:18.586: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:20.591: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:22.595: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:24.600: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:24.600: INFO: Restart count of pod container-probe-4849/liveness-d434301f-654a-45a4-b238-fa03d21f6d13 is now 2 (40.0964804s elapsed)
  Sep  2 12:54:26.604: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:28.609: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:30.613: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:32.618: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:34.624: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:36.629: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:38.633: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:40.637: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:42.641: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:44.647: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:44.647: INFO: Restart count of pod container-probe-4849/liveness-d434301f-654a-45a4-b238-fa03d21f6d13 is now 3 (1m0.14351315s elapsed)
  Sep  2 12:54:46.652: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:48.657: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:50.662: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:52.666: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:54.673: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:56.677: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:54:58.681: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:00.686: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:02.691: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:04.697: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:04.697: INFO: Restart count of pod container-probe-4849/liveness-d434301f-654a-45a4-b238-fa03d21f6d13 is now 4 (1m20.193505621s elapsed)
  Sep  2 12:55:06.702: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:08.706: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:10.710: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:12.714: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:14.719: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:16.724: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:18.727: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:20.732: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:22.737: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:24.741: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:26.746: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:28.751: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:30.756: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:32.761: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:34.766: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:36.771: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:38.776: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:40.782: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:42.786: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:44.792: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:46.798: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:48.803: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:50.807: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:52.812: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:54.817: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:56.820: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:55:58.825: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:56:00.829: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:56:02.835: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:56:04.840: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:56:06.845: INFO: Get pod liveness-d434301f-654a-45a4-b238-fa03d21f6d13 in namespace container-probe-4849
  Sep  2 12:56:06.845: INFO: Restart count of pod container-probe-4849/liveness-d434301f-654a-45a4-b238-fa03d21f6d13 is now 5 (2m22.341226066s elapsed)
  Sep  2 12:56:06.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:56:06.849
  STEP: Destroying namespace "container-probe-4849" for this suite. @ 09/02/23 12:56:06.864
• [144.416 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/02/23 12:56:06.87
  Sep  2 12:56:06.870: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 12:56:06.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:56:06.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:56:06.891
  STEP: Setting up server cert @ 09/02/23 12:56:06.916
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 12:56:07.442
  STEP: Deploying the webhook pod @ 09/02/23 12:56:07.451
  STEP: Wait for the deployment to be ready @ 09/02/23 12:56:07.463
  Sep  2 12:56:07.472: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 12:56:09.484
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 12:56:09.494
  Sep  2 12:56:10.495: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  2 12:56:10.503: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/02/23 12:56:11.014
  STEP: Creating a custom resource that should be denied by the webhook @ 09/02/23 12:56:11.036
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/02/23 12:56:13.068
  STEP: Updating the custom resource with disallowed data should be denied @ 09/02/23 12:56:13.077
  STEP: Deleting the custom resource should be denied @ 09/02/23 12:56:13.089
  STEP: Remove the offending key and value from the custom resource data @ 09/02/23 12:56:13.098
  STEP: Deleting the updated custom resource should be successful @ 09/02/23 12:56:13.11
  Sep  2 12:56:13.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9955" for this suite. @ 09/02/23 12:56:13.75
  STEP: Destroying namespace "webhook-markers-3288" for this suite. @ 09/02/23 12:56:13.758
• [6.896 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/02/23 12:56:13.767
  Sep  2 12:56:13.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-pred @ 09/02/23 12:56:13.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:56:13.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:56:13.799
  Sep  2 12:56:13.803: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  2 12:56:13.813: INFO: Waiting for terminating namespaces to be deleted...
  Sep  2 12:56:13.818: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-21 before test
  Sep  2 12:56:13.826: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-jwc9k from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: nginx-ingress-controller-kubernetes-worker-6mrtb from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: calico-node-b4c9m from kube-system started at 2023-09-02 12:02:29 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: coredns-59cfb5bf46-2gnnt from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container coredns ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: kube-state-metrics-775d9f4f79-7hktf from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: metrics-server-v0.6.3-69d7fbfdf8-r5r2h from kube-system started at 2023-09-02 12:03:03 +0000 UTC (2 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: dashboard-metrics-scraper-5dd7cb5fc-b468x from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: kubernetes-dashboard-7b899cb9d9-n5gpw from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-jpmcf from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 12:56:13.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 12:56:13.826: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-65 before test
  Sep  2 12:56:13.834: INFO: nginx-ingress-controller-kubernetes-worker-p6bfp from ingress-nginx-kubernetes-worker started at 2023-09-02 12:05:28 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.834: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 12:56:13.834: INFO: calico-node-h5lpt from kube-system started at 2023-09-02 12:05:16 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.834: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 12:56:13.834: INFO: sonobuoy-e2e-job-0541715562ae46cb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 12:56:13.834: INFO: 	Container e2e ready: true, restart count 0
  Sep  2 12:56:13.834: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 12:56:13.834: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-j7rdb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 12:56:13.834: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 12:56:13.834: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 12:56:13.834: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-35 before test
  Sep  2 12:56:13.842: INFO: nginx-ingress-controller-kubernetes-worker-52d6w from ingress-nginx-kubernetes-worker started at 2023-09-02 12:04:39 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.842: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 12:56:13.842: INFO: calico-node-zx26f from kube-system started at 2023-09-02 12:04:03 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.842: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 12:56:13.842: INFO: sonobuoy from sonobuoy started at 2023-09-02 12:11:24 +0000 UTC (1 container statuses recorded)
  Sep  2 12:56:13.842: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  2 12:56:13.842: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-9ft4n from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 12:56:13.842: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 12:56:13.842: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/23 12:56:13.842
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/23 12:56:15.872
  STEP: Trying to apply a random label on the found node. @ 09/02/23 12:56:15.885
  STEP: verifying the node has the label kubernetes.io/e2e-4fea82d6-0371-4e9a-bfc2-8c11650d0b60 42 @ 09/02/23 12:56:15.902
  STEP: Trying to relaunch the pod, now with labels. @ 09/02/23 12:56:15.905
  STEP: removing the label kubernetes.io/e2e-4fea82d6-0371-4e9a-bfc2-8c11650d0b60 off the node ip-172-31-7-35 @ 09/02/23 12:56:17.934
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4fea82d6-0371-4e9a-bfc2-8c11650d0b60 @ 09/02/23 12:56:17.957
  Sep  2 12:56:17.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2400" for this suite. @ 09/02/23 12:56:17.973
• [4.218 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/02/23 12:56:17.986
  Sep  2 12:56:17.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 12:56:17.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:56:18.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:56:18.018
  Sep  2 12:56:18.026: INFO: Got root ca configmap in namespace "svcaccounts-8551"
  Sep  2 12:56:18.034: INFO: Deleted root ca configmap in namespace "svcaccounts-8551"
  STEP: waiting for a new root ca configmap created @ 09/02/23 12:56:18.535
  Sep  2 12:56:18.539: INFO: Recreated root ca configmap in namespace "svcaccounts-8551"
  Sep  2 12:56:18.546: INFO: Updated root ca configmap in namespace "svcaccounts-8551"
  STEP: waiting for the root ca configmap reconciled @ 09/02/23 12:56:19.046
  Sep  2 12:56:19.051: INFO: Reconciled root ca configmap in namespace "svcaccounts-8551"
  Sep  2 12:56:19.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8551" for this suite. @ 09/02/23 12:56:19.059
• [1.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/02/23 12:56:19.071
  Sep  2 12:56:19.071: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 12:56:19.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:56:19.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:56:19.109
  STEP: Creating configMap with name projected-configmap-test-volume-313d3bab-4f1c-4afd-92ae-8adfe6f833e8 @ 09/02/23 12:56:19.117
  STEP: Creating a pod to test consume configMaps @ 09/02/23 12:56:19.123
  STEP: Saw pod success @ 09/02/23 12:56:23.157
  Sep  2 12:56:23.160: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-configmaps-428a9929-86b8-4527-ba79-07de74d2002c container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 12:56:23.191
  Sep  2 12:56:23.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4159" for this suite. @ 09/02/23 12:56:23.22
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/02/23 12:56:23.232
  Sep  2 12:56:23.233: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 12:56:23.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:56:23.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:56:23.269
  STEP: Creating pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801 @ 09/02/23 12:56:23.275
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 12:56:25.3
  Sep  2 12:56:25.305: INFO: Initial restart count of pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 is 0
  Sep  2 12:56:25.309: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:27.313: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:29.318: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:31.322: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:33.326: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:35.331: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:37.337: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:39.342: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:41.347: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:43.352: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:45.356: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:47.361: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:49.365: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:51.370: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:53.375: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:55.382: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:57.386: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:56:59.390: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:01.394: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:03.400: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:05.403: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:07.408: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:09.412: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:11.416: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:13.419: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:15.423: INFO: Get pod busybox-9bed2cda-0cac-47a9-a650-413afec53e24 in namespace container-probe-4801
  Sep  2 12:57:15.423: INFO: Restart count of pod container-probe-4801/busybox-9bed2cda-0cac-47a9-a650-413afec53e24 is now 1 (50.118086279s elapsed)
  Sep  2 12:57:15.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 12:57:15.427
  STEP: Destroying namespace "container-probe-4801" for this suite. @ 09/02/23 12:57:15.44
• [52.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/02/23 12:57:15.447
  Sep  2 12:57:15.447: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 12:57:15.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 12:57:15.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 12:57:15.467
  STEP: Creating pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635 @ 09/02/23 12:57:15.47
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 12:57:17.488
  Sep  2 12:57:17.491: INFO: Initial restart count of pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 is 0
  Sep  2 12:57:17.495: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:19.499: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:21.504: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:23.508: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:25.513: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:27.518: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:29.523: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:31.528: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:33.533: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:35.537: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:37.542: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:39.545: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:41.550: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:43.554: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:45.559: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:47.564: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:49.568: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:51.572: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:53.576: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:55.580: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:57.584: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:57:59.588: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:01.593: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:03.597: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:05.602: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:07.609: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:09.613: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:11.618: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:13.622: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:15.627: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:17.631: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:19.635: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:21.639: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:23.644: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:25.648: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:27.653: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:29.658: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:31.663: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:33.668: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:35.672: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:37.677: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:39.681: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:41.686: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:43.691: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:45.696: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:47.700: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:49.704: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:51.708: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:53.713: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:55.718: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:57.723: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:58:59.727: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:01.732: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:03.736: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:05.741: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:07.746: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:09.751: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:11.756: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:13.760: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:15.763: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:17.769: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:19.773: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:21.777: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:23.781: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:25.787: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:27.792: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:29.796: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:31.800: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:33.804: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:35.809: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:37.814: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:39.818: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:41.823: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:43.828: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:45.832: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:47.839: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:49.845: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:51.848: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:53.853: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:55.858: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:57.863: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 12:59:59.869: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:01.873: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:03.877: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:05.881: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:07.887: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:09.892: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:11.896: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:13.901: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:15.906: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:17.911: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:19.915: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:21.920: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:23.925: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:25.930: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:27.936: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:29.940: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:31.945: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:33.949: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:35.953: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:37.958: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:39.962: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:41.966: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:43.970: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:45.974: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:47.979: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:49.983: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:51.988: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:53.993: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:55.998: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:00:58.003: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:00.008: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:02.011: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:04.017: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:06.021: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:08.026: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:10.029: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:12.033: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:14.038: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:16.041: INFO: Get pod busybox-55cac73c-7c72-4068-a6b3-83931d313f86 in namespace container-probe-1635
  Sep  2 13:01:18.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:01:18.047
  STEP: Destroying namespace "container-probe-1635" for this suite. @ 09/02/23 13:01:18.067
• [242.628 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/02/23 13:01:18.076
  Sep  2 13:01:18.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/23 13:01:18.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:18.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:01:18.096
  Sep  2 13:01:18.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6223" for this suite. @ 09/02/23 13:01:18.111
• [0.042 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/02/23 13:01:18.118
  Sep  2 13:01:18.118: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename namespaces @ 09/02/23 13:01:18.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:18.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:01:18.137
  STEP: Creating a test namespace @ 09/02/23 13:01:18.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:18.155
  STEP: Creating a pod in the namespace @ 09/02/23 13:01:18.159
  STEP: Waiting for the pod to have running status @ 09/02/23 13:01:18.167
  STEP: Deleting the namespace @ 09/02/23 13:01:20.176
  STEP: Waiting for the namespace to be removed. @ 09/02/23 13:01:20.183
  STEP: Recreating the namespace @ 09/02/23 13:01:31.187
  STEP: Verifying there are no pods in the namespace @ 09/02/23 13:01:31.204
  Sep  2 13:01:31.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8914" for this suite. @ 09/02/23 13:01:31.212
  STEP: Destroying namespace "nsdeletetest-3321" for this suite. @ 09/02/23 13:01:31.219
  Sep  2 13:01:31.222: INFO: Namespace nsdeletetest-3321 was already deleted
  STEP: Destroying namespace "nsdeletetest-4214" for this suite. @ 09/02/23 13:01:31.222
• [13.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/02/23 13:01:31.236
  Sep  2 13:01:31.236: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:01:31.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:31.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:01:31.256
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:01:31.263
  STEP: Saw pod success @ 09/02/23 13:01:35.286
  Sep  2 13:01:35.290: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-1b855434-bb8c-4433-92cb-9f88d013499c container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:01:35.308
  Sep  2 13:01:35.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5875" for this suite. @ 09/02/23 13:01:35.328
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/02/23 13:01:35.337
  Sep  2 13:01:35.337: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:01:35.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:35.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:01:35.358
  STEP: Creating secret with name secret-test-f7e58d74-6991-4943-b039-436323512a38 @ 09/02/23 13:01:35.362
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:01:35.368
  STEP: Saw pod success @ 09/02/23 13:01:39.387
  Sep  2 13:01:39.390: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-secrets-0f4acc49-1222-4169-a843-6ae277902763 container secret-env-test: <nil>
  STEP: delete the pod @ 09/02/23 13:01:39.398
  Sep  2 13:01:39.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-126" for this suite. @ 09/02/23 13:01:39.417
• [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/02/23 13:01:39.425
  Sep  2 13:01:39.425: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename watch @ 09/02/23 13:01:39.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:39.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:01:39.446
  STEP: creating a watch on configmaps with label A @ 09/02/23 13:01:39.45
  STEP: creating a watch on configmaps with label B @ 09/02/23 13:01:39.451
  STEP: creating a watch on configmaps with label A or B @ 09/02/23 13:01:39.453
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/02/23 13:01:39.454
  Sep  2 13:01:39.459: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20760 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:39.459: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20760 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/02/23 13:01:39.46
  Sep  2 13:01:39.467: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20761 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:39.467: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20761 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/02/23 13:01:39.468
  Sep  2 13:01:39.476: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20762 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:39.476: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20762 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/02/23 13:01:39.476
  Sep  2 13:01:39.482: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20763 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:39.482: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6770  0b6059b1-e27b-45be-b435-3e5c20689fbd 20763 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/02/23 13:01:39.482
  Sep  2 13:01:39.487: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6770  547ec94b-82de-4272-bfa4-c09089f32d95 20764 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:39.487: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6770  547ec94b-82de-4272-bfa4-c09089f32d95 20764 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/02/23 13:01:49.488
  Sep  2 13:01:49.495: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6770  547ec94b-82de-4272-bfa4-c09089f32d95 20807 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:49.496: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6770  547ec94b-82de-4272-bfa4-c09089f32d95 20807 0 2023-09-02 13:01:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-02 13:01:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:01:59.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6770" for this suite. @ 09/02/23 13:01:59.502
• [20.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/02/23 13:01:59.512
  Sep  2 13:01:59.512: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:01:59.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:01:59.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:01:59.534
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/02/23 13:01:59.538
  STEP: Saw pod success @ 09/02/23 13:02:03.569
  Sep  2 13:02:03.573: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-c9d8421b-1269-4eba-a5c6-1cdd73342500 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:02:03.584
  Sep  2 13:02:03.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6476" for this suite. @ 09/02/23 13:02:03.614
• [4.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/02/23 13:02:03.632
  Sep  2 13:02:03.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:02:03.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:03.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:03.659
  Sep  2 13:02:03.664: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/23 13:02:05.2
  Sep  2 13:02:05.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-2459 --namespace=crd-publish-openapi-2459 create -f -'
  Sep  2 13:02:05.870: INFO: stderr: ""
  Sep  2 13:02:05.870: INFO: stdout: "e2e-test-crd-publish-openapi-321-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep  2 13:02:05.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-2459 --namespace=crd-publish-openapi-2459 delete e2e-test-crd-publish-openapi-321-crds test-cr'
  Sep  2 13:02:05.939: INFO: stderr: ""
  Sep  2 13:02:05.939: INFO: stdout: "e2e-test-crd-publish-openapi-321-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep  2 13:02:05.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-2459 --namespace=crd-publish-openapi-2459 apply -f -'
  Sep  2 13:02:06.094: INFO: stderr: ""
  Sep  2 13:02:06.094: INFO: stdout: "e2e-test-crd-publish-openapi-321-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep  2 13:02:06.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-2459 --namespace=crd-publish-openapi-2459 delete e2e-test-crd-publish-openapi-321-crds test-cr'
  Sep  2 13:02:06.163: INFO: stderr: ""
  Sep  2 13:02:06.163: INFO: stdout: "e2e-test-crd-publish-openapi-321-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/02/23 13:02:06.163
  Sep  2 13:02:06.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-2459 explain e2e-test-crd-publish-openapi-321-crds'
  Sep  2 13:02:06.300: INFO: stderr: ""
  Sep  2 13:02:06.301: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-321-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep  2 13:02:07.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2459" for this suite. @ 09/02/23 13:02:07.669
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/02/23 13:02:07.679
  Sep  2 13:02:07.679: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/23 13:02:07.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:07.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:07.704
  STEP: Performing setup for networking test in namespace pod-network-test-9187 @ 09/02/23 13:02:07.711
  STEP: creating a selector @ 09/02/23 13:02:07.711
  STEP: Creating the service pods in kubernetes @ 09/02/23 13:02:07.711
  Sep  2 13:02:07.711: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/02/23 13:02:19.801
  Sep  2 13:02:21.835: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  2 13:02:21.835: INFO: Going to poll 192.168.240.223 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep  2 13:02:21.839: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.240.223:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9187 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:02:21.839: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:02:21.839: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:02:21.839: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9187/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.240.223%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:02:21.931: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep  2 13:02:21.931: INFO: Going to poll 192.168.167.116 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep  2 13:02:21.935: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.167.116:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9187 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:02:21.935: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:02:21.936: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:02:21.936: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9187/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.167.116%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:02:22.015: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep  2 13:02:22.015: INFO: Going to poll 192.168.141.16 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep  2 13:02:22.020: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.141.16:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9187 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:02:22.020: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:02:22.020: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:02:22.020: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9187/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.141.16%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:02:22.106: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep  2 13:02:22.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9187" for this suite. @ 09/02/23 13:02:22.111
• [14.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/02/23 13:02:22.121
  Sep  2 13:02:22.121: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 13:02:22.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:22.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:22.146
  Sep  2 13:02:22.176: INFO: Create a RollingUpdate DaemonSet
  Sep  2 13:02:22.183: INFO: Check that daemon pods launch on every node of the cluster
  Sep  2 13:02:22.188: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:22.188: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:22.192: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:02:22.192: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  Sep  2 13:02:23.196: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:23.197: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:23.201: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:02:23.201: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  Sep  2 13:02:24.197: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:24.197: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:24.202: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:02:24.202: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Sep  2 13:02:24.202: INFO: Update the DaemonSet to trigger a rollout
  Sep  2 13:02:24.214: INFO: Updating DaemonSet daemon-set
  Sep  2 13:02:25.233: INFO: Roll back the DaemonSet before rollout is complete
  Sep  2 13:02:25.245: INFO: Updating DaemonSet daemon-set
  Sep  2 13:02:25.245: INFO: Make sure DaemonSet rollback is complete
  Sep  2 13:02:25.250: INFO: Wrong image for pod: daemon-set-jm975. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep  2 13:02:25.250: INFO: Pod daemon-set-jm975 is not available
  Sep  2 13:02:25.255: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:25.255: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:26.265: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:26.265: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:27.260: INFO: Pod daemon-set-7ct98 is not available
  Sep  2 13:02:27.267: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:02:27.267: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/23 13:02:27.274
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7331, will wait for the garbage collector to delete the pods @ 09/02/23 13:02:27.274
  Sep  2 13:02:27.339: INFO: Deleting DaemonSet.extensions daemon-set took: 10.315938ms
  Sep  2 13:02:27.440: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.025702ms
  Sep  2 13:02:28.946: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:02:28.946: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  2 13:02:28.950: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21186"},"items":null}

  Sep  2 13:02:28.953: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21186"},"items":null}

  Sep  2 13:02:28.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7331" for this suite. @ 09/02/23 13:02:28.973
• [6.859 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/02/23 13:02:28.985
  Sep  2 13:02:28.985: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/23 13:02:28.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:29.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:29.008
  STEP: Performing setup for networking test in namespace pod-network-test-5542 @ 09/02/23 13:02:29.012
  STEP: creating a selector @ 09/02/23 13:02:29.012
  STEP: Creating the service pods in kubernetes @ 09/02/23 13:02:29.012
  Sep  2 13:02:29.012: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/02/23 13:02:41.096
  Sep  2 13:02:43.131: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  2 13:02:43.131: INFO: Going to poll 192.168.240.240 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep  2 13:02:43.135: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.240.240 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5542 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:02:43.135: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:02:43.136: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:02:43.136: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5542/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.240.240+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:02:44.226: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep  2 13:02:44.226: INFO: Going to poll 192.168.167.118 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep  2 13:02:44.230: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.167.118 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5542 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:02:44.230: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:02:44.231: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:02:44.231: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5542/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.167.118+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:02:45.320: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep  2 13:02:45.320: INFO: Going to poll 192.168.141.27 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep  2 13:02:45.324: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.141.27 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5542 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:02:45.324: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:02:45.324: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:02:45.324: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5542/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.141.27+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:02:46.416: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep  2 13:02:46.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5542" for this suite. @ 09/02/23 13:02:46.421
• [17.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/02/23 13:02:46.429
  Sep  2 13:02:46.429: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:02:46.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:46.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:46.455
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/02/23 13:02:46.458
  STEP: Saw pod success @ 09/02/23 13:02:50.483
  Sep  2 13:02:50.487: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-4d41b878-8d8f-408b-b671-5777bbd0ffaf container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:02:50.503
  Sep  2 13:02:50.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1857" for this suite. @ 09/02/23 13:02:50.522
• [4.100 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/02/23 13:02:50.529
  Sep  2 13:02:50.529: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replicaset @ 09/02/23 13:02:50.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:50.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:50.551
  Sep  2 13:02:50.574: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep  2 13:02:55.578: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/23 13:02:55.578
  STEP: Scaling up "test-rs" replicaset  @ 09/02/23 13:02:55.578
  Sep  2 13:02:55.588: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/02/23 13:02:55.588
  Sep  2 13:02:55.598: INFO: observed ReplicaSet test-rs in namespace replicaset-9684 with ReadyReplicas 1, AvailableReplicas 1
  Sep  2 13:02:55.614: INFO: observed ReplicaSet test-rs in namespace replicaset-9684 with ReadyReplicas 1, AvailableReplicas 1
  Sep  2 13:02:55.679: INFO: observed ReplicaSet test-rs in namespace replicaset-9684 with ReadyReplicas 1, AvailableReplicas 1
  Sep  2 13:02:55.704: INFO: observed ReplicaSet test-rs in namespace replicaset-9684 with ReadyReplicas 1, AvailableReplicas 1
  Sep  2 13:02:56.687: INFO: observed ReplicaSet test-rs in namespace replicaset-9684 with ReadyReplicas 2, AvailableReplicas 2
  Sep  2 13:02:56.863: INFO: observed Replicaset test-rs in namespace replicaset-9684 with ReadyReplicas 3 found true
  Sep  2 13:02:56.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9684" for this suite. @ 09/02/23 13:02:56.869
• [6.347 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/02/23 13:02:56.876
  Sep  2 13:02:56.876: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:02:56.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:02:56.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:02:56.9
  STEP: Setting up server cert @ 09/02/23 13:02:56.972
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:02:57.362
  STEP: Deploying the webhook pod @ 09/02/23 13:02:57.371
  STEP: Wait for the deployment to be ready @ 09/02/23 13:02:57.385
  Sep  2 13:02:57.392: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 13:02:59.405
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:02:59.417
  Sep  2 13:03:00.418: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/02/23 13:03:00.426
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/23 13:03:00.426
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/02/23 13:03:00.442
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/02/23 13:03:01.454
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/23 13:03:01.455
  STEP: Having no error when timeout is longer than webhook latency @ 09/02/23 13:03:02.485
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/23 13:03:02.485
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/02/23 13:03:07.523
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/02/23 13:03:07.523
  Sep  2 13:03:12.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5667" for this suite. @ 09/02/23 13:03:12.614
  STEP: Destroying namespace "webhook-markers-747" for this suite. @ 09/02/23 13:03:12.621
• [15.753 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/02/23 13:03:12.629
  Sep  2 13:03:12.629: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:03:12.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:12.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:12.65
  STEP: set up a multi version CRD @ 09/02/23 13:03:12.655
  Sep  2 13:03:12.655: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: mark a version not serverd @ 09/02/23 13:03:16.005
  STEP: check the unserved version gets removed @ 09/02/23 13:03:16.054
  STEP: check the other version is not changed @ 09/02/23 13:03:16.931
  Sep  2 13:03:19.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6074" for this suite. @ 09/02/23 13:03:19.612
• [6.990 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/02/23 13:03:19.621
  Sep  2 13:03:19.621: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:03:19.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:19.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:19.64
  STEP: Creating projection with secret that has name secret-emptykey-test-bd9b722f-2caf-4d2b-8487-dcb7ba0f1311 @ 09/02/23 13:03:19.643
  Sep  2 13:03:19.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-59" for this suite. @ 09/02/23 13:03:19.649
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/02/23 13:03:19.657
  Sep  2 13:03:19.657: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename controllerrevisions @ 09/02/23 13:03:19.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:19.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:19.678
  STEP: Creating DaemonSet "e2e-vgpfx-daemon-set" @ 09/02/23 13:03:19.699
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/23 13:03:19.706
  Sep  2 13:03:19.711: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:03:19.711: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:03:19.716: INFO: Number of nodes with available pods controlled by daemonset e2e-vgpfx-daemon-set: 0
  Sep  2 13:03:19.716: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  Sep  2 13:03:20.721: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:03:20.721: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:03:20.725: INFO: Number of nodes with available pods controlled by daemonset e2e-vgpfx-daemon-set: 0
  Sep  2 13:03:20.725: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  Sep  2 13:03:21.720: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:03:21.721: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:03:21.725: INFO: Number of nodes with available pods controlled by daemonset e2e-vgpfx-daemon-set: 3
  Sep  2 13:03:21.725: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-vgpfx-daemon-set
  STEP: Confirm DaemonSet "e2e-vgpfx-daemon-set" successfully created with "daemonset-name=e2e-vgpfx-daemon-set" label @ 09/02/23 13:03:21.728
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-vgpfx-daemon-set" @ 09/02/23 13:03:21.735
  Sep  2 13:03:21.738: INFO: Located ControllerRevision: "e2e-vgpfx-daemon-set-65bf774cb4"
  STEP: Patching ControllerRevision "e2e-vgpfx-daemon-set-65bf774cb4" @ 09/02/23 13:03:21.741
  Sep  2 13:03:21.749: INFO: e2e-vgpfx-daemon-set-65bf774cb4 has been patched
  STEP: Create a new ControllerRevision @ 09/02/23 13:03:21.75
  Sep  2 13:03:21.757: INFO: Created ControllerRevision: e2e-vgpfx-daemon-set-7ddb88f6b
  STEP: Confirm that there are two ControllerRevisions @ 09/02/23 13:03:21.757
  Sep  2 13:03:21.758: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  2 13:03:21.763: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-vgpfx-daemon-set-65bf774cb4" @ 09/02/23 13:03:21.763
  STEP: Confirm that there is only one ControllerRevision @ 09/02/23 13:03:21.77
  Sep  2 13:03:21.770: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  2 13:03:21.773: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-vgpfx-daemon-set-7ddb88f6b" @ 09/02/23 13:03:21.777
  Sep  2 13:03:21.786: INFO: e2e-vgpfx-daemon-set-7ddb88f6b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/02/23 13:03:21.786
  W0902 13:03:21.792530      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/02/23 13:03:21.792
  Sep  2 13:03:21.792: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  2 13:03:22.798: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  2 13:03:22.802: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-vgpfx-daemon-set-7ddb88f6b=updated" @ 09/02/23 13:03:22.802
  STEP: Confirm that there is only one ControllerRevision @ 09/02/23 13:03:22.81
  Sep  2 13:03:22.810: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  2 13:03:22.814: INFO: Found 1 ControllerRevisions
  Sep  2 13:03:22.818: INFO: ControllerRevision "e2e-vgpfx-daemon-set-7d88b8c5ff" has revision 3
  STEP: Deleting DaemonSet "e2e-vgpfx-daemon-set" @ 09/02/23 13:03:22.822
  STEP: deleting DaemonSet.extensions e2e-vgpfx-daemon-set in namespace controllerrevisions-9987, will wait for the garbage collector to delete the pods @ 09/02/23 13:03:22.822
  Sep  2 13:03:22.885: INFO: Deleting DaemonSet.extensions e2e-vgpfx-daemon-set took: 7.304336ms
  Sep  2 13:03:22.985: INFO: Terminating DaemonSet.extensions e2e-vgpfx-daemon-set pods took: 100.290503ms
  Sep  2 13:03:25.089: INFO: Number of nodes with available pods controlled by daemonset e2e-vgpfx-daemon-set: 0
  Sep  2 13:03:25.090: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-vgpfx-daemon-set
  Sep  2 13:03:25.093: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21824"},"items":null}

  Sep  2 13:03:25.097: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21824"},"items":null}

  Sep  2 13:03:25.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9987" for this suite. @ 09/02/23 13:03:25.115
• [5.464 seconds]
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/02/23 13:03:25.122
  Sep  2 13:03:25.122: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:03:25.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:25.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:25.143
  STEP: creating a secret @ 09/02/23 13:03:25.152
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/02/23 13:03:25.157
  STEP: patching the secret @ 09/02/23 13:03:25.16
  STEP: deleting the secret using a LabelSelector @ 09/02/23 13:03:25.17
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/02/23 13:03:25.177
  Sep  2 13:03:25.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5844" for this suite. @ 09/02/23 13:03:25.185
• [0.069 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/02/23 13:03:25.191
  Sep  2 13:03:25.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:03:25.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:25.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:25.213
  STEP: creating Agnhost RC @ 09/02/23 13:03:25.218
  Sep  2 13:03:25.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-2395 create -f -'
  Sep  2 13:03:25.728: INFO: stderr: ""
  Sep  2 13:03:25.728: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/02/23 13:03:25.728
  Sep  2 13:03:26.733: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 13:03:26.734: INFO: Found 0 / 1
  Sep  2 13:03:27.732: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 13:03:27.732: INFO: Found 1 / 1
  Sep  2 13:03:27.732: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/02/23 13:03:27.732
  Sep  2 13:03:27.736: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 13:03:27.736: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  2 13:03:27.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-2395 patch pod agnhost-primary-2zrbt -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep  2 13:03:27.806: INFO: stderr: ""
  Sep  2 13:03:27.806: INFO: stdout: "pod/agnhost-primary-2zrbt patched\n"
  STEP: checking annotations @ 09/02/23 13:03:27.806
  Sep  2 13:03:27.810: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  2 13:03:27.810: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  2 13:03:27.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2395" for this suite. @ 09/02/23 13:03:27.815
• [2.629 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/02/23 13:03:27.823
  Sep  2 13:03:27.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:03:27.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:27.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:27.842
  Sep  2 13:03:27.847: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/23 13:03:29.14
  Sep  2 13:03:29.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-5463 --namespace=crd-publish-openapi-5463 create -f -'
  Sep  2 13:03:29.618: INFO: stderr: ""
  Sep  2 13:03:29.618: INFO: stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep  2 13:03:29.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-5463 --namespace=crd-publish-openapi-5463 delete e2e-test-crd-publish-openapi-4229-crds test-cr'
  Sep  2 13:03:29.685: INFO: stderr: ""
  Sep  2 13:03:29.685: INFO: stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep  2 13:03:29.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-5463 --namespace=crd-publish-openapi-5463 apply -f -'
  Sep  2 13:03:30.098: INFO: stderr: ""
  Sep  2 13:03:30.099: INFO: stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep  2 13:03:30.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-5463 --namespace=crd-publish-openapi-5463 delete e2e-test-crd-publish-openapi-4229-crds test-cr'
  Sep  2 13:03:30.173: INFO: stderr: ""
  Sep  2 13:03:30.173: INFO: stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/02/23 13:03:30.173
  Sep  2 13:03:30.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-5463 explain e2e-test-crd-publish-openapi-4229-crds'
  Sep  2 13:03:30.314: INFO: stderr: ""
  Sep  2 13:03:30.314: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4229-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep  2 13:03:31.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5463" for this suite. @ 09/02/23 13:03:31.625
• [3.809 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/02/23 13:03:31.632
  Sep  2 13:03:31.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:03:31.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:31.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:31.652
  STEP: Setting up server cert @ 09/02/23 13:03:31.675
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:03:32.113
  STEP: Deploying the webhook pod @ 09/02/23 13:03:32.121
  STEP: Wait for the deployment to be ready @ 09/02/23 13:03:32.135
  Sep  2 13:03:32.146: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 13:03:34.157
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:03:34.168
  Sep  2 13:03:35.169: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/02/23 13:03:35.177
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/02/23 13:03:35.194
  STEP: Creating a dummy validating-webhook-configuration object @ 09/02/23 13:03:35.209
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/02/23 13:03:35.218
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/02/23 13:03:35.224
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/02/23 13:03:35.233
  Sep  2 13:03:35.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3336" for this suite. @ 09/02/23 13:03:35.303
  STEP: Destroying namespace "webhook-markers-4908" for this suite. @ 09/02/23 13:03:35.309
• [3.684 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/02/23 13:03:35.319
  Sep  2 13:03:35.319: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/02/23 13:03:35.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:03:35.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:03:35.338
  Sep  2 13:03:35.342: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep  2 13:04:35.363: INFO: Waiting for terminating namespaces to be deleted...
  Sep  2 13:04:35.367: INFO: Starting informer...
  STEP: Starting pods... @ 09/02/23 13:04:35.367
  Sep  2 13:04:35.587: INFO: Pod1 is running on ip-172-31-7-35. Tainting Node
  Sep  2 13:04:37.810: INFO: Pod2 is running on ip-172-31-7-35. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/02/23 13:04:37.81
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/23 13:04:37.82
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/02/23 13:04:37.825
  Sep  2 13:04:44.164: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Sep  2 13:05:03.495: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep  2 13:05:03.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/23 13:05:03.512
  STEP: Destroying namespace "taint-multiple-pods-8726" for this suite. @ 09/02/23 13:05:03.52
• [88.215 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/02/23 13:05:03.537
  Sep  2 13:05:03.537: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 13:05:03.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:03.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:03.589
  Sep  2 13:05:03.592: INFO: Creating simple deployment test-new-deployment
  Sep  2 13:05:03.622: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 09/02/23 13:05:05.637
  STEP: updating a scale subresource @ 09/02/23 13:05:05.64
  STEP: verifying the deployment Spec.Replicas was modified @ 09/02/23 13:05:05.648
  STEP: Patch a scale subresource @ 09/02/23 13:05:05.651
  Sep  2 13:05:05.669: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0caa950-5879-4122-8149-dad02948b748",
      ResourceVersion: (string) (len=5) "22330",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829256703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 13:05:05.677: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "265e0933-5707-4d99-ae4a-b26262b8bca8",
      ResourceVersion: (string) (len=5) "22335",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829256703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "e0caa950-5879-4122-8149-dad02948b748",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 30 63 61 61 39  35 30 2d 35 38 37 39 2d  |\"e0caa950-5879-|
              00000120  34 31 32 32 2d 38 31 34  39 2d 64 61 64 30 32 39  |4122-8149-dad029|
              00000130  34 38 62 37 34 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |48b748\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:05:05.685: INFO: Pod "test-new-deployment-557759b7c7-gsrpp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-gsrpp",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "470d2469-387b-4aa9-b912-352f5d7c7945",
      ResourceVersion: (string) (len=5) "22334",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829256705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "265e0933-5707-4d99-ae4a-b26262b8bca8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 36  35 65 30 39 33 33 2d 35  |d\":\"265e0933-5|
              00000090  37 30 37 2d 34 64 39 39  2d 61 65 34 61 2d 62 32  |707-4d99-ae4a-b2|
              000000a0  36 32 36 32 62 38 62 63  61 38 5c 22 7d 22 3a 7b  |6262b8bca8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-49znm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-49znm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:05:05.689: INFO: Pod "test-new-deployment-557759b7c7-kxdxr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-kxdxr",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ec6bf8a-129a-463f-bd92-f5ec011c73b6",
      ResourceVersion: (string) (len=5) "22323",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829256703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "265e0933-5707-4d99-ae4a-b26262b8bca8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 36  35 65 30 39 33 33 2d 35  |d\":\"265e0933-5|
              00000090  37 30 37 2d 34 64 39 39  2d 61 65 34 61 2d 62 32  |707-4d99-ae4a-b2|
              000000a0  36 32 36 32 62 38 62 63  61 38 5c 22 7d 22 3a 7b  |6262b8bca8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 37 5c 22 7d  |192.168.141.7\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5n9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5n9c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829256703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.141.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.141.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829256703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829256704,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c0e19de85cdd05c690caca80b360771113d1777cc77aa1b2661248fd4d8d8f95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:05:05.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8276" for this suite. @ 09/02/23 13:05:05.701
• [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/02/23 13:05:05.715
  Sep  2 13:05:05.715: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:05:05.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:05.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:05.749
  STEP: Creating the pod @ 09/02/23 13:05:05.752
  Sep  2 13:05:08.304: INFO: Successfully updated pod "annotationupdate9212509c-efae-4a74-8fd1-45edc7d2ce5f"
  Sep  2 13:05:10.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8160" for this suite. @ 09/02/23 13:05:10.323
• [4.614 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/02/23 13:05:10.33
  Sep  2 13:05:10.330: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:05:10.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:10.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:10.351
  STEP: Creating configMap with name configmap-test-upd-184728be-68d2-44ef-8a9a-ea52ff8da252 @ 09/02/23 13:05:10.359
  STEP: Creating the pod @ 09/02/23 13:05:10.365
  STEP: Waiting for pod with text data @ 09/02/23 13:05:12.385
  STEP: Waiting for pod with binary data @ 09/02/23 13:05:12.404
  Sep  2 13:05:12.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8668" for this suite. @ 09/02/23 13:05:12.415
• [2.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/02/23 13:05:12.426
  Sep  2 13:05:12.426: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:05:12.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:12.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:12.447
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/02/23 13:05:12.453
  STEP: Saw pod success @ 09/02/23 13:05:16.478
  Sep  2 13:05:16.482: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-231078df-eaf2-42b2-9260-7965cf4a19fd container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:05:16.489
  Sep  2 13:05:16.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8701" for this suite. @ 09/02/23 13:05:16.512
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/02/23 13:05:16.524
  Sep  2 13:05:16.524: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:05:16.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:16.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:16.545
  STEP: Creating Pod @ 09/02/23 13:05:16.549
  STEP: Reading file content from the nginx-container @ 09/02/23 13:05:18.567
  Sep  2 13:05:18.567: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8632 PodName:pod-sharedvolume-aa0e5c4e-f412-46b8-9f98-b0da68163127 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:05:18.567: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:05:18.567: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:05:18.567: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8632/pods/pod-sharedvolume-aa0e5c4e-f412-46b8-9f98-b0da68163127/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep  2 13:05:18.638: INFO: Exec stderr: ""
  Sep  2 13:05:18.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8632" for this suite. @ 09/02/23 13:05:18.643
• [2.125 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/02/23 13:05:18.649
  Sep  2 13:05:18.649: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename tables @ 09/02/23 13:05:18.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:18.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:18.674
  Sep  2 13:05:18.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2279" for this suite. @ 09/02/23 13:05:18.684
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/02/23 13:05:18.691
  Sep  2 13:05:18.691: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 13:05:18.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:18.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:18.712
  STEP: create the rc @ 09/02/23 13:05:18.715
  W0902 13:05:18.722390      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/02/23 13:05:23.733
  STEP: wait for all pods to be garbage collected @ 09/02/23 13:05:23.747
  STEP: Gathering metrics @ 09/02/23 13:05:28.756
  W0902 13:05:28.761587      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  2 13:05:28.761: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  2 13:05:28.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5715" for this suite. @ 09/02/23 13:05:28.766
• [10.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/02/23 13:05:28.778
  Sep  2 13:05:28.778: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/23 13:05:28.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:28.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:28.802
  STEP: getting /apis @ 09/02/23 13:05:28.805
  STEP: getting /apis/node.k8s.io @ 09/02/23 13:05:28.809
  STEP: getting /apis/node.k8s.io/v1 @ 09/02/23 13:05:28.81
  STEP: creating @ 09/02/23 13:05:28.812
  STEP: watching @ 09/02/23 13:05:28.825
  Sep  2 13:05:28.825: INFO: starting watch
  STEP: getting @ 09/02/23 13:05:28.831
  STEP: listing @ 09/02/23 13:05:28.834
  STEP: patching @ 09/02/23 13:05:28.838
  STEP: updating @ 09/02/23 13:05:28.843
  Sep  2 13:05:28.849: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/02/23 13:05:28.849
  STEP: deleting a collection @ 09/02/23 13:05:28.862
  Sep  2 13:05:28.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9419" for this suite. @ 09/02/23 13:05:28.88
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/02/23 13:05:28.891
  Sep  2 13:05:28.891: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:05:28.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:28.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:28.909
  STEP: fetching services @ 09/02/23 13:05:28.913
  Sep  2 13:05:28.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4988" for this suite. @ 09/02/23 13:05:28.92
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/02/23 13:05:28.931
  Sep  2 13:05:28.931: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:05:28.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:28.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:28.951
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8508 @ 09/02/23 13:05:28.955
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/02/23 13:05:28.967
  STEP: creating service externalsvc in namespace services-8508 @ 09/02/23 13:05:28.967
  STEP: creating replication controller externalsvc in namespace services-8508 @ 09/02/23 13:05:28.985
  I0902 13:05:28.992903      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8508, replica count: 2
  I0902 13:05:32.044468      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/02/23 13:05:32.049
  Sep  2 13:05:32.065: INFO: Creating new exec pod
  Sep  2 13:05:34.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-8508 exec execpodj57g5 -- /bin/sh -x -c nslookup nodeport-service.services-8508.svc.cluster.local'
  Sep  2 13:05:34.259: INFO: stderr: "+ nslookup nodeport-service.services-8508.svc.cluster.local\n"
  Sep  2 13:05:34.259: INFO: stdout: "Server:\t\t10.152.183.152\nAddress:\t10.152.183.152#53\n\nnodeport-service.services-8508.svc.cluster.local\tcanonical name = externalsvc.services-8508.svc.cluster.local.\nName:\texternalsvc.services-8508.svc.cluster.local\nAddress: 10.152.183.122\n\n"
  Sep  2 13:05:34.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-8508, will wait for the garbage collector to delete the pods @ 09/02/23 13:05:34.263
  Sep  2 13:05:34.325: INFO: Deleting ReplicationController externalsvc took: 6.640724ms
  Sep  2 13:05:34.426: INFO: Terminating ReplicationController externalsvc pods took: 100.596886ms
  Sep  2 13:05:37.442: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-8508" for this suite. @ 09/02/23 13:05:37.454
• [8.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/02/23 13:05:37.468
  Sep  2 13:05:37.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:05:37.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:37.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:37.487
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/23 13:05:37.491
  Sep  2 13:05:37.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1473 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep  2 13:05:37.557: INFO: stderr: ""
  Sep  2 13:05:37.557: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/02/23 13:05:37.557
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/02/23 13:05:42.608
  Sep  2 13:05:42.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1473 get pod e2e-test-httpd-pod -o json'
  Sep  2 13:05:42.671: INFO: stderr: ""
  Sep  2 13:05:42.671: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-09-02T13:05:37Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1473\",\n        \"resourceVersion\": \"22832\",\n        \"uid\": \"bc440f9a-f45b-45c8-8dda-b2a829f65954\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-d6thl\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-35-65\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-d6thl\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-02T13:05:37Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-02T13:05:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-02T13:05:38Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-02T13:05:37Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://d488ccefe54e05d4b76d6fbd6ace7c5871d37c6e2de4c430b2cf7cec4ca989e4\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-02T13:05:38Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.35.65\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.167.125\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.167.125\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-02T13:05:37Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/02/23 13:05:42.672
  Sep  2 13:05:42.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1473 replace -f -'
  Sep  2 13:05:43.111: INFO: stderr: ""
  Sep  2 13:05:43.111: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/02/23 13:05:43.111
  Sep  2 13:05:43.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1473 delete pods e2e-test-httpd-pod'
  Sep  2 13:05:45.035: INFO: stderr: ""
  Sep  2 13:05:45.035: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep  2 13:05:45.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1473" for this suite. @ 09/02/23 13:05:45.04
• [7.580 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/02/23 13:05:45.048
  Sep  2 13:05:45.048: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:05:45.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:45.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:45.067
  STEP: Creating projection with secret that has name projected-secret-test-b1d74c48-4c1f-414e-8176-fb21e10d50ed @ 09/02/23 13:05:45.07
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:05:45.074
  STEP: Saw pod success @ 09/02/23 13:05:49.098
  Sep  2 13:05:49.102: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-secrets-d0a79bc9-8013-4b3c-8f2b-7216d071567d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:05:49.108
  Sep  2 13:05:49.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1497" for this suite. @ 09/02/23 13:05:49.128
• [4.086 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/02/23 13:05:49.134
  Sep  2 13:05:49.134: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename security-context @ 09/02/23 13:05:49.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:49.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:49.158
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/02/23 13:05:49.162
  STEP: Saw pod success @ 09/02/23 13:05:53.184
  Sep  2 13:05:53.187: INFO: Trying to get logs from node ip-172-31-7-35 pod security-context-186692d3-5f71-42e3-b137-41b309477ca9 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:05:53.194
  Sep  2 13:05:53.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4469" for this suite. @ 09/02/23 13:05:53.217
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/02/23 13:05:53.226
  Sep  2 13:05:53.226: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/23 13:05:53.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:53.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:53.247
  STEP: fetching the /apis discovery document @ 09/02/23 13:05:53.251
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/02/23 13:05:53.253
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/02/23 13:05:53.253
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/02/23 13:05:53.253
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/02/23 13:05:53.254
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/02/23 13:05:53.254
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/02/23 13:05:53.255
  Sep  2 13:05:53.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-591" for this suite. @ 09/02/23 13:05:53.259
• [0.042 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/02/23 13:05:53.268
  Sep  2 13:05:53.268: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:05:53.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:53.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:53.288
  STEP: Creating configMap with name projected-configmap-test-volume-6938a263-320d-497a-a5e6-f30ddb8113e1 @ 09/02/23 13:05:53.295
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:05:53.3
  STEP: Saw pod success @ 09/02/23 13:05:57.324
  Sep  2 13:05:57.327: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-configmaps-3bd1345a-1c31-498d-a3dc-cf23eeb8f9e8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:05:57.335
  Sep  2 13:05:57.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3678" for this suite. @ 09/02/23 13:05:57.362
• [4.102 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/02/23 13:05:57.371
  Sep  2 13:05:57.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename endpointslice @ 09/02/23 13:05:57.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:57.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:57.388
  Sep  2 13:05:57.402: INFO: Endpoints addresses: [172.31.17.196 172.31.91.189] , ports: [6443]
  Sep  2 13:05:57.403: INFO: EndpointSlices addresses: [172.31.17.196 172.31.91.189] , ports: [6443]
  Sep  2 13:05:57.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3173" for this suite. @ 09/02/23 13:05:57.407
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/02/23 13:05:57.415
  Sep  2 13:05:57.415: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:05:57.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:57.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:57.436
  Sep  2 13:05:57.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5239" for this suite. @ 09/02/23 13:05:57.484
• [0.076 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/02/23 13:05:57.491
  Sep  2 13:05:57.491: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:05:57.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:57.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:57.511
  STEP: creating an Endpoint @ 09/02/23 13:05:57.519
  STEP: waiting for available Endpoint @ 09/02/23 13:05:57.524
  STEP: listing all Endpoints @ 09/02/23 13:05:57.525
  STEP: updating the Endpoint @ 09/02/23 13:05:57.529
  STEP: fetching the Endpoint @ 09/02/23 13:05:57.537
  STEP: patching the Endpoint @ 09/02/23 13:05:57.54
  STEP: fetching the Endpoint @ 09/02/23 13:05:57.547
  STEP: deleting the Endpoint by Collection @ 09/02/23 13:05:57.551
  STEP: waiting for Endpoint deletion @ 09/02/23 13:05:57.559
  STEP: fetching the Endpoint @ 09/02/23 13:05:57.561
  Sep  2 13:05:57.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2256" for this suite. @ 09/02/23 13:05:57.569
• [0.085 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/02/23 13:05:57.577
  Sep  2 13:05:57.577: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename server-version @ 09/02/23 13:05:57.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:57.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:57.596
  STEP: Request ServerVersion @ 09/02/23 13:05:57.6
  STEP: Confirm major version @ 09/02/23 13:05:57.601
  Sep  2 13:05:57.601: INFO: Major version: 1
  STEP: Confirm minor version @ 09/02/23 13:05:57.601
  Sep  2 13:05:57.601: INFO: cleanMinorVersion: 28
  Sep  2 13:05:57.601: INFO: Minor version: 28
  Sep  2 13:05:57.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5019" for this suite. @ 09/02/23 13:05:57.605
• [0.037 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/02/23 13:05:57.615
  Sep  2 13:05:57.615: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename disruption @ 09/02/23 13:05:57.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:05:57.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:05:57.637
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:05:57.645
  STEP: Waiting for all pods to be running @ 09/02/23 13:05:59.682
  Sep  2 13:05:59.696: INFO: running pods: 0 < 3
  Sep  2 13:06:01.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6372" for this suite. @ 09/02/23 13:06:01.709
• [4.103 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/02/23 13:06:01.718
  Sep  2 13:06:01.718: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename security-context-test @ 09/02/23 13:06:01.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:01.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:01.741
  Sep  2 13:06:05.770: INFO: Got logs for pod "busybox-privileged-false-1e776833-f1e7-420b-a829-7e44232aac12": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep  2 13:06:05.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5857" for this suite. @ 09/02/23 13:06:05.775
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/02/23 13:06:05.787
  Sep  2 13:06:05.787: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:06:05.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:05.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:05.809
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/02/23 13:06:05.812
  STEP: Saw pod success @ 09/02/23 13:06:09.835
  Sep  2 13:06:09.838: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-a0b3290c-4c0d-418f-a305-1c4043fe9459 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:06:09.845
  Sep  2 13:06:09.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4202" for this suite. @ 09/02/23 13:06:09.871
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/02/23 13:06:09.88
  Sep  2 13:06:09.880: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 13:06:09.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:09.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:09.901
  Sep  2 13:06:09.905: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  W0902 13:06:12.458403      19 warnings.go:70] unknown field "alpha"
  W0902 13:06:12.458422      19 warnings.go:70] unknown field "beta"
  W0902 13:06:12.458429      19 warnings.go:70] unknown field "delta"
  W0902 13:06:12.458434      19 warnings.go:70] unknown field "epsilon"
  W0902 13:06:12.458440      19 warnings.go:70] unknown field "gamma"
  Sep  2 13:06:12.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9520" for this suite. @ 09/02/23 13:06:13.005
• [3.133 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/02/23 13:06:13.013
  Sep  2 13:06:13.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename init-container @ 09/02/23 13:06:13.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:13.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:13.032
  STEP: creating the pod @ 09/02/23 13:06:13.038
  Sep  2 13:06:13.038: INFO: PodSpec: initContainers in spec.initContainers
  Sep  2 13:06:55.507: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1c40391f-550b-45ac-8146-37051525fd4d", GenerateName:"", Namespace:"init-container-6233", SelfLink:"", UID:"cdc3376d-e1b0-4e83-95b2-4799aed142aa", ResourceVersion:"23429", Generation:0, CreationTimestamp:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"38512391"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005494120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 2, 13, 6, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005494150), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-j6wl7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00549a0e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j6wl7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j6wl7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j6wl7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00549e358), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-7-35", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0002461c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00549e3e0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00549e400)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00549e408), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00549e40c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0046d6060), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.7.35", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.141.5", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.141.5"}}, StartTime:time.Date(2023, time.September, 2, 13, 6, 13, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000246380)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000246460)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://2c53f9187c275d8188124f02473951f858b59e9856bb0f39e6dab63fcf3a6f0f", Started:(*bool)(0xc00549e4aa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00549a160), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00549e4bf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00549a140), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00549e48f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep  2 13:06:55.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6233" for this suite. @ 09/02/23 13:06:55.512
• [42.508 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/02/23 13:06:55.521
  Sep  2 13:06:55.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/23 13:06:55.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:55.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:55.542
  Sep  2 13:06:57.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6093" for this suite. @ 09/02/23 13:06:57.574
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/02/23 13:06:57.582
  Sep  2 13:06:57.582: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename endpointslice @ 09/02/23 13:06:57.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:57.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:57.6
  Sep  2 13:06:59.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2532" for this suite. @ 09/02/23 13:06:59.66
• [2.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/02/23 13:06:59.668
  Sep  2 13:06:59.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sysctl @ 09/02/23 13:06:59.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:59.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:59.692
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/02/23 13:06:59.696
  Sep  2 13:06:59.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6266" for this suite. @ 09/02/23 13:06:59.705
• [0.043 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/02/23 13:06:59.712
  Sep  2 13:06:59.712: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename namespaces @ 09/02/23 13:06:59.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:59.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:59.732
  STEP: Creating namespace "e2e-ns-cb25n" @ 09/02/23 13:06:59.74
  Sep  2 13:06:59.754: INFO: Namespace "e2e-ns-cb25n-3976" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-cb25n-3976" @ 09/02/23 13:06:59.754
  Sep  2 13:06:59.765: INFO: Namespace "e2e-ns-cb25n-3976" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-cb25n-3976" @ 09/02/23 13:06:59.765
  Sep  2 13:06:59.773: INFO: Namespace "e2e-ns-cb25n-3976" has []v1.FinalizerName{"kubernetes"}
  Sep  2 13:06:59.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3672" for this suite. @ 09/02/23 13:06:59.778
  STEP: Destroying namespace "e2e-ns-cb25n-3976" for this suite. @ 09/02/23 13:06:59.786
• [0.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/02/23 13:06:59.795
  Sep  2 13:06:59.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:06:59.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:06:59.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:06:59.816
  STEP: creating the pod @ 09/02/23 13:06:59.819
  STEP: submitting the pod to kubernetes @ 09/02/23 13:06:59.819
  STEP: verifying the pod is in kubernetes @ 09/02/23 13:07:01.842
  STEP: updating the pod @ 09/02/23 13:07:01.846
  Sep  2 13:07:02.357: INFO: Successfully updated pod "pod-update-58cad632-0a93-4880-98dd-a0f673268bd7"
  STEP: verifying the updated pod is in kubernetes @ 09/02/23 13:07:02.361
  Sep  2 13:07:02.369: INFO: Pod update OK
  Sep  2 13:07:02.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9231" for this suite. @ 09/02/23 13:07:02.373
• [2.586 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/02/23 13:07:02.381
  Sep  2 13:07:02.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:07:02.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:07:02.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:07:02.4
  STEP: Creating secret with name secret-test-map-7b70bc62-bdcf-436d-b92b-91e44d6c6c18 @ 09/02/23 13:07:02.404
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:07:02.411
  STEP: Saw pod success @ 09/02/23 13:07:06.433
  Sep  2 13:07:06.438: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-secrets-c836f94a-1759-4a41-a1e9-2bf83ea9184c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:07:06.451
  Sep  2 13:07:06.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2605" for this suite. @ 09/02/23 13:07:06.475
• [4.100 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/02/23 13:07:06.482
  Sep  2 13:07:06.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-pred @ 09/02/23 13:07:06.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:07:06.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:07:06.507
  Sep  2 13:07:06.512: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  2 13:07:06.523: INFO: Waiting for terminating namespaces to be deleted...
  Sep  2 13:07:06.526: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-21 before test
  Sep  2 13:07:06.531: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-jwc9k from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.531: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep  2 13:07:06.531: INFO: nginx-ingress-controller-kubernetes-worker-6mrtb from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.531: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:07:06.531: INFO: calico-node-b4c9m from kube-system started at 2023-09-02 12:02:29 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.531: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:07:06.531: INFO: coredns-59cfb5bf46-2gnnt from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.531: INFO: 	Container coredns ready: true, restart count 0
  Sep  2 13:07:06.531: INFO: kube-state-metrics-775d9f4f79-7hktf from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.531: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: metrics-server-v0.6.3-69d7fbfdf8-r5r2h from kube-system started at 2023-09-02 12:03:03 +0000 UTC (2 container statuses recorded)
  Sep  2 13:07:06.532: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: dashboard-metrics-scraper-5dd7cb5fc-b468x from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.532: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: kubernetes-dashboard-7b899cb9d9-n5gpw from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.532: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-jpmcf from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:07:06.532: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 13:07:06.532: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-65 before test
  Sep  2 13:07:06.538: INFO: nginx-ingress-controller-kubernetes-worker-p6bfp from ingress-nginx-kubernetes-worker started at 2023-09-02 12:05:28 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.538: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: calico-node-h5lpt from kube-system started at 2023-09-02 12:05:16 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.538: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: busybox-readonly-fsd53be6b3-27c2-4906-8374-f23f444c3397 from kubelet-test-6093 started at 2023-09-02 13:06:55 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.538: INFO: 	Container busybox-readonly-fsd53be6b3-27c2-4906-8374-f23f444c3397 ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: sonobuoy-e2e-job-0541715562ae46cb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:07:06.538: INFO: 	Container e2e ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-j7rdb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:07:06.538: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 13:07:06.538: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-35 before test
  Sep  2 13:07:06.544: INFO: nginx-ingress-controller-kubernetes-worker-kmvf6 from ingress-nginx-kubernetes-worker started at 2023-09-02 13:05:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.544: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:07:06.544: INFO: calico-node-zx26f from kube-system started at 2023-09-02 12:04:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.544: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:07:06.544: INFO: pod-update-58cad632-0a93-4880-98dd-a0f673268bd7 from pods-9231 started at 2023-09-02 13:06:59 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.544: INFO: 	Container pause ready: true, restart count 0
  Sep  2 13:07:06.544: INFO: sonobuoy from sonobuoy started at 2023-09-02 12:11:24 +0000 UTC (1 container statuses recorded)
  Sep  2 13:07:06.544: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  2 13:07:06.544: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-9ft4n from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:07:06.544: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:07:06.544: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/23 13:07:06.545
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/23 13:07:08.579
  STEP: Trying to apply a random label on the found node. @ 09/02/23 13:07:08.596
  STEP: verifying the node has the label kubernetes.io/e2e-1edc8a06-ab62-4bce-bf11-7a9e73f67d0b 95 @ 09/02/23 13:07:08.607
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/02/23 13:07:08.612
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.7.35 on the node which pod4 resides and expect not scheduled @ 09/02/23 13:07:10.628
  STEP: removing the label kubernetes.io/e2e-1edc8a06-ab62-4bce-bf11-7a9e73f67d0b off the node ip-172-31-7-35 @ 09/02/23 13:12:10.636
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1edc8a06-ab62-4bce-bf11-7a9e73f67d0b @ 09/02/23 13:12:10.65
  Sep  2 13:12:10.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1409" for this suite. @ 09/02/23 13:12:10.666
• [304.191 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/02/23 13:12:10.674
  Sep  2 13:12:10.674: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:12:10.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:12:10.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:12:10.697
  STEP: Creating configMap configmap-6529/configmap-test-75d08fb0-9a36-4e91-8065-743943a6f878 @ 09/02/23 13:12:10.7
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:12:10.705
  STEP: Saw pod success @ 09/02/23 13:12:14.725
  Sep  2 13:12:14.729: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-configmaps-4d1513f8-5cea-4a06-a9f6-8526dcf000ec container env-test: <nil>
  STEP: delete the pod @ 09/02/23 13:12:14.746
  Sep  2 13:12:14.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6529" for this suite. @ 09/02/23 13:12:14.763
• [4.096 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/02/23 13:12:14.77
  Sep  2 13:12:14.770: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:12:14.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:12:14.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:12:14.793
  STEP: Creating configMap with name configmap-test-volume-e4b21e5c-8219-4a12-a0d2-e026d318952c @ 09/02/23 13:12:14.796
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:12:14.801
  STEP: Saw pod success @ 09/02/23 13:12:18.827
  Sep  2 13:12:18.830: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-configmaps-3099a8dd-92ec-4108-86d5-dd924594a707 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:12:18.85
  Sep  2 13:12:18.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4415" for this suite. @ 09/02/23 13:12:18.872
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/02/23 13:12:18.886
  Sep  2 13:12:18.886: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replicaset @ 09/02/23 13:12:18.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:12:18.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:12:18.903
  STEP: Create a Replicaset @ 09/02/23 13:12:18.911
  STEP: Verify that the required pods have come up. @ 09/02/23 13:12:18.918
  Sep  2 13:12:18.922: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep  2 13:12:23.929: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/23 13:12:23.929
  STEP: Getting /status @ 09/02/23 13:12:23.929
  Sep  2 13:12:23.933: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/02/23 13:12:23.933
  Sep  2 13:12:23.944: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/02/23 13:12:23.944
  Sep  2 13:12:23.946: INFO: Observed &ReplicaSet event: ADDED
  Sep  2 13:12:23.946: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.946: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.947: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.947: INFO: Found replicaset test-rs in namespace replicaset-7944 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  2 13:12:23.947: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/02/23 13:12:23.947
  Sep  2 13:12:23.947: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep  2 13:12:23.955: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/02/23 13:12:23.955
  Sep  2 13:12:23.957: INFO: Observed &ReplicaSet event: ADDED
  Sep  2 13:12:23.957: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.958: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.958: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.958: INFO: Observed replicaset test-rs in namespace replicaset-7944 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  2 13:12:23.958: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  2 13:12:23.958: INFO: Found replicaset test-rs in namespace replicaset-7944 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep  2 13:12:23.958: INFO: Replicaset test-rs has a patched status
  Sep  2 13:12:23.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7944" for this suite. @ 09/02/23 13:12:23.962
• [5.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/02/23 13:12:23.974
  Sep  2 13:12:23.974: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 13:12:23.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:12:23.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:12:24
  Sep  2 13:12:46.071: INFO: Container started at 2023-09-02 13:12:24 +0000 UTC, pod became ready at 2023-09-02 13:12:44 +0000 UTC
  Sep  2 13:12:46.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9392" for this suite. @ 09/02/23 13:12:46.076
• [22.110 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/02/23 13:12:46.083
  Sep  2 13:12:46.083: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/02/23 13:12:46.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:12:46.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:12:46.105
  STEP: getting /apis @ 09/02/23 13:12:46.109
  STEP: getting /apis/storage.k8s.io @ 09/02/23 13:12:46.113
  STEP: getting /apis/storage.k8s.io/v1 @ 09/02/23 13:12:46.114
  STEP: creating @ 09/02/23 13:12:46.116
  STEP: watching @ 09/02/23 13:12:46.131
  Sep  2 13:12:46.131: INFO: starting watch
  STEP: getting @ 09/02/23 13:12:46.138
  STEP: listing in namespace @ 09/02/23 13:12:46.141
  STEP: listing across namespaces @ 09/02/23 13:12:46.144
  STEP: patching @ 09/02/23 13:12:46.148
  STEP: updating @ 09/02/23 13:12:46.153
  Sep  2 13:12:46.157: INFO: waiting for watch events with expected annotations in namespace
  Sep  2 13:12:46.158: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/02/23 13:12:46.158
  STEP: deleting a collection @ 09/02/23 13:12:46.17
  Sep  2 13:12:46.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2687" for this suite. @ 09/02/23 13:12:46.189
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/02/23 13:12:46.196
  Sep  2 13:12:46.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/23 13:12:46.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:12:46.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:12:46.22
  STEP: Performing setup for networking test in namespace pod-network-test-2041 @ 09/02/23 13:12:46.223
  STEP: creating a selector @ 09/02/23 13:12:46.223
  STEP: Creating the service pods in kubernetes @ 09/02/23 13:12:46.223
  Sep  2 13:12:46.223: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/02/23 13:12:58.306
  Sep  2 13:13:00.323: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  2 13:13:00.323: INFO: Breadth first check of 192.168.240.241 on host 172.31.26.21...
  Sep  2 13:13:00.326: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.141.6:9080/dial?request=hostname&protocol=udp&host=192.168.240.241&port=8081&tries=1'] Namespace:pod-network-test-2041 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:13:00.326: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:13:00.326: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:13:00.326: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2041/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.141.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.240.241%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  2 13:13:00.415: INFO: Waiting for responses: map[]
  Sep  2 13:13:00.415: INFO: reached 192.168.240.241 after 0/1 tries
  Sep  2 13:13:00.415: INFO: Breadth first check of 192.168.167.78 on host 172.31.35.65...
  Sep  2 13:13:00.419: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.141.6:9080/dial?request=hostname&protocol=udp&host=192.168.167.78&port=8081&tries=1'] Namespace:pod-network-test-2041 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:13:00.419: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:13:00.419: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:13:00.419: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2041/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.141.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.167.78%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  2 13:13:00.503: INFO: Waiting for responses: map[]
  Sep  2 13:13:00.503: INFO: reached 192.168.167.78 after 0/1 tries
  Sep  2 13:13:00.503: INFO: Breadth first check of 192.168.141.17 on host 172.31.7.35...
  Sep  2 13:13:00.506: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.141.6:9080/dial?request=hostname&protocol=udp&host=192.168.141.17&port=8081&tries=1'] Namespace:pod-network-test-2041 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:13:00.506: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:13:00.507: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:13:00.507: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2041/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.141.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.141.17%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  2 13:13:00.581: INFO: Waiting for responses: map[]
  Sep  2 13:13:00.581: INFO: reached 192.168.141.17 after 0/1 tries
  Sep  2 13:13:00.581: INFO: Going to retry 0 out of 3 pods....
  Sep  2 13:13:00.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2041" for this suite. @ 09/02/23 13:13:00.586
• [14.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/02/23 13:13:00.598
  Sep  2 13:13:00.598: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename containers @ 09/02/23 13:13:00.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:00.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:00.62
  STEP: Creating a pod to test override all @ 09/02/23 13:13:00.624
  STEP: Saw pod success @ 09/02/23 13:13:04.648
  Sep  2 13:13:04.651: INFO: Trying to get logs from node ip-172-31-7-35 pod client-containers-cf8a95e0-bf66-43ec-bfc5-6d70ffb38bdf container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:13:04.657
  Sep  2 13:13:04.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8796" for this suite. @ 09/02/23 13:13:04.681
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/02/23 13:13:04.688
  Sep  2 13:13:04.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:13:04.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:04.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:04.71
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/02/23 13:13:04.713
  STEP: Saw pod success @ 09/02/23 13:13:08.735
  Sep  2 13:13:08.738: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-60c61ab2-0d03-4183-937f-901bd784b180 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:13:08.744
  Sep  2 13:13:08.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4006" for this suite. @ 09/02/23 13:13:08.767
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/02/23 13:13:08.775
  Sep  2 13:13:08.775: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename job @ 09/02/23 13:13:08.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:08.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:08.796
  STEP: Creating a job @ 09/02/23 13:13:08.8
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/02/23 13:13:08.807
  STEP: patching /status @ 09/02/23 13:13:10.812
  STEP: updating /status @ 09/02/23 13:13:10.819
  STEP: get /status @ 09/02/23 13:13:10.828
  Sep  2 13:13:10.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8886" for this suite. @ 09/02/23 13:13:10.839
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/02/23 13:13:10.847
  Sep  2 13:13:10.847: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:13:10.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:10.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:10.866
  Sep  2 13:13:10.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3022" for this suite. @ 09/02/23 13:13:10.91
• [0.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/02/23 13:13:10.917
  Sep  2 13:13:10.917: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename disruption @ 09/02/23 13:13:10.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:10.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:10.941
  STEP: creating the pdb @ 09/02/23 13:13:10.944
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:13:10.95
  STEP: updating the pdb @ 09/02/23 13:13:12.958
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:13:12.967
  STEP: patching the pdb @ 09/02/23 13:13:14.974
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:13:14.983
  STEP: Waiting for the pdb to be deleted @ 09/02/23 13:13:16.999
  Sep  2 13:13:17.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9198" for this suite. @ 09/02/23 13:13:17.006
• [6.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/02/23 13:13:17.016
  Sep  2 13:13:17.017: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-pred @ 09/02/23 13:13:17.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:17.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:17.037
  Sep  2 13:13:17.040: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  2 13:13:17.049: INFO: Waiting for terminating namespaces to be deleted...
  Sep  2 13:13:17.052: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-21 before test
  Sep  2 13:13:17.059: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-jwc9k from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: nginx-ingress-controller-kubernetes-worker-6mrtb from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: calico-node-b4c9m from kube-system started at 2023-09-02 12:02:29 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: coredns-59cfb5bf46-2gnnt from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container coredns ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: kube-state-metrics-775d9f4f79-7hktf from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: metrics-server-v0.6.3-69d7fbfdf8-r5r2h from kube-system started at 2023-09-02 12:03:03 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: dashboard-metrics-scraper-5dd7cb5fc-b468x from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: kubernetes-dashboard-7b899cb9d9-n5gpw from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-jpmcf from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:17.059: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 13:13:17.059: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-65 before test
  Sep  2 13:13:17.064: INFO: nginx-ingress-controller-kubernetes-worker-p6bfp from ingress-nginx-kubernetes-worker started at 2023-09-02 12:05:28 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.064: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: suspend-false-to-true-mjrzc from job-8886 started at 2023-09-02 13:13:08 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.065: INFO: 	Container c ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: calico-node-h5lpt from kube-system started at 2023-09-02 12:05:16 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.065: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: sonobuoy-e2e-job-0541715562ae46cb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:17.065: INFO: 	Container e2e ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-j7rdb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:17.065: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 13:13:17.065: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-35 before test
  Sep  2 13:13:17.070: INFO: nginx-ingress-controller-kubernetes-worker-kmvf6 from ingress-nginx-kubernetes-worker started at 2023-09-02 13:05:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.070: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:13:17.070: INFO: suspend-false-to-true-mvq8j from job-8886 started at 2023-09-02 13:13:08 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.070: INFO: 	Container c ready: true, restart count 0
  Sep  2 13:13:17.070: INFO: calico-node-zx26f from kube-system started at 2023-09-02 12:04:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.070: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:13:17.070: INFO: sonobuoy from sonobuoy started at 2023-09-02 12:11:24 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:17.070: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  2 13:13:17.070: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-9ft4n from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:17.070: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:17.070: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-26-21 @ 09/02/23 13:13:17.088
  STEP: verifying the node has the label node ip-172-31-35-65 @ 09/02/23 13:13:17.107
  STEP: verifying the node has the label node ip-172-31-7-35 @ 09/02/23 13:13:17.125
  Sep  2 13:13:17.140: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-jwc9k requesting resource cpu=10m on Node ip-172-31-26-21
  Sep  2 13:13:17.140: INFO: Pod nginx-ingress-controller-kubernetes-worker-6mrtb requesting resource cpu=0m on Node ip-172-31-26-21
  Sep  2 13:13:17.140: INFO: Pod nginx-ingress-controller-kubernetes-worker-kmvf6 requesting resource cpu=0m on Node ip-172-31-7-35
  Sep  2 13:13:17.140: INFO: Pod nginx-ingress-controller-kubernetes-worker-p6bfp requesting resource cpu=0m on Node ip-172-31-35-65
  Sep  2 13:13:17.140: INFO: Pod suspend-false-to-true-mjrzc requesting resource cpu=0m on Node ip-172-31-35-65
  Sep  2 13:13:17.140: INFO: Pod suspend-false-to-true-mvq8j requesting resource cpu=0m on Node ip-172-31-7-35
  Sep  2 13:13:17.143: INFO: Pod calico-node-b4c9m requesting resource cpu=250m on Node ip-172-31-26-21
  Sep  2 13:13:17.143: INFO: Pod calico-node-h5lpt requesting resource cpu=250m on Node ip-172-31-35-65
  Sep  2 13:13:17.144: INFO: Pod calico-node-zx26f requesting resource cpu=250m on Node ip-172-31-7-35
  Sep  2 13:13:17.144: INFO: Pod coredns-59cfb5bf46-2gnnt requesting resource cpu=100m on Node ip-172-31-26-21
  Sep  2 13:13:17.144: INFO: Pod kube-state-metrics-775d9f4f79-7hktf requesting resource cpu=0m on Node ip-172-31-26-21
  Sep  2 13:13:17.144: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-r5r2h requesting resource cpu=5m on Node ip-172-31-26-21
  Sep  2 13:13:17.144: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-b468x requesting resource cpu=0m on Node ip-172-31-26-21
  Sep  2 13:13:17.144: INFO: Pod kubernetes-dashboard-7b899cb9d9-n5gpw requesting resource cpu=0m on Node ip-172-31-26-21
  Sep  2 13:13:17.144: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-7-35
  Sep  2 13:13:17.144: INFO: Pod sonobuoy-e2e-job-0541715562ae46cb requesting resource cpu=0m on Node ip-172-31-35-65
  Sep  2 13:13:17.144: INFO: Pod sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-9ft4n requesting resource cpu=0m on Node ip-172-31-7-35
  Sep  2 13:13:17.144: INFO: Pod sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-j7rdb requesting resource cpu=0m on Node ip-172-31-35-65
  Sep  2 13:13:17.144: INFO: Pod sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-jpmcf requesting resource cpu=0m on Node ip-172-31-26-21
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/02/23 13:13:17.144
  Sep  2 13:13:17.144: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-7-35
  Sep  2 13:13:17.153: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-26-21
  Sep  2 13:13:17.161: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-35-65
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/02/23 13:13:19.201
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26.1781172866de6302], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4631/filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26 to ip-172-31-7-35] @ 09/02/23 13:13:19.204
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26.178117288c9a3b0d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/02/23 13:13:19.204
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26.178117288df2b464], Reason = [Created], Message = [Created container filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26] @ 09/02/23 13:13:19.204
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26.178117289665ce0c], Reason = [Started], Message = [Started container filler-pod-1644341f-8d16-48c4-92e1-17fd27b6db26] @ 09/02/23 13:13:19.204
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f.178117286760c1c8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4631/filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f to ip-172-31-26-21] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f.178117288cfbedc8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f.178117288df1069a], Reason = [Created], Message = [Created container filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f.17811728937ed1e1], Reason = [Started], Message = [Started container filler-pod-26932248-debc-445c-b40b-01ec0f7fcb6f] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d6847870-e002-45e3-bc95-38d83be8d458.1781172868c4704d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4631/filler-pod-d6847870-e002-45e3-bc95-38d83be8d458 to ip-172-31-35-65] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d6847870-e002-45e3-bc95-38d83be8d458.178117288ec439a1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d6847870-e002-45e3-bc95-38d83be8d458.178117288fd9c383], Reason = [Created], Message = [Created container filler-pod-d6847870-e002-45e3-bc95-38d83be8d458] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d6847870-e002-45e3-bc95-38d83be8d458.1781172895ceb879], Reason = [Started], Message = [Started container filler-pod-d6847870-e002-45e3-bc95-38d83be8d458] @ 09/02/23 13:13:19.205
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17811728e124c1ee], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 09/02/23 13:13:19.217
  STEP: removing the label node off the node ip-172-31-26-21 @ 09/02/23 13:13:20.215
  STEP: verifying the node doesn't have the label node @ 09/02/23 13:13:20.227
  STEP: removing the label node off the node ip-172-31-35-65 @ 09/02/23 13:13:20.233
  STEP: verifying the node doesn't have the label node @ 09/02/23 13:13:20.248
  STEP: removing the label node off the node ip-172-31-7-35 @ 09/02/23 13:13:20.254
  STEP: verifying the node doesn't have the label node @ 09/02/23 13:13:20.268
  Sep  2 13:13:20.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4631" for this suite. @ 09/02/23 13:13:20.28
• [3.272 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/02/23 13:13:20.289
  Sep  2 13:13:20.289: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:13:20.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:20.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:20.314
  STEP: Setting up server cert @ 09/02/23 13:13:20.387
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:13:20.804
  STEP: Deploying the webhook pod @ 09/02/23 13:13:20.812
  STEP: Wait for the deployment to be ready @ 09/02/23 13:13:20.825
  Sep  2 13:13:20.834: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 13:13:22.845
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:13:22.853
  Sep  2 13:13:23.853: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  2 13:13:23.861: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9026-crds.webhook.example.com via the AdmissionRegistration API @ 09/02/23 13:13:24.375
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/02/23 13:13:24.391
  Sep  2 13:13:26.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3601" for this suite. @ 09/02/23 13:13:27.054
  STEP: Destroying namespace "webhook-markers-1858" for this suite. @ 09/02/23 13:13:27.061
• [6.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/02/23 13:13:27.071
  Sep  2 13:13:27.071: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-pred @ 09/02/23 13:13:27.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:27.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:27.092
  Sep  2 13:13:27.097: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  2 13:13:27.105: INFO: Waiting for terminating namespaces to be deleted...
  Sep  2 13:13:27.109: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-26-21 before test
  Sep  2 13:13:27.115: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-jwc9k from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.115: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep  2 13:13:27.115: INFO: nginx-ingress-controller-kubernetes-worker-6mrtb from ingress-nginx-kubernetes-worker started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.116: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:13:27.116: INFO: calico-node-b4c9m from kube-system started at 2023-09-02 12:02:29 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.116: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:13:27.116: INFO: coredns-59cfb5bf46-2gnnt from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.116: INFO: 	Container coredns ready: true, restart count 0
  Sep  2 13:13:27.117: INFO: kube-state-metrics-775d9f4f79-7hktf from kube-system started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.117: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep  2 13:13:27.117: INFO: metrics-server-v0.6.3-69d7fbfdf8-r5r2h from kube-system started at 2023-09-02 12:03:03 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:27.117: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  2 13:13:27.117: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep  2 13:13:27.118: INFO: dashboard-metrics-scraper-5dd7cb5fc-b468x from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.118: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  2 13:13:27.118: INFO: kubernetes-dashboard-7b899cb9d9-n5gpw from kubernetes-dashboard started at 2023-09-02 12:03:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.118: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  2 13:13:27.119: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-jpmcf from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:27.119: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:27.119: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 13:13:27.119: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-65 before test
  Sep  2 13:13:27.126: INFO: nginx-ingress-controller-kubernetes-worker-p6bfp from ingress-nginx-kubernetes-worker started at 2023-09-02 12:05:28 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.126: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: suspend-false-to-true-mjrzc from job-8886 started at 2023-09-02 13:13:08 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.126: INFO: 	Container c ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: calico-node-h5lpt from kube-system started at 2023-09-02 12:05:16 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.126: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: sonobuoy-e2e-job-0541715562ae46cb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:27.126: INFO: 	Container e2e ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-j7rdb from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:27.126: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  2 13:13:27.126: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-7-35 before test
  Sep  2 13:13:27.132: INFO: nginx-ingress-controller-kubernetes-worker-kmvf6 from ingress-nginx-kubernetes-worker started at 2023-09-02 13:05:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.132: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep  2 13:13:27.132: INFO: suspend-false-to-true-mvq8j from job-8886 started at 2023-09-02 13:13:08 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.132: INFO: 	Container c ready: true, restart count 0
  Sep  2 13:13:27.132: INFO: calico-node-zx26f from kube-system started at 2023-09-02 12:04:03 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.132: INFO: 	Container calico-node ready: true, restart count 0
  Sep  2 13:13:27.132: INFO: sonobuoy from sonobuoy started at 2023-09-02 12:11:24 +0000 UTC (1 container statuses recorded)
  Sep  2 13:13:27.132: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  2 13:13:27.132: INFO: sonobuoy-systemd-logs-daemon-set-8c75d47837d44e8a-9ft4n from sonobuoy started at 2023-09-02 12:11:27 +0000 UTC (2 container statuses recorded)
  Sep  2 13:13:27.132: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  2 13:13:27.132: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/02/23 13:13:27.133
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1781172abacd91e2], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 09/02/23 13:13:27.166
  Sep  2 13:13:28.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4568" for this suite. @ 09/02/23 13:13:28.169
• [1.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/02/23 13:13:28.176
  Sep  2 13:13:28.176: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename hostport @ 09/02/23 13:13:28.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:28.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:28.196
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/02/23 13:13:28.21
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.7.35 on the node which pod1 resides and expect scheduled @ 09/02/23 13:13:30.228
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.7.35 but use UDP protocol on the node which pod2 resides @ 09/02/23 13:13:32.241
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/02/23 13:13:36.274
  Sep  2 13:13:36.274: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.7.35 http://127.0.0.1:54323/hostname] Namespace:hostport-3224 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:13:36.274: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:13:36.274: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:13:36.274: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3224/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.7.35+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.7.35, port: 54323 @ 09/02/23 13:13:36.35
  Sep  2 13:13:36.350: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.7.35:54323/hostname] Namespace:hostport-3224 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:13:36.350: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:13:36.350: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:13:36.350: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3224/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.7.35%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.7.35, port: 54323 UDP @ 09/02/23 13:13:36.429
  Sep  2 13:13:36.430: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.7.35 54323] Namespace:hostport-3224 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:13:36.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:13:36.430: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:13:36.430: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3224/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.7.35+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Sep  2 13:13:41.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3224" for this suite. @ 09/02/23 13:13:41.523
• [13.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/02/23 13:13:41.532
  Sep  2 13:13:41.532: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:13:41.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:41.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:41.552
  STEP: creating a Pod with a static label @ 09/02/23 13:13:41.561
  STEP: watching for Pod to be ready @ 09/02/23 13:13:41.569
  Sep  2 13:13:41.571: INFO: observed Pod pod-test in namespace pods-6122 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep  2 13:13:41.574: INFO: observed Pod pod-test in namespace pods-6122 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC  }]
  Sep  2 13:13:41.591: INFO: observed Pod pod-test in namespace pods-6122 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC  }]
  Sep  2 13:13:42.892: INFO: Found Pod pod-test in namespace pods-6122 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:42 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:42 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:13:41 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/02/23 13:13:42.896
  STEP: getting the Pod and ensuring that it's patched @ 09/02/23 13:13:42.906
  STEP: replacing the Pod's status Ready condition to False @ 09/02/23 13:13:42.91
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/02/23 13:13:42.926
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/02/23 13:13:42.926
  STEP: watching for the Pod to be deleted @ 09/02/23 13:13:42.935
  Sep  2 13:13:42.937: INFO: observed event type MODIFIED
  Sep  2 13:13:44.900: INFO: observed event type MODIFIED
  Sep  2 13:13:45.113: INFO: observed event type MODIFIED
  Sep  2 13:13:45.902: INFO: observed event type MODIFIED
  Sep  2 13:13:45.918: INFO: observed event type MODIFIED
  Sep  2 13:13:45.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6122" for this suite. @ 09/02/23 13:13:45.93
• [4.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/02/23 13:13:45.94
  Sep  2 13:13:45.940: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:13:45.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:45.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:45.958
  STEP: Creating configMap with name cm-test-opt-del-2bd6dc6a-f4f7-4e22-891d-7b00a5cfbab5 @ 09/02/23 13:13:45.966
  STEP: Creating configMap with name cm-test-opt-upd-780937f7-7d2c-4c9d-896b-c2d054a5a91c @ 09/02/23 13:13:45.97
  STEP: Creating the pod @ 09/02/23 13:13:45.975
  STEP: Deleting configmap cm-test-opt-del-2bd6dc6a-f4f7-4e22-891d-7b00a5cfbab5 @ 09/02/23 13:13:48.021
  STEP: Updating configmap cm-test-opt-upd-780937f7-7d2c-4c9d-896b-c2d054a5a91c @ 09/02/23 13:13:48.027
  STEP: Creating configMap with name cm-test-opt-create-82e444de-4e6a-4e41-93a6-14a6e848576a @ 09/02/23 13:13:48.034
  STEP: waiting to observe update in volume @ 09/02/23 13:13:48.037
  Sep  2 13:13:52.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4006" for this suite. @ 09/02/23 13:13:52.078
• [6.146 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/02/23 13:13:52.086
  Sep  2 13:13:52.086: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename discovery @ 09/02/23 13:13:52.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:52.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:52.107
  STEP: Setting up server cert @ 09/02/23 13:13:52.115
  STEP: Requesting APIResourceList from "/api/v1" @ 09/02/23 13:13:52.827
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/02/23 13:13:52.829
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/02/23 13:13:52.831
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/02/23 13:13:52.833
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/02/23 13:13:52.835
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/02/23 13:13:52.837
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/02/23 13:13:52.838
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/02/23 13:13:52.839
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/02/23 13:13:52.841
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/02/23 13:13:52.843
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/02/23 13:13:52.844
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/02/23 13:13:52.845
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/02/23 13:13:52.847
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/02/23 13:13:52.848
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/02/23 13:13:52.851
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/02/23 13:13:52.852
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/02/23 13:13:52.854
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/02/23 13:13:52.855
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/02/23 13:13:52.858
  Sep  2 13:13:52.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2366" for this suite. @ 09/02/23 13:13:52.865
• [0.786 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/02/23 13:13:52.872
  Sep  2 13:13:52.873: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 13:13:52.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:13:52.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:13:52.89
  STEP: Creating service test in namespace statefulset-3999 @ 09/02/23 13:13:52.894
  STEP: Looking for a node to schedule stateful set and pod @ 09/02/23 13:13:52.899
  STEP: Creating pod with conflicting port in namespace statefulset-3999 @ 09/02/23 13:13:52.903
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3999 @ 09/02/23 13:13:52.911
  STEP: Creating statefulset with conflicting port in namespace statefulset-3999 @ 09/02/23 13:13:54.919
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3999 @ 09/02/23 13:13:54.925
  Sep  2 13:13:54.945: INFO: Observed stateful pod in namespace: statefulset-3999, name: ss-0, uid: a86aedcf-08fc-4587-aa95-368335691577, status phase: Pending. Waiting for statefulset controller to delete.
  Sep  2 13:13:54.962: INFO: Observed stateful pod in namespace: statefulset-3999, name: ss-0, uid: a86aedcf-08fc-4587-aa95-368335691577, status phase: Failed. Waiting for statefulset controller to delete.
  Sep  2 13:13:54.972: INFO: Observed stateful pod in namespace: statefulset-3999, name: ss-0, uid: a86aedcf-08fc-4587-aa95-368335691577, status phase: Failed. Waiting for statefulset controller to delete.
  Sep  2 13:13:54.976: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3999
  STEP: Removing pod with conflicting port in namespace statefulset-3999 @ 09/02/23 13:13:54.976
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3999 and will be in running state @ 09/02/23 13:13:54.998
  Sep  2 13:13:57.006: INFO: Deleting all statefulset in ns statefulset-3999
  Sep  2 13:13:57.010: INFO: Scaling statefulset ss to 0
  Sep  2 13:14:07.027: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 13:14:07.031: INFO: Deleting statefulset ss
  Sep  2 13:14:07.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3999" for this suite. @ 09/02/23 13:14:07.05
• [14.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/02/23 13:14:07.058
  Sep  2 13:14:07.058: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 13:14:07.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:07.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:07.078
  STEP: Creating a test headless service @ 09/02/23 13:14:07.082
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1781.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1781.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/02/23 13:14:07.088
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1781.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1781.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/02/23 13:14:07.088
  STEP: creating a pod to probe DNS @ 09/02/23 13:14:07.088
  STEP: submitting the pod to kubernetes @ 09/02/23 13:14:07.088
  STEP: retrieving the pod @ 09/02/23 13:14:09.114
  STEP: looking for the results for each expected name from probers @ 09/02/23 13:14:09.118
  Sep  2 13:14:09.135: INFO: DNS probes using dns-1781/dns-test-4d429e99-4807-4dbf-8ca3-59afe7c3d73a succeeded

  Sep  2 13:14:09.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:14:09.139
  STEP: deleting the test headless service @ 09/02/23 13:14:09.155
  STEP: Destroying namespace "dns-1781" for this suite. @ 09/02/23 13:14:09.167
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/02/23 13:14:09.178
  Sep  2 13:14:09.178: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replicaset @ 09/02/23 13:14:09.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:09.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:09.199
  STEP: Create a ReplicaSet @ 09/02/23 13:14:09.202
  STEP: Verify that the required pods have come up @ 09/02/23 13:14:09.209
  Sep  2 13:14:09.212: INFO: Pod name sample-pod: Found 0 pods out of 3
  Sep  2 13:14:14.219: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/02/23 13:14:14.219
  Sep  2 13:14:14.222: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/02/23 13:14:14.222
  STEP: DeleteCollection of the ReplicaSets @ 09/02/23 13:14:14.227
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/02/23 13:14:14.236
  Sep  2 13:14:14.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5905" for this suite. @ 09/02/23 13:14:14.25
• [5.086 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/02/23 13:14:14.264
  Sep  2 13:14:14.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename watch @ 09/02/23 13:14:14.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:14.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:14.284
  STEP: creating a watch on configmaps with a certain label @ 09/02/23 13:14:14.287
  STEP: creating a new configmap @ 09/02/23 13:14:14.289
  STEP: modifying the configmap once @ 09/02/23 13:14:14.293
  STEP: changing the label value of the configmap @ 09/02/23 13:14:14.303
  STEP: Expecting to observe a delete notification for the watched object @ 09/02/23 13:14:14.312
  Sep  2 13:14:14.312: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8587  97387ea5-74f4-4f20-98c8-0c7207ba706e 25610 0 2023-09-02 13:14:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-02 13:14:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:14:14.312: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8587  97387ea5-74f4-4f20-98c8-0c7207ba706e 25613 0 2023-09-02 13:14:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-02 13:14:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:14:14.312: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8587  97387ea5-74f4-4f20-98c8-0c7207ba706e 25615 0 2023-09-02 13:14:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-02 13:14:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/02/23 13:14:14.312
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/02/23 13:14:14.321
  STEP: changing the label value of the configmap back @ 09/02/23 13:14:24.321
  STEP: modifying the configmap a third time @ 09/02/23 13:14:24.33
  STEP: deleting the configmap @ 09/02/23 13:14:24.337
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/02/23 13:14:24.344
  Sep  2 13:14:24.344: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8587  97387ea5-74f4-4f20-98c8-0c7207ba706e 25674 0 2023-09-02 13:14:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-02 13:14:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:14:24.344: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8587  97387ea5-74f4-4f20-98c8-0c7207ba706e 25675 0 2023-09-02 13:14:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-02 13:14:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:14:24.344: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8587  97387ea5-74f4-4f20-98c8-0c7207ba706e 25676 0 2023-09-02 13:14:14 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-02 13:14:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:14:24.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8587" for this suite. @ 09/02/23 13:14:24.349
• [10.091 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/02/23 13:14:24.355
  Sep  2 13:14:24.356: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:14:24.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:24.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:24.374
  STEP: Setting up server cert @ 09/02/23 13:14:24.401
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:14:24.679
  STEP: Deploying the webhook pod @ 09/02/23 13:14:24.688
  STEP: Wait for the deployment to be ready @ 09/02/23 13:14:24.698
  Sep  2 13:14:24.708: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/02/23 13:14:26.72
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:14:26.729
  Sep  2 13:14:27.729: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/02/23 13:14:27.737
  STEP: create a pod that should be updated by the webhook @ 09/02/23 13:14:27.754
  Sep  2 13:14:27.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5246" for this suite. @ 09/02/23 13:14:27.823
  STEP: Destroying namespace "webhook-markers-3536" for this suite. @ 09/02/23 13:14:27.832
• [3.483 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/02/23 13:14:27.84
  Sep  2 13:14:27.840: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 13:14:27.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:27.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:27.866
  Sep  2 13:14:27.869: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  W0902 13:14:30.423568      19 warnings.go:70] unknown field "alpha"
  W0902 13:14:30.423588      19 warnings.go:70] unknown field "beta"
  W0902 13:14:30.423594      19 warnings.go:70] unknown field "delta"
  W0902 13:14:30.423601      19 warnings.go:70] unknown field "epsilon"
  W0902 13:14:30.423606      19 warnings.go:70] unknown field "gamma"
  Sep  2 13:14:30.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6761" for this suite. @ 09/02/23 13:14:30.99
• [3.156 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/02/23 13:14:30.997
  Sep  2 13:14:30.997: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:14:30.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:31.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:31.019
  STEP: Saw pod success @ 09/02/23 13:14:37.086
  Sep  2 13:14:37.091: INFO: Trying to get logs from node ip-172-31-7-35 pod client-envvars-2850b142-8624-4ffb-be7f-0cabe41a3b57 container env3cont: <nil>
  STEP: delete the pod @ 09/02/23 13:14:37.106
  Sep  2 13:14:37.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-198" for this suite. @ 09/02/23 13:14:37.125
• [6.134 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/02/23 13:14:37.132
  Sep  2 13:14:37.132: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename endpointslice @ 09/02/23 13:14:37.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:14:37.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:14:37.15
  STEP: referencing a single matching pod @ 09/02/23 13:14:42.28
  STEP: referencing matching pods with named port @ 09/02/23 13:14:47.287
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/02/23 13:14:52.297
  STEP: recreating EndpointSlices after they've been deleted @ 09/02/23 13:14:57.306
  Sep  2 13:14:57.336: INFO: EndpointSlice for Service endpointslice-9091/example-named-port not found
  Sep  2 13:15:07.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9091" for this suite. @ 09/02/23 13:15:07.35
• [30.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/02/23 13:15:07.361
  Sep  2 13:15:07.361: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:15:07.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:07.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:07.382
  STEP: Creating configMap with name configmap-test-volume-map-0b7d804e-1680-4207-9d9f-11efe38ed4ff @ 09/02/23 13:15:07.386
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:15:07.391
  STEP: Saw pod success @ 09/02/23 13:15:11.414
  Sep  2 13:15:11.417: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-configmaps-02ce456a-4a23-4d1b-aece-8ea4624aafe9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:15:11.425
  Sep  2 13:15:11.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2406" for this suite. @ 09/02/23 13:15:11.448
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/02/23 13:15:11.455
  Sep  2 13:15:11.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:15:11.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:11.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:11.476
  STEP: Creating secret with name secret-test-224aa445-9690-438d-802a-9a76449525c1 @ 09/02/23 13:15:11.48
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:15:11.484
  STEP: Saw pod success @ 09/02/23 13:15:15.51
  Sep  2 13:15:15.514: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-secrets-5da798c6-f032-4995-8bac-4807d51b535f container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:15:15.521
  Sep  2 13:15:15.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5149" for this suite. @ 09/02/23 13:15:15.541
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/02/23 13:15:15.548
  Sep  2 13:15:15.548: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 13:15:15.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:15.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:15.567
  Sep  2 13:15:17.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:15:17.594: INFO: Deleting pod "var-expansion-3a609b9d-0f49-45c6-b824-6419b832680f" in namespace "var-expansion-108"
  Sep  2 13:15:17.601: INFO: Wait up to 5m0s for pod "var-expansion-3a609b9d-0f49-45c6-b824-6419b832680f" to be fully deleted
  STEP: Destroying namespace "var-expansion-108" for this suite. @ 09/02/23 13:15:19.612
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/02/23 13:15:19.622
  Sep  2 13:15:19.622: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename proxy @ 09/02/23 13:15:19.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:19.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:19.649
  STEP: starting an echo server on multiple ports @ 09/02/23 13:15:19.662
  STEP: creating replication controller proxy-service-kfxzz in namespace proxy-1227 @ 09/02/23 13:15:19.662
  I0902 13:15:19.682742      19 runners.go:197] Created replication controller with name: proxy-service-kfxzz, namespace: proxy-1227, replica count: 1
  I0902 13:15:20.734093      19 runners.go:197] proxy-service-kfxzz Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0902 13:15:21.734871      19 runners.go:197] proxy-service-kfxzz Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:15:21.739: INFO: setup took 2.086222278s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/02/23 13:15:21.739
  Sep  2 13:15:21.753: INFO: (0) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 13.359323ms)
  Sep  2 13:15:21.753: INFO: (0) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 13.781674ms)
  Sep  2 13:15:21.754: INFO: (0) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 14.505479ms)
  Sep  2 13:15:21.754: INFO: (0) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 14.521786ms)
  Sep  2 13:15:21.754: INFO: (0) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 14.76542ms)
  Sep  2 13:15:21.754: INFO: (0) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 14.652871ms)
  Sep  2 13:15:21.754: INFO: (0) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 14.508799ms)
  Sep  2 13:15:21.758: INFO: (0) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 19.032541ms)
  Sep  2 13:15:21.765: INFO: (0) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 25.934922ms)
  Sep  2 13:15:21.765: INFO: (0) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 25.620488ms)
  Sep  2 13:15:21.766: INFO: (0) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 26.080225ms)
  Sep  2 13:15:21.766: INFO: (0) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 26.424116ms)
  Sep  2 13:15:21.766: INFO: (0) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 26.63361ms)
  Sep  2 13:15:21.766: INFO: (0) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 26.777627ms)
  Sep  2 13:15:21.767: INFO: (0) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 27.302049ms)
  Sep  2 13:15:21.767: INFO: (0) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 27.034169ms)
  Sep  2 13:15:21.777: INFO: (1) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 10.28309ms)
  Sep  2 13:15:21.777: INFO: (1) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 10.17099ms)
  Sep  2 13:15:21.778: INFO: (1) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 10.994894ms)
  Sep  2 13:15:21.779: INFO: (1) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 12.396602ms)
  Sep  2 13:15:21.780: INFO: (1) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 13.224946ms)
  Sep  2 13:15:21.780: INFO: (1) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 13.313554ms)
  Sep  2 13:15:21.780: INFO: (1) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 13.27948ms)
  Sep  2 13:15:21.781: INFO: (1) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 13.609637ms)
  Sep  2 13:15:21.781: INFO: (1) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 14.504899ms)
  Sep  2 13:15:21.782: INFO: (1) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 15.252019ms)
  Sep  2 13:15:21.783: INFO: (1) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 15.41541ms)
  Sep  2 13:15:21.783: INFO: (1) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 15.491858ms)
  Sep  2 13:15:21.783: INFO: (1) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 15.640942ms)
  Sep  2 13:15:21.783: INFO: (1) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 15.720552ms)
  Sep  2 13:15:21.783: INFO: (1) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 16.136277ms)
  Sep  2 13:15:21.783: INFO: (1) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 15.920494ms)
  Sep  2 13:15:21.789: INFO: (2) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 6.008706ms)
  Sep  2 13:15:21.790: INFO: (2) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 7.338895ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 11.539289ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 11.716565ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 11.682893ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 11.668557ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 12.10801ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 11.673889ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 12.084071ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 12.072179ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 12.047134ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 12.1157ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 12.193553ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 12.2578ms)
  Sep  2 13:15:21.795: INFO: (2) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 12.21249ms)
  Sep  2 13:15:21.796: INFO: (2) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 12.227399ms)
  Sep  2 13:15:21.801: INFO: (3) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 5.192682ms)
  Sep  2 13:15:21.804: INFO: (3) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 8.128429ms)
  Sep  2 13:15:21.805: INFO: (3) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 8.667729ms)
  Sep  2 13:15:21.805: INFO: (3) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.048395ms)
  Sep  2 13:15:21.805: INFO: (3) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 9.018584ms)
  Sep  2 13:15:21.805: INFO: (3) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 9.184223ms)
  Sep  2 13:15:21.806: INFO: (3) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.605004ms)
  Sep  2 13:15:21.806: INFO: (3) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 9.984466ms)
  Sep  2 13:15:21.806: INFO: (3) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.709218ms)
  Sep  2 13:15:21.807: INFO: (3) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 10.647858ms)
  Sep  2 13:15:21.807: INFO: (3) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 10.489777ms)
  Sep  2 13:15:21.807: INFO: (3) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.856039ms)
  Sep  2 13:15:21.807: INFO: (3) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.815399ms)
  Sep  2 13:15:21.807: INFO: (3) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 11.281939ms)
  Sep  2 13:15:21.808: INFO: (3) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 11.638175ms)
  Sep  2 13:15:21.808: INFO: (3) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.980131ms)
  Sep  2 13:15:21.813: INFO: (4) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 5.407307ms)
  Sep  2 13:15:21.815: INFO: (4) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 7.23454ms)
  Sep  2 13:15:21.816: INFO: (4) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 7.222091ms)
  Sep  2 13:15:21.817: INFO: (4) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.354204ms)
  Sep  2 13:15:21.818: INFO: (4) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.686571ms)
  Sep  2 13:15:21.818: INFO: (4) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 9.608681ms)
  Sep  2 13:15:21.818: INFO: (4) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 9.841847ms)
  Sep  2 13:15:21.818: INFO: (4) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 9.885039ms)
  Sep  2 13:15:21.819: INFO: (4) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 10.207586ms)
  Sep  2 13:15:21.819: INFO: (4) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.877491ms)
  Sep  2 13:15:21.819: INFO: (4) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 10.950403ms)
  Sep  2 13:15:21.820: INFO: (4) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 11.299306ms)
  Sep  2 13:15:21.820: INFO: (4) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 11.381091ms)
  Sep  2 13:15:21.820: INFO: (4) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 11.729435ms)
  Sep  2 13:15:21.820: INFO: (4) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 11.85802ms)
  Sep  2 13:15:21.821: INFO: (4) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 12.033656ms)
  Sep  2 13:15:21.825: INFO: (5) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 4.685452ms)
  Sep  2 13:15:21.827: INFO: (5) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 6.156877ms)
  Sep  2 13:15:21.827: INFO: (5) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 6.311649ms)
  Sep  2 13:15:21.828: INFO: (5) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 7.026053ms)
  Sep  2 13:15:21.829: INFO: (5) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 7.855581ms)
  Sep  2 13:15:21.829: INFO: (5) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 7.951627ms)
  Sep  2 13:15:21.829: INFO: (5) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.044074ms)
  Sep  2 13:15:21.829: INFO: (5) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 8.57912ms)
  Sep  2 13:15:21.830: INFO: (5) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 9.366867ms)
  Sep  2 13:15:21.831: INFO: (5) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.67435ms)
  Sep  2 13:15:21.831: INFO: (5) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 9.848373ms)
  Sep  2 13:15:21.831: INFO: (5) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.147785ms)
  Sep  2 13:15:21.831: INFO: (5) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.449405ms)
  Sep  2 13:15:21.831: INFO: (5) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.500011ms)
  Sep  2 13:15:21.832: INFO: (5) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 10.648225ms)
  Sep  2 13:15:21.832: INFO: (5) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.937385ms)
  Sep  2 13:15:21.837: INFO: (6) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 4.696897ms)
  Sep  2 13:15:21.838: INFO: (6) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 5.861979ms)
  Sep  2 13:15:21.839: INFO: (6) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 6.890197ms)
  Sep  2 13:15:21.841: INFO: (6) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 9.207142ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 9.049995ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 9.618435ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 9.548004ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.556098ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 9.915366ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 9.547234ms)
  Sep  2 13:15:21.842: INFO: (6) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 10.081991ms)
  Sep  2 13:15:21.843: INFO: (6) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.319883ms)
  Sep  2 13:15:21.843: INFO: (6) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.41424ms)
  Sep  2 13:15:21.843: INFO: (6) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.643701ms)
  Sep  2 13:15:21.844: INFO: (6) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 11.083827ms)
  Sep  2 13:15:21.844: INFO: (6) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 10.895915ms)
  Sep  2 13:15:21.850: INFO: (7) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 5.826262ms)
  Sep  2 13:15:21.850: INFO: (7) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.571363ms)
  Sep  2 13:15:21.850: INFO: (7) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 6.382894ms)
  Sep  2 13:15:21.852: INFO: (7) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 8.256796ms)
  Sep  2 13:15:21.853: INFO: (7) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 8.719602ms)
  Sep  2 13:15:21.853: INFO: (7) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 9.515825ms)
  Sep  2 13:15:21.854: INFO: (7) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 9.190289ms)
  Sep  2 13:15:21.854: INFO: (7) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 9.929057ms)
  Sep  2 13:15:21.854: INFO: (7) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.782765ms)
  Sep  2 13:15:21.854: INFO: (7) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 9.998455ms)
  Sep  2 13:15:21.854: INFO: (7) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 9.883973ms)
  Sep  2 13:15:21.854: INFO: (7) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 9.913446ms)
  Sep  2 13:15:21.855: INFO: (7) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 10.535684ms)
  Sep  2 13:15:21.855: INFO: (7) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.840201ms)
  Sep  2 13:15:21.855: INFO: (7) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 11.324979ms)
  Sep  2 13:15:21.856: INFO: (7) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.683776ms)
  Sep  2 13:15:21.862: INFO: (8) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 5.73943ms)
  Sep  2 13:15:21.863: INFO: (8) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 6.764825ms)
  Sep  2 13:15:21.863: INFO: (8) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.683823ms)
  Sep  2 13:15:21.864: INFO: (8) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 7.775273ms)
  Sep  2 13:15:21.865: INFO: (8) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.54431ms)
  Sep  2 13:15:21.865: INFO: (8) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.425102ms)
  Sep  2 13:15:21.866: INFO: (8) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 9.794878ms)
  Sep  2 13:15:21.866: INFO: (8) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 9.541331ms)
  Sep  2 13:15:21.866: INFO: (8) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 10.214188ms)
  Sep  2 13:15:21.866: INFO: (8) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 10.154847ms)
  Sep  2 13:15:21.867: INFO: (8) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.730936ms)
  Sep  2 13:15:21.867: INFO: (8) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.962457ms)
  Sep  2 13:15:21.867: INFO: (8) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 10.702415ms)
  Sep  2 13:15:21.867: INFO: (8) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 11.147332ms)
  Sep  2 13:15:21.869: INFO: (8) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 12.400695ms)
  Sep  2 13:15:21.869: INFO: (8) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 12.459834ms)
  Sep  2 13:15:21.874: INFO: (9) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 5.300572ms)
  Sep  2 13:15:21.875: INFO: (9) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 6.049278ms)
  Sep  2 13:15:21.875: INFO: (9) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 6.025228ms)
  Sep  2 13:15:21.875: INFO: (9) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 6.246837ms)
  Sep  2 13:15:21.876: INFO: (9) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 6.84881ms)
  Sep  2 13:15:21.877: INFO: (9) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 7.676032ms)
  Sep  2 13:15:21.877: INFO: (9) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 8.037378ms)
  Sep  2 13:15:21.878: INFO: (9) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 8.317235ms)
  Sep  2 13:15:21.878: INFO: (9) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 8.365631ms)
  Sep  2 13:15:21.878: INFO: (9) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.004656ms)
  Sep  2 13:15:21.878: INFO: (9) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 9.055672ms)
  Sep  2 13:15:21.879: INFO: (9) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.211151ms)
  Sep  2 13:15:21.880: INFO: (9) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.238846ms)
  Sep  2 13:15:21.880: INFO: (9) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.751421ms)
  Sep  2 13:15:21.880: INFO: (9) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 10.916505ms)
  Sep  2 13:15:21.880: INFO: (9) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.028564ms)
  Sep  2 13:15:21.886: INFO: (10) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 5.476182ms)
  Sep  2 13:15:21.886: INFO: (10) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 5.300423ms)
  Sep  2 13:15:21.887: INFO: (10) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 6.420153ms)
  Sep  2 13:15:21.889: INFO: (10) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 7.640342ms)
  Sep  2 13:15:21.889: INFO: (10) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 8.23062ms)
  Sep  2 13:15:21.890: INFO: (10) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.695946ms)
  Sep  2 13:15:21.890: INFO: (10) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 9.31496ms)
  Sep  2 13:15:21.890: INFO: (10) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.29732ms)
  Sep  2 13:15:21.891: INFO: (10) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.792974ms)
  Sep  2 13:15:21.891: INFO: (10) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 9.96497ms)
  Sep  2 13:15:21.892: INFO: (10) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.827577ms)
  Sep  2 13:15:21.892: INFO: (10) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.694577ms)
  Sep  2 13:15:21.892: INFO: (10) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.947101ms)
  Sep  2 13:15:21.892: INFO: (10) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 10.991674ms)
  Sep  2 13:15:21.892: INFO: (10) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 11.499475ms)
  Sep  2 13:15:21.893: INFO: (10) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.683562ms)
  Sep  2 13:15:21.897: INFO: (11) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 4.346651ms)
  Sep  2 13:15:21.898: INFO: (11) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 4.81258ms)
  Sep  2 13:15:21.899: INFO: (11) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.286207ms)
  Sep  2 13:15:21.899: INFO: (11) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.501108ms)
  Sep  2 13:15:21.901: INFO: (11) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 7.421571ms)
  Sep  2 13:15:21.901: INFO: (11) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 7.75045ms)
  Sep  2 13:15:21.902: INFO: (11) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 8.790735ms)
  Sep  2 13:15:21.902: INFO: (11) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 8.651389ms)
  Sep  2 13:15:21.902: INFO: (11) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.952004ms)
  Sep  2 13:15:21.902: INFO: (11) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 8.920573ms)
  Sep  2 13:15:21.902: INFO: (11) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 9.20668ms)
  Sep  2 13:15:21.903: INFO: (11) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 9.707101ms)
  Sep  2 13:15:21.903: INFO: (11) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 9.968834ms)
  Sep  2 13:15:21.904: INFO: (11) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 10.659163ms)
  Sep  2 13:15:21.904: INFO: (11) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.52017ms)
  Sep  2 13:15:21.904: INFO: (11) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 11.242982ms)
  Sep  2 13:15:21.909: INFO: (12) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 4.794164ms)
  Sep  2 13:15:21.910: INFO: (12) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 5.310707ms)
  Sep  2 13:15:21.911: INFO: (12) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 6.588884ms)
  Sep  2 13:15:21.912: INFO: (12) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 7.315779ms)
  Sep  2 13:15:21.913: INFO: (12) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 7.753093ms)
  Sep  2 13:15:21.913: INFO: (12) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 8.821095ms)
  Sep  2 13:15:21.914: INFO: (12) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 9.449361ms)
  Sep  2 13:15:21.914: INFO: (12) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 9.31848ms)
  Sep  2 13:15:21.914: INFO: (12) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.575982ms)
  Sep  2 13:15:21.914: INFO: (12) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.632869ms)
  Sep  2 13:15:21.915: INFO: (12) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.367706ms)
  Sep  2 13:15:21.915: INFO: (12) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 10.670711ms)
  Sep  2 13:15:21.915: INFO: (12) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.770537ms)
  Sep  2 13:15:21.916: INFO: (12) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.193196ms)
  Sep  2 13:15:21.916: INFO: (12) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 11.306014ms)
  Sep  2 13:15:21.916: INFO: (12) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 11.341995ms)
  Sep  2 13:15:21.922: INFO: (13) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 5.961068ms)
  Sep  2 13:15:21.923: INFO: (13) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.387577ms)
  Sep  2 13:15:21.923: INFO: (13) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 6.012753ms)
  Sep  2 13:15:21.925: INFO: (13) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 8.220939ms)
  Sep  2 13:15:21.925: INFO: (13) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 8.741858ms)
  Sep  2 13:15:21.926: INFO: (13) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 8.865038ms)
  Sep  2 13:15:21.926: INFO: (13) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.937753ms)
  Sep  2 13:15:21.926: INFO: (13) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 9.476258ms)
  Sep  2 13:15:21.926: INFO: (13) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 9.416531ms)
  Sep  2 13:15:21.927: INFO: (13) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.812721ms)
  Sep  2 13:15:21.927: INFO: (13) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 9.786033ms)
  Sep  2 13:15:21.927: INFO: (13) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.135946ms)
  Sep  2 13:15:21.927: INFO: (13) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 10.33077ms)
  Sep  2 13:15:21.927: INFO: (13) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.644002ms)
  Sep  2 13:15:21.927: INFO: (13) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 11.028137ms)
  Sep  2 13:15:21.929: INFO: (13) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 11.831013ms)
  Sep  2 13:15:21.933: INFO: (14) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 4.719317ms)
  Sep  2 13:15:21.934: INFO: (14) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 5.22116ms)
  Sep  2 13:15:21.935: INFO: (14) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 5.927151ms)
  Sep  2 13:15:21.935: INFO: (14) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 5.901768ms)
  Sep  2 13:15:21.936: INFO: (14) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 7.402126ms)
  Sep  2 13:15:21.937: INFO: (14) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 7.514886ms)
  Sep  2 13:15:21.937: INFO: (14) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 8.207052ms)
  Sep  2 13:15:21.938: INFO: (14) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 8.315754ms)
  Sep  2 13:15:21.938: INFO: (14) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 9.087391ms)
  Sep  2 13:15:21.938: INFO: (14) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.196265ms)
  Sep  2 13:15:21.939: INFO: (14) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 9.38334ms)
  Sep  2 13:15:21.939: INFO: (14) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 9.594814ms)
  Sep  2 13:15:21.939: INFO: (14) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 10.515176ms)
  Sep  2 13:15:21.939: INFO: (14) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.085793ms)
  Sep  2 13:15:21.940: INFO: (14) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.584894ms)
  Sep  2 13:15:21.940: INFO: (14) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 10.682366ms)
  Sep  2 13:15:21.945: INFO: (15) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 5.232686ms)
  Sep  2 13:15:21.945: INFO: (15) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 5.191412ms)
  Sep  2 13:15:21.946: INFO: (15) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 5.620945ms)
  Sep  2 13:15:21.947: INFO: (15) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 6.560128ms)
  Sep  2 13:15:21.947: INFO: (15) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 6.428729ms)
  Sep  2 13:15:21.948: INFO: (15) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 7.275962ms)
  Sep  2 13:15:21.948: INFO: (15) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 7.740667ms)
  Sep  2 13:15:21.949: INFO: (15) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 8.581438ms)
  Sep  2 13:15:21.949: INFO: (15) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 8.851094ms)
  Sep  2 13:15:21.950: INFO: (15) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.37043ms)
  Sep  2 13:15:21.950: INFO: (15) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 9.498686ms)
  Sep  2 13:15:21.950: INFO: (15) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.962971ms)
  Sep  2 13:15:21.951: INFO: (15) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.464009ms)
  Sep  2 13:15:21.951: INFO: (15) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 10.610946ms)
  Sep  2 13:15:21.951: INFO: (15) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 10.597745ms)
  Sep  2 13:15:21.951: INFO: (15) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 11.069445ms)
  Sep  2 13:15:21.957: INFO: (16) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 5.514892ms)
  Sep  2 13:15:21.958: INFO: (16) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 5.995222ms)
  Sep  2 13:15:21.958: INFO: (16) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 6.242759ms)
  Sep  2 13:15:21.959: INFO: (16) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 7.283286ms)
  Sep  2 13:15:21.959: INFO: (16) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 7.550735ms)
  Sep  2 13:15:21.959: INFO: (16) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 7.606492ms)
  Sep  2 13:15:21.960: INFO: (16) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 7.828722ms)
  Sep  2 13:15:21.961: INFO: (16) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 8.674301ms)
  Sep  2 13:15:21.961: INFO: (16) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 9.169635ms)
  Sep  2 13:15:21.961: INFO: (16) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.204585ms)
  Sep  2 13:15:21.961: INFO: (16) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 9.525564ms)
  Sep  2 13:15:21.962: INFO: (16) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 9.883174ms)
  Sep  2 13:15:21.962: INFO: (16) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.075189ms)
  Sep  2 13:15:21.962: INFO: (16) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 10.292716ms)
  Sep  2 13:15:21.962: INFO: (16) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 10.552073ms)
  Sep  2 13:15:21.964: INFO: (16) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.984647ms)
  Sep  2 13:15:21.969: INFO: (17) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 4.586513ms)
  Sep  2 13:15:21.971: INFO: (17) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 6.505433ms)
  Sep  2 13:15:21.972: INFO: (17) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 7.303682ms)
  Sep  2 13:15:21.973: INFO: (17) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 8.291365ms)
  Sep  2 13:15:21.973: INFO: (17) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 8.643015ms)
  Sep  2 13:15:21.973: INFO: (17) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 8.951466ms)
  Sep  2 13:15:21.974: INFO: (17) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 9.294442ms)
  Sep  2 13:15:21.974: INFO: (17) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 10.187696ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.195923ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.201325ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 10.356853ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 10.712107ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 10.76222ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 10.979782ms)
  Sep  2 13:15:21.975: INFO: (17) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 11.142397ms)
  Sep  2 13:15:21.977: INFO: (17) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 12.591632ms)
  Sep  2 13:15:21.982: INFO: (18) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 4.734526ms)
  Sep  2 13:15:21.983: INFO: (18) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 5.769531ms)
  Sep  2 13:15:21.983: INFO: (18) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 6.216374ms)
  Sep  2 13:15:21.984: INFO: (18) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.482141ms)
  Sep  2 13:15:21.984: INFO: (18) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 7.216549ms)
  Sep  2 13:15:21.985: INFO: (18) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 7.821606ms)
  Sep  2 13:15:21.985: INFO: (18) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 8.004355ms)
  Sep  2 13:15:21.985: INFO: (18) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 8.213761ms)
  Sep  2 13:15:21.985: INFO: (18) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 7.919518ms)
  Sep  2 13:15:21.987: INFO: (18) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 9.75653ms)
  Sep  2 13:15:21.988: INFO: (18) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 10.422356ms)
  Sep  2 13:15:21.989: INFO: (18) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 11.416669ms)
  Sep  2 13:15:21.989: INFO: (18) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 11.584242ms)
  Sep  2 13:15:21.989: INFO: (18) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 11.513384ms)
  Sep  2 13:15:21.989: INFO: (18) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 11.704695ms)
  Sep  2 13:15:21.990: INFO: (18) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 12.250624ms)
  Sep  2 13:15:21.995: INFO: (19) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 4.944714ms)
  Sep  2 13:15:21.995: INFO: (19) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg/proxy/rewriteme">test</a> (200; 5.537929ms)
  Sep  2 13:15:21.996: INFO: (19) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 6.059149ms)
  Sep  2 13:15:21.996: INFO: (19) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">test<... (200; 6.489719ms)
  Sep  2 13:15:21.997: INFO: (19) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:443/proxy/tlsrewritem... (200; 6.816953ms)
  Sep  2 13:15:21.997: INFO: (19) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:160/proxy/: foo (200; 7.165655ms)
  Sep  2 13:15:21.998: INFO: (19) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:462/proxy/: tls qux (200; 7.961312ms)
  Sep  2 13:15:21.998: INFO: (19) /api/v1/namespaces/proxy-1227/pods/proxy-service-kfxzz-szkwg:162/proxy/: bar (200; 8.404925ms)
  Sep  2 13:15:21.999: INFO: (19) /api/v1/namespaces/proxy-1227/pods/https:proxy-service-kfxzz-szkwg:460/proxy/: tls baz (200; 9.106845ms)
  Sep  2 13:15:21.999: INFO: (19) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname1/proxy/: foo (200; 9.351287ms)
  Sep  2 13:15:22.000: INFO: (19) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname1/proxy/: foo (200; 9.892019ms)
  Sep  2 13:15:22.000: INFO: (19) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname1/proxy/: tls baz (200; 10.029456ms)
  Sep  2 13:15:22.000: INFO: (19) /api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/: <a href="/api/v1/namespaces/proxy-1227/pods/http:proxy-service-kfxzz-szkwg:1080/proxy/rewriteme">... (200; 10.51728ms)
  Sep  2 13:15:22.000: INFO: (19) /api/v1/namespaces/proxy-1227/services/http:proxy-service-kfxzz:portname2/proxy/: bar (200; 10.379779ms)
  Sep  2 13:15:22.001: INFO: (19) /api/v1/namespaces/proxy-1227/services/proxy-service-kfxzz:portname2/proxy/: bar (200; 10.703606ms)
  Sep  2 13:15:22.001: INFO: (19) /api/v1/namespaces/proxy-1227/services/https:proxy-service-kfxzz:tlsportname2/proxy/: tls qux (200; 11.474375ms)
  Sep  2 13:15:22.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-kfxzz in namespace proxy-1227, will wait for the garbage collector to delete the pods @ 09/02/23 13:15:22.005
  Sep  2 13:15:22.065: INFO: Deleting ReplicationController proxy-service-kfxzz took: 6.933244ms
  Sep  2 13:15:22.166: INFO: Terminating ReplicationController proxy-service-kfxzz pods took: 100.833623ms
  STEP: Destroying namespace "proxy-1227" for this suite. @ 09/02/23 13:15:24.667
• [5.060 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/02/23 13:15:24.682
  Sep  2 13:15:24.682: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:15:24.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:24.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:24.702
  STEP: creating the pod @ 09/02/23 13:15:24.709
  STEP: submitting the pod to kubernetes @ 09/02/23 13:15:24.709
  STEP: verifying QOS class is set on the pod @ 09/02/23 13:15:24.72
  Sep  2 13:15:24.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1230" for this suite. @ 09/02/23 13:15:24.734
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/02/23 13:15:24.75
  Sep  2 13:15:24.750: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:15:24.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:24.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:24.771
  STEP: Creating a pod to test downward api env vars @ 09/02/23 13:15:24.775
  STEP: Saw pod success @ 09/02/23 13:15:28.802
  Sep  2 13:15:28.805: INFO: Trying to get logs from node ip-172-31-35-65 pod downward-api-6a0f0dfa-dc0a-4099-9814-2d7378ccf478 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 13:15:28.813
  Sep  2 13:15:28.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6342" for this suite. @ 09/02/23 13:15:28.832
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/02/23 13:15:28.844
  Sep  2 13:15:28.844: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:15:28.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:28.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:28.865
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/02/23 13:15:28.869
  STEP: Saw pod success @ 09/02/23 13:15:32.89
  Sep  2 13:15:32.894: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-6e99f750-f5ec-4937-9650-2298ce1a48e9 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:15:32.901
  Sep  2 13:15:32.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-373" for this suite. @ 09/02/23 13:15:32.918
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/02/23 13:15:32.926
  Sep  2 13:15:32.926: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 13:15:32.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:32.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:32.946
  Sep  2 13:15:32.994: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"e03d2c8a-5a16-4bef-bf80-741102e4af9e", Controller:(*bool)(0xc004a53066), BlockOwnerDeletion:(*bool)(0xc004a53067)}}
  Sep  2 13:15:33.002: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"dc088756-532f-4d74-97e9-3960007e8567", Controller:(*bool)(0xc004a532ea), BlockOwnerDeletion:(*bool)(0xc004a532eb)}}
  Sep  2 13:15:33.016: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d650d4bf-c05b-4e09-adac-8ac4b432db81", Controller:(*bool)(0xc004d42a7a), BlockOwnerDeletion:(*bool)(0xc004d42a7b)}}
  Sep  2 13:15:38.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2275" for this suite. @ 09/02/23 13:15:38.037
• [5.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/02/23 13:15:38.047
  Sep  2 13:15:38.047: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:15:38.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:38.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:38.067
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/02/23 13:15:38.072
  STEP: Saw pod success @ 09/02/23 13:15:42.092
  Sep  2 13:15:42.095: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-66f481fc-f87b-43e1-9d69-da3b65750b09 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:15:42.102
  Sep  2 13:15:42.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3841" for this suite. @ 09/02/23 13:15:42.121
• [4.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/02/23 13:15:42.131
  Sep  2 13:15:42.131: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 13:15:42.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:42.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:42.152
  STEP: Creating a pod to test substitution in container's command @ 09/02/23 13:15:42.155
  STEP: Saw pod success @ 09/02/23 13:15:46.18
  Sep  2 13:15:46.183: INFO: Trying to get logs from node ip-172-31-7-35 pod var-expansion-b77e40ed-66b1-4b3c-8628-a8e99de6eb7e container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 13:15:46.189
  Sep  2 13:15:46.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9912" for this suite. @ 09/02/23 13:15:46.212
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/02/23 13:15:46.219
  Sep  2 13:15:46.219: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 13:15:46.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:15:46.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:15:46.243
  Sep  2 13:15:46.259: INFO: created pod
  STEP: Saw pod success @ 09/02/23 13:15:50.273
  Sep  2 13:16:20.273: INFO: polling logs
  Sep  2 13:16:20.280: INFO: Pod logs: 
  I0902 13:15:46.997626       1 log.go:194] OK: Got token
  I0902 13:15:46.997681       1 log.go:194] validating with in-cluster discovery
  I0902 13:15:46.997955       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0902 13:15:46.997986       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7105:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000049300), NotBefore:(*jwt.NumericDate)(0xc0000493e8), IssuedAt:(*jwt.NumericDate)(0xc000049310), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7105", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8b58e5c6-54bb-4895-afca-e3c84e38b7ce"}}}
  I0902 13:15:47.007930       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0902 13:15:47.014559       1 log.go:194] OK: Validated signature on JWT
  I0902 13:15:47.014643       1 log.go:194] OK: Got valid claims from token!
  I0902 13:15:47.014676       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7105:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000124b80), NotBefore:(*jwt.NumericDate)(0xc000124ba8), IssuedAt:(*jwt.NumericDate)(0xc000124b88), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7105", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8b58e5c6-54bb-4895-afca-e3c84e38b7ce"}}}

  Sep  2 13:16:20.280: INFO: completed pod
  Sep  2 13:16:20.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7105" for this suite. @ 09/02/23 13:16:20.293
• [34.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/02/23 13:16:20.302
  Sep  2 13:16:20.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/23 13:16:20.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:20.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:20.324
  STEP: Deleting RuntimeClass runtimeclass-1691-delete-me @ 09/02/23 13:16:20.332
  STEP: Waiting for the RuntimeClass to disappear @ 09/02/23 13:16:20.341
  Sep  2 13:16:20.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1691" for this suite. @ 09/02/23 13:16:20.358
• [0.062 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/02/23 13:16:20.364
  Sep  2 13:16:20.364: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:16:20.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:20.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:20.39
  Sep  2 13:16:20.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3416 version'
  Sep  2 13:16:20.449: INFO: stderr: ""
  Sep  2 13:16:20.449: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1\n"
  Sep  2 13:16:20.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3416" for this suite. @ 09/02/23 13:16:20.454
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/02/23 13:16:20.461
  Sep  2 13:16:20.461: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 13:16:20.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:20.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:20.482
  Sep  2 13:16:20.502: INFO: created pod pod-service-account-defaultsa
  Sep  2 13:16:20.502: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep  2 13:16:20.514: INFO: created pod pod-service-account-mountsa
  Sep  2 13:16:20.514: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep  2 13:16:20.522: INFO: created pod pod-service-account-nomountsa
  Sep  2 13:16:20.522: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep  2 13:16:20.531: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep  2 13:16:20.531: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep  2 13:16:20.537: INFO: created pod pod-service-account-mountsa-mountspec
  Sep  2 13:16:20.537: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep  2 13:16:20.545: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep  2 13:16:20.545: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep  2 13:16:20.552: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep  2 13:16:20.552: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep  2 13:16:20.561: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep  2 13:16:20.561: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep  2 13:16:20.570: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep  2 13:16:20.570: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep  2 13:16:20.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8496" for this suite. @ 09/02/23 13:16:20.578
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/02/23 13:16:20.587
  Sep  2 13:16:20.587: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:16:20.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:20.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:20.609
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/23 13:16:20.613
  Sep  2 13:16:20.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-6385 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep  2 13:16:20.785: INFO: stderr: ""
  Sep  2 13:16:20.785: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/02/23 13:16:20.785
  Sep  2 13:16:20.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-6385 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep  2 13:16:21.010: INFO: stderr: ""
  Sep  2 13:16:21.010: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/02/23 13:16:21.01
  Sep  2 13:16:21.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-6385 delete pods e2e-test-httpd-pod'
  Sep  2 13:16:23.531: INFO: stderr: ""
  Sep  2 13:16:23.531: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep  2 13:16:23.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6385" for this suite. @ 09/02/23 13:16:23.537
• [2.960 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/02/23 13:16:23.547
  Sep  2 13:16:23.547: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename job @ 09/02/23 13:16:23.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:23.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:23.57
  STEP: Creating a suspended job @ 09/02/23 13:16:23.579
  STEP: Patching the Job @ 09/02/23 13:16:23.586
  STEP: Watching for Job to be patched @ 09/02/23 13:16:23.603
  Sep  2 13:16:23.605: INFO: Event ADDED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs] and annotations: map[]
  Sep  2 13:16:23.605: INFO: Event MODIFIED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs] and annotations: map[]
  Sep  2 13:16:23.605: INFO: Event MODIFIED found for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[]
  STEP: Updating the job @ 09/02/23 13:16:23.605
  STEP: Watching for Job to be updated @ 09/02/23 13:16:23.616
  Sep  2 13:16:23.618: INFO: Event MODIFIED found for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  Sep  2 13:16:23.618: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/02/23 13:16:23.618
  Sep  2 13:16:23.621: INFO: Job: e2e-qhnfs as labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched]
  STEP: Waiting for job to complete @ 09/02/23 13:16:23.621
  STEP: Delete a job collection with a labelselector @ 09/02/23 13:16:31.625
  STEP: Watching for Job to be deleted @ 09/02/23 13:16:31.633
  Sep  2 13:16:31.636: INFO: Event MODIFIED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  Sep  2 13:16:31.636: INFO: Event MODIFIED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  Sep  2 13:16:31.636: INFO: Event MODIFIED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  Sep  2 13:16:31.636: INFO: Event MODIFIED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  Sep  2 13:16:31.636: INFO: Event MODIFIED observed for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  Sep  2 13:16:31.636: INFO: Event DELETED found for Job e2e-qhnfs in namespace job-4901 with labels: map[e2e-job-label:e2e-qhnfs e2e-qhnfs:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/02/23 13:16:31.636
  Sep  2 13:16:31.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4901" for this suite. @ 09/02/23 13:16:31.646
• [8.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/02/23 13:16:31.662
  Sep  2 13:16:31.662: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/23 13:16:31.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:31.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:31.685
  Sep  2 13:16:31.689: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:16:32.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2510" for this suite. @ 09/02/23 13:16:32.715
• [1.061 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/02/23 13:16:32.723
  Sep  2 13:16:32.723: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 13:16:32.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:16:32.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:16:32.746
  Sep  2 13:17:32.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4576" for this suite. @ 09/02/23 13:17:32.769
• [60.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/02/23 13:17:32.786
  Sep  2 13:17:32.786: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replication-controller @ 09/02/23 13:17:32.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:17:32.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:17:32.81
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/02/23 13:17:32.816
  STEP: When a replication controller with a matching selector is created @ 09/02/23 13:17:34.839
  STEP: Then the orphan pod is adopted @ 09/02/23 13:17:34.844
  Sep  2 13:17:35.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9454" for this suite. @ 09/02/23 13:17:35.855
• [3.076 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/02/23 13:17:35.862
  Sep  2 13:17:35.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:17:35.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:17:35.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:17:35.881
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6812 @ 09/02/23 13:17:35.885
  STEP: changing the ExternalName service to type=NodePort @ 09/02/23 13:17:35.891
  STEP: creating replication controller externalname-service in namespace services-6812 @ 09/02/23 13:17:35.91
  I0902 13:17:35.921221      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6812, replica count: 2
  I0902 13:17:38.972455      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:17:38.972: INFO: Creating new exec pod
  Sep  2 13:17:41.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep  2 13:17:42.130: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep  2 13:17:42.130: INFO: stdout: "externalname-service-kr7kj"
  Sep  2 13:17:42.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  Sep  2 13:17:42.276: INFO: stderr: "+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 13:17:42.276: INFO: stdout: ""
  Sep  2 13:17:43.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  Sep  2 13:17:43.428: INFO: stderr: "+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 13:17:43.428: INFO: stdout: ""
  Sep  2 13:17:44.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  Sep  2 13:17:44.424: INFO: stderr: "+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 13:17:44.424: INFO: stdout: ""
  Sep  2 13:17:45.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  Sep  2 13:17:45.425: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n"
  Sep  2 13:17:45.425: INFO: stdout: ""
  Sep  2 13:17:46.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  Sep  2 13:17:46.422: INFO: stderr: "+ nc -v -t -w 2 10.152.183.78 80\n+ echo hostName\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n"
  Sep  2 13:17:46.422: INFO: stdout: "externalname-service-kr7kj"
  Sep  2 13:17:46.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.35 31996'
  Sep  2 13:17:46.561: INFO: stderr: "+ nc -v -t -w 2 172.31.7.35 31996\n+ echo hostName\nConnection to 172.31.7.35 31996 port [tcp/*] succeeded!\n"
  Sep  2 13:17:46.561: INFO: stdout: "externalname-service-kr7kj"
  Sep  2 13:17:46.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6812 exec execpods246k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.21 31996'
  Sep  2 13:17:46.698: INFO: stderr: "+ nc -v -t -w 2 172.31.26.21 31996\n+ echo hostName\nConnection to 172.31.26.21 31996 port [tcp/*] succeeded!\n"
  Sep  2 13:17:46.698: INFO: stdout: "externalname-service-jvpzb"
  Sep  2 13:17:46.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:17:46.702: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-6812" for this suite. @ 09/02/23 13:17:46.724
• [10.869 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/02/23 13:17:46.73
  Sep  2 13:17:46.730: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 13:17:46.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:17:46.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:17:46.751
  Sep  2 13:17:46.756: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  W0902 13:17:49.309799      19 warnings.go:70] unknown field "alpha"
  W0902 13:17:49.309817      19 warnings.go:70] unknown field "beta"
  W0902 13:17:49.309824      19 warnings.go:70] unknown field "delta"
  W0902 13:17:49.309829      19 warnings.go:70] unknown field "epsilon"
  W0902 13:17:49.309856      19 warnings.go:70] unknown field "gamma"
  Sep  2 13:17:49.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6904" for this suite. @ 09/02/23 13:17:49.86
• [3.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/02/23 13:17:49.871
  Sep  2 13:17:49.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:17:49.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:17:49.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:17:49.891
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/02/23 13:17:49.894
  Sep  2 13:17:49.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/02/23 13:17:55.432
  Sep  2 13:17:55.432: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:17:56.738: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:18:02.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8621" for this suite. @ 09/02/23 13:18:02.276
• [12.413 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/02/23 13:18:02.284
  Sep  2 13:18:02.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:18:02.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:02.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:02.306
  STEP: Creating configMap with name configmap-test-volume-map-ddba4e26-1128-4284-906b-98748d17c000 @ 09/02/23 13:18:02.309
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:18:02.314
  STEP: Saw pod success @ 09/02/23 13:18:06.341
  Sep  2 13:18:06.345: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-configmaps-ba1ea5c7-14f2-4088-b9bf-43b84617e1f9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:18:06.363
  Sep  2 13:18:06.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5487" for this suite. @ 09/02/23 13:18:06.383
• [4.106 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/02/23 13:18:06.391
  Sep  2 13:18:06.391: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:18:06.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:06.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:06.413
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/02/23 13:18:06.418
  STEP: Saw pod success @ 09/02/23 13:18:10.442
  Sep  2 13:18:10.446: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-3fe828a4-4846-4146-9aa4-1f978342d54c container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:18:10.454
  Sep  2 13:18:10.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8370" for this suite. @ 09/02/23 13:18:10.474
• [4.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/02/23 13:18:10.482
  Sep  2 13:18:10.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:18:10.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:10.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:10.505
  STEP: Setting up server cert @ 09/02/23 13:18:10.531
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:18:11.284
  STEP: Deploying the webhook pod @ 09/02/23 13:18:11.293
  STEP: Wait for the deployment to be ready @ 09/02/23 13:18:11.306
  Sep  2 13:18:11.315: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/02/23 13:18:13.326
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:18:13.339
  Sep  2 13:18:14.340: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/02/23 13:18:14.35
  STEP: create a pod @ 09/02/23 13:18:14.371
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/02/23 13:18:16.394
  Sep  2 13:18:16.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=webhook-3100 attach --namespace=webhook-3100 to-be-attached-pod -i -c=container1'
  Sep  2 13:18:16.470: INFO: rc: 1
  Sep  2 13:18:16.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3100" for this suite. @ 09/02/23 13:18:16.518
  STEP: Destroying namespace "webhook-markers-2822" for this suite. @ 09/02/23 13:18:16.525
• [6.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/02/23 13:18:16.534
  Sep  2 13:18:16.534: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:18:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:16.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:16.555
  STEP: Creating secret with name secret-test-49a00484-fa5f-4812-91e2-28ca02038fcd @ 09/02/23 13:18:16.562
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:18:16.568
  STEP: Saw pod success @ 09/02/23 13:18:20.598
  Sep  2 13:18:20.602: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-secrets-28ef2e3b-1c4d-4288-8e51-962c1829e8d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:18:20.623
  Sep  2 13:18:20.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6472" for this suite. @ 09/02/23 13:18:20.647
• [4.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/02/23 13:18:20.655
  Sep  2 13:18:20.655: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:18:20.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:20.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:20.678
  STEP: Creating configMap with name projected-configmap-test-volume-map-825a06c2-4a41-490e-a036-8a1318cdd6fa @ 09/02/23 13:18:20.682
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:18:20.687
  STEP: Saw pod success @ 09/02/23 13:18:24.711
  Sep  2 13:18:24.716: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-configmaps-a7c07306-6675-43a1-a8be-64444bea9820 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:18:24.723
  Sep  2 13:18:24.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1309" for this suite. @ 09/02/23 13:18:24.742
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/02/23 13:18:24.75
  Sep  2 13:18:24.750: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:18:24.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:24.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:24.775
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:18:24.778
  STEP: Saw pod success @ 09/02/23 13:18:28.802
  Sep  2 13:18:28.806: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-359985e0-6f0f-41c4-aead-c0dd311ce0e4 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:18:28.814
  Sep  2 13:18:28.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9209" for this suite. @ 09/02/23 13:18:28.836
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/02/23 13:18:28.844
  Sep  2 13:18:28.844: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svc-latency @ 09/02/23 13:18:28.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:28.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:28.865
  Sep  2 13:18:28.869: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6427 @ 09/02/23 13:18:28.87
  I0902 13:18:28.875680      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6427, replica count: 1
  I0902 13:18:29.926221      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0902 13:18:30.926899      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:18:31.040: INFO: Created: latency-svc-rg8d4
  Sep  2 13:18:31.048: INFO: Got endpoints: latency-svc-rg8d4 [20.929843ms]
  Sep  2 13:18:31.062: INFO: Created: latency-svc-z6sl7
  Sep  2 13:18:31.066: INFO: Created: latency-svc-v8msn
  Sep  2 13:18:31.069: INFO: Got endpoints: latency-svc-z6sl7 [20.981646ms]
  Sep  2 13:18:31.077: INFO: Got endpoints: latency-svc-v8msn [29.398911ms]
  Sep  2 13:18:31.079: INFO: Created: latency-svc-vmdgz
  Sep  2 13:18:31.083: INFO: Created: latency-svc-rw9pv
  Sep  2 13:18:31.085: INFO: Got endpoints: latency-svc-vmdgz [36.260911ms]
  Sep  2 13:18:31.092: INFO: Got endpoints: latency-svc-rw9pv [43.841688ms]
  Sep  2 13:18:31.094: INFO: Created: latency-svc-t9k9h
  Sep  2 13:18:31.102: INFO: Created: latency-svc-hwqnd
  Sep  2 13:18:31.102: INFO: Got endpoints: latency-svc-t9k9h [53.741852ms]
  Sep  2 13:18:31.107: INFO: Created: latency-svc-k4dzj
  Sep  2 13:18:31.109: INFO: Got endpoints: latency-svc-hwqnd [60.94193ms]
  Sep  2 13:18:31.111: INFO: Got endpoints: latency-svc-k4dzj [62.95247ms]
  Sep  2 13:18:31.115: INFO: Created: latency-svc-62lqz
  Sep  2 13:18:31.122: INFO: Got endpoints: latency-svc-62lqz [73.145708ms]
  Sep  2 13:18:31.124: INFO: Created: latency-svc-4qhmb
  Sep  2 13:18:31.129: INFO: Got endpoints: latency-svc-4qhmb [80.195545ms]
  Sep  2 13:18:31.132: INFO: Created: latency-svc-fbbld
  Sep  2 13:18:31.137: INFO: Created: latency-svc-sttmt
  Sep  2 13:18:31.138: INFO: Got endpoints: latency-svc-fbbld [89.669639ms]
  Sep  2 13:18:31.146: INFO: Got endpoints: latency-svc-sttmt [97.160028ms]
  Sep  2 13:18:31.148: INFO: Created: latency-svc-lpnpk
  Sep  2 13:18:31.154: INFO: Got endpoints: latency-svc-lpnpk [105.560895ms]
  Sep  2 13:18:31.212: INFO: Created: latency-svc-kfgls
  Sep  2 13:18:31.215: INFO: Created: latency-svc-tpfk8
  Sep  2 13:18:31.217: INFO: Created: latency-svc-mrkjr
  Sep  2 13:18:31.218: INFO: Created: latency-svc-9lbgw
  Sep  2 13:18:31.219: INFO: Created: latency-svc-cxpvn
  Sep  2 13:18:31.221: INFO: Created: latency-svc-xr4wt
  Sep  2 13:18:31.221: INFO: Created: latency-svc-2jgq6
  Sep  2 13:18:31.221: INFO: Created: latency-svc-psxfs
  Sep  2 13:18:31.221: INFO: Created: latency-svc-qxgx2
  Sep  2 13:18:31.221: INFO: Created: latency-svc-wmptz
  Sep  2 13:18:31.222: INFO: Created: latency-svc-g9664
  Sep  2 13:18:31.223: INFO: Created: latency-svc-sm25w
  Sep  2 13:18:31.226: INFO: Created: latency-svc-kn7sm
  Sep  2 13:18:31.227: INFO: Created: latency-svc-gsfhq
  Sep  2 13:18:31.227: INFO: Created: latency-svc-lmkdx
  Sep  2 13:18:31.228: INFO: Got endpoints: latency-svc-tpfk8 [118.923031ms]
  Sep  2 13:18:31.229: INFO: Got endpoints: latency-svc-kfgls [83.238389ms]
  Sep  2 13:18:31.235: INFO: Got endpoints: latency-svc-xr4wt [185.77932ms]
  Sep  2 13:18:31.240: INFO: Got endpoints: latency-svc-psxfs [154.870958ms]
  Sep  2 13:18:31.240: INFO: Got endpoints: latency-svc-gsfhq [147.364006ms]
  Sep  2 13:18:31.244: INFO: Created: latency-svc-bwvft
  Sep  2 13:18:31.250: INFO: Created: latency-svc-kxcps
  Sep  2 13:18:31.254: INFO: Got endpoints: latency-svc-cxpvn [176.697368ms]
  Sep  2 13:18:31.254: INFO: Got endpoints: latency-svc-g9664 [151.891565ms]
  Sep  2 13:18:31.258: INFO: Got endpoints: latency-svc-2jgq6 [135.946197ms]
  Sep  2 13:18:31.258: INFO: Got endpoints: latency-svc-mrkjr [128.987814ms]
  Sep  2 13:18:31.264: INFO: Got endpoints: latency-svc-sm25w [152.15865ms]
  Sep  2 13:18:31.264: INFO: Created: latency-svc-zrq4x
  Sep  2 13:18:31.271: INFO: Got endpoints: latency-svc-qxgx2 [131.682758ms]
  Sep  2 13:18:31.272: INFO: Got endpoints: latency-svc-lmkdx [222.561983ms]
  Sep  2 13:18:31.278: INFO: Got endpoints: latency-svc-9lbgw [123.544305ms]
  Sep  2 13:18:31.278: INFO: Got endpoints: latency-svc-wmptz [208.959667ms]
  Sep  2 13:18:31.279: INFO: Got endpoints: latency-svc-kn7sm [230.574262ms]
  Sep  2 13:18:31.283: INFO: Got endpoints: latency-svc-bwvft [54.44503ms]
  Sep  2 13:18:31.284: INFO: Got endpoints: latency-svc-kxcps [54.845434ms]
  Sep  2 13:18:31.289: INFO: Got endpoints: latency-svc-zrq4x [54.52147ms]
  Sep  2 13:18:31.340: INFO: Created: latency-svc-cw5dj
  Sep  2 13:18:31.345: INFO: Created: latency-svc-qkwtp
  Sep  2 13:18:31.346: INFO: Created: latency-svc-wt7cb
  Sep  2 13:18:31.346: INFO: Created: latency-svc-j9znr
  Sep  2 13:18:31.347: INFO: Created: latency-svc-5x574
  Sep  2 13:18:31.347: INFO: Created: latency-svc-j8rcn
  Sep  2 13:18:31.348: INFO: Created: latency-svc-hdtf5
  Sep  2 13:18:31.349: INFO: Created: latency-svc-bc6gq
  Sep  2 13:18:31.349: INFO: Created: latency-svc-8qtcr
  Sep  2 13:18:31.352: INFO: Created: latency-svc-flnqj
  Sep  2 13:18:31.353: INFO: Created: latency-svc-qbhfm
  Sep  2 13:18:31.354: INFO: Created: latency-svc-gfp2b
  Sep  2 13:18:31.355: INFO: Created: latency-svc-7frn9
  Sep  2 13:18:31.358: INFO: Created: latency-svc-rx9xv
  Sep  2 13:18:31.358: INFO: Created: latency-svc-6k9c4
  Sep  2 13:18:31.370: INFO: Got endpoints: latency-svc-qbhfm [90.936921ms]
  Sep  2 13:18:31.373: INFO: Got endpoints: latency-svc-wt7cb [115.40042ms]
  Sep  2 13:18:31.374: INFO: Got endpoints: latency-svc-bc6gq [133.762964ms]
  Sep  2 13:18:31.374: INFO: Got endpoints: latency-svc-8qtcr [103.169664ms]
  Sep  2 13:18:31.374: INFO: Got endpoints: latency-svc-cw5dj [90.531137ms]
  Sep  2 13:18:31.383: INFO: Created: latency-svc-52mrs
  Sep  2 13:18:31.388: INFO: Created: latency-svc-mpgls
  Sep  2 13:18:31.395: INFO: Got endpoints: latency-svc-gfp2b [117.024687ms]
  Sep  2 13:18:31.399: INFO: Created: latency-svc-77287
  Sep  2 13:18:31.404: INFO: Created: latency-svc-ngxhz
  Sep  2 13:18:31.409: INFO: Created: latency-svc-pbb7j
  Sep  2 13:18:31.416: INFO: Created: latency-svc-rkszp
  Sep  2 13:18:31.445: INFO: Got endpoints: latency-svc-flnqj [190.753966ms]
  Sep  2 13:18:31.456: INFO: Created: latency-svc-8sbsr
  Sep  2 13:18:31.495: INFO: Got endpoints: latency-svc-6k9c4 [216.756057ms]
  Sep  2 13:18:31.507: INFO: Created: latency-svc-jl8zx
  Sep  2 13:18:31.544: INFO: Got endpoints: latency-svc-j9znr [259.858585ms]
  Sep  2 13:18:31.556: INFO: Created: latency-svc-h4s69
  Sep  2 13:18:31.596: INFO: Got endpoints: latency-svc-rx9xv [306.55339ms]
  Sep  2 13:18:31.607: INFO: Created: latency-svc-s9sm9
  Sep  2 13:18:31.645: INFO: Got endpoints: latency-svc-j8rcn [373.594286ms]
  Sep  2 13:18:31.655: INFO: Created: latency-svc-fh6n7
  Sep  2 13:18:31.696: INFO: Got endpoints: latency-svc-5x574 [431.64232ms]
  Sep  2 13:18:31.707: INFO: Created: latency-svc-qv45f
  Sep  2 13:18:31.745: INFO: Got endpoints: latency-svc-hdtf5 [490.554845ms]
  Sep  2 13:18:31.757: INFO: Created: latency-svc-9v7zl
  Sep  2 13:18:31.796: INFO: Got endpoints: latency-svc-qkwtp [555.878465ms]
  Sep  2 13:18:31.813: INFO: Created: latency-svc-8bqdt
  Sep  2 13:18:31.847: INFO: Got endpoints: latency-svc-7frn9 [589.049624ms]
  Sep  2 13:18:31.859: INFO: Created: latency-svc-rqqfq
  Sep  2 13:18:31.897: INFO: Got endpoints: latency-svc-52mrs [526.035367ms]
  Sep  2 13:18:31.907: INFO: Created: latency-svc-pfdcd
  Sep  2 13:18:31.945: INFO: Got endpoints: latency-svc-mpgls [571.51422ms]
  Sep  2 13:18:31.958: INFO: Created: latency-svc-nttpn
  Sep  2 13:18:31.995: INFO: Got endpoints: latency-svc-77287 [620.827338ms]
  Sep  2 13:18:32.008: INFO: Created: latency-svc-2c6lg
  Sep  2 13:18:32.046: INFO: Got endpoints: latency-svc-ngxhz [671.574698ms]
  Sep  2 13:18:32.061: INFO: Created: latency-svc-c9vf6
  Sep  2 13:18:32.095: INFO: Got endpoints: latency-svc-pbb7j [719.999361ms]
  Sep  2 13:18:32.104: INFO: Created: latency-svc-n6wrj
  Sep  2 13:18:32.146: INFO: Got endpoints: latency-svc-rkszp [751.172366ms]
  Sep  2 13:18:32.159: INFO: Created: latency-svc-rcfrh
  Sep  2 13:18:32.196: INFO: Got endpoints: latency-svc-8sbsr [750.646322ms]
  Sep  2 13:18:32.207: INFO: Created: latency-svc-4prw2
  Sep  2 13:18:32.246: INFO: Got endpoints: latency-svc-jl8zx [750.52307ms]
  Sep  2 13:18:32.257: INFO: Created: latency-svc-swtwr
  Sep  2 13:18:32.295: INFO: Got endpoints: latency-svc-h4s69 [750.990343ms]
  Sep  2 13:18:32.311: INFO: Created: latency-svc-pp8h9
  Sep  2 13:18:32.346: INFO: Got endpoints: latency-svc-s9sm9 [749.959639ms]
  Sep  2 13:18:32.356: INFO: Created: latency-svc-wr6n6
  Sep  2 13:18:32.396: INFO: Got endpoints: latency-svc-fh6n7 [750.495476ms]
  Sep  2 13:18:32.405: INFO: Created: latency-svc-qrplx
  Sep  2 13:18:32.447: INFO: Got endpoints: latency-svc-qv45f [751.72418ms]
  Sep  2 13:18:32.458: INFO: Created: latency-svc-j2ffc
  Sep  2 13:18:32.494: INFO: Got endpoints: latency-svc-9v7zl [749.452739ms]
  Sep  2 13:18:32.508: INFO: Created: latency-svc-skh6z
  Sep  2 13:18:32.545: INFO: Got endpoints: latency-svc-8bqdt [749.194197ms]
  Sep  2 13:18:32.557: INFO: Created: latency-svc-2s6x4
  Sep  2 13:18:32.596: INFO: Got endpoints: latency-svc-rqqfq [749.196232ms]
  Sep  2 13:18:32.608: INFO: Created: latency-svc-t6zz2
  Sep  2 13:18:32.647: INFO: Got endpoints: latency-svc-pfdcd [750.401484ms]
  Sep  2 13:18:32.658: INFO: Created: latency-svc-94vgw
  Sep  2 13:18:32.694: INFO: Got endpoints: latency-svc-nttpn [748.683588ms]
  Sep  2 13:18:32.706: INFO: Created: latency-svc-pvwqh
  Sep  2 13:18:32.744: INFO: Got endpoints: latency-svc-2c6lg [749.251855ms]
  Sep  2 13:18:32.758: INFO: Created: latency-svc-f7g4f
  Sep  2 13:18:32.796: INFO: Got endpoints: latency-svc-c9vf6 [750.084875ms]
  Sep  2 13:18:32.807: INFO: Created: latency-svc-w85k5
  Sep  2 13:18:32.848: INFO: Got endpoints: latency-svc-n6wrj [752.403795ms]
  Sep  2 13:18:32.858: INFO: Created: latency-svc-x2d2s
  Sep  2 13:18:32.896: INFO: Got endpoints: latency-svc-rcfrh [749.223124ms]
  Sep  2 13:18:32.908: INFO: Created: latency-svc-cr6l4
  Sep  2 13:18:32.946: INFO: Got endpoints: latency-svc-4prw2 [749.363758ms]
  Sep  2 13:18:32.958: INFO: Created: latency-svc-tzrns
  Sep  2 13:18:32.994: INFO: Got endpoints: latency-svc-swtwr [747.90944ms]
  Sep  2 13:18:33.010: INFO: Created: latency-svc-pdphc
  Sep  2 13:18:33.044: INFO: Got endpoints: latency-svc-pp8h9 [749.225254ms]
  Sep  2 13:18:33.059: INFO: Created: latency-svc-qbxgs
  Sep  2 13:18:33.095: INFO: Got endpoints: latency-svc-wr6n6 [748.875748ms]
  Sep  2 13:18:33.106: INFO: Created: latency-svc-q6qcx
  Sep  2 13:18:33.145: INFO: Got endpoints: latency-svc-qrplx [749.707434ms]
  Sep  2 13:18:33.155: INFO: Created: latency-svc-lg74m
  Sep  2 13:18:33.196: INFO: Got endpoints: latency-svc-j2ffc [748.563411ms]
  Sep  2 13:18:33.208: INFO: Created: latency-svc-2pzr4
  Sep  2 13:18:33.246: INFO: Got endpoints: latency-svc-skh6z [751.004413ms]
  Sep  2 13:18:33.257: INFO: Created: latency-svc-pn298
  Sep  2 13:18:33.296: INFO: Got endpoints: latency-svc-2s6x4 [750.383664ms]
  Sep  2 13:18:33.306: INFO: Created: latency-svc-nff9r
  Sep  2 13:18:33.346: INFO: Got endpoints: latency-svc-t6zz2 [750.048716ms]
  Sep  2 13:18:33.358: INFO: Created: latency-svc-jxrpx
  Sep  2 13:18:33.396: INFO: Got endpoints: latency-svc-94vgw [748.622427ms]
  Sep  2 13:18:33.407: INFO: Created: latency-svc-rqhk4
  Sep  2 13:18:33.447: INFO: Got endpoints: latency-svc-pvwqh [752.564819ms]
  Sep  2 13:18:33.459: INFO: Created: latency-svc-r4kgs
  Sep  2 13:18:33.498: INFO: Got endpoints: latency-svc-f7g4f [753.781596ms]
  Sep  2 13:18:33.510: INFO: Created: latency-svc-4zp46
  Sep  2 13:18:33.548: INFO: Got endpoints: latency-svc-w85k5 [751.411447ms]
  Sep  2 13:18:33.560: INFO: Created: latency-svc-rvzdq
  Sep  2 13:18:33.598: INFO: Got endpoints: latency-svc-x2d2s [749.24673ms]
  Sep  2 13:18:33.608: INFO: Created: latency-svc-b9lsv
  Sep  2 13:18:33.646: INFO: Got endpoints: latency-svc-cr6l4 [749.937979ms]
  Sep  2 13:18:33.657: INFO: Created: latency-svc-vpfrr
  Sep  2 13:18:33.694: INFO: Got endpoints: latency-svc-tzrns [748.410598ms]
  Sep  2 13:18:33.705: INFO: Created: latency-svc-ff98z
  Sep  2 13:18:33.745: INFO: Got endpoints: latency-svc-pdphc [751.209206ms]
  Sep  2 13:18:33.755: INFO: Created: latency-svc-62xgq
  Sep  2 13:18:33.796: INFO: Got endpoints: latency-svc-qbxgs [751.521719ms]
  Sep  2 13:18:33.809: INFO: Created: latency-svc-bst7t
  Sep  2 13:18:33.846: INFO: Got endpoints: latency-svc-q6qcx [750.966854ms]
  Sep  2 13:18:33.857: INFO: Created: latency-svc-9gqhj
  Sep  2 13:18:33.896: INFO: Got endpoints: latency-svc-lg74m [750.310409ms]
  Sep  2 13:18:33.905: INFO: Created: latency-svc-hmr9z
  Sep  2 13:18:33.947: INFO: Got endpoints: latency-svc-2pzr4 [750.825204ms]
  Sep  2 13:18:33.959: INFO: Created: latency-svc-ddh4q
  Sep  2 13:18:33.994: INFO: Got endpoints: latency-svc-pn298 [747.931446ms]
  Sep  2 13:18:34.006: INFO: Created: latency-svc-tkfvh
  Sep  2 13:18:34.044: INFO: Got endpoints: latency-svc-nff9r [748.56936ms]
  Sep  2 13:18:34.060: INFO: Created: latency-svc-kqt2v
  Sep  2 13:18:34.097: INFO: Got endpoints: latency-svc-jxrpx [750.673107ms]
  Sep  2 13:18:34.108: INFO: Created: latency-svc-jdhh6
  Sep  2 13:18:34.147: INFO: Got endpoints: latency-svc-rqhk4 [751.081787ms]
  Sep  2 13:18:34.159: INFO: Created: latency-svc-vb6ft
  Sep  2 13:18:34.195: INFO: Got endpoints: latency-svc-r4kgs [748.677002ms]
  Sep  2 13:18:34.205: INFO: Created: latency-svc-t9hqj
  Sep  2 13:18:34.248: INFO: Got endpoints: latency-svc-4zp46 [749.709999ms]
  Sep  2 13:18:34.260: INFO: Created: latency-svc-shqc2
  Sep  2 13:18:34.295: INFO: Got endpoints: latency-svc-rvzdq [746.750605ms]
  Sep  2 13:18:34.307: INFO: Created: latency-svc-cnpk5
  Sep  2 13:18:34.347: INFO: Got endpoints: latency-svc-b9lsv [749.183827ms]
  Sep  2 13:18:34.360: INFO: Created: latency-svc-bzzhm
  Sep  2 13:18:34.396: INFO: Got endpoints: latency-svc-vpfrr [750.433374ms]
  Sep  2 13:18:34.408: INFO: Created: latency-svc-57q7f
  Sep  2 13:18:34.446: INFO: Got endpoints: latency-svc-ff98z [751.85822ms]
  Sep  2 13:18:34.457: INFO: Created: latency-svc-mcffj
  Sep  2 13:18:34.497: INFO: Got endpoints: latency-svc-62xgq [751.740738ms]
  Sep  2 13:18:34.507: INFO: Created: latency-svc-8t8ln
  Sep  2 13:18:34.545: INFO: Got endpoints: latency-svc-bst7t [749.520131ms]
  Sep  2 13:18:34.557: INFO: Created: latency-svc-mt8x6
  Sep  2 13:18:34.595: INFO: Got endpoints: latency-svc-9gqhj [748.654445ms]
  Sep  2 13:18:34.608: INFO: Created: latency-svc-92tjd
  Sep  2 13:18:34.646: INFO: Got endpoints: latency-svc-hmr9z [749.775633ms]
  Sep  2 13:18:34.655: INFO: Created: latency-svc-522p2
  Sep  2 13:18:34.695: INFO: Got endpoints: latency-svc-ddh4q [747.564777ms]
  Sep  2 13:18:34.706: INFO: Created: latency-svc-v7p62
  Sep  2 13:18:34.745: INFO: Got endpoints: latency-svc-tkfvh [751.490117ms]
  Sep  2 13:18:34.758: INFO: Created: latency-svc-tckgz
  Sep  2 13:18:34.795: INFO: Got endpoints: latency-svc-kqt2v [750.54851ms]
  Sep  2 13:18:34.805: INFO: Created: latency-svc-bckv7
  Sep  2 13:18:34.845: INFO: Got endpoints: latency-svc-jdhh6 [747.857596ms]
  Sep  2 13:18:34.855: INFO: Created: latency-svc-zqws7
  Sep  2 13:18:34.896: INFO: Got endpoints: latency-svc-vb6ft [749.558751ms]
  Sep  2 13:18:34.907: INFO: Created: latency-svc-wbhtv
  Sep  2 13:18:34.946: INFO: Got endpoints: latency-svc-t9hqj [750.366327ms]
  Sep  2 13:18:34.955: INFO: Created: latency-svc-kwmtb
  Sep  2 13:18:34.996: INFO: Got endpoints: latency-svc-shqc2 [748.29744ms]
  Sep  2 13:18:35.008: INFO: Created: latency-svc-79cjw
  Sep  2 13:18:35.045: INFO: Got endpoints: latency-svc-cnpk5 [750.087636ms]
  Sep  2 13:18:35.062: INFO: Created: latency-svc-k6ldr
  Sep  2 13:18:35.095: INFO: Got endpoints: latency-svc-bzzhm [748.37672ms]
  Sep  2 13:18:35.105: INFO: Created: latency-svc-nb9lq
  Sep  2 13:18:35.145: INFO: Got endpoints: latency-svc-57q7f [749.325723ms]
  Sep  2 13:18:35.156: INFO: Created: latency-svc-cdt7f
  Sep  2 13:18:35.195: INFO: Got endpoints: latency-svc-mcffj [748.453939ms]
  Sep  2 13:18:35.205: INFO: Created: latency-svc-jcfft
  Sep  2 13:18:35.246: INFO: Got endpoints: latency-svc-8t8ln [749.696369ms]
  Sep  2 13:18:35.258: INFO: Created: latency-svc-lmlnh
  Sep  2 13:18:35.295: INFO: Got endpoints: latency-svc-mt8x6 [749.34328ms]
  Sep  2 13:18:35.306: INFO: Created: latency-svc-bqml9
  Sep  2 13:18:35.346: INFO: Got endpoints: latency-svc-92tjd [751.032913ms]
  Sep  2 13:18:35.358: INFO: Created: latency-svc-8f7p8
  Sep  2 13:18:35.395: INFO: Got endpoints: latency-svc-522p2 [749.636428ms]
  Sep  2 13:18:35.405: INFO: Created: latency-svc-q5z8k
  Sep  2 13:18:35.446: INFO: Got endpoints: latency-svc-v7p62 [751.675551ms]
  Sep  2 13:18:35.459: INFO: Created: latency-svc-gv4jp
  Sep  2 13:18:35.495: INFO: Got endpoints: latency-svc-tckgz [750.057121ms]
  Sep  2 13:18:35.506: INFO: Created: latency-svc-dxgdk
  Sep  2 13:18:35.545: INFO: Got endpoints: latency-svc-bckv7 [749.996111ms]
  Sep  2 13:18:35.556: INFO: Created: latency-svc-f8rqs
  Sep  2 13:18:35.595: INFO: Got endpoints: latency-svc-zqws7 [750.673218ms]
  Sep  2 13:18:35.607: INFO: Created: latency-svc-w9qhl
  Sep  2 13:18:35.646: INFO: Got endpoints: latency-svc-wbhtv [749.542968ms]
  Sep  2 13:18:35.656: INFO: Created: latency-svc-89kv5
  Sep  2 13:18:35.696: INFO: Got endpoints: latency-svc-kwmtb [750.130747ms]
  Sep  2 13:18:35.706: INFO: Created: latency-svc-dzbn8
  Sep  2 13:18:35.745: INFO: Got endpoints: latency-svc-79cjw [748.517058ms]
  Sep  2 13:18:35.757: INFO: Created: latency-svc-w6fmm
  Sep  2 13:18:35.794: INFO: Got endpoints: latency-svc-k6ldr [748.892639ms]
  Sep  2 13:18:35.804: INFO: Created: latency-svc-vvl2q
  Sep  2 13:18:35.845: INFO: Got endpoints: latency-svc-nb9lq [749.731528ms]
  Sep  2 13:18:35.855: INFO: Created: latency-svc-z5k52
  Sep  2 13:18:35.896: INFO: Got endpoints: latency-svc-cdt7f [750.930617ms]
  Sep  2 13:18:35.909: INFO: Created: latency-svc-4kljd
  Sep  2 13:18:35.946: INFO: Got endpoints: latency-svc-jcfft [751.430358ms]
  Sep  2 13:18:35.959: INFO: Created: latency-svc-6j4md
  Sep  2 13:18:35.996: INFO: Got endpoints: latency-svc-lmlnh [749.551376ms]
  Sep  2 13:18:36.008: INFO: Created: latency-svc-4tn6m
  Sep  2 13:18:36.046: INFO: Got endpoints: latency-svc-bqml9 [751.320431ms]
  Sep  2 13:18:36.060: INFO: Created: latency-svc-9t2kd
  Sep  2 13:18:36.098: INFO: Got endpoints: latency-svc-8f7p8 [752.229921ms]
  Sep  2 13:18:36.109: INFO: Created: latency-svc-srtms
  Sep  2 13:18:36.146: INFO: Got endpoints: latency-svc-q5z8k [750.760641ms]
  Sep  2 13:18:36.156: INFO: Created: latency-svc-jhr29
  Sep  2 13:18:36.196: INFO: Got endpoints: latency-svc-gv4jp [749.689199ms]
  Sep  2 13:18:36.207: INFO: Created: latency-svc-btmcm
  Sep  2 13:18:36.245: INFO: Got endpoints: latency-svc-dxgdk [749.323843ms]
  Sep  2 13:18:36.256: INFO: Created: latency-svc-n67hg
  Sep  2 13:18:36.295: INFO: Got endpoints: latency-svc-f8rqs [750.187854ms]
  Sep  2 13:18:36.305: INFO: Created: latency-svc-zbtwj
  Sep  2 13:18:36.346: INFO: Got endpoints: latency-svc-w9qhl [750.006695ms]
  Sep  2 13:18:36.357: INFO: Created: latency-svc-8vph5
  Sep  2 13:18:36.395: INFO: Got endpoints: latency-svc-89kv5 [749.552797ms]
  Sep  2 13:18:36.405: INFO: Created: latency-svc-lghnb
  Sep  2 13:18:36.447: INFO: Got endpoints: latency-svc-dzbn8 [750.720598ms]
  Sep  2 13:18:36.457: INFO: Created: latency-svc-lz7vh
  Sep  2 13:18:36.494: INFO: Got endpoints: latency-svc-w6fmm [749.181568ms]
  Sep  2 13:18:36.506: INFO: Created: latency-svc-jcsn4
  Sep  2 13:18:36.545: INFO: Got endpoints: latency-svc-vvl2q [750.384432ms]
  Sep  2 13:18:36.556: INFO: Created: latency-svc-xs9mn
  Sep  2 13:18:36.596: INFO: Got endpoints: latency-svc-z5k52 [751.364407ms]
  Sep  2 13:18:36.607: INFO: Created: latency-svc-gdgn6
  Sep  2 13:18:36.646: INFO: Got endpoints: latency-svc-4kljd [749.637426ms]
  Sep  2 13:18:36.659: INFO: Created: latency-svc-v5hs8
  Sep  2 13:18:36.695: INFO: Got endpoints: latency-svc-6j4md [749.132125ms]
  Sep  2 13:18:36.707: INFO: Created: latency-svc-z5wch
  Sep  2 13:18:36.744: INFO: Got endpoints: latency-svc-4tn6m [748.291797ms]
  Sep  2 13:18:36.756: INFO: Created: latency-svc-qhnsl
  Sep  2 13:18:36.796: INFO: Got endpoints: latency-svc-9t2kd [749.392105ms]
  Sep  2 13:18:36.816: INFO: Created: latency-svc-v7xnd
  Sep  2 13:18:36.845: INFO: Got endpoints: latency-svc-srtms [746.601997ms]
  Sep  2 13:18:36.855: INFO: Created: latency-svc-kx8fm
  Sep  2 13:18:36.896: INFO: Got endpoints: latency-svc-jhr29 [750.024412ms]
  Sep  2 13:18:36.906: INFO: Created: latency-svc-p8sp9
  Sep  2 13:18:36.945: INFO: Got endpoints: latency-svc-btmcm [748.573408ms]
  Sep  2 13:18:36.957: INFO: Created: latency-svc-nnw9n
  Sep  2 13:18:36.994: INFO: Got endpoints: latency-svc-n67hg [749.409368ms]
  Sep  2 13:18:37.009: INFO: Created: latency-svc-hblk9
  Sep  2 13:18:37.047: INFO: Got endpoints: latency-svc-zbtwj [751.479776ms]
  Sep  2 13:18:37.061: INFO: Created: latency-svc-g945f
  Sep  2 13:18:37.096: INFO: Got endpoints: latency-svc-8vph5 [750.89059ms]
  Sep  2 13:18:37.107: INFO: Created: latency-svc-lnwcc
  Sep  2 13:18:37.147: INFO: Got endpoints: latency-svc-lghnb [751.478977ms]
  Sep  2 13:18:37.157: INFO: Created: latency-svc-qnrjv
  Sep  2 13:18:37.196: INFO: Got endpoints: latency-svc-lz7vh [749.630769ms]
  Sep  2 13:18:37.207: INFO: Created: latency-svc-ccfq6
  Sep  2 13:18:37.245: INFO: Got endpoints: latency-svc-jcsn4 [750.758836ms]
  Sep  2 13:18:37.258: INFO: Created: latency-svc-z987k
  Sep  2 13:18:37.295: INFO: Got endpoints: latency-svc-xs9mn [750.127907ms]
  Sep  2 13:18:37.307: INFO: Created: latency-svc-l7qh4
  Sep  2 13:18:37.345: INFO: Got endpoints: latency-svc-gdgn6 [748.7602ms]
  Sep  2 13:18:37.354: INFO: Created: latency-svc-lqcxg
  Sep  2 13:18:37.397: INFO: Got endpoints: latency-svc-v5hs8 [750.484772ms]
  Sep  2 13:18:37.408: INFO: Created: latency-svc-wrm5p
  Sep  2 13:18:37.445: INFO: Got endpoints: latency-svc-z5wch [749.715333ms]
  Sep  2 13:18:37.458: INFO: Created: latency-svc-bvkrl
  Sep  2 13:18:37.494: INFO: Got endpoints: latency-svc-qhnsl [749.694606ms]
  Sep  2 13:18:37.504: INFO: Created: latency-svc-klxxs
  Sep  2 13:18:37.545: INFO: Got endpoints: latency-svc-v7xnd [748.788437ms]
  Sep  2 13:18:37.556: INFO: Created: latency-svc-xwmf2
  Sep  2 13:18:37.596: INFO: Got endpoints: latency-svc-kx8fm [751.038945ms]
  Sep  2 13:18:37.609: INFO: Created: latency-svc-gf5x2
  Sep  2 13:18:37.647: INFO: Got endpoints: latency-svc-p8sp9 [750.125344ms]
  Sep  2 13:18:37.657: INFO: Created: latency-svc-ndjxl
  Sep  2 13:18:37.696: INFO: Got endpoints: latency-svc-nnw9n [751.589843ms]
  Sep  2 13:18:37.708: INFO: Created: latency-svc-xdhdn
  Sep  2 13:18:37.745: INFO: Got endpoints: latency-svc-hblk9 [749.920396ms]
  Sep  2 13:18:37.756: INFO: Created: latency-svc-ncv25
  Sep  2 13:18:37.796: INFO: Got endpoints: latency-svc-g945f [748.722075ms]
  Sep  2 13:18:37.806: INFO: Created: latency-svc-mwxmv
  Sep  2 13:18:37.846: INFO: Got endpoints: latency-svc-lnwcc [749.983027ms]
  Sep  2 13:18:37.858: INFO: Created: latency-svc-qnbhp
  Sep  2 13:18:37.896: INFO: Got endpoints: latency-svc-qnrjv [748.648333ms]
  Sep  2 13:18:37.908: INFO: Created: latency-svc-9ffc5
  Sep  2 13:18:37.945: INFO: Got endpoints: latency-svc-ccfq6 [748.127656ms]
  Sep  2 13:18:37.954: INFO: Created: latency-svc-x6c74
  Sep  2 13:18:37.995: INFO: Got endpoints: latency-svc-z987k [749.697125ms]
  Sep  2 13:18:38.007: INFO: Created: latency-svc-rmlpk
  Sep  2 13:18:38.046: INFO: Got endpoints: latency-svc-l7qh4 [751.381401ms]
  Sep  2 13:18:38.058: INFO: Created: latency-svc-42zpc
  Sep  2 13:18:38.098: INFO: Got endpoints: latency-svc-lqcxg [752.50313ms]
  Sep  2 13:18:38.108: INFO: Created: latency-svc-phqfs
  Sep  2 13:18:38.147: INFO: Got endpoints: latency-svc-wrm5p [750.261316ms]
  Sep  2 13:18:38.158: INFO: Created: latency-svc-qgjzv
  Sep  2 13:18:38.194: INFO: Got endpoints: latency-svc-bvkrl [748.783637ms]
  Sep  2 13:18:38.205: INFO: Created: latency-svc-dmwkj
  Sep  2 13:18:38.245: INFO: Got endpoints: latency-svc-klxxs [751.103204ms]
  Sep  2 13:18:38.256: INFO: Created: latency-svc-gjbdx
  Sep  2 13:18:38.296: INFO: Got endpoints: latency-svc-xwmf2 [751.715178ms]
  Sep  2 13:18:38.308: INFO: Created: latency-svc-nq2rg
  Sep  2 13:18:38.348: INFO: Got endpoints: latency-svc-gf5x2 [752.504766ms]
  Sep  2 13:18:38.359: INFO: Created: latency-svc-qdsc5
  Sep  2 13:18:38.396: INFO: Got endpoints: latency-svc-ndjxl [749.181842ms]
  Sep  2 13:18:38.407: INFO: Created: latency-svc-gw4w4
  Sep  2 13:18:38.444: INFO: Got endpoints: latency-svc-xdhdn [747.635595ms]
  Sep  2 13:18:38.456: INFO: Created: latency-svc-5krnc
  Sep  2 13:18:38.494: INFO: Got endpoints: latency-svc-ncv25 [749.59542ms]
  Sep  2 13:18:38.506: INFO: Created: latency-svc-bcwt2
  Sep  2 13:18:38.546: INFO: Got endpoints: latency-svc-mwxmv [749.39257ms]
  Sep  2 13:18:38.555: INFO: Created: latency-svc-78jtr
  Sep  2 13:18:38.597: INFO: Got endpoints: latency-svc-qnbhp [750.186711ms]
  Sep  2 13:18:38.608: INFO: Created: latency-svc-zkjl7
  Sep  2 13:18:38.646: INFO: Got endpoints: latency-svc-9ffc5 [750.463115ms]
  Sep  2 13:18:38.658: INFO: Created: latency-svc-clld9
  Sep  2 13:18:38.695: INFO: Got endpoints: latency-svc-x6c74 [750.648405ms]
  Sep  2 13:18:38.706: INFO: Created: latency-svc-dpkdj
  Sep  2 13:18:38.745: INFO: Got endpoints: latency-svc-rmlpk [750.282293ms]
  Sep  2 13:18:38.757: INFO: Created: latency-svc-c8lc5
  Sep  2 13:18:38.795: INFO: Got endpoints: latency-svc-42zpc [748.707275ms]
  Sep  2 13:18:38.806: INFO: Created: latency-svc-tzccs
  Sep  2 13:18:38.846: INFO: Got endpoints: latency-svc-phqfs [748.433584ms]
  Sep  2 13:18:38.857: INFO: Created: latency-svc-6nmm8
  Sep  2 13:18:38.894: INFO: Got endpoints: latency-svc-qgjzv [746.812417ms]
  Sep  2 13:18:38.946: INFO: Got endpoints: latency-svc-dmwkj [751.436671ms]
  Sep  2 13:18:38.996: INFO: Got endpoints: latency-svc-gjbdx [750.633583ms]
  Sep  2 13:18:39.044: INFO: Got endpoints: latency-svc-nq2rg [747.650466ms]
  Sep  2 13:18:39.095: INFO: Got endpoints: latency-svc-qdsc5 [746.91059ms]
  Sep  2 13:18:39.146: INFO: Got endpoints: latency-svc-gw4w4 [749.829716ms]
  Sep  2 13:18:39.196: INFO: Got endpoints: latency-svc-5krnc [752.400611ms]
  Sep  2 13:18:39.244: INFO: Got endpoints: latency-svc-bcwt2 [750.122355ms]
  Sep  2 13:18:39.296: INFO: Got endpoints: latency-svc-78jtr [750.548012ms]
  Sep  2 13:18:39.344: INFO: Got endpoints: latency-svc-zkjl7 [747.380752ms]
  Sep  2 13:18:39.397: INFO: Got endpoints: latency-svc-clld9 [750.254994ms]
  Sep  2 13:18:39.445: INFO: Got endpoints: latency-svc-dpkdj [749.537543ms]
  Sep  2 13:18:39.498: INFO: Got endpoints: latency-svc-c8lc5 [753.04701ms]
  Sep  2 13:18:39.545: INFO: Got endpoints: latency-svc-tzccs [749.43146ms]
  Sep  2 13:18:39.596: INFO: Got endpoints: latency-svc-6nmm8 [750.183841ms]
  Sep  2 13:18:39.597: INFO: Latencies: [20.981646ms 29.398911ms 36.260911ms 43.841688ms 53.741852ms 54.44503ms 54.52147ms 54.845434ms 60.94193ms 62.95247ms 73.145708ms 80.195545ms 83.238389ms 89.669639ms 90.531137ms 90.936921ms 97.160028ms 103.169664ms 105.560895ms 115.40042ms 117.024687ms 118.923031ms 123.544305ms 128.987814ms 131.682758ms 133.762964ms 135.946197ms 147.364006ms 151.891565ms 152.15865ms 154.870958ms 176.697368ms 185.77932ms 190.753966ms 208.959667ms 216.756057ms 222.561983ms 230.574262ms 259.858585ms 306.55339ms 373.594286ms 431.64232ms 490.554845ms 526.035367ms 555.878465ms 571.51422ms 589.049624ms 620.827338ms 671.574698ms 719.999361ms 746.601997ms 746.750605ms 746.812417ms 746.91059ms 747.380752ms 747.564777ms 747.635595ms 747.650466ms 747.857596ms 747.90944ms 747.931446ms 748.127656ms 748.291797ms 748.29744ms 748.37672ms 748.410598ms 748.433584ms 748.453939ms 748.517058ms 748.563411ms 748.56936ms 748.573408ms 748.622427ms 748.648333ms 748.654445ms 748.677002ms 748.683588ms 748.707275ms 748.722075ms 748.7602ms 748.783637ms 748.788437ms 748.875748ms 748.892639ms 749.132125ms 749.181568ms 749.181842ms 749.183827ms 749.194197ms 749.196232ms 749.223124ms 749.225254ms 749.24673ms 749.251855ms 749.323843ms 749.325723ms 749.34328ms 749.363758ms 749.392105ms 749.39257ms 749.409368ms 749.43146ms 749.452739ms 749.520131ms 749.537543ms 749.542968ms 749.551376ms 749.552797ms 749.558751ms 749.59542ms 749.630769ms 749.636428ms 749.637426ms 749.689199ms 749.694606ms 749.696369ms 749.697125ms 749.707434ms 749.709999ms 749.715333ms 749.731528ms 749.775633ms 749.829716ms 749.920396ms 749.937979ms 749.959639ms 749.983027ms 749.996111ms 750.006695ms 750.024412ms 750.048716ms 750.057121ms 750.084875ms 750.087636ms 750.122355ms 750.125344ms 750.127907ms 750.130747ms 750.183841ms 750.186711ms 750.187854ms 750.254994ms 750.261316ms 750.282293ms 750.310409ms 750.366327ms 750.383664ms 750.384432ms 750.401484ms 750.433374ms 750.463115ms 750.484772ms 750.495476ms 750.52307ms 750.548012ms 750.54851ms 750.633583ms 750.646322ms 750.648405ms 750.673107ms 750.673218ms 750.720598ms 750.758836ms 750.760641ms 750.825204ms 750.89059ms 750.930617ms 750.966854ms 750.990343ms 751.004413ms 751.032913ms 751.038945ms 751.081787ms 751.103204ms 751.172366ms 751.209206ms 751.320431ms 751.364407ms 751.381401ms 751.411447ms 751.430358ms 751.436671ms 751.478977ms 751.479776ms 751.490117ms 751.521719ms 751.589843ms 751.675551ms 751.715178ms 751.72418ms 751.740738ms 751.85822ms 752.229921ms 752.400611ms 752.403795ms 752.50313ms 752.504766ms 752.564819ms 753.04701ms 753.781596ms]
  Sep  2 13:18:39.597: INFO: 50 %ile: 749.409368ms
  Sep  2 13:18:39.597: INFO: 90 %ile: 751.430358ms
  Sep  2 13:18:39.597: INFO: 99 %ile: 753.04701ms
  Sep  2 13:18:39.597: INFO: Total sample count: 200
  Sep  2 13:18:39.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6427" for this suite. @ 09/02/23 13:18:39.603
• [10.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/02/23 13:18:39.612
  Sep  2 13:18:39.612: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 13:18:39.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:39.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:39.635
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/02/23 13:18:39.639
  Sep  2 13:18:39.649: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6210  ae6b7903-b623-4b45-9c11-0e13185db195 28561 0 2023-09-02 13:18:39 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-02 13:18:39 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-85r54,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-85r54,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/02/23 13:18:41.661
  Sep  2 13:18:41.661: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6210 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:18:41.661: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:18:41.662: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:18:41.662: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6210/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/02/23 13:18:41.756
  Sep  2 13:18:41.756: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6210 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:18:41.756: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:18:41.757: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:18:41.757: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6210/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  2 13:18:41.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:18:41.865: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-6210" for this suite. @ 09/02/23 13:18:41.881
• [2.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/02/23 13:18:41.892
  Sep  2 13:18:41.892: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 13:18:41.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:18:41.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:18:41.913
  STEP: Creating pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704 @ 09/02/23 13:18:41.917
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 13:18:43.938
  Sep  2 13:18:43.942: INFO: Initial restart count of pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 is 0
  Sep  2 13:18:43.946: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:45.952: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:47.957: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:49.961: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:51.966: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:53.971: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:55.975: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:57.980: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:18:59.984: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:01.989: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:03.996: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:06.007: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:08.012: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:10.017: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:12.022: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:14.027: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:16.032: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:18.038: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:20.042: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:22.048: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:24.053: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:26.057: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:28.062: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:30.067: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:32.072: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:34.077: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:36.083: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:38.088: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:40.094: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:42.099: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:44.104: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:46.110: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:48.115: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:50.119: INFO: Get pod test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 in namespace container-probe-8704
  Sep  2 13:19:50.119: INFO: Restart count of pod container-probe-8704/test-grpc-957820c3-f149-4746-bd1a-9f2bcef5bef1 is now 1 (1m6.177277166s elapsed)
  Sep  2 13:19:50.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:19:50.124
  STEP: Destroying namespace "container-probe-8704" for this suite. @ 09/02/23 13:19:50.139
• [68.256 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/02/23 13:19:50.148
  Sep  2 13:19:50.148: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename runtimeclass @ 09/02/23 13:19:50.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:19:50.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:19:50.17
  Sep  2 13:19:50.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3956" for this suite. @ 09/02/23 13:19:50.206
• [0.066 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/02/23 13:19:50.214
  Sep  2 13:19:50.215: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:19:50.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:19:50.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:19:50.236
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:19:50.24
  STEP: Saw pod success @ 09/02/23 13:19:54.265
  Sep  2 13:19:54.269: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-8065b861-e828-4afd-9eb9-451664fd2bf5 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:19:54.278
  Sep  2 13:19:54.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5451" for this suite. @ 09/02/23 13:19:54.303
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/02/23 13:19:54.311
  Sep  2 13:19:54.311: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:19:54.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:19:54.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:19:54.334
  STEP: creating pod @ 09/02/23 13:19:54.339
  Sep  2 13:19:56.384: INFO: Pod pod-hostip-56a9b1bb-a099-432a-8600-ed94e56ca807 has hostIP: 172.31.7.35
  Sep  2 13:19:56.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6030" for this suite. @ 09/02/23 13:19:56.389
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/02/23 13:19:56.397
  Sep  2 13:19:56.397: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replication-controller @ 09/02/23 13:19:56.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:19:56.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:19:56.417
  STEP: creating a ReplicationController @ 09/02/23 13:19:56.426
  STEP: waiting for RC to be added @ 09/02/23 13:19:56.433
  STEP: waiting for available Replicas @ 09/02/23 13:19:56.433
  STEP: patching ReplicationController @ 09/02/23 13:19:57.664
  STEP: waiting for RC to be modified @ 09/02/23 13:19:57.672
  STEP: patching ReplicationController status @ 09/02/23 13:19:57.673
  STEP: waiting for RC to be modified @ 09/02/23 13:19:57.68
  STEP: waiting for available Replicas @ 09/02/23 13:19:57.68
  STEP: fetching ReplicationController status @ 09/02/23 13:19:57.685
  STEP: patching ReplicationController scale @ 09/02/23 13:19:57.69
  STEP: waiting for RC to be modified @ 09/02/23 13:19:57.695
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/02/23 13:19:57.696
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/02/23 13:19:59.191
  STEP: updating ReplicationController status @ 09/02/23 13:19:59.196
  STEP: waiting for RC to be modified @ 09/02/23 13:19:59.203
  STEP: listing all ReplicationControllers @ 09/02/23 13:19:59.203
  STEP: checking that ReplicationController has expected values @ 09/02/23 13:19:59.207
  STEP: deleting ReplicationControllers by collection @ 09/02/23 13:19:59.207
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/02/23 13:19:59.216
  Sep  2 13:19:59.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0902 13:19:59.267981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2287" for this suite. @ 09/02/23 13:19:59.273
• [2.883 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/02/23 13:19:59.281
  Sep  2 13:19:59.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 13:19:59.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:19:59.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:19:59.302
  STEP: creating the pod @ 09/02/23 13:19:59.307
  STEP: waiting for pod running @ 09/02/23 13:19:59.318
  E0902 13:20:00.268059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:01.268263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/02/23 13:20:01.328
  Sep  2 13:20:01.332: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8221 PodName:var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:20:01.332: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:20:01.333: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:20:01.333: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8221/pods/var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/02/23 13:20:01.418
  Sep  2 13:20:01.422: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8221 PodName:var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:20:01.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:20:01.422: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:20:01.423: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8221/pods/var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/02/23 13:20:01.516
  Sep  2 13:20:02.029: INFO: Successfully updated pod "var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236"
  STEP: waiting for annotated pod running @ 09/02/23 13:20:02.029
  STEP: deleting the pod gracefully @ 09/02/23 13:20:02.032
  Sep  2 13:20:02.032: INFO: Deleting pod "var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236" in namespace "var-expansion-8221"
  Sep  2 13:20:02.042: INFO: Wait up to 5m0s for pod "var-expansion-1c8580f2-badf-42a0-9f64-662c3de45236" to be fully deleted
  E0902 13:20:02.269256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:03.269335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:04.270306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:05.270401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:06.270490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:07.271263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:08.271861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:09.272247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:10.272736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:11.273025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:12.273895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:13.273919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:14.274901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:15.275445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:16.275555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:17.275648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:18.275684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:19.276061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:20.276665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:21.277563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:22.278359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:23.278561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:24.279190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:25.279285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:26.279588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:27.279680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:28.280737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:29.281196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:30.281264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:31.281498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:32.282475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:33.282566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:20:34.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8221" for this suite. @ 09/02/23 13:20:34.128
• [34.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/02/23 13:20:34.139
  Sep  2 13:20:34.139: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:20:34.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:20:34.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:20:34.161
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/02/23 13:20:34.165
  Sep  2 13:20:34.165: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:20:34.283373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:35.283847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:20:35.656: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:20:36.284891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:37.285061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:38.285700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:39.286674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:40.287415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:20:41.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4731" for this suite. @ 09/02/23 13:20:41.165
• [7.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/02/23 13:20:41.176
  Sep  2 13:20:41.176: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:20:41.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:20:41.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:20:41.195
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:20:41.202
  E0902 13:20:41.288156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:42.288965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:43.289523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:44.289933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:20:45.223
  Sep  2 13:20:45.227: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-7cdf0b0e-79d0-419f-a12b-2d275d130ccb container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:20:45.244
  Sep  2 13:20:45.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9555" for this suite. @ 09/02/23 13:20:45.266
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/02/23 13:20:45.275
  Sep  2 13:20:45.275: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:20:45.275
  E0902 13:20:45.292827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:20:45.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:20:45.298
  STEP: starting the proxy server @ 09/02/23 13:20:45.302
  Sep  2 13:20:45.302: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-347 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/02/23 13:20:45.346
  Sep  2 13:20:45.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-347" for this suite. @ 09/02/23 13:20:45.36
• [0.093 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/02/23 13:20:45.368
  Sep  2 13:20:45.368: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:20:45.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:20:45.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:20:45.387
  STEP: Creating a ResourceQuota with best effort scope @ 09/02/23 13:20:45.39
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/23 13:20:45.395
  E0902 13:20:46.293668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:47.293760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/02/23 13:20:47.4
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/23 13:20:47.407
  E0902 13:20:48.294220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:49.294561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/02/23 13:20:49.412
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/02/23 13:20:49.426
  E0902 13:20:50.294660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:51.294764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/02/23 13:20:51.431
  E0902 13:20:52.294910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:53.295493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/23 13:20:53.435
  STEP: Ensuring resource quota status released the pod usage @ 09/02/23 13:20:53.452
  E0902 13:20:54.295839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:55.295921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/02/23 13:20:55.457
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/02/23 13:20:55.469
  E0902 13:20:56.296507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:57.297590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/02/23 13:20:57.474
  E0902 13:20:58.297635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:20:59.298050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/23 13:20:59.479
  STEP: Ensuring resource quota status released the pod usage @ 09/02/23 13:20:59.495
  E0902 13:21:00.298126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:01.298314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:01.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3837" for this suite. @ 09/02/23 13:21:01.503
• [16.142 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/02/23 13:21:01.511
  Sep  2 13:21:01.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:21:01.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:01.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:01.53
  STEP: Setting up server cert @ 09/02/23 13:21:01.555
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:21:01.763
  STEP: Deploying the webhook pod @ 09/02/23 13:21:01.771
  STEP: Wait for the deployment to be ready @ 09/02/23 13:21:01.782
  Sep  2 13:21:01.791: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 13:21:02.298667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:03.298720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/23 13:21:03.802
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:21:03.817
  E0902 13:21:04.299490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:04.818: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/02/23 13:21:04.824
  STEP: create a namespace for the webhook @ 09/02/23 13:21:04.839
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/02/23 13:21:04.903
  Sep  2 13:21:04.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5604" for this suite. @ 09/02/23 13:21:05.013
  STEP: Destroying namespace "webhook-markers-8681" for this suite. @ 09/02/23 13:21:05.023
  STEP: Destroying namespace "fail-closed-namespace-4951" for this suite. @ 09/02/23 13:21:05.029
• [3.525 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/02/23 13:21:05.037
  Sep  2 13:21:05.037: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:21:05.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:05.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:05.056
  STEP: creating service in namespace services-2823 @ 09/02/23 13:21:05.06
  STEP: creating service affinity-nodeport in namespace services-2823 @ 09/02/23 13:21:05.06
  STEP: creating replication controller affinity-nodeport in namespace services-2823 @ 09/02/23 13:21:05.073
  I0902 13:21:05.085880      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2823, replica count: 3
  E0902 13:21:05.299562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:06.300254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:07.300503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0902 13:21:08.137373      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:21:08.148: INFO: Creating new exec pod
  E0902 13:21:08.301052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:09.301967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:10.302193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:11.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-2823 exec execpod-affinityd99mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0902 13:21:11.303088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:11.323: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep  2 13:21:11.323: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:21:11.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-2823 exec execpod-affinityd99mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.26 80'
  Sep  2 13:21:11.461: INFO: stderr: "+ nc -v -t -w 2 10.152.183.26 80\n+ echo hostName\nConnection to 10.152.183.26 80 port [tcp/http] succeeded!\n"
  Sep  2 13:21:11.461: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:21:11.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-2823 exec execpod-affinityd99mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.21 32095'
  Sep  2 13:21:11.609: INFO: stderr: "+ nc -v -t -w 2 172.31.26.21 32095\n+ echo hostName\nConnection to 172.31.26.21 32095 port [tcp/*] succeeded!\n"
  Sep  2 13:21:11.609: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:21:11.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-2823 exec execpod-affinityd99mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.65 32095'
  Sep  2 13:21:11.756: INFO: stderr: "+ nc -v -t -w 2 172.31.35.65 32095\n+ echo hostName\nConnection to 172.31.35.65 32095 port [tcp/*] succeeded!\n"
  Sep  2 13:21:11.756: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:21:11.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-2823 exec execpod-affinityd99mj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.21:32095/ ; done'
  Sep  2 13:21:11.968: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:32095/\n"
  Sep  2 13:21:11.968: INFO: stdout: "\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr\naffinity-nodeport-xhckr"
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Received response from host: affinity-nodeport-xhckr
  Sep  2 13:21:11.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:21:11.972: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2823, will wait for the garbage collector to delete the pods @ 09/02/23 13:21:11.987
  Sep  2 13:21:12.047: INFO: Deleting ReplicationController affinity-nodeport took: 6.723838ms
  Sep  2 13:21:12.148: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.69046ms
  E0902 13:21:12.303991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:13.304046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:14.304124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:15.304510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2823" for this suite. @ 09/02/23 13:21:15.471
• [10.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/02/23 13:21:15.48
  Sep  2 13:21:15.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/23 13:21:15.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:15.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:15.504
  STEP: Waiting for pod completion @ 09/02/23 13:21:15.517
  E0902 13:21:16.304595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:17.304706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:18.304804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:19.305689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:19.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4916" for this suite. @ 09/02/23 13:21:19.542
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/02/23 13:21:19.554
  Sep  2 13:21:19.554: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-webhook @ 09/02/23 13:21:19.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:19.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:19.575
  STEP: Setting up server cert @ 09/02/23 13:21:19.578
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/02/23 13:21:19.938
  STEP: Deploying the custom resource conversion webhook pod @ 09/02/23 13:21:19.943
  STEP: Wait for the deployment to be ready @ 09/02/23 13:21:19.958
  Sep  2 13:21:19.966: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0902 13:21:20.306549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:21.306795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/23 13:21:21.977
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:21:21.986
  E0902 13:21:22.308543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:22.986: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep  2 13:21:22.993: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:21:23.309212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:24.310280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:25.310351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/02/23 13:21:25.594
  STEP: v2 custom resource should be converted @ 09/02/23 13:21:25.6
  Sep  2 13:21:25.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6491" for this suite. @ 09/02/23 13:21:26.183
• [6.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/02/23 13:21:26.199
  Sep  2 13:21:26.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:21:26.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:26.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:26.222
  STEP: creating the pod @ 09/02/23 13:21:26.225
  STEP: submitting the pod to kubernetes @ 09/02/23 13:21:26.225
  W0902 13:21:26.232692      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0902 13:21:26.311122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:27.311322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/02/23 13:21:28.244
  STEP: updating the pod @ 09/02/23 13:21:28.248
  E0902 13:21:28.312011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:28.762: INFO: Successfully updated pod "pod-update-activedeadlineseconds-f55d4549-4811-4781-9b5f-7e7a99ce880d"
  E0902 13:21:29.312608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:30.313593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:31.314289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:32.314396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:32.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9611" for this suite. @ 09/02/23 13:21:32.783
• [6.592 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/02/23 13:21:32.795
  Sep  2 13:21:32.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:21:32.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:32.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:32.85
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:21:32.854
  E0902 13:21:33.315398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:34.315465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:35.316255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:36.316459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:21:36.88
  Sep  2 13:21:36.884: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-45035535-06ab-4263-95a9-cfae18b923e3 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:21:36.891
  Sep  2 13:21:36.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7632" for this suite. @ 09/02/23 13:21:36.916
• [4.128 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/02/23 13:21:36.924
  Sep  2 13:21:36.924: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:21:36.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:36.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:36.951
  STEP: creating a ConfigMap @ 09/02/23 13:21:36.955
  STEP: fetching the ConfigMap @ 09/02/23 13:21:36.961
  STEP: patching the ConfigMap @ 09/02/23 13:21:36.963
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/02/23 13:21:36.97
  STEP: deleting the ConfigMap by collection with a label selector @ 09/02/23 13:21:36.974
  STEP: listing all ConfigMaps in test namespace @ 09/02/23 13:21:36.986
  Sep  2 13:21:36.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8721" for this suite. @ 09/02/23 13:21:36.994
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/02/23 13:21:37.002
  Sep  2 13:21:37.002: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename security-context @ 09/02/23 13:21:37.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:37.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:37.03
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/02/23 13:21:37.034
  E0902 13:21:37.317518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:38.318488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:39.318566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:40.318652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:21:41.06
  Sep  2 13:21:41.065: INFO: Trying to get logs from node ip-172-31-7-35 pod security-context-9b417d13-e805-4887-8ae4-f888d75b28a6 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:21:41.072
  Sep  2 13:21:41.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4582" for this suite. @ 09/02/23 13:21:41.098
• [4.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/02/23 13:21:41.105
  Sep  2 13:21:41.105: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename security-context-test @ 09/02/23 13:21:41.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:41.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:41.128
  E0902 13:21:41.319576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:42.319668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:43.319971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:44.320498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:21:45.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5985" for this suite. @ 09/02/23 13:21:45.165
• [4.065 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/02/23 13:21:45.171
  Sep  2 13:21:45.171: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/23 13:21:45.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:21:45.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:21:45.19
  Sep  2 13:21:45.207: INFO: Waiting up to 1m0s for all nodes to be ready
  E0902 13:21:45.321353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:46.321449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:47.321761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:48.321854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:49.322748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:50.323175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:51.323689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:52.323773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:53.324798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:54.325520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:55.326293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:56.326491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:57.326567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:58.326748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:21:59.326994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:00.327148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:01.327926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:02.328048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:03.328468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:04.328495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:05.328736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:06.329732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:07.330340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:08.330441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:09.330805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:10.330880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:11.331208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:12.331286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:13.332137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:14.332499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:15.332620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:16.333578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:17.333954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:18.334820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:19.334903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:20.335719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:21.336284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:22.336506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:23.337560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:24.337984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:25.338069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:26.338626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:27.338670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:28.338837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:29.339311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:30.339405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:31.339477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:32.339565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:33.340154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:34.340493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:35.341196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:36.341559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:37.342599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:38.342683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:39.342991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:40.343191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:41.343325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:42.343403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:43.343959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:44.344379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:22:45.232: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/02/23 13:22:45.237
  Sep  2 13:22:45.258: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep  2 13:22:45.267: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep  2 13:22:45.315: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep  2 13:22:45.343: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  E0902 13:22:45.344681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:22:45.383: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep  2 13:22:45.400: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/02/23 13:22:45.4
  E0902 13:22:46.345093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:47.345968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/02/23 13:22:47.433
  E0902 13:22:48.346060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:49.346497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:50.346581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:51.346705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:22:51.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8188" for this suite. @ 09/02/23 13:22:51.526
• [66.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/02/23 13:22:51.533
  Sep  2 13:22:51.533: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:22:51.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:22:51.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:22:51.554
  STEP: creating service in namespace services-404 @ 09/02/23 13:22:51.557
  STEP: creating service affinity-clusterip in namespace services-404 @ 09/02/23 13:22:51.557
  STEP: creating replication controller affinity-clusterip in namespace services-404 @ 09/02/23 13:22:51.572
  I0902 13:22:51.582030      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-404, replica count: 3
  E0902 13:22:52.347850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:53.348520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:54.348997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0902 13:22:54.633497      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:22:54.640: INFO: Creating new exec pod
  E0902 13:22:55.349096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:56.349172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:57.349242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:22:57.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-404 exec execpod-affinitygj7xg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep  2 13:22:57.794: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep  2 13:22:57.794: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:22:57.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-404 exec execpod-affinitygj7xg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.98 80'
  Sep  2 13:22:57.940: INFO: stderr: "+ nc -v -t -w 2 10.152.183.98 80\nConnection to 10.152.183.98 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 13:22:57.940: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:22:57.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-404 exec execpod-affinitygj7xg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.98:80/ ; done'
  Sep  2 13:22:58.149: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.98:80/\n"
  Sep  2 13:22:58.149: INFO: stdout: "\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7\naffinity-clusterip-xblh7"
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.149: INFO: Received response from host: affinity-clusterip-xblh7
  Sep  2 13:22:58.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:22:58.154: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-404, will wait for the garbage collector to delete the pods @ 09/02/23 13:22:58.169
  Sep  2 13:22:58.231: INFO: Deleting ReplicationController affinity-clusterip took: 7.018377ms
  Sep  2 13:22:58.332: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.106179ms
  E0902 13:22:58.349833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:22:59.350114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:00.350646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:01.350889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-404" for this suite. @ 09/02/23 13:23:01.654
• [10.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/02/23 13:23:01.662
  Sep  2 13:23:01.662: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:23:01.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:01.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:01.684
  STEP: set up a multi version CRD @ 09/02/23 13:23:01.687
  Sep  2 13:23:01.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:23:02.351616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:03.352681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:04.353555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/02/23 13:23:05.196
  STEP: check the new version name is served @ 09/02/23 13:23:05.21
  E0902 13:23:05.353647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/02/23 13:23:06.019
  E0902 13:23:06.354243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/02/23 13:23:06.694
  E0902 13:23:07.355511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:08.355587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:09.364538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:09.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8113" for this suite. @ 09/02/23 13:23:09.444
• [7.792 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/02/23 13:23:09.454
  Sep  2 13:23:09.454: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:23:09.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:09.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:09.478
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:23:09.482
  E0902 13:23:10.365597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:11.365692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:12.366494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:13.366757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:23:13.505
  Sep  2 13:23:13.509: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-8d030c26-67e3-4c72-a24e-5453df80ea86 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:23:13.528
  Sep  2 13:23:13.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4193" for this suite. @ 09/02/23 13:23:13.554
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/02/23 13:23:13.568
  Sep  2 13:23:13.568: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 13:23:13.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:13.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:13.59
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/23 13:23:13.616
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/23 13:23:13.623
  Sep  2 13:23:13.628: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:13.628: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:13.632: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:23:13.632: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:23:14.366807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:14.640: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:14.640: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:14.644: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:23:14.644: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:23:15.367208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:15.638: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:15.638: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:15.642: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  2 13:23:15.642: INFO: Node ip-172-31-7-35 is running 0 daemon pod, expected 1
  E0902 13:23:16.368239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:16.637: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:16.637: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:16.641: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:23:16.641: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/02/23 13:23:16.645
  Sep  2 13:23:16.663: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:16.663: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:16.668: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  2 13:23:16.668: INFO: Node ip-172-31-35-65 is running 0 daemon pod, expected 1
  E0902 13:23:17.368554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:17.675: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:17.675: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:17.679: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  2 13:23:17.680: INFO: Node ip-172-31-35-65 is running 0 daemon pod, expected 1
  E0902 13:23:18.368651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:18.674: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:18.674: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:23:18.679: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:23:18.679: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/23 13:23:18.684
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8244, will wait for the garbage collector to delete the pods @ 09/02/23 13:23:18.684
  Sep  2 13:23:18.745: INFO: Deleting DaemonSet.extensions daemon-set took: 6.847747ms
  Sep  2 13:23:18.846: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.990889ms
  E0902 13:23:19.369263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:20.151: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:23:20.151: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  2 13:23:20.155: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31471"},"items":null}

  Sep  2 13:23:20.159: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31471"},"items":null}

  Sep  2 13:23:20.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8244" for this suite. @ 09/02/23 13:23:20.193
• [6.634 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/02/23 13:23:20.202
  Sep  2 13:23:20.202: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:23:20.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:20.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:20.231
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:23:20.236
  E0902 13:23:20.369729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:21.370053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:22.370096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:23.370317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:23:24.263
  Sep  2 13:23:24.267: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-4235bba8-643b-4f08-8a22-985b485571c7 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:23:24.275
  Sep  2 13:23:24.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-83" for this suite. @ 09/02/23 13:23:24.297
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/02/23 13:23:24.307
  Sep  2 13:23:24.307: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:23:24.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:24.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:24.33
  STEP: Creating configMap with name projected-configmap-test-volume-map-d9b66fb5-741e-41e6-b308-a6abb6ca03ad @ 09/02/23 13:23:24.334
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:23:24.34
  E0902 13:23:24.371184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:25.371551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:26.371663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:27.371779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:28.371915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:23:28.372
  Sep  2 13:23:28.377: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-configmaps-88e8c78b-7b78-4995-a112-b7d3f31fae70 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:23:28.385
  Sep  2 13:23:28.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4100" for this suite. @ 09/02/23 13:23:28.407
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/02/23 13:23:28.415
  Sep  2 13:23:28.415: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/02/23 13:23:28.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:28.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:28.442
  STEP: creating a target pod @ 09/02/23 13:23:28.447
  E0902 13:23:29.372308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:30.372527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/02/23 13:23:30.47
  E0902 13:23:31.372623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:32.373593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/02/23 13:23:32.491
  Sep  2 13:23:32.491: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5094 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:23:32.491: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:23:32.491: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:23:32.491: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5094/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep  2 13:23:32.562: INFO: Exec stderr: ""
  Sep  2 13:23:32.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5094" for this suite. @ 09/02/23 13:23:32.574
• [4.167 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/02/23 13:23:32.582
  Sep  2 13:23:32.582: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:23:32.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:32.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:32.605
  STEP: Creating projection with secret that has name projected-secret-test-198ff348-de6a-4f9b-b3a5-f0116f96be47 @ 09/02/23 13:23:32.609
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:23:32.614
  E0902 13:23:33.373674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:34.373983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:35.374455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:36.374569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:23:36.636
  Sep  2 13:23:36.641: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-secrets-ba1aa41f-a17f-4a0f-8a5f-6cdc0274da45 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:23:36.648
  Sep  2 13:23:36.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2226" for this suite. @ 09/02/23 13:23:36.669
• [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/02/23 13:23:36.677
  Sep  2 13:23:36.677: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:23:36.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:36.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:36.698
  STEP: Creating secret with name secret-test-map-a947f2d3-530d-4491-b527-c364c4f37e0c @ 09/02/23 13:23:36.702
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:23:36.708
  E0902 13:23:37.374645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:38.374736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:39.375324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:40.375541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:23:40.732
  Sep  2 13:23:40.737: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-secrets-69a658f8-bb69-4e03-8631-28fb062bc1b3 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:23:40.745
  Sep  2 13:23:40.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7909" for this suite. @ 09/02/23 13:23:40.766
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/02/23 13:23:40.774
  Sep  2 13:23:40.774: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 13:23:40.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:40.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:40.794
  STEP: Creating a test headless service @ 09/02/23 13:23:40.798
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8658.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8658.svc.cluster.local;sleep 1; done
   @ 09/02/23 13:23:40.804
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8658.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8658.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8658.svc.cluster.local;sleep 1; done
   @ 09/02/23 13:23:40.804
  STEP: creating a pod to probe DNS @ 09/02/23 13:23:40.804
  STEP: submitting the pod to kubernetes @ 09/02/23 13:23:40.804
  E0902 13:23:41.376211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:42.377222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/23 13:23:42.823
  STEP: looking for the results for each expected name from probers @ 09/02/23 13:23:42.827
  Sep  2 13:23:42.833: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.838: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.844: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.850: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.854: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.859: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.864: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.868: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8658.svc.cluster.local from pod dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3: the server could not find the requested resource (get pods dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3)
  Sep  2 13:23:42.868: INFO: Lookups using dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8658.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8658.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8658.svc.cluster.local jessie_udp@dns-test-service-2.dns-8658.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8658.svc.cluster.local]

  Sep  2 13:23:42.875: INFO: Pod client logs for webserver: 
  Sep  2 13:23:42.883: INFO: Pod client logs for querier: 
  Sep  2 13:23:42.889: INFO: Pod client logs for jessie-querier: 
  E0902 13:23:43.377270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:44.377365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:45.377579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:46.377799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:47.377905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:47.927: INFO: DNS probes using dns-8658/dns-test-a5739a7f-3c91-4af7-acf3-cebe61a982b3 succeeded

  Sep  2 13:23:47.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:23:47.931
  STEP: deleting the test headless service @ 09/02/23 13:23:47.945
  STEP: Destroying namespace "dns-8658" for this suite. @ 09/02/23 13:23:47.96
• [7.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/02/23 13:23:47.97
  Sep  2 13:23:47.970: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:23:47.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:47.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:47.993
  STEP: Setting up server cert @ 09/02/23 13:23:48.023
  E0902 13:23:48.378693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:23:48.585
  STEP: Deploying the webhook pod @ 09/02/23 13:23:48.593
  STEP: Wait for the deployment to be ready @ 09/02/23 13:23:48.605
  Sep  2 13:23:48.613: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 13:23:49.379438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:50.380316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/23 13:23:50.625
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:23:50.634
  E0902 13:23:51.380532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:51.635: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/02/23 13:23:51.643
  STEP: create a configmap that should be updated by the webhook @ 09/02/23 13:23:51.659
  Sep  2 13:23:51.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-953" for this suite. @ 09/02/23 13:23:51.721
  STEP: Destroying namespace "webhook-markers-5465" for this suite. @ 09/02/23 13:23:51.729
• [3.766 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/02/23 13:23:51.736
  Sep  2 13:23:51.736: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/02/23 13:23:51.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:51.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:51.76
  STEP: mirroring a new custom Endpoint @ 09/02/23 13:23:51.773
  Sep  2 13:23:51.781: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0902 13:23:52.381591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:53.381705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/02/23 13:23:53.786
  Sep  2 13:23:53.798: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0902 13:23:54.381752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:55.381864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 09/02/23 13:23:55.804
  Sep  2 13:23:55.815: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0902 13:23:56.381949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:57.382041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:23:57.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5340" for this suite. @ 09/02/23 13:23:57.823
• [6.093 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/02/23 13:23:57.83
  Sep  2 13:23:57.830: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:23:57.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:23:57.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:23:57.851
  STEP: Setting up server cert @ 09/02/23 13:23:57.875
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:23:58.076
  STEP: Deploying the webhook pod @ 09/02/23 13:23:58.083
  STEP: Wait for the deployment to be ready @ 09/02/23 13:23:58.094
  Sep  2 13:23:58.103: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 13:23:58.382093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:23:59.382529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/23 13:24:00.116
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:24:00.127
  E0902 13:24:00.383388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:01.129: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/02/23 13:24:01.137
  STEP: create a pod that should be denied by the webhook @ 09/02/23 13:24:01.157
  STEP: create a pod that causes the webhook to hang @ 09/02/23 13:24:01.175
  E0902 13:24:01.384332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:02.384627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:03.385566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:04.386615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:05.386685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:06.386771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:07.386969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:08.387184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:09.387523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:10.387622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/02/23 13:24:11.185
  STEP: create a configmap that should be admitted by the webhook @ 09/02/23 13:24:11.236
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/02/23 13:24:11.248
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/02/23 13:24:11.259
  STEP: create a namespace that bypass the webhook @ 09/02/23 13:24:11.265
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/02/23 13:24:11.282
  Sep  2 13:24:11.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4604" for this suite. @ 09/02/23 13:24:11.344
  STEP: Destroying namespace "webhook-markers-8060" for this suite. @ 09/02/23 13:24:11.353
  STEP: Destroying namespace "exempted-namespace-9691" for this suite. @ 09/02/23 13:24:11.36
• [13.538 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/02/23 13:24:11.369
  Sep  2 13:24:11.369: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 13:24:11.37
  E0902 13:24:11.388537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:24:11.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:24:11.392
  STEP: Creating service test in namespace statefulset-8384 @ 09/02/23 13:24:11.396
  STEP: Creating stateful set ss in namespace statefulset-8384 @ 09/02/23 13:24:11.402
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8384 @ 09/02/23 13:24:11.409
  Sep  2 13:24:11.413: INFO: Found 0 stateful pods, waiting for 1
  E0902 13:24:12.388665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:13.389732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:14.390180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:15.390342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:16.391106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:17.391168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:18.391264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:19.391552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:20.391721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:21.391815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:21.418: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/02/23 13:24:21.418
  Sep  2 13:24:21.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 13:24:21.567: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 13:24:21.567: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 13:24:21.567: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 13:24:21.571: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0902 13:24:22.392798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:23.392862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:24.393564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:25.393670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:26.393774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:27.393964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:28.394818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:29.395271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:30.395363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:31.395458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:31.577: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 13:24:31.577: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  2 13:24:31.593: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Sep  2 13:24:31.593: INFO: ss-0  ip-172-31-7-35  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:11 +0000 UTC  }]
  Sep  2 13:24:31.593: INFO: 
  Sep  2 13:24:31.593: INFO: StatefulSet ss has not reached scale 3, at 1
  E0902 13:24:32.395561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:32.598: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99628424s
  E0902 13:24:33.396093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:33.602: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.99197055s
  E0902 13:24:34.396600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:34.607: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987449181s
  E0902 13:24:35.397571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:35.612: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982294042s
  E0902 13:24:36.398597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:36.617: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.977337712s
  E0902 13:24:37.399652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:37.622: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972341834s
  E0902 13:24:38.399739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:38.627: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967165242s
  E0902 13:24:39.400307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:39.632: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962620369s
  E0902 13:24:40.400381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:40.636: INFO: Verifying statefulset ss doesn't scale past 3 for another 957.590213ms
  E0902 13:24:41.400519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8384 @ 09/02/23 13:24:41.636
  Sep  2 13:24:41.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 13:24:41.784: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  2 13:24:41.784: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 13:24:41.784: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 13:24:41.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 13:24:41.930: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep  2 13:24:41.930: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 13:24:41.930: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 13:24:41.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  2 13:24:42.073: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep  2 13:24:42.073: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  2 13:24:42.073: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  2 13:24:42.077: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0902 13:24:42.401039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:43.401588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:44.402615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:45.402714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:46.402809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:47.402988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:48.403379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:49.404450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:50.405444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:51.405602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:52.083: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 13:24:52.083: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  2 13:24:52.083: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/02/23 13:24:52.083
  Sep  2 13:24:52.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 13:24:52.240: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 13:24:52.240: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 13:24:52.240: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 13:24:52.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  2 13:24:52.377: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 13:24:52.377: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 13:24:52.377: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 13:24:52.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=statefulset-8384 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0902 13:24:52.406325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:24:52.523: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  2 13:24:52.523: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  2 13:24:52.523: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  2 13:24:52.523: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  2 13:24:52.526: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0902 13:24:53.406730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:54.407685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:55.407769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:56.407859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:57.407971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:58.408072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:24:59.408498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:00.408585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:01.408675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:02.408929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:02.536: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 13:25:02.536: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 13:25:02.536: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep  2 13:25:02.557: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Sep  2 13:25:02.557: INFO: ss-0  ip-172-31-7-35   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:11 +0000 UTC  }]
  Sep  2 13:25:02.557: INFO: ss-1  ip-172-31-26-21  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:31 +0000 UTC  }]
  Sep  2 13:25:02.557: INFO: ss-2  ip-172-31-35-65  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:31 +0000 UTC  }]
  Sep  2 13:25:02.558: INFO: 
  Sep  2 13:25:02.558: INFO: StatefulSet ss has not reached scale 0, at 3
  E0902 13:25:03.409583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:03.565: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  Sep  2 13:25:03.565: INFO: ss-0  ip-172-31-7-35   Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:11 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:11 +0000 UTC  }]
  Sep  2 13:25:03.565: INFO: ss-1  ip-172-31-26-21  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:31 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-02 13:24:31 +0000 UTC  }]
  Sep  2 13:25:03.565: INFO: 
  Sep  2 13:25:03.565: INFO: StatefulSet ss has not reached scale 0, at 2
  E0902 13:25:04.410028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:04.569: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.982920493s
  E0902 13:25:05.410137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:05.574: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.977646637s
  E0902 13:25:06.410231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:06.579: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.973730218s
  E0902 13:25:07.411072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:07.583: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.968921038s
  E0902 13:25:08.411156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:08.588: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.963672885s
  E0902 13:25:09.411396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:09.593: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.959413158s
  E0902 13:25:10.412005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:10.598: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.953800238s
  E0902 13:25:11.412074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:11.602: INFO: Verifying statefulset ss doesn't scale past 0 for another 949.885864ms
  E0902 13:25:12.412501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8384 @ 09/02/23 13:25:12.602
  Sep  2 13:25:12.608: INFO: Scaling statefulset ss to 0
  Sep  2 13:25:12.620: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 13:25:12.623: INFO: Deleting all statefulset in ns statefulset-8384
  Sep  2 13:25:12.627: INFO: Scaling statefulset ss to 0
  Sep  2 13:25:12.638: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 13:25:12.642: INFO: Deleting statefulset ss
  Sep  2 13:25:12.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8384" for this suite. @ 09/02/23 13:25:12.66
• [61.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/02/23 13:25:12.668
  Sep  2 13:25:12.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename prestop @ 09/02/23 13:25:12.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:25:12.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:25:12.69
  STEP: Creating server pod server in namespace prestop-9239 @ 09/02/23 13:25:12.694
  STEP: Waiting for pods to come up. @ 09/02/23 13:25:12.702
  E0902 13:25:13.412607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:14.412998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9239 @ 09/02/23 13:25:14.719
  E0902 13:25:15.413667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:16.413758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/02/23 13:25:16.735
  E0902 13:25:17.413982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:18.414161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:19.414766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:20.414870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:21.414945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:21.750: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep  2 13:25:21.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/02/23 13:25:21.755
  STEP: Destroying namespace "prestop-9239" for this suite. @ 09/02/23 13:25:21.77
• [9.132 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/02/23 13:25:21.801
  Sep  2 13:25:21.801: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-probe @ 09/02/23 13:25:21.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:25:21.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:25:21.824
  STEP: Creating pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450 @ 09/02/23 13:25:21.828
  E0902 13:25:22.415044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:23.415137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/02/23 13:25:23.846
  Sep  2 13:25:23.850: INFO: Initial restart count of pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 is 0
  Sep  2 13:25:23.854: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:24.415376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:25.415924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:25.859: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:26.415996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:27.416527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:27.863: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:28.417570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:29.418458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:29.868: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:30.418532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:31.418749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:31.873: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:32.418832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:33.418922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:33.878: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:34.419890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:35.420088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:35.882: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:36.420796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:37.420916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:37.887: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:38.421591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:39.422452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:39.892: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:40.422696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:41.423028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:41.896: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:42.424088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:43.424381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:43.902: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:44.424799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:45.424853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:45.907: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:46.425604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:47.425688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:47.912: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:48.425792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:49.426385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:49.918: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:50.426479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:51.426678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:51.922: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:52.426929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:53.427034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:53.928: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:54.427722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:55.427839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:55.932: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:56.428126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:57.428206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:57.936: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:25:58.428245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:25:59.428382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:25:59.941: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:00.429233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:01.429317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:01.945: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:02.429409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:03.429582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:03.951: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:04.430629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:05.430735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:05.956: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:06.431782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:07.431957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:07.960: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:08.432101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:09.432565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:09.965: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:10.433583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:11.433675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:11.969: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:12.433880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:13.433977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:13.973: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:14.434575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:15.435622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:15.978: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:16.436691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:17.436785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:17.983: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:18.437555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:19.437873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:19.987: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:20.437973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:21.438230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:21.992: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:22.438323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:23.438467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:23.999: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:24.438767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:25.438877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:26.003: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:26.439635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:27.439725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:28.007: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:28.440335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:29.440835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:30.013: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:30.441588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:31.441777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:32.017: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:32.442224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:33.442362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:34.022: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:34.442490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:35.442593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:36.027: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:36.443449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:37.443553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:38.032: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:38.443881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:39.444364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:40.037: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:40.444519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:41.444983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:42.041: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:42.445069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:43.445277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:44.047: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:44.445887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:45.445977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:46.052: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:46.446787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:47.446946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:48.057: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:48.447627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:49.448081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:50.062: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:50.448170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:51.448372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:52.066: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:52.449299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:53.449397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:54.072: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:54.449561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:55.449655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:56.076: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:56.450029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:57.450121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:26:58.081: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:26:58.450768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:26:59.451160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:00.086: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:00.451622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:01.451828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:02.090: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:02.451909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:03.451985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:04.095: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:04.452603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:05.452689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:06.102: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:06.453509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:07.453597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:08.106: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:08.454529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:09.454758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:10.111: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:10.455013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:11.455173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:12.115: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:12.455806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:13.455911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:14.120: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:14.456599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:15.456685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:16.125: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:16.457309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:17.457494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:18.130: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:18.458481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:19.459493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:20.134: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:20.459602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:21.459792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:22.139: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:22.460447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:23.460525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:24.143: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:24.461121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:25.461215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:26.148: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:26.462046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:27.462123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:28.154: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:28.462756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:29.463164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:30.158: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:30.464171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:31.464263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:32.163: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:32.465199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:33.465231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:34.168: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:34.466187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:35.466294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:36.177: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:36.466531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:37.466624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:38.182: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:38.467627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:39.468130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:40.186: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:40.468134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:41.468362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:42.192: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:42.468725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:43.469575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:44.197: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:44.469961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:45.470218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:46.201: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:46.470899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:47.470955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:48.206: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:48.471792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:49.472269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:50.211: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:50.472351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:51.472509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:52.215: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:52.473475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:53.473554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:54.220: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:54.473693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:55.474015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:56.225: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:56.474875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:57.474938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:27:58.229: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:27:58.474982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:27:59.475049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:00.234: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:00.475608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:01.476252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:02.238: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:02.476869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:03.476946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:04.243: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:04.477566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:05.477660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:06.248: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:06.478270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:07.478377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:08.252: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:08.478915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:09.479358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:10.258: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:10.480290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:11.480485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:12.263: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:12.481303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:13.481527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:14.267: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:14.482008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:15.482088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:16.272: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:16.483070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:17.483163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:18.277: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:18.483304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:19.483350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:20.281: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:20.484125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:21.484291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:22.286: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:22.484988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:23.485579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:24.294: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:24.486585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:25.486682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:26.298: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:26.487684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:27.487820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:28.303: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:28.488483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:29.488972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:30.307: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:30.489922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:31.490006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:32.311: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:32.490935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:33.492932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:34.317: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:34.493515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:35.493596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:36.321: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:36.494676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:37.495648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:38.325: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:38.495678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:39.496305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:40.330: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:40.496868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:41.496963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:42.335: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:42.497194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:43.497282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:44.340: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:44.497376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:45.497468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:46.344: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:46.497811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:47.497929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:48.348: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:48.498749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:49.499167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:50.354: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:50.500163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:51.500805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:52.359: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:52.501541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:53.501630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:54.365: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:54.501759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:55.501925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:56.370: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:56.502936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:57.503011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:28:58.375: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:28:58.503828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:28:59.504313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:00.381: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:00.504820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:01.504901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:02.387: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:02.505838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:03.505925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:04.394: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:04.506171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:05.506249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:06.397: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:06.507125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:07.507424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:08.403: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:08.508430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:09.508828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:10.407: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:10.509360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:11.509552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:12.413: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:12.510136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:13.510235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:14.420: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:14.510451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:15.510542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:16.424: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:16.510804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:17.510943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:18.429: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:18.511748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:19.512157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:20.434: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:20.512486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:21.513566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:22.439: INFO: Get pod test-grpc-9a569e0b-233a-40db-844e-1316a6a9adf9 in namespace container-probe-6450
  E0902 13:29:22.514331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:23.514365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:24.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:29:24.446
  STEP: Destroying namespace "container-probe-6450" for this suite. @ 09/02/23 13:29:24.478
• [242.694 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/02/23 13:29:24.495
  Sep  2 13:29:24.495: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename watch @ 09/02/23 13:29:24.496
  E0902 13:29:24.515094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:24.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:24.525
  STEP: creating a new configmap @ 09/02/23 13:29:24.529
  STEP: modifying the configmap once @ 09/02/23 13:29:24.534
  STEP: modifying the configmap a second time @ 09/02/23 13:29:24.55
  STEP: deleting the configmap @ 09/02/23 13:29:24.559
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/02/23 13:29:24.564
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/02/23 13:29:24.566
  Sep  2 13:29:24.567: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1690  f9a14c98-1915-4bc8-abca-16ec96a78281 32935 0 2023-09-02 13:29:24 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-02 13:29:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:29:24.567: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1690  f9a14c98-1915-4bc8-abca-16ec96a78281 32936 0 2023-09-02 13:29:24 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-02 13:29:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:29:24.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1690" for this suite. @ 09/02/23 13:29:24.575
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/02/23 13:29:24.587
  Sep  2 13:29:24.587: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:29:24.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:24.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:24.611
  Sep  2 13:29:24.616: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: creating the pod @ 09/02/23 13:29:24.616
  STEP: submitting the pod to kubernetes @ 09/02/23 13:29:24.616
  E0902 13:29:25.515690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:26.515830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:26.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3851" for this suite. @ 09/02/23 13:29:26.669
• [2.088 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/02/23 13:29:26.676
  Sep  2 13:29:26.676: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:29:26.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:26.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:26.7
  STEP: creating a replication controller @ 09/02/23 13:29:26.704
  Sep  2 13:29:26.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 create -f -'
  Sep  2 13:29:26.902: INFO: stderr: ""
  Sep  2 13:29:26.902: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/02/23 13:29:26.903
  Sep  2 13:29:26.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 13:29:26.970: INFO: stderr: ""
  Sep  2 13:29:26.970: INFO: stdout: "update-demo-nautilus-54jtd update-demo-nautilus-r6bzn "
  Sep  2 13:29:26.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods update-demo-nautilus-54jtd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 13:29:27.030: INFO: stderr: ""
  Sep  2 13:29:27.030: INFO: stdout: ""
  Sep  2 13:29:27.030: INFO: update-demo-nautilus-54jtd is created but not running
  E0902 13:29:27.516513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:28.516711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:29.517540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:30.517731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:31.517819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:32.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  2 13:29:32.096: INFO: stderr: ""
  Sep  2 13:29:32.096: INFO: stdout: "update-demo-nautilus-54jtd update-demo-nautilus-r6bzn "
  Sep  2 13:29:32.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods update-demo-nautilus-54jtd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 13:29:32.160: INFO: stderr: ""
  Sep  2 13:29:32.160: INFO: stdout: "true"
  Sep  2 13:29:32.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods update-demo-nautilus-54jtd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 13:29:32.221: INFO: stderr: ""
  Sep  2 13:29:32.221: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 13:29:32.221: INFO: validating pod update-demo-nautilus-54jtd
  Sep  2 13:29:32.227: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 13:29:32.227: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 13:29:32.227: INFO: update-demo-nautilus-54jtd is verified up and running
  Sep  2 13:29:32.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods update-demo-nautilus-r6bzn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  2 13:29:32.288: INFO: stderr: ""
  Sep  2 13:29:32.288: INFO: stdout: "true"
  Sep  2 13:29:32.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods update-demo-nautilus-r6bzn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  2 13:29:32.347: INFO: stderr: ""
  Sep  2 13:29:32.347: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  2 13:29:32.348: INFO: validating pod update-demo-nautilus-r6bzn
  Sep  2 13:29:32.355: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  2 13:29:32.355: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  2 13:29:32.355: INFO: update-demo-nautilus-r6bzn is verified up and running
  STEP: using delete to clean up resources @ 09/02/23 13:29:32.355
  Sep  2 13:29:32.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 delete --grace-period=0 --force -f -'
  Sep  2 13:29:32.422: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 13:29:32.422: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep  2 13:29:32.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get rc,svc -l name=update-demo --no-headers'
  E0902 13:29:32.518532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:32.524: INFO: stderr: "No resources found in kubectl-1497 namespace.\n"
  Sep  2 13:29:32.525: INFO: stdout: ""
  Sep  2 13:29:32.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-1497 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep  2 13:29:32.610: INFO: stderr: ""
  Sep  2 13:29:32.610: INFO: stdout: ""
  Sep  2 13:29:32.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1497" for this suite. @ 09/02/23 13:29:32.614
• [5.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/02/23 13:29:32.622
  Sep  2 13:29:32.622: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 13:29:32.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:32.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:32.645
  Sep  2 13:29:32.653: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:29:33.518600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:34.518831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:35.519364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:35.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4304" for this suite. @ 09/02/23 13:29:35.76
• [3.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/02/23 13:29:35.771
  Sep  2 13:29:35.771: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 13:29:35.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:35.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:35.795
  STEP: creating a Deployment @ 09/02/23 13:29:35.803
  Sep  2 13:29:35.803: INFO: Creating simple deployment test-deployment-jvxp6
  Sep  2 13:29:35.816: INFO: deployment "test-deployment-jvxp6" doesn't have the required revision set
  E0902 13:29:36.519447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:37.519556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/02/23 13:29:37.831
  Sep  2 13:29:37.835: INFO: Deployment test-deployment-jvxp6 has Conditions: [{Available True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jvxp6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/02/23 13:29:37.835
  Sep  2 13:29:37.847: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 29, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 29, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 29, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 29, 35, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-jvxp6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/02/23 13:29:37.847
  Sep  2 13:29:37.849: INFO: Observed &Deployment event: ADDED
  Sep  2 13:29:37.849: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jvxp6-5d576bd769"}
  Sep  2 13:29:37.849: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.849: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jvxp6-5d576bd769"}
  Sep  2 13:29:37.849: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  2 13:29:37.850: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.850: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  2 13:29:37.850: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jvxp6-5d576bd769" is progressing.}
  Sep  2 13:29:37.850: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.850: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  2 13:29:37.850: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jvxp6-5d576bd769" has successfully progressed.}
  Sep  2 13:29:37.851: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.851: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  2 13:29:37.851: INFO: Observed Deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jvxp6-5d576bd769" has successfully progressed.}
  Sep  2 13:29:37.851: INFO: Found Deployment test-deployment-jvxp6 in namespace deployment-415 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  2 13:29:37.851: INFO: Deployment test-deployment-jvxp6 has an updated status
  STEP: patching the Statefulset Status @ 09/02/23 13:29:37.851
  Sep  2 13:29:37.851: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep  2 13:29:37.858: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/02/23 13:29:37.858
  Sep  2 13:29:37.860: INFO: Observed &Deployment event: ADDED
  Sep  2 13:29:37.860: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jvxp6-5d576bd769"}
  Sep  2 13:29:37.860: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.860: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jvxp6-5d576bd769"}
  Sep  2 13:29:37.860: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  2 13:29:37.860: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:35 +0000 UTC 2023-09-02 13:29:35 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jvxp6-5d576bd769" is progressing.}
  Sep  2 13:29:37.861: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jvxp6-5d576bd769" has successfully progressed.}
  Sep  2 13:29:37.861: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-02 13:29:36 +0000 UTC 2023-09-02 13:29:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jvxp6-5d576bd769" has successfully progressed.}
  Sep  2 13:29:37.861: INFO: Observed deployment test-deployment-jvxp6 in namespace deployment-415 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  2 13:29:37.861: INFO: Observed &Deployment event: MODIFIED
  Sep  2 13:29:37.862: INFO: Found deployment test-deployment-jvxp6 in namespace deployment-415 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep  2 13:29:37.862: INFO: Deployment test-deployment-jvxp6 has a patched status
  Sep  2 13:29:37.865: INFO: Deployment "test-deployment-jvxp6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-jvxp6",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e65f909d-6b51-4940-8f23-48ff5c2eb515",
      ResourceVersion: (string) (len=5) "33128",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258177,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-jvxp6-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 13:29:37.873: INFO: New ReplicaSet "test-deployment-jvxp6-5d576bd769" of Deployment "test-deployment-jvxp6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-jvxp6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0b2a8b7-9e55-4929-a9bb-b634fa642f62",
      ResourceVersion: (string) (len=5) "33107",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-jvxp6",
          UID: (types.UID) (len=36) "e65f909d-6b51-4940-8f23-48ff5c2eb515",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 36 35  |k:{\"uid\":\"e65|
              00000120  66 39 30 39 64 2d 36 62  35 31 2d 34 39 34 30 2d  |f909d-6b51-4940-|
              00000130  38 66 32 33 2d 34 38 66  66 35 63 32 65 62 35 31  |8f23-48ff5c2eb51|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:29:37.879: INFO: Pod "test-deployment-jvxp6-5d576bd769-shd42" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-jvxp6-5d576bd769-shd42",
      GenerateName: (string) (len=33) "test-deployment-jvxp6-5d576bd769-",
      Namespace: (string) (len=14) "deployment-415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86231937-423c-42c2-a1a2-d6a7c7d2d0ff",
      ResourceVersion: (string) (len=5) "33106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-jvxp6-5d576bd769",
          UID: (types.UID) (len=36) "a0b2a8b7-9e55-4929-a9bb-b634fa642f62",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 30 62 32 61 38 62  37 2d 39 65 35 35 2d 34  |"a0b2a8b7-9e55-4|
              000000a0  39 32 39 2d 61 39 62 62  2d 62 36 33 34 66 61 36  |929-a9bb-b634fa6|
              000000b0  34 32 66 36 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |42f62\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 37 2e 31 30 37 5c  |192.168.167.107\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5klt6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5klt6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258176,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.167.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.167.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258176,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://422c9a84a6319bda52e95c5ba988b33ca1aa675d9ce1f87d8bcdc977d667b2db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:29:37.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-415" for this suite. @ 09/02/23 13:29:37.887
• [2.123 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/02/23 13:29:37.895
  Sep  2 13:29:37.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:29:37.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:37.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:37.917
  STEP: Creating the pod @ 09/02/23 13:29:37.921
  E0902 13:29:38.520597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:39.521566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:40.461: INFO: Successfully updated pod "labelsupdatecb7827b8-94c6-46e6-b2c3-3f26c2b7c596"
  E0902 13:29:40.521946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:41.522061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:42.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3087" for this suite. @ 09/02/23 13:29:42.483
• [4.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/02/23 13:29:42.494
  Sep  2 13:29:42.494: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename proxy @ 09/02/23 13:29:42.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:42.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:42.516
  Sep  2 13:29:42.520: INFO: Creating pod...
  E0902 13:29:42.522655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:43.522900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:44.522996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:44.536: INFO: Creating service...
  Sep  2 13:29:44.547: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/DELETE
  Sep  2 13:29:44.554: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  2 13:29:44.555: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/GET
  Sep  2 13:29:44.560: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep  2 13:29:44.560: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/HEAD
  Sep  2 13:29:44.565: INFO: http.Client request:HEAD | StatusCode:200
  Sep  2 13:29:44.565: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep  2 13:29:44.569: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  2 13:29:44.569: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/PATCH
  Sep  2 13:29:44.574: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  2 13:29:44.574: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/POST
  Sep  2 13:29:44.579: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  2 13:29:44.579: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/pods/agnhost/proxy/some/path/with/PUT
  Sep  2 13:29:44.583: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  2 13:29:44.583: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/DELETE
  Sep  2 13:29:44.589: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  2 13:29:44.589: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/GET
  Sep  2 13:29:44.596: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep  2 13:29:44.596: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/HEAD
  Sep  2 13:29:44.602: INFO: http.Client request:HEAD | StatusCode:200
  Sep  2 13:29:44.602: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/OPTIONS
  Sep  2 13:29:44.608: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  2 13:29:44.608: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/PATCH
  Sep  2 13:29:44.615: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  2 13:29:44.615: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/POST
  Sep  2 13:29:44.620: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  2 13:29:44.620: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4397/services/test-service/proxy/some/path/with/PUT
  Sep  2 13:29:44.626: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  2 13:29:44.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4397" for this suite. @ 09/02/23 13:29:44.631
• [2.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/02/23 13:29:44.639
  Sep  2 13:29:44.639: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 13:29:44.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:44.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:44.661
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/23 13:29:44.685
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/23 13:29:44.69
  Sep  2 13:29:44.694: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:44.694: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:44.698: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:29:44.698: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:29:45.523338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:45.704: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:45.704: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:45.707: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:29:45.708: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:29:46.523419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:46.703: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:46.703: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:46.707: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  2 13:29:46.707: INFO: Node ip-172-31-35-65 is running 0 daemon pod, expected 1
  E0902 13:29:47.524437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:47.702: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:47.703: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:29:47.707: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:29:47.707: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/02/23 13:29:47.71
  STEP: DeleteCollection of the DaemonSets @ 09/02/23 13:29:47.714
  STEP: Verify that ReplicaSets have been deleted @ 09/02/23 13:29:47.722
  Sep  2 13:29:47.735: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33277"},"items":null}

  Sep  2 13:29:47.742: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33280"},"items":[{"metadata":{"name":"daemon-set-fmps6","generateName":"daemon-set-","namespace":"daemonsets-1210","uid":"f8b8f081-03df-4792-be4b-dd726b89e834","resourceVersion":"33280","creationTimestamp":"2023-09-02T13:29:44Z","deletionTimestamp":"2023-09-02T13:30:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"94ca840c-c3d1-4d9b-884f-a76bf16d8e5b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-02T13:29:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"94ca840c-c3d1-4d9b-884f-a76bf16d8e5b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-02T13:29:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.167.112\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-trtkv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-trtkv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-35-65","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-35-65"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:44Z"}],"hostIP":"172.31.35.65","podIP":"192.168.167.112","podIPs":[{"ip":"192.168.167.112"}],"startTime":"2023-09-02T13:29:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-02T13:29:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7172bed291c321ea0c96312e7ad9cce1f26948b9e60c47c3d3315242f9ddaacc","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-h58cj","generateName":"daemon-set-","namespace":"daemonsets-1210","uid":"c6b35e85-f3f7-4f14-b9bc-81a36a6b3dd6","resourceVersion":"33278","creationTimestamp":"2023-09-02T13:29:44Z","deletionTimestamp":"2023-09-02T13:30:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"94ca840c-c3d1-4d9b-884f-a76bf16d8e5b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-02T13:29:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"94ca840c-c3d1-4d9b-884f-a76bf16d8e5b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-02T13:29:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.141.60\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-sk4j6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-sk4j6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-7-35","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-7-35"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:44Z"}],"hostIP":"172.31.7.35","podIP":"192.168.141.60","podIPs":[{"ip":"192.168.141.60"}],"startTime":"2023-09-02T13:29:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-02T13:29:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8328b7fcaea7143e69d0d2d570480be14be0c7fef683b5d89d635e55b46b85cd","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-q4k5p","generateName":"daemon-set-","namespace":"daemonsets-1210","uid":"f0dfec3d-e599-4ccf-af66-157834e94834","resourceVersion":"33279","creationTimestamp":"2023-09-02T13:29:44Z","deletionTimestamp":"2023-09-02T13:30:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"94ca840c-c3d1-4d9b-884f-a76bf16d8e5b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-02T13:29:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"94ca840c-c3d1-4d9b-884f-a76bf16d8e5b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-02T13:29:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.240.250\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-s72hn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-s72hn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-26-21","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-26-21"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-02T13:29:44Z"}],"hostIP":"172.31.26.21","podIP":"192.168.240.250","podIPs":[{"ip":"192.168.240.250"}],"startTime":"2023-09-02T13:29:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-02T13:29:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://da3ed276bb7d749b7cbf1d1ae2bcf7b76b8be5024dbbea25de0fe975f0344ae2","started":true}],"qosClass":"BestEffort"}}]}

  Sep  2 13:29:47.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1210" for this suite. @ 09/02/23 13:29:47.763
• [3.130 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/02/23 13:29:47.77
  Sep  2 13:29:47.770: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:29:47.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:47.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:47.792
  STEP: Counting existing ResourceQuota @ 09/02/23 13:29:47.798
  E0902 13:29:48.524712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:49.525455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:50.525557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:51.525634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:52.526551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/23 13:29:52.802
  STEP: Ensuring resource quota status is calculated @ 09/02/23 13:29:52.811
  E0902 13:29:53.527420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:54.528151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/02/23 13:29:54.816
  STEP: Ensuring resource quota status captures replicaset creation @ 09/02/23 13:29:54.828
  E0902 13:29:55.528522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:56.529575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/02/23 13:29:56.832
  STEP: Ensuring resource quota status released usage @ 09/02/23 13:29:56.839
  E0902 13:29:57.529696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:29:58.529777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:29:58.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5939" for this suite. @ 09/02/23 13:29:58.849
• [11.085 seconds]
------------------------------
SS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/02/23 13:29:58.855
  Sep  2 13:29:58.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename lease-test @ 09/02/23 13:29:58.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:58.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:58.878
  Sep  2 13:29:58.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8776" for this suite. @ 09/02/23 13:29:58.944
• [0.095 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/02/23 13:29:58.951
  Sep  2 13:29:58.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:29:58.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:29:58.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:29:58.979
  STEP: creating service endpoint-test2 in namespace services-7541 @ 09/02/23 13:29:58.982
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7541 to expose endpoints map[] @ 09/02/23 13:29:58.993
  Sep  2 13:29:58.999: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0902 13:29:59.529879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:00.008: INFO: successfully validated that service endpoint-test2 in namespace services-7541 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7541 @ 09/02/23 13:30:00.008
  E0902 13:30:00.530506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:01.530602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7541 to expose endpoints map[pod1:[80]] @ 09/02/23 13:30:02.03
  Sep  2 13:30:02.044: INFO: successfully validated that service endpoint-test2 in namespace services-7541 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/02/23 13:30:02.045
  Sep  2 13:30:02.045: INFO: Creating new exec pod
  E0902 13:30:02.531095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:03.531299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:04.532130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:05.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-7541 exec execpodtkt9l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep  2 13:30:05.212: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep  2 13:30:05.212: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:30:05.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-7541 exec execpodtkt9l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  Sep  2 13:30:05.362: INFO: stderr: "+ nc -v -t -w 2 10.152.183.22 80\n+ echo hostName\nConnection to 10.152.183.22 80 port [tcp/http] succeeded!\n"
  Sep  2 13:30:05.362: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7541 @ 09/02/23 13:30:05.362
  E0902 13:30:05.532227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:06.532318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7541 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/02/23 13:30:07.385
  Sep  2 13:30:07.400: INFO: successfully validated that service endpoint-test2 in namespace services-7541 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/02/23 13:30:07.4
  E0902 13:30:07.533045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:08.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-7541 exec execpodtkt9l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0902 13:30:08.533146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:08.548: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep  2 13:30:08.548: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:30:08.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-7541 exec execpodtkt9l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  Sep  2 13:30:08.685: INFO: stderr: "+ nc -v -t -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 13:30:08.685: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7541 @ 09/02/23 13:30:08.685
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7541 to expose endpoints map[pod2:[80]] @ 09/02/23 13:30:08.697
  Sep  2 13:30:08.714: INFO: successfully validated that service endpoint-test2 in namespace services-7541 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/02/23 13:30:08.714
  E0902 13:30:09.534034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:09.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-7541 exec execpodtkt9l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep  2 13:30:09.860: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep  2 13:30:09.860: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:30:09.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-7541 exec execpodtkt9l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.22 80'
  Sep  2 13:30:10.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.22 80\nConnection to 10.152.183.22 80 port [tcp/http] succeeded!\n"
  Sep  2 13:30:10.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7541 @ 09/02/23 13:30:10.001
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7541 to expose endpoints map[] @ 09/02/23 13:30:10.013
  E0902 13:30:10.534532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:11.030: INFO: successfully validated that service endpoint-test2 in namespace services-7541 exposes endpoints map[]
  Sep  2 13:30:11.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7541" for this suite. @ 09/02/23 13:30:11.051
• [12.108 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/02/23 13:30:11.058
  Sep  2 13:30:11.058: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/02/23 13:30:11.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:11.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:11.083
  STEP: Setting up the test @ 09/02/23 13:30:11.087
  STEP: Creating hostNetwork=false pod @ 09/02/23 13:30:11.087
  E0902 13:30:11.535388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:12.535482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/02/23 13:30:13.111
  E0902 13:30:13.536595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:14.537222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/02/23 13:30:15.13
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/02/23 13:30:15.13
  Sep  2 13:30:15.130: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.130: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.131: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.131: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  2 13:30:15.218: INFO: Exec stderr: ""
  Sep  2 13:30:15.218: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.218: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.219: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.219: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  2 13:30:15.294: INFO: Exec stderr: ""
  Sep  2 13:30:15.294: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.294: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.295: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.295: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  2 13:30:15.378: INFO: Exec stderr: ""
  Sep  2 13:30:15.378: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.378: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.379: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.379: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  2 13:30:15.450: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/02/23 13:30:15.45
  Sep  2 13:30:15.450: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.451: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.451: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep  2 13:30:15.522: INFO: Exec stderr: ""
  Sep  2 13:30:15.522: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.522: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.522: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.522: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0902 13:30:15.537878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:15.610: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/02/23 13:30:15.61
  Sep  2 13:30:15.610: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.611: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.611: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  2 13:30:15.683: INFO: Exec stderr: ""
  Sep  2 13:30:15.683: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.683: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.683: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.684: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  2 13:30:15.763: INFO: Exec stderr: ""
  Sep  2 13:30:15.763: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.763: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.763: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.763: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  2 13:30:15.835: INFO: Exec stderr: ""
  Sep  2 13:30:15.835: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5302 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:30:15.835: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:30:15.836: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:30:15.836: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5302/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  2 13:30:15.907: INFO: Exec stderr: ""
  Sep  2 13:30:15.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5302" for this suite. @ 09/02/23 13:30:15.912
• [4.863 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/02/23 13:30:15.922
  Sep  2 13:30:15.922: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 13:30:15.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:15.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:15.948
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1702.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1702.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/02/23 13:30:15.955
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1702.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1702.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/02/23 13:30:15.955
  STEP: creating a pod to probe /etc/hosts @ 09/02/23 13:30:15.955
  STEP: submitting the pod to kubernetes @ 09/02/23 13:30:15.955
  E0902 13:30:16.537997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:17.538071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/23 13:30:17.977
  STEP: looking for the results for each expected name from probers @ 09/02/23 13:30:17.981
  Sep  2 13:30:17.999: INFO: DNS probes using dns-1702/dns-test-c101ac16-b4d7-4a0e-a22a-9450e8814508 succeeded

  Sep  2 13:30:17.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:30:18.003
  STEP: Destroying namespace "dns-1702" for this suite. @ 09/02/23 13:30:18.014
• [2.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/02/23 13:30:18.021
  Sep  2 13:30:18.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 13:30:18.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:18.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:18.039
  Sep  2 13:30:18.042: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  W0902 13:30:18.043453      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001222600 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0902 13:30:18.538694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:19.539342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:20.539437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0902 13:30:20.605810      19 warnings.go:70] unknown field "alpha"
  W0902 13:30:20.605828      19 warnings.go:70] unknown field "beta"
  W0902 13:30:20.605835      19 warnings.go:70] unknown field "delta"
  W0902 13:30:20.605841      19 warnings.go:70] unknown field "epsilon"
  W0902 13:30:20.605847      19 warnings.go:70] unknown field "gamma"
  Sep  2 13:30:21.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6068" for this suite. @ 09/02/23 13:30:21.158
• [3.144 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/02/23 13:30:21.165
  Sep  2 13:30:21.165: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/23 13:30:21.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:21.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:21.191
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/23 13:30:21.202
  E0902 13:30:21.539996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:22.540193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/23 13:30:23.224
  E0902 13:30:23.540759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:24.541402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/02/23 13:30:25.244
  E0902 13:30:25.541684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:26.542054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/02/23 13:30:27.26
  Sep  2 13:30:27.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1179" for this suite. @ 09/02/23 13:30:27.273
• [6.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/02/23 13:30:27.281
  Sep  2 13:30:27.282: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:30:27.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:27.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:27.306
  STEP: Creating a ResourceQuota with terminating scope @ 09/02/23 13:30:27.31
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/23 13:30:27.315
  E0902 13:30:27.543115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:28.543202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/02/23 13:30:29.322
  STEP: Ensuring ResourceQuota status is calculated @ 09/02/23 13:30:29.328
  E0902 13:30:29.543918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:30.544038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/02/23 13:30:31.333
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/02/23 13:30:31.347
  E0902 13:30:31.544709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:32.544820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/02/23 13:30:33.351
  E0902 13:30:33.545459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:34.545695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/23 13:30:35.356
  STEP: Ensuring resource quota status released the pod usage @ 09/02/23 13:30:35.374
  E0902 13:30:35.546480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:36.546676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/02/23 13:30:37.379
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/02/23 13:30:37.39
  E0902 13:30:37.547459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:38.547575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/02/23 13:30:39.395
  E0902 13:30:39.547720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:40.547824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/02/23 13:30:41.4
  STEP: Ensuring resource quota status released the pod usage @ 09/02/23 13:30:41.417
  E0902 13:30:41.548309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:42.548430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:43.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3534" for this suite. @ 09/02/23 13:30:43.427
• [16.154 seconds]
------------------------------
SSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/02/23 13:30:43.436
  Sep  2 13:30:43.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename subjectreview @ 09/02/23 13:30:43.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:43.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:43.463
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4531" @ 09/02/23 13:30:43.467
  Sep  2 13:30:43.474: INFO: saUsername: "system:serviceaccount:subjectreview-4531:e2e"
  Sep  2 13:30:43.474: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4531"}
  Sep  2 13:30:43.474: INFO: saUID: "4688d2a2-028d-49c9-ab39-e095a9064fc6"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4531:e2e" @ 09/02/23 13:30:43.474
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4531:e2e" @ 09/02/23 13:30:43.475
  Sep  2 13:30:43.477: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4531:e2e" api 'list' configmaps in "subjectreview-4531" namespace @ 09/02/23 13:30:43.477
  Sep  2 13:30:43.480: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4531:e2e" @ 09/02/23 13:30:43.48
  Sep  2 13:30:43.484: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep  2 13:30:43.484: INFO: LocalSubjectAccessReview has been verified
  Sep  2 13:30:43.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4531" for this suite. @ 09/02/23 13:30:43.488
• [0.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/02/23 13:30:43.497
  Sep  2 13:30:43.497: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:30:43.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:43.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:43.531
  STEP: Discovering how many secrets are in namespace by default @ 09/02/23 13:30:43.536
  E0902 13:30:43.549089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:44.549690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:45.550529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:46.551097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:47.551623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/02/23 13:30:48.541
  E0902 13:30:48.551873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:49.551875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:50.552728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:51.553429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:52.553908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/23 13:30:53.545
  STEP: Ensuring resource quota status is calculated @ 09/02/23 13:30:53.552
  E0902 13:30:53.555681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:54.556758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:55.557591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/02/23 13:30:55.557
  STEP: Ensuring resource quota status captures secret creation @ 09/02/23 13:30:55.569
  E0902 13:30:56.558543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:57.558782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/02/23 13:30:57.575
  STEP: Ensuring resource quota status released usage @ 09/02/23 13:30:57.582
  E0902 13:30:58.558804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:30:59.559280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:30:59.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6712" for this suite. @ 09/02/23 13:30:59.593
• [16.101 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/02/23 13:30:59.599
  Sep  2 13:30:59.599: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:30:59.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:30:59.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:30:59.621
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/02/23 13:30:59.627
  E0902 13:31:00.559379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:01.559496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:02.559741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:03.559852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:31:03.66
  Sep  2 13:31:03.665: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-f79ff789-0cbe-40e4-9533-a03f53ba8750 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:31:03.676
  Sep  2 13:31:03.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1935" for this suite. @ 09/02/23 13:31:03.701
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/02/23 13:31:03.713
  Sep  2 13:31:03.713: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:31:03.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:03.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:03.738
  STEP: Counting existing ResourceQuota @ 09/02/23 13:31:03.745
  E0902 13:31:04.560670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:05.560706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:06.561595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:07.562529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:08.562632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/23 13:31:08.749
  STEP: Ensuring resource quota status is calculated @ 09/02/23 13:31:08.755
  E0902 13:31:09.562917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:10.562977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/02/23 13:31:10.759
  STEP: Creating a NodePort Service @ 09/02/23 13:31:10.778
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/02/23 13:31:10.799
  STEP: Ensuring resource quota status captures service creation @ 09/02/23 13:31:10.821
  E0902 13:31:11.563954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:12.564693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/02/23 13:31:12.826
  STEP: Ensuring resource quota status released usage @ 09/02/23 13:31:12.861
  E0902 13:31:13.564834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:14.565016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:31:14.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7351" for this suite. @ 09/02/23 13:31:14.87
• [11.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/02/23 13:31:14.881
  Sep  2 13:31:14.881: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename proxy @ 09/02/23 13:31:14.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:14.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:14.906
  Sep  2 13:31:14.910: INFO: Creating pod...
  E0902 13:31:15.565108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:16.565199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:31:16.928: INFO: Creating service...
  Sep  2 13:31:16.940: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=DELETE
  Sep  2 13:31:16.947: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  2 13:31:16.947: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=OPTIONS
  Sep  2 13:31:16.952: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  2 13:31:16.952: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=PATCH
  Sep  2 13:31:16.956: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  2 13:31:16.956: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=POST
  Sep  2 13:31:16.961: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  2 13:31:16.961: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=PUT
  Sep  2 13:31:16.965: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  2 13:31:16.965: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep  2 13:31:16.972: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  2 13:31:16.972: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep  2 13:31:16.978: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  2 13:31:16.978: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep  2 13:31:16.984: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  2 13:31:16.984: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=POST
  Sep  2 13:31:16.991: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  2 13:31:16.992: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=PUT
  Sep  2 13:31:17.000: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  2 13:31:17.000: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=GET
  Sep  2 13:31:17.004: INFO: http.Client request:GET StatusCode:301
  Sep  2 13:31:17.004: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=GET
  Sep  2 13:31:17.010: INFO: http.Client request:GET StatusCode:301
  Sep  2 13:31:17.010: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/pods/agnhost/proxy?method=HEAD
  Sep  2 13:31:17.013: INFO: http.Client request:HEAD StatusCode:301
  Sep  2 13:31:17.013: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2392/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep  2 13:31:17.018: INFO: http.Client request:HEAD StatusCode:301
  Sep  2 13:31:17.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2392" for this suite. @ 09/02/23 13:31:17.023
• [2.148 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/02/23 13:31:17.029
  Sep  2 13:31:17.029: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename ingressclass @ 09/02/23 13:31:17.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:17.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:17.055
  STEP: getting /apis @ 09/02/23 13:31:17.059
  STEP: getting /apis/networking.k8s.io @ 09/02/23 13:31:17.064
  STEP: getting /apis/networking.k8s.iov1 @ 09/02/23 13:31:17.065
  STEP: creating @ 09/02/23 13:31:17.067
  STEP: getting @ 09/02/23 13:31:17.085
  STEP: listing @ 09/02/23 13:31:17.089
  STEP: watching @ 09/02/23 13:31:17.093
  Sep  2 13:31:17.093: INFO: starting watch
  STEP: patching @ 09/02/23 13:31:17.095
  STEP: updating @ 09/02/23 13:31:17.1
  Sep  2 13:31:17.106: INFO: waiting for watch events with expected annotations
  Sep  2 13:31:17.106: INFO: saw patched and updated annotations
  STEP: deleting @ 09/02/23 13:31:17.106
  STEP: deleting a collection @ 09/02/23 13:31:17.119
  Sep  2 13:31:17.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9461" for this suite. @ 09/02/23 13:31:17.139
• [0.117 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/02/23 13:31:17.146
  Sep  2 13:31:17.146: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename podtemplate @ 09/02/23 13:31:17.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:17.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:17.17
  Sep  2 13:31:17.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5240" for this suite. @ 09/02/23 13:31:17.218
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/02/23 13:31:17.227
  Sep  2 13:31:17.227: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/23 13:31:17.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:17.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:17.25
  Sep  2 13:31:17.257: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:31:17.565584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:18.566585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:19.566946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:20.567275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:21.567313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:22.567705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:31:23.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9805" for this suite. @ 09/02/23 13:31:23.5
• [6.281 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/02/23 13:31:23.509
  Sep  2 13:31:23.509: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename field-validation @ 09/02/23 13:31:23.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:23.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:23.533
  STEP: apply creating a deployment @ 09/02/23 13:31:23.538
  Sep  2 13:31:23.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-911" for this suite. @ 09/02/23 13:31:23.56
• [0.057 seconds]
------------------------------
SSSSSSSSSS  E0902 13:31:23.567777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/02/23 13:31:23.568
  Sep  2 13:31:23.568: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename job @ 09/02/23 13:31:23.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:23.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:23.589
  STEP: Creating Indexed job @ 09/02/23 13:31:23.593
  STEP: Ensuring job reaches completions @ 09/02/23 13:31:23.6
  E0902 13:31:24.567887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:25.567962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:26.568070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:27.568305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:28.568599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:29.569278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:30.569357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:31.569567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/02/23 13:31:31.606
  Sep  2 13:31:31.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4767" for this suite. @ 09/02/23 13:31:31.615
• [8.054 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/02/23 13:31:31.623
  Sep  2 13:31:31.623: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:31:31.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:31.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:31.656
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/02/23 13:31:31.66
  E0902 13:31:32.569657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:33.569748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:34.570121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:35.570230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:31:35.684
  Sep  2 13:31:35.688: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-38be8887-8c06-48b4-83b4-acf40ae0d103 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:31:35.695
  Sep  2 13:31:35.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6902" for this suite. @ 09/02/23 13:31:35.717
• [4.101 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/02/23 13:31:35.724
  Sep  2 13:31:35.724: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:31:35.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:35.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:35.744
  STEP: Creating secret with name secret-test-2b544c59-2f56-4abe-ba33-20404998dec5 @ 09/02/23 13:31:35.748
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:31:35.752
  E0902 13:31:36.571260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:37.571503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:38.571605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:39.571945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:31:39.781
  Sep  2 13:31:39.784: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-secrets-9d309c9d-0bfc-4655-8984-ab86c29de0ef container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:31:39.794
  Sep  2 13:31:39.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2990" for this suite. @ 09/02/23 13:31:39.816
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/02/23 13:31:39.837
  Sep  2 13:31:39.837: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replication-controller @ 09/02/23 13:31:39.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:39.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:39.861
  STEP: Creating ReplicationController "e2e-rc-w9bwv" @ 09/02/23 13:31:39.865
  Sep  2 13:31:39.872: INFO: Get Replication Controller "e2e-rc-w9bwv" to confirm replicas
  E0902 13:31:40.572512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:31:40.876: INFO: Get Replication Controller "e2e-rc-w9bwv" to confirm replicas
  Sep  2 13:31:40.880: INFO: Found 1 replicas for "e2e-rc-w9bwv" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-w9bwv" @ 09/02/23 13:31:40.88
  STEP: Updating a scale subresource @ 09/02/23 13:31:40.884
  STEP: Verifying replicas where modified for replication controller "e2e-rc-w9bwv" @ 09/02/23 13:31:40.891
  Sep  2 13:31:40.891: INFO: Get Replication Controller "e2e-rc-w9bwv" to confirm replicas
  E0902 13:31:41.572616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:31:41.896: INFO: Get Replication Controller "e2e-rc-w9bwv" to confirm replicas
  Sep  2 13:31:41.900: INFO: Found 2 replicas for "e2e-rc-w9bwv" replication controller
  Sep  2 13:31:41.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4938" for this suite. @ 09/02/23 13:31:41.905
• [2.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/02/23 13:31:41.913
  Sep  2 13:31:41.913: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:31:41.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:31:41.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:31:41.933
  STEP: Creating resourceQuota "e2e-rq-status-n8khn" @ 09/02/23 13:31:41.939
  Sep  2 13:31:41.948: INFO: Resource quota "e2e-rq-status-n8khn" reports spec: hard cpu limit of 500m
  Sep  2 13:31:41.948: INFO: Resource quota "e2e-rq-status-n8khn" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-n8khn" /status @ 09/02/23 13:31:41.948
  STEP: Confirm /status for "e2e-rq-status-n8khn" resourceQuota via watch @ 09/02/23 13:31:41.958
  Sep  2 13:31:41.960: INFO: observed resourceQuota "e2e-rq-status-n8khn" in namespace "resourcequota-3935" with hard status: v1.ResourceList(nil)
  Sep  2 13:31:41.960: INFO: Found resourceQuota "e2e-rq-status-n8khn" in namespace "resourcequota-3935" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep  2 13:31:41.960: INFO: ResourceQuota "e2e-rq-status-n8khn" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/02/23 13:31:41.964
  Sep  2 13:31:41.970: INFO: Resource quota "e2e-rq-status-n8khn" reports spec: hard cpu limit of 1
  Sep  2 13:31:41.970: INFO: Resource quota "e2e-rq-status-n8khn" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-n8khn" /status @ 09/02/23 13:31:41.97
  STEP: Confirm /status for "e2e-rq-status-n8khn" resourceQuota via watch @ 09/02/23 13:31:41.976
  Sep  2 13:31:41.978: INFO: observed resourceQuota "e2e-rq-status-n8khn" in namespace "resourcequota-3935" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep  2 13:31:41.978: INFO: Found resourceQuota "e2e-rq-status-n8khn" in namespace "resourcequota-3935" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep  2 13:31:41.978: INFO: ResourceQuota "e2e-rq-status-n8khn" /status was patched
  STEP: Get "e2e-rq-status-n8khn" /status @ 09/02/23 13:31:41.978
  Sep  2 13:31:41.984: INFO: Resourcequota "e2e-rq-status-n8khn" reports status: hard cpu of 1
  Sep  2 13:31:41.984: INFO: Resourcequota "e2e-rq-status-n8khn" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-n8khn" /status before checking Spec is unchanged @ 09/02/23 13:31:41.987
  Sep  2 13:31:41.995: INFO: Resourcequota "e2e-rq-status-n8khn" reports status: hard cpu of 2
  Sep  2 13:31:41.995: INFO: Resourcequota "e2e-rq-status-n8khn" reports status: hard memory of 2Gi
  Sep  2 13:31:41.996: INFO: Found resourceQuota "e2e-rq-status-n8khn" in namespace "resourcequota-3935" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0902 13:31:42.573582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:43.573928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:44.574106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:45.574332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:46.574409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:47.575115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:48.575338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:49.575560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:50.576122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:51.576290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:52.576524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:53.576567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:54.577480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:55.577550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:56.577645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:57.577742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:58.578291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:31:59.578541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:00.578726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:01.578877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:02.578925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:03.578994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:04.579743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:05.580751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:06.581583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:07.581677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:08.581754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:09.582818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:10.583089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:11.583261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:12.584171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:13.584574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:14.585575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:15.585736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:16.586760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:17.586865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:18.587055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:19.587529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:20.587684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:21.587785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:22.587878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:23.588153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:24.589225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:25.589322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:26.589507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:27.590436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:28.590531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:29.591496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:30.591714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:31.591798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:32.591904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:33.592204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:34.592723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:35.592810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:36.593580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:37.593670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:38.593758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:39.594208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:40.594774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:41.594865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:42.595679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:43.595764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:44.596804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:45.596898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:46.597578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:47.598430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:48.598517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:49.598596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:50.598783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:51.598904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:52.599727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:53.599799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:54.600824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:55.600911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:56.600989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:57.601094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:58.601181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:32:59.601553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:00.601750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:01.601844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:02.601926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:03.602026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:04.602811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:05.602974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:06.603078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:07.603166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:08.603356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:09.603623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:10.603713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:11.603690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:12.604582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:13.604688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:14.604768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:15.604860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:16.605677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:17.605770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:18.605948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:19.606331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:20.606579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:21.606720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:22.606829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:23.607292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:24.607378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:25.608361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:26.608497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:27.609406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:28.609730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:29.610504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:30.610582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:31.610729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:32.610815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:33.611078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:34.611238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:35.611324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:36.611415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:37.612235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:38.612326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:39.612499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:40.613570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:41.613772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:42.613830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:43.613916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:44.614664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:45.614871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:46.615072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:47.615891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:48.615971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:49.616487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:50.617558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:51.617740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:52.618539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:53.619393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:54.619752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:55.619900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:56.620001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:57.620087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:58.620269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:33:59.620512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:00.620590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:01.621561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:02.622344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:03.622527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:04.622747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:05.622824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:06.622992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:07.623706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:08.623866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:09.624839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:10.624942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:11.625571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:12.626521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:13.626612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:14.626766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:15.626930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:16.627102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:17.628156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:18.628209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:19.628499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:20.629576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:21.629661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:22.629926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:23.630054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:24.630757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:25.630973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:26.631158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:27.631251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:28.631341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:29.631431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:30.632431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:31.632505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:32.633279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:33.633381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:34.634398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:35.634500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:36.635025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:37.635111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:38.635446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:39.636265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:40.636500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:41.637572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:42.638628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:43.638900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:44.639213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:45.639502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:46.639588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:47.640243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:48.640499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:49.641562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:50.641842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:51.641886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:52.642797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:53.642888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:54.643833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:55.644021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:56.644098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:57.644358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:58.644500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:34:59.645568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:00.645835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:01.645874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:02.645956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:03.646046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:04.646175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:05.646526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:06.646598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:07.647649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:08.647734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:09.647999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:10.648234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:11.648500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:12.648591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:13.649562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:14.649651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:15.649814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:16.649955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:17.650441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:18.650619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:19.650713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:20.650874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:21.651024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:22.651971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:23.652806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:24.653103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:25.653176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:26.653742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:27.654441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:28.654526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:29.654584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:30.654660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:31.655477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:32.006: INFO: ResourceQuota "e2e-rq-status-n8khn" Spec was unchanged and /status reset
  Sep  2 13:35:32.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3935" for this suite. @ 09/02/23 13:35:32.01
• [230.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/02/23 13:35:32.018
  Sep  2 13:35:32.018: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:35:32.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:32.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:32.042
  STEP: validating cluster-info @ 09/02/23 13:35:32.046
  Sep  2 13:35:32.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-3960 cluster-info'
  Sep  2 13:35:32.107: INFO: stderr: ""
  Sep  2 13:35:32.107: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep  2 13:35:32.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3960" for this suite. @ 09/02/23 13:35:32.112
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/02/23 13:35:32.12
  Sep  2 13:35:32.120: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-runtime @ 09/02/23 13:35:32.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:32.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:32.147
  STEP: create the container @ 09/02/23 13:35:32.151
  W0902 13:35:32.158836      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/02/23 13:35:32.159
  E0902 13:35:32.656476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:33.656503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:34.656605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/02/23 13:35:35.175
  STEP: the container should be terminated @ 09/02/23 13:35:35.179
  STEP: the termination message should be set @ 09/02/23 13:35:35.179
  Sep  2 13:35:35.179: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/02/23 13:35:35.179
  Sep  2 13:35:35.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7239" for this suite. @ 09/02/23 13:35:35.199
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/02/23 13:35:35.208
  Sep  2 13:35:35.208: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-runtime @ 09/02/23 13:35:35.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:35.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:35.228
  STEP: create the container @ 09/02/23 13:35:35.232
  W0902 13:35:35.241402      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/02/23 13:35:35.241
  E0902 13:35:35.657594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:36.657655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:37.658295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/02/23 13:35:38.259
  STEP: the container should be terminated @ 09/02/23 13:35:38.263
  STEP: the termination message should be set @ 09/02/23 13:35:38.263
  Sep  2 13:35:38.263: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/02/23 13:35:38.263
  Sep  2 13:35:38.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5983" for this suite. @ 09/02/23 13:35:38.285
• [3.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/02/23 13:35:38.293
  Sep  2 13:35:38.293: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/23 13:35:38.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:38.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:38.314
  E0902 13:35:38.658375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:39.658629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:40.658732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:41.658976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:42.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9101" for this suite. @ 09/02/23 13:35:42.339
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/02/23 13:35:42.347
  Sep  2 13:35:42.347: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:35:42.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:42.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:42.371
  STEP: Creating configMap that has name configmap-test-emptyKey-e8c3943a-8507-4eae-a256-5a50424e859c @ 09/02/23 13:35:42.375
  Sep  2 13:35:42.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1069" for this suite. @ 09/02/23 13:35:42.385
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/02/23 13:35:42.393
  Sep  2 13:35:42.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 13:35:42.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:42.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:42.414
  Sep  2 13:35:42.439: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/23 13:35:42.446
  Sep  2 13:35:42.451: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:42.451: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:42.454: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:35:42.454: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:35:42.659270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:43.460: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:43.461: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:43.464: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  2 13:35:43.465: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:35:43.660288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:44.459: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:44.459: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:44.463: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:35:44.463: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/02/23 13:35:44.477
  STEP: Check that daemon pods images are updated. @ 09/02/23 13:35:44.487
  Sep  2 13:35:44.491: INFO: Wrong image for pod: daemon-set-gtzfl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:44.491: INFO: Wrong image for pod: daemon-set-vrhld. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:44.492: INFO: Wrong image for pod: daemon-set-vzknf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:44.496: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:44.496: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0902 13:35:44.660448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:45.501: INFO: Wrong image for pod: daemon-set-gtzfl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:45.501: INFO: Pod daemon-set-mwdbx is not available
  Sep  2 13:35:45.501: INFO: Wrong image for pod: daemon-set-vzknf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:45.507: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:45.508: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0902 13:35:45.661010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:46.501: INFO: Wrong image for pod: daemon-set-vzknf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:46.505: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:46.505: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0902 13:35:46.661810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:47.501: INFO: Pod daemon-set-k2qbs is not available
  Sep  2 13:35:47.501: INFO: Wrong image for pod: daemon-set-vzknf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  2 13:35:47.505: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:47.505: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0902 13:35:47.662816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:48.502: INFO: Pod daemon-set-btxvb is not available
  Sep  2 13:35:48.509: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:48.509: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0902 13:35:48.663444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:49.501: INFO: Pod daemon-set-btxvb is not available
  Sep  2 13:35:49.505: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:49.505: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/02/23 13:35:49.506
  Sep  2 13:35:49.510: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:49.510: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:49.515: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  2 13:35:49.515: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:35:49.664384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:50.519: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:50.519: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:35:50.524: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:35:50.524: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/23 13:35:50.542
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4720, will wait for the garbage collector to delete the pods @ 09/02/23 13:35:50.542
  Sep  2 13:35:50.603: INFO: Deleting DaemonSet.extensions daemon-set took: 6.383488ms
  E0902 13:35:50.664664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:50.703: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.326113ms
  E0902 13:35:51.665648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:52.008: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:35:52.008: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  2 13:35:52.012: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35254"},"items":null}

  Sep  2 13:35:52.015: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35254"},"items":null}

  Sep  2 13:35:52.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4720" for this suite. @ 09/02/23 13:35:52.036
• [9.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/02/23 13:35:52.043
  Sep  2 13:35:52.043: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubelet-test @ 09/02/23 13:35:52.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:52.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:52.066
  E0902 13:35:52.665886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:53.665968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:54.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7210" for this suite. @ 09/02/23 13:35:54.118
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/02/23 13:35:54.128
  Sep  2 13:35:54.128: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 13:35:54.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:54.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:54.15
  E0902 13:35:54.666930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:55.667029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:35:56.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:35:56.179: INFO: Deleting pod "var-expansion-7eafc3e5-d0a9-4c60-904b-d02392e3f2d6" in namespace "var-expansion-8051"
  Sep  2 13:35:56.187: INFO: Wait up to 5m0s for pod "var-expansion-7eafc3e5-d0a9-4c60-904b-d02392e3f2d6" to be fully deleted
  E0902 13:35:56.667684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:57.667764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-8051" for this suite. @ 09/02/23 13:35:58.195
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/02/23 13:35:58.203
  Sep  2 13:35:58.203: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename limitrange @ 09/02/23 13:35:58.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:35:58.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:35:58.224
  STEP: Creating a LimitRange @ 09/02/23 13:35:58.228
  STEP: Setting up watch @ 09/02/23 13:35:58.228
  STEP: Submitting a LimitRange @ 09/02/23 13:35:58.333
  STEP: Verifying LimitRange creation was observed @ 09/02/23 13:35:58.339
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/02/23 13:35:58.34
  Sep  2 13:35:58.343: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep  2 13:35:58.343: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/02/23 13:35:58.344
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/02/23 13:35:58.35
  Sep  2 13:35:58.353: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep  2 13:35:58.353: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/02/23 13:35:58.353
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/02/23 13:35:58.359
  Sep  2 13:35:58.363: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep  2 13:35:58.363: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/02/23 13:35:58.364
  STEP: Failing to create a Pod with more than max resources @ 09/02/23 13:35:58.366
  STEP: Updating a LimitRange @ 09/02/23 13:35:58.369
  STEP: Verifying LimitRange updating is effective @ 09/02/23 13:35:58.375
  E0902 13:35:58.667867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:35:59.668427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/02/23 13:36:00.38
  STEP: Failing to create a Pod with more than max resources @ 09/02/23 13:36:00.386
  STEP: Deleting a LimitRange @ 09/02/23 13:36:00.389
  STEP: Verifying the LimitRange was deleted @ 09/02/23 13:36:00.397
  E0902 13:36:00.669386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:01.669476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:02.669741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:03.669820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:04.669910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:36:05.403: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/02/23 13:36:05.403
  Sep  2 13:36:05.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3876" for this suite. @ 09/02/23 13:36:05.42
• [7.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/02/23 13:36:05.429
  Sep  2 13:36:05.429: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/23 13:36:05.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:36:05.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:36:05.452
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/23 13:36:05.46
  E0902 13:36:05.670850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:06.670896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/23 13:36:07.484
  E0902 13:36:07.671627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:08.671708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/02/23 13:36:09.503
  STEP: delete the pod with lifecycle hook @ 09/02/23 13:36:09.521
  E0902 13:36:09.672677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:10.673587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:36:11.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6198" for this suite. @ 09/02/23 13:36:11.541
• [6.121 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/02/23 13:36:11.55
  Sep  2 13:36:11.550: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename containers @ 09/02/23 13:36:11.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:36:11.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:36:11.574
  E0902 13:36:11.673907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:12.674625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:36:13.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5419" for this suite. @ 09/02/23 13:36:13.62
• [2.076 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/02/23 13:36:13.627
  Sep  2 13:36:13.627: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename namespaces @ 09/02/23 13:36:13.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:36:13.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:36:13.647
  STEP: creating a Namespace @ 09/02/23 13:36:13.651
  STEP: patching the Namespace @ 09/02/23 13:36:13.667
  STEP: get the Namespace and ensuring it has the label @ 09/02/23 13:36:13.673
  E0902 13:36:13.675294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:36:13.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5296" for this suite. @ 09/02/23 13:36:13.682
  STEP: Destroying namespace "nspatchtest-12320219-ceb9-4056-b98b-aae0486421b6-4719" for this suite. @ 09/02/23 13:36:13.689
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/02/23 13:36:13.699
  Sep  2 13:36:13.699: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename watch @ 09/02/23 13:36:13.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:36:13.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:36:13.719
  STEP: creating a watch on configmaps @ 09/02/23 13:36:13.723
  STEP: creating a new configmap @ 09/02/23 13:36:13.725
  STEP: modifying the configmap once @ 09/02/23 13:36:13.731
  STEP: closing the watch once it receives two notifications @ 09/02/23 13:36:13.739
  Sep  2 13:36:13.739: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7172  e0c5994d-0e21-485e-9d90-b4ad8f7fa0c1 35523 0 2023-09-02 13:36:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-02 13:36:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:36:13.740: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7172  e0c5994d-0e21-485e-9d90-b4ad8f7fa0c1 35524 0 2023-09-02 13:36:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-02 13:36:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/02/23 13:36:13.74
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/02/23 13:36:13.75
  STEP: deleting the configmap @ 09/02/23 13:36:13.752
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/02/23 13:36:13.758
  Sep  2 13:36:13.758: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7172  e0c5994d-0e21-485e-9d90-b4ad8f7fa0c1 35525 0 2023-09-02 13:36:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-02 13:36:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:36:13.759: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7172  e0c5994d-0e21-485e-9d90-b4ad8f7fa0c1 35526 0 2023-09-02 13:36:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-02 13:36:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  2 13:36:13.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7172" for this suite. @ 09/02/23 13:36:13.763
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/02/23 13:36:13.773
  Sep  2 13:36:13.773: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:36:13.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:36:13.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:36:13.797
  STEP: Creating configMap with name cm-test-opt-del-b003012a-731e-4920-a479-e2bdfdd32138 @ 09/02/23 13:36:13.807
  STEP: Creating configMap with name cm-test-opt-upd-fc1518c2-d2d2-40ba-b1be-e173367196be @ 09/02/23 13:36:13.812
  STEP: Creating the pod @ 09/02/23 13:36:13.816
  E0902 13:36:14.675429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:15.676436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:16.677234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:17.677568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-b003012a-731e-4920-a479-e2bdfdd32138 @ 09/02/23 13:36:17.865
  STEP: Updating configmap cm-test-opt-upd-fc1518c2-d2d2-40ba-b1be-e173367196be @ 09/02/23 13:36:17.872
  STEP: Creating configMap with name cm-test-opt-create-16fd921a-5dd9-427b-81e2-393d17a7e96a @ 09/02/23 13:36:17.877
  STEP: waiting to observe update in volume @ 09/02/23 13:36:17.883
  E0902 13:36:18.678775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:19.679218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:20.679235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:21.679426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:22.679498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:23.679606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:24.680210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:25.680283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:26.680533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:27.681581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:28.682533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:29.682639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:30.682725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:31.683649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:32.684538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:33.684619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:34.684802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:35.684892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:36.684967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:37.685077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:38.685163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:39.686210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:40.686322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:41.687246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:42.687334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:43.687518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:44.688183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:45.688357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:46.688537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:47.688606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:48.688723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:49.689589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:50.689679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:51.689770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:52.690717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:53.690803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:54.691434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:55.691541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:56.692055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:57.692160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:58.692724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:36:59.693604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:00.693667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:01.694706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:02.694779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:03.694874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:04.695699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:05.695791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:06.695904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:07.695972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:08.697032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:09.697301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:10.697593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:11.697662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:12.697684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:13.697787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:14.698629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:15.698814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:16.699357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:17.699908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:18.700198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:19.700519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:20.700612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:21.700701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:22.701343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:23.701451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:24.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4687" for this suite. @ 09/02/23 13:37:24.21
• [70.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/02/23 13:37:24.222
  Sep  2 13:37:24.222: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:37:24.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:37:24.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:37:24.244
  STEP: creating service nodeport-test with type=NodePort in namespace services-5482 @ 09/02/23 13:37:24.248
  STEP: creating replication controller nodeport-test in namespace services-5482 @ 09/02/23 13:37:24.262
  I0902 13:37:24.271119      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5482, replica count: 2
  E0902 13:37:24.702194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:25.702801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:26.702886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0902 13:37:27.322224      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:37:27.322: INFO: Creating new exec pod
  E0902 13:37:27.703017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:28.703048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:29.703108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:30.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep  2 13:37:30.503: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep  2 13:37:30.503: INFO: stdout: ""
  E0902 13:37:30.703522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:31.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep  2 13:37:31.644: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep  2 13:37:31.644: INFO: stdout: "nodeport-test-knvmb"
  Sep  2 13:37:31.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 80'
  E0902 13:37:31.703597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:31.790: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.112 80\nConnection to 10.152.183.112 80 port [tcp/http] succeeded!\n"
  Sep  2 13:37:31.790: INFO: stdout: ""
  E0902 13:37:32.704165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:32.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 80'
  Sep  2 13:37:32.977: INFO: stderr: "+ nc -v -t -w 2 10.152.183.112 80\nConnection to 10.152.183.112 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep  2 13:37:32.978: INFO: stdout: ""
  E0902 13:37:33.704505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:33.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 80'
  Sep  2 13:37:33.922: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.112 80\nConnection to 10.152.183.112 80 port [tcp/http] succeeded!\n"
  Sep  2 13:37:33.922: INFO: stdout: "nodeport-test-7n5zl"
  Sep  2 13:37:33.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.35 31639'
  Sep  2 13:37:34.056: INFO: stderr: "+ nc -v -t -w 2 172.31.7.35 31639\n+ echo hostName\nConnection to 172.31.7.35 31639 port [tcp/*] succeeded!\n"
  Sep  2 13:37:34.056: INFO: stdout: "nodeport-test-7n5zl"
  Sep  2 13:37:34.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.65 31639'
  Sep  2 13:37:34.193: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 172.31.35.65 31639\nConnection to 172.31.35.65 31639 port [tcp/*] succeeded!\n"
  Sep  2 13:37:34.193: INFO: stdout: ""
  E0902 13:37:34.705222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:35.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-5482 exec execpod5bbvc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.65 31639'
  Sep  2 13:37:35.331: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.65 31639\nConnection to 172.31.35.65 31639 port [tcp/*] succeeded!\n"
  Sep  2 13:37:35.331: INFO: stdout: "nodeport-test-knvmb"
  Sep  2 13:37:35.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5482" for this suite. @ 09/02/23 13:37:35.335
• [11.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/02/23 13:37:35.344
  Sep  2 13:37:35.344: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename security-context-test @ 09/02/23 13:37:35.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:37:35.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:37:35.365
  E0902 13:37:35.705602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:36.705674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:37.705763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:38.705842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:37:39.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8575" for this suite. @ 09/02/23 13:37:39.396
• [4.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/02/23 13:37:39.404
  Sep  2 13:37:39.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename namespaces @ 09/02/23 13:37:39.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:37:39.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:37:39.424
  STEP: Creating a test namespace @ 09/02/23 13:37:39.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:37:39.443
  STEP: Creating a service in the namespace @ 09/02/23 13:37:39.447
  STEP: Deleting the namespace @ 09/02/23 13:37:39.458
  STEP: Waiting for the namespace to be removed. @ 09/02/23 13:37:39.467
  E0902 13:37:39.705901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:40.706376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:41.707422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:42.707547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:43.708520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:44.708819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/02/23 13:37:45.471
  STEP: Verifying there is no service in the namespace @ 09/02/23 13:37:45.49
  Sep  2 13:37:45.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1102" for this suite. @ 09/02/23 13:37:45.499
  STEP: Destroying namespace "nsdeletetest-4536" for this suite. @ 09/02/23 13:37:45.505
  Sep  2 13:37:45.509: INFO: Namespace nsdeletetest-4536 was already deleted
  STEP: Destroying namespace "nsdeletetest-7453" for this suite. @ 09/02/23 13:37:45.509
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/02/23 13:37:45.516
  Sep  2 13:37:45.516: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/02/23 13:37:45.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:37:45.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:37:45.538
  STEP: creating @ 09/02/23 13:37:45.542
  STEP: getting @ 09/02/23 13:37:45.562
  STEP: listing in namespace @ 09/02/23 13:37:45.567
  STEP: patching @ 09/02/23 13:37:45.57
  STEP: deleting @ 09/02/23 13:37:45.583
  Sep  2 13:37:45.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6084" for this suite. @ 09/02/23 13:37:45.599
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/02/23 13:37:45.607
  Sep  2 13:37:45.607: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename subpath @ 09/02/23 13:37:45.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:37:45.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:37:45.63
  STEP: Setting up data @ 09/02/23 13:37:45.634
  STEP: Creating pod pod-subpath-test-secret-9p6g @ 09/02/23 13:37:45.645
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/23 13:37:45.645
  E0902 13:37:45.708794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:46.708913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:47.709578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:48.709691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:49.710356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:50.710474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:51.711228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:52.711313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:53.711531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:54.711925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:55.711959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:56.712067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:57.712099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:58.712573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:37:59.713074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:00.713582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:01.714321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:02.714439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:03.714789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:04.715586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:05.716483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:06.716605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:07.717320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:08.717455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:09.717864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:38:09.718
  Sep  2 13:38:09.723: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-subpath-test-secret-9p6g container test-container-subpath-secret-9p6g: <nil>
  STEP: delete the pod @ 09/02/23 13:38:09.731
  STEP: Deleting pod pod-subpath-test-secret-9p6g @ 09/02/23 13:38:09.746
  Sep  2 13:38:09.746: INFO: Deleting pod "pod-subpath-test-secret-9p6g" in namespace "subpath-1258"
  Sep  2 13:38:09.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1258" for this suite. @ 09/02/23 13:38:09.754
• [24.156 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/02/23 13:38:09.763
  Sep  2 13:38:09.764: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 13:38:09.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:09.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:09.786
  STEP: Creating a pod to test service account token:  @ 09/02/23 13:38:09.79
  E0902 13:38:10.717991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:11.718303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:12.718390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:13.718479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:38:13.815
  Sep  2 13:38:13.819: INFO: Trying to get logs from node ip-172-31-7-35 pod test-pod-331561e5-7adb-40e0-8966-ad87530247ec container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:38:13.827
  Sep  2 13:38:13.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2768" for this suite. @ 09/02/23 13:38:13.849
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/02/23 13:38:13.857
  Sep  2 13:38:13.857: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:38:13.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:13.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:13.881
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:38:13.885
  E0902 13:38:14.719521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:15.719628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:16.719736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:17.719929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:38:17.91
  Sep  2 13:38:17.914: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-02cae3d5-cc3b-4933-9318-d9097fb2d249 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:38:17.921
  Sep  2 13:38:17.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1368" for this suite. @ 09/02/23 13:38:17.94
• [4.091 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/02/23 13:38:17.948
  Sep  2 13:38:17.948: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 13:38:17.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:17.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:17.97
  Sep  2 13:38:17.975: INFO: Creating deployment "webserver-deployment"
  Sep  2 13:38:17.980: INFO: Waiting for observed generation 1
  E0902 13:38:18.720537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:19.720618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:38:19.989: INFO: Waiting for all required pods to come up
  Sep  2 13:38:19.993: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/02/23 13:38:19.994
  E0902 13:38:20.720713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:21.721568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:38:22.003: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep  2 13:38:22.010: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep  2 13:38:22.021: INFO: Updating deployment webserver-deployment
  Sep  2 13:38:22.021: INFO: Waiting for observed generation 2
  E0902 13:38:22.721665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:23.722733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:38:24.030: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep  2 13:38:24.034: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep  2 13:38:24.038: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep  2 13:38:24.049: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep  2 13:38:24.049: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep  2 13:38:24.053: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep  2 13:38:24.060: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep  2 13:38:24.060: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep  2 13:38:24.069: INFO: Updating deployment webserver-deployment
  Sep  2 13:38:24.069: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep  2 13:38:24.078: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep  2 13:38:24.084: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Sep  2 13:38:24.094: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0c840da-1b62-4152-b8f4-768f68602ea1",
      ResourceVersion: (string) (len=5) "36473",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 13:38:24.104: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
      ResourceVersion: (string) (len=5) "36470",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f0c840da-1b62-4152-b8f4-768f68602ea1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 30 63 38 34 30  64 61 2d 31 62 36 32 2d  |\"f0c840da-1b62-|
              00000120  34 31 35 32 2d 62 38 66  34 2d 37 36 38 66 36 38  |4152-b8f4-768f68|
              00000130  36 30 32 65 61 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |602ea1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:38:24.105: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep  2 13:38:24.105: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
      ResourceVersion: (string) (len=5) "36469",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f0c840da-1b62-4152-b8f4-768f68602ea1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 30 63 38 34 30  64 61 2d 31 62 36 32 2d  |\"f0c840da-1b62-|
              00000120  34 31 35 32 2d 62 38 66  34 2d 37 36 38 66 36 38  |4152-b8f4-768f68|
              00000130  36 30 32 65 61 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |602ea1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:38:24.113: INFO: Pod "webserver-deployment-557759b7c7-258b7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-258b7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83648e4c-9055-4689-ad3b-c175dfbac69d",
      ResourceVersion: (string) (len=5) "36327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 33 35 5c 22  |192.168.141.35\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nffhj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nffhj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f847caf043b1cfa99d52c3c1fdbfb796cdd1aed27b6373a84e4d15346ec0e6f0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.116: INFO: Pod "webserver-deployment-557759b7c7-2f8k2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2f8k2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3a7a8c8-68df-4d56-811c-fb7773d9b633",
      ResourceVersion: (string) (len=5) "36346",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 34 30 2e 32 30 36 5c  |192.168.240.206\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rzmzm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rzmzm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-26-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.26.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.240.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.240.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://129a5761d740456ab53099d9d518322a7ae399d1d3fb1bcd14a86da7365196fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.119: INFO: Pod "webserver-deployment-557759b7c7-6bfm2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6bfm2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9b56d12-2cf9-4b16-a4ce-8fdbf290079e",
      ResourceVersion: (string) (len=5) "36340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 37 2e 31 31 34 5c  |192.168.167.114\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2mq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2mq5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.167.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.167.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://67fc488ac220d294a597bb0bcac387513e81d6b831edd501b2f76d936b5cb3f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.125: INFO: Pod "webserver-deployment-557759b7c7-6rf5l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6rf5l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c1da1c8-38a5-4726-8304-5bb7f5a1d019",
      ResourceVersion: (string) (len=5) "36476",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bcstg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bcstg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.127: INFO: Pod "webserver-deployment-557759b7c7-9kdrs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9kdrs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "047dcbd4-53c4-44f6-ab22-3fddc0a981f9",
      ResourceVersion: (string) (len=5) "36315",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 34 30 2e 32 35 33 5c  |192.168.240.253\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6jpkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6jpkg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-26-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.26.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.240.253",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.240.253"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://98f3e1440af5ac538081d860a71a68aa28eb5f24287cc428a9e0683222aa275e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.130: INFO: Pod "webserver-deployment-557759b7c7-9r8jc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9r8jc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f9a3a15-037c-437c-b805-32b629fce2db",
      ResourceVersion: (string) (len=5) "36324",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 33 33 5c 22  |192.168.141.33\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-246x4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-246x4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9af6794006759afdaea44891dc789b815a54e4b5906fffc2b0e02d894c7deffa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.133: INFO: Pod "webserver-deployment-557759b7c7-g7sh7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-g7sh7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f28d122-fe54-4ef1-9faa-da04e4266358",
      ResourceVersion: (string) (len=5) "36310",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 34 30 2e 32 35 34 5c  |192.168.240.254\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zgv26",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zgv26",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-26-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.26.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.240.254",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.240.254"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba16e55a1be555003dc014cc76850ae7852bec41de51da26d583df1342ab4e8b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.136: INFO: Pod "webserver-deployment-557759b7c7-jcdq7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jcdq7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5d08125-5fd1-42fa-9274-39483083bdf9",
      ResourceVersion: (string) (len=5) "36474",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dcsqs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dcsqs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.139: INFO: Pod "webserver-deployment-557759b7c7-jwll8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jwll8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd7feaf0-12c5-4a70-9e2a-3bf7cf040895",
      ResourceVersion: (string) (len=5) "36343",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 37 2e 39 33 5c 22  |192.168.167.93\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6vhh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6vhh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.167.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.167.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5fa8270e8ea9260124d9d3df9b99c33219e9f36de423f0de9f0595d65699cfde",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.142: INFO: Pod "webserver-deployment-557759b7c7-l4ndn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l4ndn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f86f237d-7600-4424-b2e0-7b7154e9670d",
      ResourceVersion: (string) (len=5) "36337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 37 2e 31 31 36 5c  |192.168.167.116\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stjs5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stjs5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.167.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.167.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829258699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8a6cc1c15f23e0a68be052667c9f2e2b32665129e8ee135fd2f0fc48bb49710d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.145: INFO: Pod "webserver-deployment-557759b7c7-rpfhm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rpfhm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b120d8d-478b-4642-aa94-49ecda87a14b",
      ResourceVersion: (string) (len=5) "36477",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "272944b7-ed79-428d-952f-de20ed0de22a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  32 39 34 34 62 37 2d 65  |d\":\"272944b7-e|
              00000090  64 37 39 2d 34 32 38 64  2d 39 35 32 66 2d 64 65  |d79-428d-952f-de|
              000000a0  32 30 65 64 30 64 65 32  32 61 5c 22 7d 22 3a 7b  |20ed0de22a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dqtb2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dqtb2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.149: INFO: Pod "webserver-deployment-9b4f5bf69-5zgzj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5zgzj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "360d83fc-780e-45c2-9648-1338aeb76f37",
      ResourceVersion: (string) (len=5) "36453",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 34 30  2e 31 39 39 5c 22 7d 22  |.168.240.199\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lmrxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lmrxf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-26-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.26.21",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.240.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.240.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.152: INFO: Pod "webserver-deployment-9b4f5bf69-62h2j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-62h2j",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfd91456-3b27-4832-9b2a-f439baa6f7be",
      ResourceVersion: (string) (len=5) "36460",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 34 31  2e 34 37 5c 22 7d 22 3a  |.168.141.47\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xg4f6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xg4f6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.160: INFO: Pod "webserver-deployment-9b4f5bf69-8gc8v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8gc8v",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33258cf1-ef1a-479c-8b86-fbd04e8dcb3d",
      ResourceVersion: (string) (len=5) "36484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l88rq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l88rq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-26-21",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.162: INFO: Pod "webserver-deployment-9b4f5bf69-9bbjm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9bbjm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4aa2cc7-4244-406a-b9de-3473ff4fb67d",
      ResourceVersion: (string) (len=5) "36463",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 36 37  2e 31 31 38 5c 22 7d 22  |.168.167.118\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lmsxd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lmsxd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.167.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.167.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.166: INFO: Pod "webserver-deployment-9b4f5bf69-dtn6h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dtn6h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5552aef8-b29a-4022-91d9-fd67805a3745",
      ResourceVersion: (string) (len=5) "36481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbk65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbk65",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.168: INFO: Pod "webserver-deployment-9b4f5bf69-f68mq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-f68mq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5c96781-e259-455a-b895-7f40ca11764e",
      ResourceVersion: (string) (len=5) "36457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 34 31  2e 33 36 5c 22 7d 22 3a  |.168.141.36\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vttgt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vttgt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.173: INFO: Pod "webserver-deployment-9b4f5bf69-pzp2n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pzp2n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f6d8f59-6c3d-4a1d-95b6-e6182e1b6b3f",
      ResourceVersion: (string) (len=5) "36467",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 36 37  2e 31 31 37 5c 22 7d 22  |.168.167.117\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fcf9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fcf9g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.167.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.167.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.178: INFO: Pod "webserver-deployment-9b4f5bf69-zd76j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zd76j",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9139",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cf30fd2-c8ca-400e-a81b-c739bd09f666",
      ResourceVersion: (string) (len=5) "36482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829258704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "cac3b0c9-ab7b-4beb-8a3e-4e23126d36ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829258704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 61  63 33 62 30 63 39 2d 61  |d\":\"cac3b0c9-a|
              00000090  62 37 62 2d 34 62 65 62  2d 38 61 33 65 2d 34 65  |b7b-4beb-8a3e-4e|
              000000a0  32 33 31 32 36 64 33 36  65 65 5c 22 7d 22 3a 7b  |23126d36ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pcvj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pcvj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:38:24.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9139" for this suite. @ 09/02/23 13:38:24.191
• [6.251 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/02/23 13:38:24.199
  Sep  2 13:38:24.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename gc @ 09/02/23 13:38:24.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:24.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:24.257
  STEP: create the rc1 @ 09/02/23 13:38:24.266
  STEP: create the rc2 @ 09/02/23 13:38:24.274
  E0902 13:38:24.723658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:25.723894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:26.723935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:27.724116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:28.724559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:29.730594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/02/23 13:38:30.362
  E0902 13:38:30.730964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/02/23 13:38:30.993
  STEP: wait for the rc to be deleted @ 09/02/23 13:38:31.012
  E0902 13:38:31.731709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:32.731826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:33.731926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:34.732415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:35.736276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:38:36.086: INFO: 70 pods remaining
  Sep  2 13:38:36.087: INFO: 70 pods has nil DeletionTimestamp
  Sep  2 13:38:36.092: INFO: 
  E0902 13:38:36.741088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:37.741333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:38.741621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:39.741951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:40.742717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/02/23 13:38:41.024
  W0902 13:38:41.031568      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  2 13:38:41.031: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  2 13:38:41.032: INFO: Deleting pod "simpletest-rc-to-be-deleted-22mb7" in namespace "gc-3213"
  Sep  2 13:38:41.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-2hjs4" in namespace "gc-3213"
  Sep  2 13:38:41.056: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lcv9" in namespace "gc-3213"
  Sep  2 13:38:41.068: INFO: Deleting pod "simpletest-rc-to-be-deleted-2stq6" in namespace "gc-3213"
  Sep  2 13:38:41.084: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bhzh" in namespace "gc-3213"
  Sep  2 13:38:41.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-524xc" in namespace "gc-3213"
  Sep  2 13:38:41.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-58td2" in namespace "gc-3213"
  Sep  2 13:38:41.125: INFO: Deleting pod "simpletest-rc-to-be-deleted-5p4wd" in namespace "gc-3213"
  Sep  2 13:38:41.138: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rg5q" in namespace "gc-3213"
  Sep  2 13:38:41.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-5wwcw" in namespace "gc-3213"
  Sep  2 13:38:41.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-65cv9" in namespace "gc-3213"
  Sep  2 13:38:41.184: INFO: Deleting pod "simpletest-rc-to-be-deleted-6b8rf" in namespace "gc-3213"
  Sep  2 13:38:41.205: INFO: Deleting pod "simpletest-rc-to-be-deleted-6g66j" in namespace "gc-3213"
  Sep  2 13:38:41.222: INFO: Deleting pod "simpletest-rc-to-be-deleted-6kqtd" in namespace "gc-3213"
  Sep  2 13:38:41.236: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tcxw" in namespace "gc-3213"
  Sep  2 13:38:41.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-72h27" in namespace "gc-3213"
  Sep  2 13:38:41.264: INFO: Deleting pod "simpletest-rc-to-be-deleted-75gfk" in namespace "gc-3213"
  Sep  2 13:38:41.277: INFO: Deleting pod "simpletest-rc-to-be-deleted-7f2pm" in namespace "gc-3213"
  Sep  2 13:38:41.293: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kjgx" in namespace "gc-3213"
  Sep  2 13:38:41.305: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mvww" in namespace "gc-3213"
  Sep  2 13:38:41.319: INFO: Deleting pod "simpletest-rc-to-be-deleted-7t9wh" in namespace "gc-3213"
  Sep  2 13:38:41.334: INFO: Deleting pod "simpletest-rc-to-be-deleted-7x2rx" in namespace "gc-3213"
  Sep  2 13:38:41.345: INFO: Deleting pod "simpletest-rc-to-be-deleted-89xj7" in namespace "gc-3213"
  Sep  2 13:38:41.359: INFO: Deleting pod "simpletest-rc-to-be-deleted-8f2h6" in namespace "gc-3213"
  Sep  2 13:38:41.373: INFO: Deleting pod "simpletest-rc-to-be-deleted-8k4fv" in namespace "gc-3213"
  Sep  2 13:38:41.388: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kbss" in namespace "gc-3213"
  Sep  2 13:38:41.400: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mjzs" in namespace "gc-3213"
  Sep  2 13:38:41.415: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bz9h" in namespace "gc-3213"
  Sep  2 13:38:41.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j477" in namespace "gc-3213"
  Sep  2 13:38:41.437: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lnbd" in namespace "gc-3213"
  Sep  2 13:38:41.447: INFO: Deleting pod "simpletest-rc-to-be-deleted-b24xp" in namespace "gc-3213"
  Sep  2 13:38:41.459: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4fnt" in namespace "gc-3213"
  Sep  2 13:38:41.472: INFO: Deleting pod "simpletest-rc-to-be-deleted-blt8n" in namespace "gc-3213"
  Sep  2 13:38:41.488: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvrr5" in namespace "gc-3213"
  Sep  2 13:38:41.507: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvzlr" in namespace "gc-3213"
  Sep  2 13:38:41.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-c6cff" in namespace "gc-3213"
  Sep  2 13:38:41.531: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7658" in namespace "gc-3213"
  Sep  2 13:38:41.544: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnd6n" in namespace "gc-3213"
  Sep  2 13:38:41.557: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnksr" in namespace "gc-3213"
  Sep  2 13:38:41.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-crwlv" in namespace "gc-3213"
  Sep  2 13:38:41.584: INFO: Deleting pod "simpletest-rc-to-be-deleted-czhr4" in namespace "gc-3213"
  Sep  2 13:38:41.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-dblwn" in namespace "gc-3213"
  Sep  2 13:38:41.610: INFO: Deleting pod "simpletest-rc-to-be-deleted-dfddz" in namespace "gc-3213"
  Sep  2 13:38:41.626: INFO: Deleting pod "simpletest-rc-to-be-deleted-djjrv" in namespace "gc-3213"
  Sep  2 13:38:41.639: INFO: Deleting pod "simpletest-rc-to-be-deleted-fn4nx" in namespace "gc-3213"
  Sep  2 13:38:41.652: INFO: Deleting pod "simpletest-rc-to-be-deleted-fs7kd" in namespace "gc-3213"
  Sep  2 13:38:41.664: INFO: Deleting pod "simpletest-rc-to-be-deleted-fx2vr" in namespace "gc-3213"
  Sep  2 13:38:41.680: INFO: Deleting pod "simpletest-rc-to-be-deleted-fzxmn" in namespace "gc-3213"
  Sep  2 13:38:41.690: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4njh" in namespace "gc-3213"
  Sep  2 13:38:41.702: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbzqv" in namespace "gc-3213"
  Sep  2 13:38:41.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3213" for this suite. @ 09/02/23 13:38:41.723
• [17.531 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/02/23 13:38:41.731
  Sep  2 13:38:41.731: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:38:41.732
  E0902 13:38:41.742714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:41.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:41.754
  STEP: creating the pod @ 09/02/23 13:38:41.759
  STEP: setting up watch @ 09/02/23 13:38:41.759
  STEP: submitting the pod to kubernetes @ 09/02/23 13:38:41.871
  STEP: verifying the pod is in kubernetes @ 09/02/23 13:38:41.897
  STEP: verifying pod creation was observed @ 09/02/23 13:38:41.901
  E0902 13:38:42.742857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:43.743589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:44.744262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:45.744630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/02/23 13:38:45.956
  STEP: verifying pod deletion was observed @ 09/02/23 13:38:45.966
  E0902 13:38:46.744725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:38:46.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2546" for this suite. @ 09/02/23 13:38:46.89
• [5.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/02/23 13:38:46.9
  Sep  2 13:38:46.900: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:38:46.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:46.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:46.921
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:38:46.925
  E0902 13:38:47.744780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:48.745663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:49.746681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:50.746776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:38:50.95
  Sep  2 13:38:50.954: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-f45a5003-cc38-41d3-8eac-6c25caed8019 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:38:50.962
  Sep  2 13:38:50.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-174" for this suite. @ 09/02/23 13:38:50.985
• [4.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/02/23 13:38:50.993
  Sep  2 13:38:50.993: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename dns @ 09/02/23 13:38:50.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:38:51.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:38:51.015
  STEP: Creating a test externalName service @ 09/02/23 13:38:51.019
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8554.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8554.svc.cluster.local; sleep 1; done
   @ 09/02/23 13:38:51.025
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8554.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8554.svc.cluster.local; sleep 1; done
   @ 09/02/23 13:38:51.025
  STEP: creating a pod to probe DNS @ 09/02/23 13:38:51.025
  STEP: submitting the pod to kubernetes @ 09/02/23 13:38:51.025
  E0902 13:38:51.746848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:52.747018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/23 13:38:53.043
  STEP: looking for the results for each expected name from probers @ 09/02/23 13:38:53.047
  Sep  2 13:38:53.056: INFO: DNS probes using dns-test-4cc99980-b7ae-4e1c-8507-175cd5e22566 succeeded

  STEP: changing the externalName to bar.example.com @ 09/02/23 13:38:53.056
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8554.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8554.svc.cluster.local; sleep 1; done
   @ 09/02/23 13:38:53.066
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8554.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8554.svc.cluster.local; sleep 1; done
   @ 09/02/23 13:38:53.066
  STEP: creating a second pod to probe DNS @ 09/02/23 13:38:53.066
  STEP: submitting the pod to kubernetes @ 09/02/23 13:38:53.066
  E0902 13:38:53.747111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:54.747389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:55.748451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:56.748575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:57.749579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:58.749650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:38:59.750303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:00.750386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/23 13:39:01.097
  STEP: looking for the results for each expected name from probers @ 09/02/23 13:39:01.101
  Sep  2 13:39:01.113: INFO: DNS probes using dns-test-ce769c9a-4e7a-4812-abf0-7b0becd21d18 succeeded

  STEP: changing the service to type=ClusterIP @ 09/02/23 13:39:01.113
  W0902 13:39:01.126653      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8554.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8554.svc.cluster.local; sleep 1; done
   @ 09/02/23 13:39:01.126
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8554.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8554.svc.cluster.local; sleep 1; done
   @ 09/02/23 13:39:01.126
  STEP: creating a third pod to probe DNS @ 09/02/23 13:39:01.126
  STEP: submitting the pod to kubernetes @ 09/02/23 13:39:01.132
  E0902 13:39:01.750460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:02.750561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/02/23 13:39:03.148
  STEP: looking for the results for each expected name from probers @ 09/02/23 13:39:03.153
  Sep  2 13:39:03.163: INFO: DNS probes using dns-test-45a83375-10b0-401b-9429-fcf7991e2a3f succeeded

  Sep  2 13:39:03.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/02/23 13:39:03.167
  STEP: deleting the pod @ 09/02/23 13:39:03.182
  STEP: deleting the pod @ 09/02/23 13:39:03.198
  STEP: deleting the test externalName service @ 09/02/23 13:39:03.211
  STEP: Destroying namespace "dns-8554" for this suite. @ 09/02/23 13:39:03.233
• [12.248 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/02/23 13:39:03.241
  Sep  2 13:39:03.241: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename configmap @ 09/02/23 13:39:03.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:39:03.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:39:03.264
  STEP: Creating configMap with name configmap-test-volume-3f928285-726c-4ccc-bd05-c89b6d3349ed @ 09/02/23 13:39:03.268
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:39:03.272
  E0902 13:39:03.751690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:04.752265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:05.752364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:06.752553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:39:07.294
  Sep  2 13:39:07.298: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-configmaps-2e976b01-70ec-444c-b86f-3605b127f57a container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:39:07.306
  Sep  2 13:39:07.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1970" for this suite. @ 09/02/23 13:39:07.329
• [4.095 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/02/23 13:39:07.336
  Sep  2 13:39:07.336: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 13:39:07.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:39:07.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:39:07.358
  STEP: Creating ServiceAccount "e2e-sa-96cn8"  @ 09/02/23 13:39:07.368
  Sep  2 13:39:07.379: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-96cn8"  @ 09/02/23 13:39:07.379
  Sep  2 13:39:07.392: INFO: AutomountServiceAccountToken: true
  Sep  2 13:39:07.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4243" for this suite. @ 09/02/23 13:39:07.4
• [0.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/02/23 13:39:07.408
  Sep  2 13:39:07.408: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-runtime @ 09/02/23 13:39:07.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:39:07.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:39:07.435
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/02/23 13:39:07.458
  E0902 13:39:07.753192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:08.754224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:09.754346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:10.755215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:11.755838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:12.756231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:13.756303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:14.756375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:15.756496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:16.757510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:17.757694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:18.758708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:19.759488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:20.760317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:21.760426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:22.761276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:23.761361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/02/23 13:39:24.542
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/02/23 13:39:24.546
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/02/23 13:39:24.553
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/02/23 13:39:24.553
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/02/23 13:39:24.573
  E0902 13:39:24.761910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:25.762909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:26.763614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/02/23 13:39:27.589
  E0902 13:39:27.763680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/02/23 13:39:28.599
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/02/23 13:39:28.607
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/02/23 13:39:28.607
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/02/23 13:39:28.64
  E0902 13:39:28.764581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/02/23 13:39:29.649
  E0902 13:39:29.765001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:30.765727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/02/23 13:39:31.663
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/02/23 13:39:31.67
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/02/23 13:39:31.67
  Sep  2 13:39:31.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2512" for this suite. @ 09/02/23 13:39:31.699
• [24.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/02/23 13:39:31.708
  Sep  2 13:39:31.708: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename taint-single-pod @ 09/02/23 13:39:31.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:39:31.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:39:31.733
  Sep  2 13:39:31.737: INFO: Waiting up to 1m0s for all nodes to be ready
  E0902 13:39:31.766283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:32.766440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:33.766420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:34.766564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:35.766997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:36.767109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:37.767527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:38.767644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:39.768231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:40.768345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:41.769235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:42.769484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:43.769716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:44.770514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:45.771325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:46.771452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:47.771784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:48.771908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:49.772027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:50.772144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:51.772803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:52.772917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:53.773349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:54.773475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:55.774148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:56.774351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:57.775238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:58.775376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:39:59.775790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:00.775975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:01.776791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:02.776909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:03.777866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:04.778882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:05.779328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:06.779404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:07.780072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:08.780193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:09.780480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:10.780589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:11.780938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:12.781060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:13.781478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:14.781713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:15.782077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:16.782216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:17.782781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:18.783388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:19.783907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:20.784024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:21.784665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:22.784795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:23.785104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:24.785723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:25.786094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:26.786247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:27.786605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:28.786740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:29.786815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:30.786903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:40:31.758: INFO: Waiting for terminating namespaces to be deleted...
  Sep  2 13:40:31.763: INFO: Starting informer...
  STEP: Starting pod... @ 09/02/23 13:40:31.763
  E0902 13:40:31.787771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:40:31.979: INFO: Pod is running on ip-172-31-7-35. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/02/23 13:40:31.979
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/23 13:40:31.99
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/02/23 13:40:31.995
  Sep  2 13:40:31.995: INFO: Pod wasn't evicted. Proceeding
  Sep  2 13:40:31.995: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/02/23 13:40:32.008
  STEP: Waiting some time to make sure that toleration time passed. @ 09/02/23 13:40:32.014
  E0902 13:40:32.788165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:33.788329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:34.788636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:35.788734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:36.789587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:37.789786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:38.789853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:39.789945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:40.790756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:41.790943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:42.791124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:43.791260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:44.791340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:45.792015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:46.792207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:47.792410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:48.792505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:49.792588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:50.792684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:51.793567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:52.793851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:53.794038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:54.794214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:55.794297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:56.794392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:57.794438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:58.794566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:40:59.795607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:00.795812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:01.796096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:02.796148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:03.796237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:04.796501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:05.797567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:06.797748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:07.797951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:08.798109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:09.798623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:10.798712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:11.798921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:12.799114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:13.799252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:14.799342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:15.799506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:16.799690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:17.799870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:18.800139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:19.800504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:20.801566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:21.802521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:22.802609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:23.802699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:24.803044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:25.803859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:26.804030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:27.804214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:28.804335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:29.804508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:30.805571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:31.806633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:32.806827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:33.806852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:34.806920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:35.807779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:36.807880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:37.808062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:38.808262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:39.808503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:40.808592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:41.808678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:42.808772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:43.809571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:44.809858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:45.810032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:46.810135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:41:47.014: INFO: Pod wasn't evicted. Test successful
  Sep  2 13:41:47.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9318" for this suite. @ 09/02/23 13:41:47.023
• [135.322 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/02/23 13:41:47.031
  Sep  2 13:41:47.031: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:41:47.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:41:47.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:41:47.052
  STEP: Counting existing ResourceQuota @ 09/02/23 13:41:47.056
  E0902 13:41:47.810228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:48.810983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:49.811049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:50.811196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:51.811701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/23 13:41:52.061
  STEP: Ensuring resource quota status is calculated @ 09/02/23 13:41:52.066
  E0902 13:41:52.811905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:53.811935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/02/23 13:41:54.071
  STEP: Ensuring resource quota status captures replication controller creation @ 09/02/23 13:41:54.084
  E0902 13:41:54.812430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:55.812525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/02/23 13:41:56.089
  STEP: Ensuring resource quota status released usage @ 09/02/23 13:41:56.095
  E0902 13:41:56.812599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:57.813589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:41:58.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9152" for this suite. @ 09/02/23 13:41:58.104
• [11.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/02/23 13:41:58.113
  Sep  2 13:41:58.113: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:41:58.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:41:58.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:41:58.134
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/02/23 13:41:58.138
  E0902 13:41:58.813750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:41:59.813887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:00.813995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:01.814062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:42:02.164
  Sep  2 13:42:02.168: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-cb232090-c923-48a1-80b4-ed2a42df9366 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:42:02.187
  Sep  2 13:42:02.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2240" for this suite. @ 09/02/23 13:42:02.208
• [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/02/23 13:42:02.215
  Sep  2 13:42:02.215: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 13:42:02.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:42:02.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:42:02.235
  STEP: Creating service test in namespace statefulset-4073 @ 09/02/23 13:42:02.239
  STEP: Creating statefulset ss in namespace statefulset-4073 @ 09/02/23 13:42:02.244
  Sep  2 13:42:02.254: INFO: Found 0 stateful pods, waiting for 1
  E0902 13:42:02.814649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:03.815318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:04.815976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:05.816173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:06.816271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:07.816808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:08.817712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:09.818231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:10.818478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:11.819430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:42:12.260: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/02/23 13:42:12.267
  STEP: updating a scale subresource @ 09/02/23 13:42:12.27
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/02/23 13:42:12.277
  STEP: Patch a scale subresource @ 09/02/23 13:42:12.281
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/02/23 13:42:12.286
  Sep  2 13:42:12.291: INFO: Deleting all statefulset in ns statefulset-4073
  Sep  2 13:42:12.296: INFO: Scaling statefulset ss to 0
  E0902 13:42:12.819626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:13.819650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:14.819719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:15.819814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:16.819920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:17.820026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:18.820097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:19.820520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:20.821572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:21.821663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:42:22.316: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 13:42:22.320: INFO: Deleting statefulset ss
  Sep  2 13:42:22.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4073" for this suite. @ 09/02/23 13:42:22.338
• [20.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/02/23 13:42:22.345
  Sep  2 13:42:22.345: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 13:42:22.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:42:22.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:42:22.371
  E0902 13:42:22.822254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:23.822281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/02/23 13:42:24.397
  Sep  2 13:42:24.397: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5081 pod-service-account-3c96c623-7ba3-4efc-9f6e-e3c4e1d7ff6a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/02/23 13:42:24.536
  Sep  2 13:42:24.536: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5081 pod-service-account-3c96c623-7ba3-4efc-9f6e-e3c4e1d7ff6a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/02/23 13:42:24.677
  Sep  2 13:42:24.677: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5081 pod-service-account-3c96c623-7ba3-4efc-9f6e-e3c4e1d7ff6a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E0902 13:42:24.822888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:42:24.827: INFO: Got root ca configmap in namespace "svcaccounts-5081"
  Sep  2 13:42:24.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5081" for this suite. @ 09/02/23 13:42:24.836
• [2.498 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/02/23 13:42:24.844
  Sep  2 13:42:24.844: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:42:24.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:42:24.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:42:24.863
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:42:24.868
  E0902 13:42:25.822976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:26.837165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:27.838082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:28.838258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:42:28.89
  Sep  2 13:42:28.894: INFO: Trying to get logs from node ip-172-31-35-65 pod downwardapi-volume-165368ec-0d36-438d-8451-2b0522ce032f container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:42:28.913
  Sep  2 13:42:28.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4770" for this suite. @ 09/02/23 13:42:28.936
• [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/02/23 13:42:28.944
  Sep  2 13:42:28.944: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename init-container @ 09/02/23 13:42:28.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:42:28.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:42:28.967
  STEP: creating the pod @ 09/02/23 13:42:28.97
  Sep  2 13:42:28.971: INFO: PodSpec: initContainers in spec.initContainers
  E0902 13:42:29.838524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:30.838714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:31.839156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:42:32.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3617" for this suite. @ 09/02/23 13:42:32.707
• [3.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/02/23 13:42:32.715
  Sep  2 13:42:32.715: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-preemption @ 09/02/23 13:42:32.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:42:32.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:42:32.737
  Sep  2 13:42:32.755: INFO: Waiting up to 1m0s for all nodes to be ready
  E0902 13:42:32.840027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:33.840524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:34.841276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:35.841560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:36.842238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:37.842564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:38.843020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:39.843479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:40.844168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:41.844296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:42.844516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:43.844655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:44.845577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:45.845910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:46.846416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:47.846633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:48.847618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:49.847731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:50.848109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:51.848241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:52.849214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:53.850091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:54.850433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:55.850514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:56.850996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:57.851322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:58.851371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:42:59.851447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:00.852038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:01.852132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:02.852734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:03.853567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:04.853741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:05.853835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:06.854662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:07.854830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:08.855507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:09.855968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:10.856962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:11.857055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:12.857868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:13.858090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:14.858606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:15.858748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:16.858816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:17.859272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:18.860093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:19.860477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:20.861042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:21.861134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:22.861724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:23.861819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:24.862432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:25.862526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:26.863208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:27.863301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:28.863788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:29.864123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:30.864516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:31.864605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:43:32.818: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/02/23 13:43:32.822
  Sep  2 13:43:32.822: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/02/23 13:43:32.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:43:32.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:43:32.848
  STEP: Finding an available node @ 09/02/23 13:43:32.859
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/02/23 13:43:32.859
  E0902 13:43:32.865027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:33.865245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:34.865620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/02/23 13:43:34.88
  Sep  2 13:43:34.893: INFO: found a healthy node: ip-172-31-7-35
  E0902 13:43:35.865713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:36.865817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:37.865896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:38.865965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:39.866282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:40.866751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:43:40.964: INFO: pods created so far: [1 1 1]
  Sep  2 13:43:40.964: INFO: length of pods created so far: 3
  E0902 13:43:41.866843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:42.867351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:43:42.975: INFO: pods created so far: [2 2 1]
  E0902 13:43:43.868225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:44.868523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:45.868623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:46.868712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:47.869562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:48.869653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:49.869805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:43:49.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:43:50.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3675" for this suite. @ 09/02/23 13:43:50.055
  STEP: Destroying namespace "sched-preemption-4742" for this suite. @ 09/02/23 13:43:50.061
• [77.352 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/02/23 13:43:50.067
  Sep  2 13:43:50.067: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:43:50.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:43:50.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:43:50.087
  STEP: Creating a pod to test downward api env vars @ 09/02/23 13:43:50.091
  E0902 13:43:50.869942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:51.870017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:52.870317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:53.870380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:43:54.112
  Sep  2 13:43:54.116: INFO: Trying to get logs from node ip-172-31-35-65 pod downward-api-65e52ff4-18a6-4a1b-85dc-14e0010cda28 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 13:43:54.124
  Sep  2 13:43:54.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9723" for this suite. @ 09/02/23 13:43:54.144
• [4.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/02/23 13:43:54.151
  Sep  2 13:43:54.151: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename subpath @ 09/02/23 13:43:54.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:43:54.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:43:54.173
  STEP: Setting up data @ 09/02/23 13:43:54.177
  STEP: Creating pod pod-subpath-test-configmap-sg76 @ 09/02/23 13:43:54.186
  STEP: Creating a pod to test atomic-volume-subpath @ 09/02/23 13:43:54.186
  E0902 13:43:54.871361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:55.871574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:56.871663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:57.871762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:58.872736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:43:59.873583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:00.874503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:01.875556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:02.875643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:03.876658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:04.876747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:05.876819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:06.877715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:07.877836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:08.878614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:09.878836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:10.879753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:11.879937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:12.880029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:13.880150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:14.880528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:15.880631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:16.881322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:17.881595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:44:18.256
  Sep  2 13:44:18.260: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-subpath-test-configmap-sg76 container test-container-subpath-configmap-sg76: <nil>
  STEP: delete the pod @ 09/02/23 13:44:18.269
  STEP: Deleting pod pod-subpath-test-configmap-sg76 @ 09/02/23 13:44:18.283
  Sep  2 13:44:18.283: INFO: Deleting pod "pod-subpath-test-configmap-sg76" in namespace "subpath-358"
  Sep  2 13:44:18.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-358" for this suite. @ 09/02/23 13:44:18.291
• [24.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/02/23 13:44:18.301
  Sep  2 13:44:18.301: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename svcaccounts @ 09/02/23 13:44:18.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:18.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:18.323
  STEP: creating a ServiceAccount @ 09/02/23 13:44:18.327
  STEP: watching for the ServiceAccount to be added @ 09/02/23 13:44:18.336
  STEP: patching the ServiceAccount @ 09/02/23 13:44:18.34
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/02/23 13:44:18.345
  STEP: deleting the ServiceAccount @ 09/02/23 13:44:18.349
  Sep  2 13:44:18.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1631" for this suite. @ 09/02/23 13:44:18.367
• [0.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/02/23 13:44:18.375
  Sep  2 13:44:18.375: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:44:18.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:18.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:18.399
  STEP: Creating a ResourceQuota @ 09/02/23 13:44:18.403
  STEP: Getting a ResourceQuota @ 09/02/23 13:44:18.408
  STEP: Updating a ResourceQuota @ 09/02/23 13:44:18.413
  STEP: Verifying a ResourceQuota was modified @ 09/02/23 13:44:18.418
  STEP: Deleting a ResourceQuota @ 09/02/23 13:44:18.423
  STEP: Verifying the deleted ResourceQuota @ 09/02/23 13:44:18.429
  Sep  2 13:44:18.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3693" for this suite. @ 09/02/23 13:44:18.437
• [0.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/02/23 13:44:18.445
  Sep  2 13:44:18.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename statefulset @ 09/02/23 13:44:18.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:18.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:18.475
  STEP: Creating service test in namespace statefulset-6272 @ 09/02/23 13:44:18.478
  STEP: Creating statefulset ss in namespace statefulset-6272 @ 09/02/23 13:44:18.488
  Sep  2 13:44:18.498: INFO: Found 0 stateful pods, waiting for 1
  E0902 13:44:18.882453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:19.882577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:20.882666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:21.882746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:22.882997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:23.883080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:24.883796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:25.883935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:26.884378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:27.884469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:28.504: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/02/23 13:44:28.511
  STEP: Getting /status @ 09/02/23 13:44:28.517
  Sep  2 13:44:28.521: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/02/23 13:44:28.521
  Sep  2 13:44:28.531: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/02/23 13:44:28.531
  Sep  2 13:44:28.533: INFO: Observed &StatefulSet event: ADDED
  Sep  2 13:44:28.533: INFO: Found Statefulset ss in namespace statefulset-6272 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  2 13:44:28.533: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/02/23 13:44:28.533
  Sep  2 13:44:28.533: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep  2 13:44:28.540: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/02/23 13:44:28.54
  Sep  2 13:44:28.542: INFO: Observed &StatefulSet event: ADDED
  Sep  2 13:44:28.542: INFO: Deleting all statefulset in ns statefulset-6272
  Sep  2 13:44:28.546: INFO: Scaling statefulset ss to 0
  E0902 13:44:28.885500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:29.885977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:30.886061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:31.886391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:32.886489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:33.886650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:34.886743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:35.886824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:36.886917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:37.887076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:38.567: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  2 13:44:38.571: INFO: Deleting statefulset ss
  Sep  2 13:44:38.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6272" for this suite. @ 09/02/23 13:44:38.594
• [20.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/02/23 13:44:38.603
  Sep  2 13:44:38.603: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename certificates @ 09/02/23 13:44:38.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:38.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:38.63
  E0902 13:44:38.887293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/02/23 13:44:38.951
  STEP: getting /apis/certificates.k8s.io @ 09/02/23 13:44:38.957
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/02/23 13:44:38.959
  STEP: creating @ 09/02/23 13:44:38.961
  STEP: getting @ 09/02/23 13:44:38.98
  STEP: listing @ 09/02/23 13:44:38.984
  STEP: watching @ 09/02/23 13:44:38.988
  Sep  2 13:44:38.988: INFO: starting watch
  STEP: patching @ 09/02/23 13:44:38.99
  STEP: updating @ 09/02/23 13:44:38.996
  Sep  2 13:44:39.002: INFO: waiting for watch events with expected annotations
  Sep  2 13:44:39.002: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/02/23 13:44:39.003
  STEP: patching /approval @ 09/02/23 13:44:39.006
  STEP: updating /approval @ 09/02/23 13:44:39.014
  STEP: getting /status @ 09/02/23 13:44:39.025
  STEP: patching /status @ 09/02/23 13:44:39.029
  STEP: updating /status @ 09/02/23 13:44:39.039
  STEP: deleting @ 09/02/23 13:44:39.047
  STEP: deleting a collection @ 09/02/23 13:44:39.062
  Sep  2 13:44:39.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7036" for this suite. @ 09/02/23 13:44:39.085
• [0.489 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/02/23 13:44:39.092
  Sep  2 13:44:39.092: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename sysctl @ 09/02/23 13:44:39.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:39.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:39.116
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/02/23 13:44:39.121
  STEP: Watching for error events or started pod @ 09/02/23 13:44:39.131
  E0902 13:44:39.888400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:40.888519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/02/23 13:44:41.136
  E0902 13:44:41.889565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:42.889659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/02/23 13:44:43.15
  STEP: Getting logs from the pod @ 09/02/23 13:44:43.15
  STEP: Checking that the sysctl is actually updated @ 09/02/23 13:44:43.169
  Sep  2 13:44:43.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2553" for this suite. @ 09/02/23 13:44:43.175
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/02/23 13:44:43.185
  Sep  2 13:44:43.185: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename replication-controller @ 09/02/23 13:44:43.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:43.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:43.213
  STEP: Given a ReplicationController is created @ 09/02/23 13:44:43.218
  STEP: When the matched label of one of its pods change @ 09/02/23 13:44:43.226
  Sep  2 13:44:43.230: INFO: Pod name pod-release: Found 0 pods out of 1
  E0902 13:44:43.890566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:44.890649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:45.890832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:46.890924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:47.891782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:48.235: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/02/23 13:44:48.246
  E0902 13:44:48.892444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:49.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1874" for this suite. @ 09/02/23 13:44:49.26
• [6.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/02/23 13:44:49.267
  Sep  2 13:44:49.267: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename secrets @ 09/02/23 13:44:49.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:49.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:49.289
  STEP: creating secret secrets-8198/secret-test-de17067d-25cc-45c2-a5e5-cc915c96db3a @ 09/02/23 13:44:49.294
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:44:49.298
  E0902 13:44:49.893383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:50.893565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:51.894224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:52.894309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:44:53.321
  Sep  2 13:44:53.325: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-configmaps-3e360dbf-e7ac-46e4-a111-ab136d9718b8 container env-test: <nil>
  STEP: delete the pod @ 09/02/23 13:44:53.335
  Sep  2 13:44:53.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8198" for this suite. @ 09/02/23 13:44:53.359
• [4.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/02/23 13:44:53.367
  Sep  2 13:44:53.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 13:44:53.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:53.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:53.397
  Sep  2 13:44:53.402: INFO: Creating deployment "test-recreate-deployment"
  Sep  2 13:44:53.409: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep  2 13:44:53.419: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0902 13:44:53.895127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:44:54.896179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:55.427: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep  2 13:44:55.431: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep  2 13:44:55.442: INFO: Updating deployment test-recreate-deployment
  Sep  2 13:44:55.442: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep  2 13:44:55.533: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5529",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b1ce815-3934-4cdb-b90d-f4bc4b0feb9a",
      ResourceVersion: (string) (len=5) "41280",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 13:44:55.541: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5529",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aad225b6-dd8a-4acc-bfe1-3060fa8ea040",
      ResourceVersion: (string) (len=5) "41277",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9b1ce815-3934-4cdb-b90d-f4bc4b0feb9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 31 63 65 38  31 35 2d 33 39 33 34 2d  |\"9b1ce815-3934-|
              00000120  34 63 64 62 2d 62 39 30  64 2d 66 34 62 63 34 62  |4cdb-b90d-f4bc4b|
              00000130  30 66 65 62 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0feb9a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:44:55.544: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep  2 13:44:55.544: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5529",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0945672d-06dc-4f63-98fd-24de95243fa6",
      ResourceVersion: (string) (len=5) "41269",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259093,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9b1ce815-3934-4cdb-b90d-f4bc4b0feb9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 31 63 65 38  31 35 2d 33 39 33 34 2d  |\"9b1ce815-3934-|
              00000120  34 63 64 62 2d 62 39 30  64 2d 66 34 62 63 34 62  |4cdb-b90d-f4bc4b|
              00000130  30 66 65 62 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0feb9a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:44:55.560: INFO: Pod "test-recreate-deployment-76fb77d45-c98dc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-c98dc",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-5529",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ab69660-d1d9-476e-a192-702a42ca091c",
      ResourceVersion: (string) (len=5) "41281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "aad225b6-dd8a-4acc-bfe1-3060fa8ea040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 32 32 35 62 36 2d 64  |d\":\"aad225b6-d|
              00000090  64 38 61 2d 34 61 63 63  2d 62 66 65 31 2d 33 30  |d8a-4acc-bfe1-30|
              000000a0  36 30 66 61 38 65 61 30  34 30 5c 22 7d 22 3a 7b  |60fa8ea040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-thtnf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-thtnf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:44:55.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5529" for this suite. @ 09/02/23 13:44:55.567
• [2.207 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/02/23 13:44:55.575
  Sep  2 13:44:55.575: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 13:44:55.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:44:55.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:44:55.599
  STEP: creating a Deployment @ 09/02/23 13:44:55.612
  STEP: waiting for Deployment to be created @ 09/02/23 13:44:55.619
  STEP: waiting for all Replicas to be Ready @ 09/02/23 13:44:55.622
  Sep  2 13:44:55.625: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.625: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.634: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.634: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.661: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.661: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.675: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  2 13:44:55.675: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0902 13:44:55.896572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:56.816: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep  2 13:44:56.816: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0902 13:44:56.897106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:57.015: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/02/23 13:44:57.015
  Sep  2 13:44:57.025: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/02/23 13:44:57.025
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 0
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.027: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.038: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.039: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.061: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.061: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:57.076: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:44:57.076: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:44:57.083: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:44:57.083: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  E0902 13:44:57.897382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:58.020: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:58.020: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:44:58.048: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  STEP: listing Deployments @ 09/02/23 13:44:58.048
  Sep  2 13:44:58.054: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/02/23 13:44:58.054
  Sep  2 13:44:58.069: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/02/23 13:44:58.069
  Sep  2 13:44:58.076: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  2 13:44:58.080: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  2 13:44:58.103: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  2 13:44:58.120: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  2 13:44:58.138: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 13:44:58.897468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:44:59.832: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  2 13:44:59.855: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  2 13:44:59.880: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 13:44:59.898182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:00.046: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0902 13:45:00.900783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:01.041: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/02/23 13:45:01.101
  STEP: fetching the DeploymentStatus @ 09/02/23 13:45:01.112
  Sep  2 13:45:01.121: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:45:01.121: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:45:01.121: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:45:01.122: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:45:01.122: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 1
  Sep  2 13:45:01.122: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:45:01.122: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 3
  Sep  2 13:45:01.122: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:45:01.123: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 2
  Sep  2 13:45:01.123: INFO: observed Deployment test-deployment in namespace deployment-9597 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/02/23 13:45:01.123
  Sep  2 13:45:01.134: INFO: observed event type MODIFIED
  Sep  2 13:45:01.134: INFO: observed event type MODIFIED
  Sep  2 13:45:01.134: INFO: observed event type MODIFIED
  Sep  2 13:45:01.134: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.135: INFO: observed event type MODIFIED
  Sep  2 13:45:01.139: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep  2 13:45:01.143: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75448abc-c2c6-4eb8-8205-af1b2d4ef3a0",
      ResourceVersion: (string) (len=5) "41497",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6ee06ddc-e503-4aa2-9047-2d468e6e50c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 65 65 30  36 64 64 63 2d 65 35 30  |":\"6ee06ddc-e50|
              00000130  33 2d 34 61 61 32 2d 39  30 34 37 2d 32 64 34 36  |3-4aa2-9047-2d46|
              00000140  38 65 36 65 35 30 63 32  5c 22 7d 22 3a 7b 7d 7d  |8e6e50c2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep  2 13:45:01.160: INFO: pod: "test-deployment-64fd565c98-22pkv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-22pkv",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "033411ee-6aa4-480b-ba76-5158933c8b44",
      ResourceVersion: (string) (len=5) "41492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "75448abc-c2c6-4eb8-8205-af1b2d4ef3a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 35 34 34 38 61 62 63  |uid\":\"75448abc|
              000000a0  2d 63 32 63 36 2d 34 65  62 38 2d 38 32 30 35 2d  |-c2c6-4eb8-8205-|
              000000b0  61 66 31 62 32 64 34 65  66 33 61 30 5c 22 7d 22  |af1b2d4ef3a0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 37 2e 31 30 35 5c  |192.168.167.105\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lb7j5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lb7j5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.167.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.167.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829259097,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://2c6ef7667b4f284b9dfe32e9c47cc4655540db899b82027ffab4a42c9a7b1234",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  2 13:45:01.163: INFO: pod: "test-deployment-64fd565c98-28tm9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-28tm9",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87a27b50-a683-47da-9959-038a0851307e",
      ResourceVersion: (string) (len=5) "41440",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259101,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "75448abc-c2c6-4eb8-8205-af1b2d4ef3a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 35 34 34 38 61 62 63  |uid\":\"75448abc|
              000000a0  2d 63 32 63 36 2d 34 65  62 38 2d 38 32 30 35 2d  |-c2c6-4eb8-8205-|
              000000b0  61 66 31 62 32 64 34 65  66 33 61 30 5c 22 7d 22  |af1b2d4ef3a0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 32 37 5c 22  |192.168.141.27\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hpl2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hpl2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829259098,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://707c43caa81a5d3cd52f31ea2293f7093c2903e0d3cdc932b6fec6377c626063",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  2 13:45:01.171: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20681ca8-bbb0-413a-9412-74176369b13f",
      ResourceVersion: (string) (len=5) "41369",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6ee06ddc-e503-4aa2-9047-2d468e6e50c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 65 65 30  36 64 64 63 2d 65 35 30  |":\"6ee06ddc-e50|
              00000130  33 2d 34 61 61 32 2d 39  30 34 37 2d 32 64 34 36  |3-4aa2-9047-2d46|
              00000140  38 65 36 65 35 30 63 32  5c 22 7d 22 3a 7b 7d 7d  |8e6e50c2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep  2 13:45:01.183: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0f48f6e-a82d-4927-b52b-e761454fc01a",
      ResourceVersion: (string) (len=5) "41489",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6ee06ddc-e503-4aa2-9047-2d468e6e50c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 65 65 30  36 64 64 63 2d 65 35 30  |":\"6ee06ddc-e50|
              00000130  33 2d 34 61 61 32 2d 39  30 34 37 2d 32 64 34 36  |3-4aa2-9047-2d46|
              00000140  38 65 36 65 35 30 63 32  5c 22 7d 22 3a 7b 7d 7d  |8e6e50c2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep  2 13:45:01.192: INFO: pod: "test-deployment-79ff746c4-mqq5l":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-mqq5l",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd9f4ddd-a202-47d1-b0db-9cc6266e70a9",
      ResourceVersion: (string) (len=5) "41505",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c0f48f6e-a82d-4927-b52b-e761454fc01a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 30 66 34 38 66 36 65  |uid\":\"c0f48f6e|
              000000a0  2d 61 38 32 64 2d 34 39  32 37 2d 62 35 32 62 2d  |-a82d-4927-b52b-|
              000000b0  65 37 36 31 34 35 34 66  63 30 31 61 5c 22 7d 22  |e761454fc01a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 33 36 5c 22  |192.168.141.36\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5zsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5zsp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829259099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba8be3855f23cd1be86146df2fd04d6dbc2f04cbe45c5d7e9f29300aee4cb325",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  2 13:45:01.197: INFO: pod: "test-deployment-79ff746c4-zfvj2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-zfvj2",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8091f28e-e4f5-4d71-a78f-d1e5da19bbc1",
      ResourceVersion: (string) (len=5) "41506",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c0f48f6e-a82d-4927-b52b-e761454fc01a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 30 66 34 38 66 36 65  |uid\":\"c0f48f6e|
              000000a0  2d 61 38 32 64 2d 34 39  32 37 2d 62 35 32 62 2d  |-a82d-4927-b52b-|
              000000b0  65 37 36 31 34 35 34 66  63 30 31 61 5c 22 7d 22  |e761454fc01a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259101,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 37 2e 38 36 5c 22  |192.168.167.86\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2wqjn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2wqjn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-35-65",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.35.65",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.167.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.167.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829259100,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e89ac1829caa5c76daed354417912c2ce4d4a97a37c9f02cf89a78280c7757a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  2 13:45:01.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9597" for this suite. @ 09/02/23 13:45:01.211
• [5.645 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/02/23 13:45:01.22
  Sep  2 13:45:01.220: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/23 13:45:01.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:45:01.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:45:01.248
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/23 13:45:01.257
  E0902 13:45:01.901676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:02.901692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/23 13:45:03.278
  E0902 13:45:03.902198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:04.902274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/02/23 13:45:05.296
  STEP: delete the pod with lifecycle hook @ 09/02/23 13:45:05.303
  E0902 13:45:05.902764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:06.902857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:07.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7008" for this suite. @ 09/02/23 13:45:07.325
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/02/23 13:45:07.336
  Sep  2 13:45:07.336: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:45:07.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:45:07.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:45:07.363
  E0902 13:45:07.903008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:08.903109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:09.903211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:10.903964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:11.904052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:12.905753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:13.906675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:14.908641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:15.908725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:16.908751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:17.908835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:18.909718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:19.909805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:20.910532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:21.911208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:22.912196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:23.912228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/02/23 13:45:24.372
  E0902 13:45:24.912352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:25.913291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:26.913359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:27.913545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:28.914239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/02/23 13:45:29.378
  STEP: Ensuring resource quota status is calculated @ 09/02/23 13:45:29.384
  E0902 13:45:29.915062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:30.915150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/02/23 13:45:31.388
  STEP: Ensuring resource quota status captures configMap creation @ 09/02/23 13:45:31.4
  E0902 13:45:31.915244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:32.915586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/02/23 13:45:33.405
  STEP: Ensuring resource quota status released usage @ 09/02/23 13:45:33.412
  E0902 13:45:33.915467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:34.915552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:35.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5314" for this suite. @ 09/02/23 13:45:35.421
• [28.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/02/23 13:45:35.43
  Sep  2 13:45:35.431: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename cronjob @ 09/02/23 13:45:35.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:45:35.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:45:35.453
  STEP: Creating a cronjob @ 09/02/23 13:45:35.457
  STEP: creating @ 09/02/23 13:45:35.457
  STEP: getting @ 09/02/23 13:45:35.463
  STEP: listing @ 09/02/23 13:45:35.466
  STEP: watching @ 09/02/23 13:45:35.47
  Sep  2 13:45:35.470: INFO: starting watch
  STEP: cluster-wide listing @ 09/02/23 13:45:35.472
  STEP: cluster-wide watching @ 09/02/23 13:45:35.476
  Sep  2 13:45:35.476: INFO: starting watch
  STEP: patching @ 09/02/23 13:45:35.477
  STEP: updating @ 09/02/23 13:45:35.484
  Sep  2 13:45:35.493: INFO: waiting for watch events with expected annotations
  Sep  2 13:45:35.493: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/02/23 13:45:35.493
  STEP: updating /status @ 09/02/23 13:45:35.498
  STEP: get /status @ 09/02/23 13:45:35.507
  STEP: deleting @ 09/02/23 13:45:35.51
  STEP: deleting a collection @ 09/02/23 13:45:35.525
  Sep  2 13:45:35.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2164" for this suite. @ 09/02/23 13:45:35.54
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/02/23 13:45:35.548
  Sep  2 13:45:35.548: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename discovery @ 09/02/23 13:45:35.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:45:35.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:45:35.568
  STEP: Setting up server cert @ 09/02/23 13:45:35.573
  Sep  2 13:45:35.682: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep  2 13:45:35.684: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep  2 13:45:35.684: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep  2 13:45:35.684: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep  2 13:45:35.684: INFO: Checking APIGroup: apps
  Sep  2 13:45:35.686: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep  2 13:45:35.686: INFO: Versions found [{apps/v1 v1}]
  Sep  2 13:45:35.686: INFO: apps/v1 matches apps/v1
  Sep  2 13:45:35.686: INFO: Checking APIGroup: events.k8s.io
  Sep  2 13:45:35.687: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep  2 13:45:35.687: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep  2 13:45:35.687: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep  2 13:45:35.687: INFO: Checking APIGroup: authentication.k8s.io
  Sep  2 13:45:35.689: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep  2 13:45:35.689: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep  2 13:45:35.689: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep  2 13:45:35.689: INFO: Checking APIGroup: authorization.k8s.io
  Sep  2 13:45:35.691: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep  2 13:45:35.691: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep  2 13:45:35.691: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep  2 13:45:35.691: INFO: Checking APIGroup: autoscaling
  Sep  2 13:45:35.692: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep  2 13:45:35.692: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep  2 13:45:35.692: INFO: autoscaling/v2 matches autoscaling/v2
  Sep  2 13:45:35.692: INFO: Checking APIGroup: batch
  Sep  2 13:45:35.694: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep  2 13:45:35.694: INFO: Versions found [{batch/v1 v1}]
  Sep  2 13:45:35.694: INFO: batch/v1 matches batch/v1
  Sep  2 13:45:35.694: INFO: Checking APIGroup: certificates.k8s.io
  Sep  2 13:45:35.695: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep  2 13:45:35.695: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep  2 13:45:35.695: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep  2 13:45:35.695: INFO: Checking APIGroup: networking.k8s.io
  Sep  2 13:45:35.697: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep  2 13:45:35.697: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep  2 13:45:35.697: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep  2 13:45:35.697: INFO: Checking APIGroup: policy
  Sep  2 13:45:35.699: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep  2 13:45:35.699: INFO: Versions found [{policy/v1 v1}]
  Sep  2 13:45:35.699: INFO: policy/v1 matches policy/v1
  Sep  2 13:45:35.699: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep  2 13:45:35.700: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep  2 13:45:35.700: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep  2 13:45:35.700: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep  2 13:45:35.700: INFO: Checking APIGroup: storage.k8s.io
  Sep  2 13:45:35.702: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep  2 13:45:35.702: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep  2 13:45:35.702: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep  2 13:45:35.702: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep  2 13:45:35.704: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep  2 13:45:35.704: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep  2 13:45:35.704: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep  2 13:45:35.704: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep  2 13:45:35.705: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep  2 13:45:35.705: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep  2 13:45:35.705: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep  2 13:45:35.705: INFO: Checking APIGroup: scheduling.k8s.io
  Sep  2 13:45:35.707: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep  2 13:45:35.707: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep  2 13:45:35.707: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep  2 13:45:35.707: INFO: Checking APIGroup: coordination.k8s.io
  Sep  2 13:45:35.709: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep  2 13:45:35.709: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep  2 13:45:35.709: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep  2 13:45:35.709: INFO: Checking APIGroup: node.k8s.io
  Sep  2 13:45:35.710: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep  2 13:45:35.710: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep  2 13:45:35.710: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep  2 13:45:35.711: INFO: Checking APIGroup: discovery.k8s.io
  Sep  2 13:45:35.712: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep  2 13:45:35.712: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep  2 13:45:35.712: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep  2 13:45:35.712: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep  2 13:45:35.714: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep  2 13:45:35.714: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep  2 13:45:35.714: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep  2 13:45:35.714: INFO: Checking APIGroup: metrics.k8s.io
  Sep  2 13:45:35.716: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Sep  2 13:45:35.716: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Sep  2 13:45:35.716: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Sep  2 13:45:35.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3560" for this suite. @ 09/02/23 13:45:35.72
• [0.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/02/23 13:45:35.73
  Sep  2 13:45:35.730: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename aggregator @ 09/02/23 13:45:35.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:45:35.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:45:35.75
  Sep  2 13:45:35.754: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Registering the sample API server. @ 09/02/23 13:45:35.755
  E0902 13:45:35.915582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:36.542: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep  2 13:45:36.571: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0902 13:45:36.915674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:37.916519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:38.618: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:38.916921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:39.917334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:40.622: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:40.917588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:41.917790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:42.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:42.918630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:43.918722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:44.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:44.919675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:45.919758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:46.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:46.920679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:47.921601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:48.624: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:48.922404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:49.922451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:50.622: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:50.922795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:51.922871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:52.622: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:52.923754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:53.923846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:54.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:54.924518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:55.924615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:56.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:56.925581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:57.925676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:45:58.622: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 45, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:45:58.926491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:45:59.927263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:46:00.747: INFO: Waited 115.844929ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/02/23 13:46:00.793
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/02/23 13:46:00.797
  STEP: List APIServices @ 09/02/23 13:46:00.805
  Sep  2 13:46:00.811: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/02/23 13:46:00.811
  Sep  2 13:46:00.824: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/02/23 13:46:00.824
  Sep  2 13:46:00.836: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 2, 13, 46, 0, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/02/23 13:46:00.836
  Sep  2 13:46:00.839: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-02 13:46:00 +0000 UTC Passed all checks passed}
  Sep  2 13:46:00.839: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  2 13:46:00.839: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/02/23 13:46:00.839
  Sep  2 13:46:00.852: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-15131654" @ 09/02/23 13:46:00.852
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/02/23 13:46:00.864
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/02/23 13:46:00.871
  STEP: Patch APIService Status @ 09/02/23 13:46:00.875
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/02/23 13:46:00.884
  Sep  2 13:46:00.887: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-02 13:46:00 +0000 UTC Passed all checks passed}
  Sep  2 13:46:00.887: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  2 13:46:00.887: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep  2 13:46:00.887: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/02/23 13:46:00.887
  STEP: Confirm that the generated APIService has been deleted @ 09/02/23 13:46:00.892
  Sep  2 13:46:00.892: INFO: Requesting list of APIServices to confirm quantity
  Sep  2 13:46:00.898: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep  2 13:46:00.898: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  E0902 13:46:00.927958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:46:00.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6255" for this suite. @ 09/02/23 13:46:01.013
• [25.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/02/23 13:46:01.022
  Sep  2 13:46:01.022: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:46:01.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:01.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:01.044
  STEP: creating a Service @ 09/02/23 13:46:01.054
  STEP: watching for the Service to be added @ 09/02/23 13:46:01.065
  Sep  2 13:46:01.067: INFO: Found Service test-service-h8fmm in namespace services-556 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep  2 13:46:01.068: INFO: Service test-service-h8fmm created
  STEP: Getting /status @ 09/02/23 13:46:01.068
  Sep  2 13:46:01.071: INFO: Service test-service-h8fmm has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/02/23 13:46:01.072
  STEP: watching for the Service to be patched @ 09/02/23 13:46:01.078
  Sep  2 13:46:01.080: INFO: observed Service test-service-h8fmm in namespace services-556 with annotations: map[] & LoadBalancer: {[]}
  Sep  2 13:46:01.080: INFO: Found Service test-service-h8fmm in namespace services-556 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep  2 13:46:01.080: INFO: Service test-service-h8fmm has service status patched
  STEP: updating the ServiceStatus @ 09/02/23 13:46:01.081
  Sep  2 13:46:01.092: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/02/23 13:46:01.092
  Sep  2 13:46:01.094: INFO: Observed Service test-service-h8fmm in namespace services-556 with annotations: map[] & Conditions: {[]}
  Sep  2 13:46:01.094: INFO: Observed event: &Service{ObjectMeta:{test-service-h8fmm  services-556  fa0b5156-3ebe-4398-8b75-b74dae3c4cae 41897 0 2023-09-02 13:46:01 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-02 13:46:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-02 13:46:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.211,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.211],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep  2 13:46:01.095: INFO: Found Service test-service-h8fmm in namespace services-556 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  2 13:46:01.095: INFO: Service test-service-h8fmm has service status updated
  STEP: patching the service @ 09/02/23 13:46:01.095
  STEP: watching for the Service to be patched @ 09/02/23 13:46:01.106
  Sep  2 13:46:01.108: INFO: observed Service test-service-h8fmm in namespace services-556 with labels: map[test-service-static:true]
  Sep  2 13:46:01.109: INFO: observed Service test-service-h8fmm in namespace services-556 with labels: map[test-service-static:true]
  Sep  2 13:46:01.109: INFO: observed Service test-service-h8fmm in namespace services-556 with labels: map[test-service-static:true]
  Sep  2 13:46:01.109: INFO: Found Service test-service-h8fmm in namespace services-556 with labels: map[test-service:patched test-service-static:true]
  Sep  2 13:46:01.109: INFO: Service test-service-h8fmm patched
  STEP: deleting the service @ 09/02/23 13:46:01.109
  STEP: watching for the Service to be deleted @ 09/02/23 13:46:01.122
  Sep  2 13:46:01.125: INFO: Observed event: ADDED
  Sep  2 13:46:01.125: INFO: Observed event: MODIFIED
  Sep  2 13:46:01.125: INFO: Observed event: MODIFIED
  Sep  2 13:46:01.125: INFO: Observed event: MODIFIED
  Sep  2 13:46:01.125: INFO: Found Service test-service-h8fmm in namespace services-556 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep  2 13:46:01.125: INFO: Service test-service-h8fmm deleted
  Sep  2 13:46:01.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-556" for this suite. @ 09/02/23 13:46:01.13
• [0.115 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/02/23 13:46:01.138
  Sep  2 13:46:01.138: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:46:01.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:01.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:01.16
  STEP: creating the pod @ 09/02/23 13:46:01.164
  Sep  2 13:46:01.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 create -f -'
  Sep  2 13:46:01.380: INFO: stderr: ""
  Sep  2 13:46:01.380: INFO: stdout: "pod/pause created\n"
  E0902 13:46:01.928673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:02.928701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/02/23 13:46:03.388
  Sep  2 13:46:03.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 label pods pause testing-label=testing-label-value'
  Sep  2 13:46:03.461: INFO: stderr: ""
  Sep  2 13:46:03.461: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/02/23 13:46:03.461
  Sep  2 13:46:03.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 get pod pause -L testing-label'
  Sep  2 13:46:03.543: INFO: stderr: ""
  Sep  2 13:46:03.543: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/02/23 13:46:03.543
  Sep  2 13:46:03.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 label pods pause testing-label-'
  Sep  2 13:46:03.635: INFO: stderr: ""
  Sep  2 13:46:03.635: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/02/23 13:46:03.635
  Sep  2 13:46:03.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 get pod pause -L testing-label'
  Sep  2 13:46:03.699: INFO: stderr: ""
  Sep  2 13:46:03.699: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/02/23 13:46:03.699
  Sep  2 13:46:03.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 delete --grace-period=0 --force -f -'
  Sep  2 13:46:03.771: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  2 13:46:03.771: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep  2 13:46:03.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 get rc,svc -l name=pause --no-headers'
  Sep  2 13:46:03.839: INFO: stderr: "No resources found in kubectl-4426 namespace.\n"
  Sep  2 13:46:03.839: INFO: stdout: ""
  Sep  2 13:46:03.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-4426 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep  2 13:46:03.899: INFO: stderr: ""
  Sep  2 13:46:03.899: INFO: stdout: ""
  Sep  2 13:46:03.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4426" for this suite. @ 09/02/23 13:46:03.904
• [2.775 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/02/23 13:46:03.913
  Sep  2 13:46:03.913: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:46:03.914
  E0902 13:46:03.929293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:03.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:03.935
  STEP: Creating projection with secret that has name projected-secret-test-map-bcde1a67-ee29-452d-ac64-6fbc39550884 @ 09/02/23 13:46:03.939
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:46:03.943
  E0902 13:46:04.929570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:05.930278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:06.930370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:07.930457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:46:07.966
  Sep  2 13:46:07.970: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-secrets-6baa2dfa-676c-4609-98fe-62ec563279e7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:46:07.977
  Sep  2 13:46:07.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8546" for this suite. @ 09/02/23 13:46:07.999
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/02/23 13:46:08.008
  Sep  2 13:46:08.008: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:46:08.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:08.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:08.027
  STEP: Creating configMap with name projected-configmap-test-volume-a293f7d8-9c09-40dd-bcaf-e65e0a88cfc4 @ 09/02/23 13:46:08.031
  STEP: Creating a pod to test consume configMaps @ 09/02/23 13:46:08.035
  E0902 13:46:08.930710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:09.931170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:10.931259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:11.931349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:46:12.059
  Sep  2 13:46:12.063: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-projected-configmaps-bcc660af-78e4-422f-a6a7-556efeac6384 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:46:12.071
  Sep  2 13:46:12.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-370" for this suite. @ 09/02/23 13:46:12.093
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/02/23 13:46:12.102
  Sep  2 13:46:12.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:46:12.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:12.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:12.123
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:46:12.127
  E0902 13:46:12.931439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:13.931711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:14.932788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:15.932867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:46:16.152
  Sep  2 13:46:16.156: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-e24f66e8-5a8b-4aa9-97d2-59ccdf179eb8 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:46:16.162
  Sep  2 13:46:16.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3986" for this suite. @ 09/02/23 13:46:16.185
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/02/23 13:46:16.196
  Sep  2 13:46:16.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:46:16.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:16.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:16.225
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:46:16.232
  E0902 13:46:16.932976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:17.933186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:18.933295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:19.933625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:46:20.258
  Sep  2 13:46:20.262: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-bc65083a-c633-4c85-b201-122c556d5277 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:46:20.269
  Sep  2 13:46:20.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2735" for this suite. @ 09/02/23 13:46:20.289
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/02/23 13:46:20.298
  Sep  2 13:46:20.298: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:46:20.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:20.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:20.321
  STEP: Creating a pod to test downward API volume plugin @ 09/02/23 13:46:20.325
  E0902 13:46:20.934389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:21.934574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:22.934844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:23.934905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:46:24.352
  Sep  2 13:46:24.356: INFO: Trying to get logs from node ip-172-31-7-35 pod downwardapi-volume-bf28cabb-9d8e-4216-a96d-981568ab3f83 container client-container: <nil>
  STEP: delete the pod @ 09/02/23 13:46:24.365
  Sep  2 13:46:24.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-567" for this suite. @ 09/02/23 13:46:24.388
• [4.098 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/02/23 13:46:24.396
  Sep  2 13:46:24.396: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/02/23 13:46:24.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:24.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:24.419
  STEP: creating a target pod @ 09/02/23 13:46:24.423
  E0902 13:46:24.935719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:25.936591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/02/23 13:46:26.444
  E0902 13:46:26.937441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:27.937585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:28.937672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:29.937893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/02/23 13:46:30.467
  Sep  2 13:46:30.467: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-698 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:46:30.467: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:46:30.467: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:46:30.468: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-698/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep  2 13:46:30.549: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/02/23 13:46:30.558
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/02/23 13:46:30.562
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/02/23 13:46:30.576
  Sep  2 13:46:30.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-698" for this suite. @ 09/02/23 13:46:30.584
• [6.199 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/02/23 13:46:30.595
  Sep  2 13:46:30.595: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/02/23 13:46:30.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:30.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:30.613
  Sep  2 13:46:30.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:46:30.938524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:31.938679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:32.939542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:46:33.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3287" for this suite. @ 09/02/23 13:46:33.835
• [3.249 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/02/23 13:46:33.845
  Sep  2 13:46:33.845: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pod-network-test @ 09/02/23 13:46:33.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:33.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:33.867
  STEP: Performing setup for networking test in namespace pod-network-test-9345 @ 09/02/23 13:46:33.871
  STEP: creating a selector @ 09/02/23 13:46:33.871
  STEP: Creating the service pods in kubernetes @ 09/02/23 13:46:33.871
  Sep  2 13:46:33.871: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0902 13:46:33.940236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:34.940535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:35.941500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:36.941611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:37.942333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:38.942443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:39.943252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:40.943627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:41.944197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:42.944328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:43.944894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:44.945893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:45.945904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/02/23 13:46:45.956
  E0902 13:46:46.946691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:47.946783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:46:47.973: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  2 13:46:47.973: INFO: Breadth first check of 192.168.240.233 on host 172.31.26.21...
  Sep  2 13:46:47.977: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.141.12:9080/dial?request=hostname&protocol=http&host=192.168.240.233&port=8083&tries=1'] Namespace:pod-network-test-9345 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:46:47.977: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:46:47.978: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:46:47.978: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9345/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.141.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.240.233%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  2 13:46:48.056: INFO: Waiting for responses: map[]
  Sep  2 13:46:48.056: INFO: reached 192.168.240.233 after 0/1 tries
  Sep  2 13:46:48.056: INFO: Breadth first check of 192.168.167.112 on host 172.31.35.65...
  Sep  2 13:46:48.060: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.141.12:9080/dial?request=hostname&protocol=http&host=192.168.167.112&port=8083&tries=1'] Namespace:pod-network-test-9345 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:46:48.060: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:46:48.060: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:46:48.061: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9345/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.141.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.167.112%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  2 13:46:48.147: INFO: Waiting for responses: map[]
  Sep  2 13:46:48.147: INFO: reached 192.168.167.112 after 0/1 tries
  Sep  2 13:46:48.147: INFO: Breadth first check of 192.168.141.43 on host 172.31.7.35...
  Sep  2 13:46:48.151: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.141.12:9080/dial?request=hostname&protocol=http&host=192.168.141.43&port=8083&tries=1'] Namespace:pod-network-test-9345 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  2 13:46:48.152: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  Sep  2 13:46:48.152: INFO: ExecWithOptions: Clientset creation
  Sep  2 13:46:48.152: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9345/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.141.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.141.43%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  2 13:46:48.238: INFO: Waiting for responses: map[]
  Sep  2 13:46:48.238: INFO: reached 192.168.141.43 after 0/1 tries
  Sep  2 13:46:48.238: INFO: Going to retry 0 out of 3 pods....
  Sep  2 13:46:48.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9345" for this suite. @ 09/02/23 13:46:48.242
• [14.405 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/02/23 13:46:48.251
  Sep  2 13:46:48.251: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/02/23 13:46:48.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:48.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:48.274
  Sep  2 13:46:48.277: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:46:48.947316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/02/23 13:46:49.612
  Sep  2 13:46:49.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-7713 --namespace=crd-publish-openapi-7713 create -f -'
  E0902 13:46:49.947892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:46:50.108: INFO: stderr: ""
  Sep  2 13:46:50.109: INFO: stdout: "e2e-test-crd-publish-openapi-9464-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep  2 13:46:50.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-7713 --namespace=crd-publish-openapi-7713 delete e2e-test-crd-publish-openapi-9464-crds test-cr'
  Sep  2 13:46:50.193: INFO: stderr: ""
  Sep  2 13:46:50.193: INFO: stdout: "e2e-test-crd-publish-openapi-9464-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep  2 13:46:50.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-7713 --namespace=crd-publish-openapi-7713 apply -f -'
  Sep  2 13:46:50.644: INFO: stderr: ""
  Sep  2 13:46:50.644: INFO: stdout: "e2e-test-crd-publish-openapi-9464-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep  2 13:46:50.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-7713 --namespace=crd-publish-openapi-7713 delete e2e-test-crd-publish-openapi-9464-crds test-cr'
  Sep  2 13:46:50.713: INFO: stderr: ""
  Sep  2 13:46:50.713: INFO: stdout: "e2e-test-crd-publish-openapi-9464-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/02/23 13:46:50.713
  Sep  2 13:46:50.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=crd-publish-openapi-7713 explain e2e-test-crd-publish-openapi-9464-crds'
  Sep  2 13:46:50.842: INFO: stderr: ""
  Sep  2 13:46:50.842: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9464-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0902 13:46:50.948364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:51.948785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:46:52.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7713" for this suite. @ 09/02/23 13:46:52.156
• [3.913 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/02/23 13:46:52.165
  Sep  2 13:46:52.165: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:46:52.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:52.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:52.188
  STEP: Creating secret with name projected-secret-test-e47ffa84-e28a-41f2-a60f-ce88db285680 @ 09/02/23 13:46:52.195
  STEP: Creating a pod to test consume secrets @ 09/02/23 13:46:52.206
  E0902 13:46:52.948938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:53.949000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:54.949085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:55.949583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:46:56.229
  Sep  2 13:46:56.233: INFO: Trying to get logs from node ip-172-31-35-65 pod pod-projected-secrets-9760dd63-2952-45db-9616-3be238d96418 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:46:56.249
  Sep  2 13:46:56.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5188" for this suite. @ 09/02/23 13:46:56.272
• [4.118 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/02/23 13:46:56.283
  Sep  2 13:46:56.283: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename var-expansion @ 09/02/23 13:46:56.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:46:56.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:46:56.305
  STEP: Creating a pod to test substitution in volume subpath @ 09/02/23 13:46:56.309
  E0902 13:46:56.949759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:57.949978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:58.950778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:46:59.951133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:47:00.334
  Sep  2 13:47:00.338: INFO: Trying to get logs from node ip-172-31-35-65 pod var-expansion-5af799ae-4e09-4c4f-a2a0-522164f8c7a8 container dapi-container: <nil>
  STEP: delete the pod @ 09/02/23 13:47:00.346
  Sep  2 13:47:00.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8227" for this suite. @ 09/02/23 13:47:00.365
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/02/23 13:47:00.374
  Sep  2 13:47:00.374: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename resourcequota @ 09/02/23 13:47:00.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:47:00.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:47:00.398
  STEP: Creating a ResourceQuota @ 09/02/23 13:47:00.402
  STEP: Getting a ResourceQuota @ 09/02/23 13:47:00.407
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/02/23 13:47:00.411
  STEP: Patching the ResourceQuota @ 09/02/23 13:47:00.415
  STEP: Deleting a Collection of ResourceQuotas @ 09/02/23 13:47:00.421
  STEP: Verifying the deleted ResourceQuota @ 09/02/23 13:47:00.43
  Sep  2 13:47:00.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2506" for this suite. @ 09/02/23 13:47:00.438
• [0.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/02/23 13:47:00.445
  Sep  2 13:47:00.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename init-container @ 09/02/23 13:47:00.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:47:00.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:47:00.472
  STEP: creating the pod @ 09/02/23 13:47:00.476
  Sep  2 13:47:00.476: INFO: PodSpec: initContainers in spec.initContainers
  E0902 13:47:00.951246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:01.952104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:02.953110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:03.953590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:47:04.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3651" for this suite. @ 09/02/23 13:47:04.282
• [3.845 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/02/23 13:47:04.295
  Sep  2 13:47:04.295: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename disruption @ 09/02/23 13:47:04.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:47:04.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:47:04.319
  STEP: Creating a kubernetes client @ 09/02/23 13:47:04.33
  Sep  2 13:47:04.330: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename disruption-2 @ 09/02/23 13:47:04.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:47:04.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:47:04.359
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:47:04.371
  E0902 13:47:04.953698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:05.953804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:47:06.384
  E0902 13:47:06.954144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:07.954392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/02/23 13:47:08.398
  E0902 13:47:08.954470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:09.954839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/02/23 13:47:10.408
  STEP: listing a collection of PDBs in namespace disruption-378 @ 09/02/23 13:47:10.412
  STEP: deleting a collection of PDBs @ 09/02/23 13:47:10.416
  STEP: Waiting for the PDB collection to be deleted @ 09/02/23 13:47:10.43
  Sep  2 13:47:10.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:47:10.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6998" for this suite. @ 09/02/23 13:47:10.441
  STEP: Destroying namespace "disruption-378" for this suite. @ 09/02/23 13:47:10.449
• [6.162 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/02/23 13:47:10.457
  Sep  2 13:47:10.457: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename crd-watch @ 09/02/23 13:47:10.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:47:10.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:47:10.478
  Sep  2 13:47:10.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  E0902 13:47:10.954913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:11.955000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:12.955164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/02/23 13:47:13.029
  Sep  2 13:47:13.034: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-02T13:47:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-02T13:47:13Z]] name:name1 resourceVersion:42655 uid:ec458b20-51b4-4c78-bea8-9a651412295b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 13:47:13.955878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:14.956104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:15.956537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:16.957586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:17.957678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:18.957773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:19.957960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:20.958052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:21.958237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:22.959224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/02/23 13:47:23.035
  Sep  2 13:47:23.041: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-02T13:47:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-02T13:47:23Z]] name:name2 resourceVersion:42697 uid:23879bef-4f86-43b6-b154-523044fe5e91] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 13:47:23.959313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:24.959735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:25.959815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:26.959914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:27.960099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:28.960276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:29.960502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:30.960591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:31.961626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:32.961721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/02/23 13:47:33.041
  Sep  2 13:47:33.049: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-02T13:47:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-02T13:47:33Z]] name:name1 resourceVersion:42717 uid:ec458b20-51b4-4c78-bea8-9a651412295b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 13:47:33.961812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:34.961897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:35.962170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:36.962338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:37.962430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:38.962611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:39.963055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:40.963226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:41.963312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:42.963558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/02/23 13:47:43.049
  Sep  2 13:47:43.056: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-02T13:47:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-02T13:47:43Z]] name:name2 resourceVersion:42736 uid:23879bef-4f86-43b6-b154-523044fe5e91] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 13:47:43.963666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:44.964078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:45.964310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:46.964511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:47.964589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:48.965566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:49.965914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:50.966580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:51.966672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:52.966861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/02/23 13:47:53.057
  Sep  2 13:47:53.065: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-02T13:47:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-02T13:47:33Z]] name:name1 resourceVersion:42755 uid:ec458b20-51b4-4c78-bea8-9a651412295b] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 13:47:53.967659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:54.967942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:55.968031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:56.968198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:57.968367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:58.968507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:47:59.968592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:00.968696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:01.969560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:02.969734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/02/23 13:48:03.065
  Sep  2 13:48:03.074: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-02T13:47:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-02T13:47:43Z]] name:name2 resourceVersion:42775 uid:23879bef-4f86-43b6-b154-523044fe5e91] num:map[num1:9223372036854775807 num2:1000000]]}
  E0902 13:48:03.969820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:04.970105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:05.970992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:06.971185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:07.971884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:08.972078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:09.972505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:10.972588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:11.972684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:12.973570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:13.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9988" for this suite. @ 09/02/23 13:48:13.595
• [63.145 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/02/23 13:48:13.602
  Sep  2 13:48:13.602: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename containers @ 09/02/23 13:48:13.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:13.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:13.633
  STEP: Creating a pod to test override command @ 09/02/23 13:48:13.636
  E0902 13:48:13.974174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:14.974681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:15.975597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:16.975739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:48:17.659
  Sep  2 13:48:17.664: INFO: Trying to get logs from node ip-172-31-7-35 pod client-containers-b8a43198-12e7-409f-bd32-9b85178349b8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:48:17.682
  Sep  2 13:48:17.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1471" for this suite. @ 09/02/23 13:48:17.699
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/02/23 13:48:17.708
  Sep  2 13:48:17.708: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename projected @ 09/02/23 13:48:17.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:17.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:17.728
  STEP: Creating configMap with name configmap-projected-all-test-volume-fed49057-76b3-4f2d-9fe3-92dabc2c6263 @ 09/02/23 13:48:17.732
  STEP: Creating secret with name secret-projected-all-test-volume-442bcce0-d75d-42b2-a076-a19bdac56a5e @ 09/02/23 13:48:17.738
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/02/23 13:48:17.743
  E0902 13:48:17.976740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:18.977571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:19.978657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:20.978747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:48:21.768
  Sep  2 13:48:21.772: INFO: Trying to get logs from node ip-172-31-7-35 pod projected-volume-1f72b748-11ef-42c3-b0bb-0e5cf48d3325 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/02/23 13:48:21.78
  Sep  2 13:48:21.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2363" for this suite. @ 09/02/23 13:48:21.8
• [4.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/02/23 13:48:21.806
  Sep  2 13:48:21.806: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 13:48:21.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:21.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:21.828
  STEP: Creating simple DaemonSet "daemon-set" @ 09/02/23 13:48:21.855
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/23 13:48:21.862
  Sep  2 13:48:21.868: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:48:21.868: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:48:21.873: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:48:21.873: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:48:21.978796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:22.878: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:48:22.878: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:48:22.881: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:48:22.881: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:48:22.979064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:23.878: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:48:23.878: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:48:23.883: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:48:23.883: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/02/23 13:48:23.886
  Sep  2 13:48:23.890: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/02/23 13:48:23.89
  Sep  2 13:48:23.901: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/02/23 13:48:23.901
  Sep  2 13:48:23.903: INFO: Observed &DaemonSet event: ADDED
  Sep  2 13:48:23.903: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.904: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.904: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.904: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.904: INFO: Found daemon set daemon-set in namespace daemonsets-2067 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  2 13:48:23.904: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/02/23 13:48:23.904
  STEP: watching for the daemon set status to be patched @ 09/02/23 13:48:23.91
  Sep  2 13:48:23.913: INFO: Observed &DaemonSet event: ADDED
  Sep  2 13:48:23.913: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.913: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.913: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.914: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.914: INFO: Observed daemon set daemon-set in namespace daemonsets-2067 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  2 13:48:23.914: INFO: Observed &DaemonSet event: MODIFIED
  Sep  2 13:48:23.914: INFO: Found daemon set daemon-set in namespace daemonsets-2067 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep  2 13:48:23.914: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/23 13:48:23.918
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2067, will wait for the garbage collector to delete the pods @ 09/02/23 13:48:23.918
  E0902 13:48:23.979402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:23.980: INFO: Deleting DaemonSet.extensions daemon-set took: 7.146173ms
  Sep  2 13:48:24.081: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.000448ms
  E0902 13:48:24.979739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:25.980143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:26.584: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:48:26.585: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  2 13:48:26.588: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42972"},"items":null}

  Sep  2 13:48:26.592: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42972"},"items":null}

  Sep  2 13:48:26.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2067" for this suite. @ 09/02/23 13:48:26.612
• [4.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/02/23 13:48:26.622
  Sep  2 13:48:26.622: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename namespaces @ 09/02/23 13:48:26.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:26.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:26.644
  STEP: Read namespace status @ 09/02/23 13:48:26.648
  Sep  2 13:48:26.652: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/02/23 13:48:26.652
  Sep  2 13:48:26.658: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/02/23 13:48:26.658
  Sep  2 13:48:26.668: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep  2 13:48:26.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5025" for this suite. @ 09/02/23 13:48:26.677
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/02/23 13:48:26.691
  Sep  2 13:48:26.691: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename deployment @ 09/02/23 13:48:26.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:26.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:26.709
  Sep  2 13:48:26.724: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0902 13:48:26.980431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:27.980510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:28.980618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:29.981579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:30.981669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:31.728: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/02/23 13:48:31.728
  Sep  2 13:48:31.728: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0902 13:48:31.982499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:32.982618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:33.734: INFO: Creating deployment "test-rollover-deployment"
  Sep  2 13:48:33.744: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0902 13:48:33.983149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:34.983563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:35.753: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep  2 13:48:35.760: INFO: Ensure that both replica sets have 1 created replica
  Sep  2 13:48:35.768: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep  2 13:48:35.778: INFO: Updating deployment test-rollover-deployment
  Sep  2 13:48:35.778: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0902 13:48:35.983663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:36.983857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:37.788: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep  2 13:48:37.796: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep  2 13:48:37.803: INFO: all replica sets need to contain the pod-template-hash label
  Sep  2 13:48:37.803: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:48:37.984362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:38.984531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:39.812: INFO: all replica sets need to contain the pod-template-hash label
  Sep  2 13:48:39.812: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:48:39.985193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:40.985388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:41.813: INFO: all replica sets need to contain the pod-template-hash label
  Sep  2 13:48:41.813: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:48:41.986206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:42.986449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:43.812: INFO: all replica sets need to contain the pod-template-hash label
  Sep  2 13:48:43.812: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:48:43.987299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:44.987530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:45.811: INFO: all replica sets need to contain the pod-template-hash label
  Sep  2 13:48:45.812: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 2, 13, 48, 37, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 2, 13, 48, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0902 13:48:45.988235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:46.988268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:47.811: INFO: 
  Sep  2 13:48:47.811: INFO: Ensure that both old replica sets have no replicas
  Sep  2 13:48:47.822: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2c2c0ab-db10-4445-a3e6-7998b6a4dfc1",
      ResourceVersion: (string) (len=5) "43155",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259313,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259327,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259327,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259313,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  2 13:48:47.830: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8411ab6f-c388-48c7-853b-149972d87a86",
      ResourceVersion: (string) (len=5) "43145",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d2c2c0ab-db10-4445-a3e6-7998b6a4dfc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 32 63 32 63 30  61 62 2d 64 62 31 30 2d  |\"d2c2c0ab-db10-|
              00000120  34 34 34 35 2d 61 33 65  36 2d 37 39 39 38 62 36  |4445-a3e6-7998b6|
              00000130  61 34 64 66 63 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a4dfc1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259327,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:48:47.831: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep  2 13:48:47.832: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04f79d41-6580-4eea-8eb4-4b15b8e6527e",
      ResourceVersion: (string) (len=5) "43154",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259306,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d2c2c0ab-db10-4445-a3e6-7998b6a4dfc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259327,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 32 63 32 63 30 61 62  2d 64 62 31 30 2d 34 34  |d2c2c0ab-db10-44|
              000000c0  34 35 2d 61 33 65 36 2d  37 39 39 38 62 36 61 34  |45-a3e6-7998b6a4|
              000000d0  64 66 63 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |dfc1\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259327,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:48:47.834: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28ca7102-4483-4fd2-9e9e-8fabdca63ff7",
      ResourceVersion: (string) (len=5) "43104",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259313,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d2c2c0ab-db10-4445-a3e6-7998b6a4dfc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 32 63 32 63 30  61 62 2d 64 62 31 30 2d  |\"d2c2c0ab-db10-|
              00000120  34 34 34 35 2d 61 33 65  36 2d 37 39 39 38 62 36  |4445-a3e6-7998b6|
              00000130  61 34 64 66 63 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a4dfc1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  2 13:48:47.840: INFO: Pod "test-rollover-deployment-5d484bf7f9-rnwx5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-rnwx5",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-6470",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b83723b-8a06-4259-a073-203de464dc12",
      ResourceVersion: (string) (len=5) "43122",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "8411ab6f-c388-48c7-853b-149972d87a86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  31 31 61 62 36 66 2d 63  |d\":\"8411ab6f-c|
              00000090  33 38 38 2d 34 38 63 37  2d 38 35 33 62 2d 31 34  |388-48c7-853b-14|
              000000a0  39 39 37 32 64 38 37 61  38 36 5c 22 7d 22 3a 7b  |9972d87a86\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 34 31 2e 36 30 5c 22  |192.168.141.60\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ndz4d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ndz4d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-7-35",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829259315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.7.35",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.141.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.141.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829259315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829259316,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://30881994d2a85c1b39a51143253318ec616460761886bd155e7bad9b2381ec7d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  2 13:48:47.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6470" for this suite. @ 09/02/23 13:48:47.849
• [21.164 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/02/23 13:48:47.856
  Sep  2 13:48:47.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename services @ 09/02/23 13:48:47.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:47.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:47.878
  STEP: creating service in namespace services-6513 @ 09/02/23 13:48:47.885
  STEP: creating service affinity-nodeport-transition in namespace services-6513 @ 09/02/23 13:48:47.885
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6513 @ 09/02/23 13:48:47.901
  I0902 13:48:47.908493      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6513, replica count: 3
  E0902 13:48:47.989247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:48.989370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:49.990121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0902 13:48:50.960073      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  2 13:48:50.973: INFO: Creating new exec pod
  E0902 13:48:50.990455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:51.991506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:52.993181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:53.993319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:54.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6513 exec execpod-affinitywwgdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep  2 13:48:54.143: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep  2 13:48:54.143: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:48:54.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6513 exec execpod-affinitywwgdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.178 80'
  Sep  2 13:48:54.281: INFO: stderr: "+ nc -v -t -w 2 10.152.183.178 80\n+ echo hostName\nConnection to 10.152.183.178 80 port [tcp/http] succeeded!\n"
  Sep  2 13:48:54.281: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:48:54.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6513 exec execpod-affinitywwgdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.65 31251'
  Sep  2 13:48:54.431: INFO: stderr: "+ nc -v -t -w 2 172.31.35.65 31251\n+ echo hostName\nConnection to 172.31.35.65 31251 port [tcp/*] succeeded!\n"
  Sep  2 13:48:54.431: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:48:54.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6513 exec execpod-affinitywwgdz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.21 31251'
  Sep  2 13:48:54.577: INFO: stderr: "+ nc -v -t -w 2 172.31.26.21 31251\n+ echo hostName\nConnection to 172.31.26.21 31251 port [tcp/*] succeeded!\n"
  Sep  2 13:48:54.577: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  2 13:48:54.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6513 exec execpod-affinitywwgdz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.21:31251/ ; done'
  Sep  2 13:48:54.836: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n"
  Sep  2 13:48:54.836: INFO: stdout: "\naffinity-nodeport-transition-8r9hp\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-8r9hp\naffinity-nodeport-transition-8r9hp\naffinity-nodeport-transition-8r9hp\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-f46kt\naffinity-nodeport-transition-f46kt\naffinity-nodeport-transition-8r9hp\naffinity-nodeport-transition-f46kt\naffinity-nodeport-transition-8r9hp\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-f46kt\naffinity-nodeport-transition-wsbt9"
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-8r9hp
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-8r9hp
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-8r9hp
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-8r9hp
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-f46kt
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-f46kt
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-8r9hp
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-f46kt
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-8r9hp
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-f46kt
  Sep  2 13:48:54.836: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:54.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=services-6513 exec execpod-affinitywwgdz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.21:31251/ ; done'
  E0902 13:48:54.993740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:48:55.091: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.21:31251/\n"
  Sep  2 13:48:55.091: INFO: stdout: "\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9\naffinity-nodeport-transition-wsbt9"
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Received response from host: affinity-nodeport-transition-wsbt9
  Sep  2 13:48:55.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  2 13:48:55.096: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6513, will wait for the garbage collector to delete the pods @ 09/02/23 13:48:55.11
  Sep  2 13:48:55.171: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.307078ms
  Sep  2 13:48:55.272: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.890297ms
  E0902 13:48:55.994353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:56.994443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:57.995285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-6513" for this suite. @ 09/02/23 13:48:58.595
• [10.747 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/02/23 13:48:58.604
  Sep  2 13:48:58.604: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/02/23 13:48:58.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:48:58.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:48:58.625
  STEP: create the container to handle the HTTPGet hook request. @ 09/02/23 13:48:58.634
  E0902 13:48:58.996017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:48:59.996114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/02/23 13:49:00.656
  E0902 13:49:00.997049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:01.997571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/02/23 13:49:02.678
  E0902 13:49:02.998030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:03.998285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/02/23 13:49:04.695
  Sep  2 13:49:04.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7690" for this suite. @ 09/02/23 13:49:04.717
• [6.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/02/23 13:49:04.726
  Sep  2 13:49:04.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:49:04.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:04.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:04.747
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/02/23 13:49:04.752
  E0902 13:49:04.999304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:05.999393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:07.000358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:08.000431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:49:08.772
  Sep  2 13:49:08.776: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-9919a70e-e78a-4618-a672-223d02a69540 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:49:08.784
  Sep  2 13:49:08.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7184" for this suite. @ 09/02/23 13:49:08.805
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/02/23 13:49:08.813
  Sep  2 13:49:08.813: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename emptydir @ 09/02/23 13:49:08.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:08.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:08.834
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/02/23 13:49:08.837
  E0902 13:49:09.000745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:10.000817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:11.001109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:12.001167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:49:12.86
  Sep  2 13:49:12.864: INFO: Trying to get logs from node ip-172-31-7-35 pod pod-53d24193-a9f0-4f21-abe9-dc9264db4861 container test-container: <nil>
  STEP: delete the pod @ 09/02/23 13:49:12.871
  Sep  2 13:49:12.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7977" for this suite. @ 09/02/23 13:49:12.889
• [4.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/02/23 13:49:12.896
  Sep  2 13:49:12.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:49:12.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:12.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:12.917
  STEP: Setting up server cert @ 09/02/23 13:49:12.943
  E0902 13:49:13.001507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:49:13.109
  STEP: Deploying the webhook pod @ 09/02/23 13:49:13.117
  STEP: Wait for the deployment to be ready @ 09/02/23 13:49:13.13
  Sep  2 13:49:13.138: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0902 13:49:14.002076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:15.002165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/23 13:49:15.15
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:49:15.16
  E0902 13:49:16.002256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:49:16.161: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/02/23 13:49:16.243
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/23 13:49:16.29
  STEP: Deleting the collection of validation webhooks @ 09/02/23 13:49:16.33
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/02/23 13:49:16.38
  Sep  2 13:49:16.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7927" for this suite. @ 09/02/23 13:49:16.445
  STEP: Destroying namespace "webhook-markers-3729" for this suite. @ 09/02/23 13:49:16.451
• [3.562 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/02/23 13:49:16.459
  Sep  2 13:49:16.459: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl-logs @ 09/02/23 13:49:16.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:16.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:16.48
  STEP: creating an pod @ 09/02/23 13:49:16.485
  Sep  2 13:49:16.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep  2 13:49:16.558: INFO: stderr: ""
  Sep  2 13:49:16.558: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/02/23 13:49:16.558
  Sep  2 13:49:16.558: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0902 13:49:17.002345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:18.002440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:49:18.566: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/02/23 13:49:18.566
  Sep  2 13:49:18.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 logs logs-generator logs-generator'
  Sep  2 13:49:18.633: INFO: stderr: ""
  Sep  2 13:49:18.633: INFO: stdout: "I0902 13:49:17.297126       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dmt 424\nI0902 13:49:17.497206       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/r5x 449\nI0902 13:49:17.697777       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/kgbv 421\nI0902 13:49:17.897926       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/wfs 217\nI0902 13:49:18.097156       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/zqb9 212\nI0902 13:49:18.297448       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/g4gt 225\nI0902 13:49:18.497740       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/crvc 565\n"
  STEP: limiting log lines @ 09/02/23 13:49:18.633
  Sep  2 13:49:18.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 logs logs-generator logs-generator --tail=1'
  Sep  2 13:49:18.711: INFO: stderr: ""
  Sep  2 13:49:18.711: INFO: stdout: "I0902 13:49:18.698065       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/z5t 342\n"
  Sep  2 13:49:18.711: INFO: got output "I0902 13:49:18.698065       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/z5t 342\n"
  STEP: limiting log bytes @ 09/02/23 13:49:18.711
  Sep  2 13:49:18.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 logs logs-generator logs-generator --limit-bytes=1'
  Sep  2 13:49:18.780: INFO: stderr: ""
  Sep  2 13:49:18.780: INFO: stdout: "I"
  Sep  2 13:49:18.780: INFO: got output "I"
  STEP: exposing timestamps @ 09/02/23 13:49:18.78
  Sep  2 13:49:18.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep  2 13:49:18.849: INFO: stderr: ""
  Sep  2 13:49:18.849: INFO: stdout: "2023-09-02T13:49:18.700750454Z I0902 13:49:18.698065       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/z5t 342\n"
  Sep  2 13:49:18.849: INFO: got output "2023-09-02T13:49:18.700750454Z I0902 13:49:18.698065       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/z5t 342\n"
  STEP: restricting to a time range @ 09/02/23 13:49:18.849
  E0902 13:49:19.002805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:20.003255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:21.004323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:49:21.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 logs logs-generator logs-generator --since=1s'
  Sep  2 13:49:21.417: INFO: stderr: ""
  Sep  2 13:49:21.417: INFO: stdout: "I0902 13:49:20.497302       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/hq8c 314\nI0902 13:49:20.697590       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/mbtm 345\nI0902 13:49:20.897884       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/hs8 397\nI0902 13:49:21.098146       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/cdr 412\nI0902 13:49:21.297451       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/rn9 330\n"
  Sep  2 13:49:21.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 logs logs-generator logs-generator --since=24h'
  Sep  2 13:49:21.486: INFO: stderr: ""
  Sep  2 13:49:21.486: INFO: stdout: "I0902 13:49:17.297126       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dmt 424\nI0902 13:49:17.497206       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/r5x 449\nI0902 13:49:17.697777       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/kgbv 421\nI0902 13:49:17.897926       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/wfs 217\nI0902 13:49:18.097156       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/zqb9 212\nI0902 13:49:18.297448       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/g4gt 225\nI0902 13:49:18.497740       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/crvc 565\nI0902 13:49:18.698065       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/z5t 342\nI0902 13:49:18.897231       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/4q98 411\nI0902 13:49:19.097511       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/78p 321\nI0902 13:49:19.297804       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/b9dn 271\nI0902 13:49:19.498132       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/ffvl 478\nI0902 13:49:19.697423       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/6zz 559\nI0902 13:49:19.897717       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/pxz 557\nI0902 13:49:20.098015       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/mr6p 574\nI0902 13:49:20.297172       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/24m 307\nI0902 13:49:20.497302       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/hq8c 314\nI0902 13:49:20.697590       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/mbtm 345\nI0902 13:49:20.897884       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/hs8 397\nI0902 13:49:21.098146       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/cdr 412\nI0902 13:49:21.297451       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/rn9 330\n"
  Sep  2 13:49:21.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-logs-5850 delete pod logs-generator'
  E0902 13:49:22.004423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:49:22.595: INFO: stderr: ""
  Sep  2 13:49:22.595: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep  2 13:49:22.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5850" for this suite. @ 09/02/23 13:49:22.599
• [6.148 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/02/23 13:49:22.607
  Sep  2 13:49:22.607: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename kubectl @ 09/02/23 13:49:22.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:22.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:22.628
  STEP: Starting the proxy @ 09/02/23 13:49:22.632
  Sep  2 13:49:22.632: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4223657189 --namespace=kubectl-7409 proxy --unix-socket=/tmp/kubectl-proxy-unix2976590448/test'
  STEP: retrieving proxy /api/ output @ 09/02/23 13:49:22.675
  Sep  2 13:49:22.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7409" for this suite. @ 09/02/23 13:49:22.681
• [0.081 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/02/23 13:49:22.688
  Sep  2 13:49:22.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename job @ 09/02/23 13:49:22.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:22.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:22.709
  STEP: Creating a job @ 09/02/23 13:49:22.713
  STEP: Ensuring active pods == parallelism @ 09/02/23 13:49:22.718
  E0902 13:49:23.004513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:24.004722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/02/23 13:49:24.723
  STEP: deleting Job.batch foo in namespace job-7493, will wait for the garbage collector to delete the pods @ 09/02/23 13:49:24.723
  Sep  2 13:49:24.785: INFO: Deleting Job.batch foo took: 6.228613ms
  Sep  2 13:49:24.885: INFO: Terminating Job.batch foo pods took: 100.091172ms
  E0902 13:49:25.005474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:26.006435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:27.006464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:28.006501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:29.006573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:30.006818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:31.007695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:32.007835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:33.008890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:34.009882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:35.010194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:36.011236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:37.011289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:38.011303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:39.011326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:40.011607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:41.012614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:42.013554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:43.013712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:44.013789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:45.013950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:46.014993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:47.016007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:48.017023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:49.017942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:50.018203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:51.018385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:52.018605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:53.018656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:54.019706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:55.020301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:56.020380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:57.020819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/02/23 13:49:57.685
  Sep  2 13:49:57.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7493" for this suite. @ 09/02/23 13:49:57.695
• [35.012 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/02/23 13:49:57.702
  Sep  2 13:49:57.702: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename job @ 09/02/23 13:49:57.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:49:57.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:49:57.728
  STEP: Creating a job @ 09/02/23 13:49:57.733
  STEP: Ensuring job reaches completions @ 09/02/23 13:49:57.74
  E0902 13:49:58.021460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:49:59.021842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:00.021932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:01.022174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:02.022245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:03.022338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:04.022804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:05.023117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:06.023202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:07.023273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:07.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7567" for this suite. @ 09/02/23 13:50:07.75
• [10.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/02/23 13:50:07.769
  Sep  2 13:50:07.769: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename containers @ 09/02/23 13:50:07.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:07.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:07.792
  STEP: Creating a pod to test override arguments @ 09/02/23 13:50:07.796
  E0902 13:50:08.023836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:09.023913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:10.024645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:11.024738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/02/23 13:50:11.818
  Sep  2 13:50:11.822: INFO: Trying to get logs from node ip-172-31-7-35 pod client-containers-435a37e8-39a8-4214-bd53-6477eeae0d0c container agnhost-container: <nil>
  STEP: delete the pod @ 09/02/23 13:50:11.828
  Sep  2 13:50:11.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1194" for this suite. @ 09/02/23 13:50:11.849
• [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/02/23 13:50:11.857
  Sep  2 13:50:11.857: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename webhook @ 09/02/23 13:50:11.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:11.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:11.878
  STEP: Setting up server cert @ 09/02/23 13:50:11.906
  E0902 13:50:12.025477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/02/23 13:50:12.146
  STEP: Deploying the webhook pod @ 09/02/23 13:50:12.154
  STEP: Wait for the deployment to be ready @ 09/02/23 13:50:12.166
  Sep  2 13:50:12.173: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0902 13:50:13.026025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:14.026296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/02/23 13:50:14.186
  STEP: Verifying the service has paired with the endpoint @ 09/02/23 13:50:14.196
  E0902 13:50:15.026367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:15.196: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/02/23 13:50:15.281
  STEP: Creating a configMap that should be mutated @ 09/02/23 13:50:15.295
  STEP: Deleting the collection of validation webhooks @ 09/02/23 13:50:15.325
  STEP: Creating a configMap that should not be mutated @ 09/02/23 13:50:15.382
  Sep  2 13:50:15.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-872" for this suite. @ 09/02/23 13:50:15.434
  STEP: Destroying namespace "webhook-markers-6841" for this suite. @ 09/02/23 13:50:15.443
• [3.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/02/23 13:50:15.452
  Sep  2 13:50:15.452: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename events @ 09/02/23 13:50:15.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:15.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:15.472
  STEP: Create set of events @ 09/02/23 13:50:15.478
  STEP: get a list of Events with a label in the current namespace @ 09/02/23 13:50:15.494
  STEP: delete a list of events @ 09/02/23 13:50:15.498
  Sep  2 13:50:15.498: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/02/23 13:50:15.519
  Sep  2 13:50:15.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1399" for this suite. @ 09/02/23 13:50:15.526
• [0.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/02/23 13:50:15.533
  Sep  2 13:50:15.533: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename downward-api @ 09/02/23 13:50:15.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:15.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:15.553
  STEP: Creating the pod @ 09/02/23 13:50:15.557
  E0902 13:50:16.026586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:17.026702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:18.027714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:18.101: INFO: Successfully updated pod "annotationupdate44056db8-265f-4a98-8dca-11306e627aac"
  E0902 13:50:19.027826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:20.028214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:20.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3022" for this suite. @ 09/02/23 13:50:20.132
• [4.606 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/02/23 13:50:20.139
  Sep  2 13:50:20.139: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename watch @ 09/02/23 13:50:20.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:20.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:20.16
  STEP: getting a starting resourceVersion @ 09/02/23 13:50:20.164
  STEP: starting a background goroutine to produce watch events @ 09/02/23 13:50:20.167
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/02/23 13:50:20.167
  E0902 13:50:21.029072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:22.029827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:22.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7417" for this suite. @ 09/02/23 13:50:22.996
  E0902 13:50:23.029995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.908 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/02/23 13:50:23.048
  Sep  2 13:50:23.048: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename pods @ 09/02/23 13:50:23.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:23.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:23.071
  STEP: Create set of pods @ 09/02/23 13:50:23.075
  Sep  2 13:50:23.082: INFO: created test-pod-1
  Sep  2 13:50:23.088: INFO: created test-pod-2
  Sep  2 13:50:23.094: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/02/23 13:50:23.094
  E0902 13:50:24.030555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0902 13:50:25.031370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/02/23 13:50:25.142
  Sep  2 13:50:25.146: INFO: Pod quantity 3 is different from expected quantity 0
  E0902 13:50:26.031539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:26.151: INFO: Pod quantity 3 is different from expected quantity 0
  E0902 13:50:27.031639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:27.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2018" for this suite. @ 09/02/23 13:50:27.155
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/02/23 13:50:27.163
  Sep  2 13:50:27.163: INFO: >>> kubeConfig: /tmp/kubeconfig-4223657189
  STEP: Building a namespace api object, basename daemonsets @ 09/02/23 13:50:27.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/02/23 13:50:27.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/02/23 13:50:27.185
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/02/23 13:50:27.209
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/02/23 13:50:27.215
  Sep  2 13:50:27.219: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:27.219: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:27.223: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:50:27.223: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:50:28.032502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:28.228: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:28.229: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:28.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:50:28.233: INFO: Node ip-172-31-26-21 is running 0 daemon pod, expected 1
  E0902 13:50:29.032520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:29.229: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:29.229: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:29.234: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:50:29.234: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/02/23 13:50:29.237
  Sep  2 13:50:29.252: INFO: DaemonSet pods can't tolerate node ip-172-31-17-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:29.252: INFO: DaemonSet pods can't tolerate node ip-172-31-91-189 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep  2 13:50:29.258: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  2 13:50:29.258: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/02/23 13:50:29.258
  E0902 13:50:30.032935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 09/02/23 13:50:30.271
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5060, will wait for the garbage collector to delete the pods @ 09/02/23 13:50:30.271
  Sep  2 13:50:30.332: INFO: Deleting DaemonSet.extensions daemon-set took: 6.816925ms
  Sep  2 13:50:30.433: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.075398ms
  E0902 13:50:31.033034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  2 13:50:31.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  2 13:50:31.738: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  2 13:50:31.742: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44519"},"items":null}

  Sep  2 13:50:31.745: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44519"},"items":null}

  Sep  2 13:50:31.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5060" for this suite. @ 09/02/23 13:50:31.767
• [4.612 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep  2 13:50:31.777: INFO: Running AfterSuite actions on node 1
  Sep  2 13:50:31.777: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.137 seconds]
------------------------------

Ran 380 of 7387 Specs in 5932.354 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h38m52.801151195s
Test Suite Passed
