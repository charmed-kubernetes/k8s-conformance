  I0923 12:09:28.190064      22 e2e.go:117] Starting e2e run "c17679e4-bee1-4eb8-b859-bd4a262cbf5a" on Ginkgo node 1
  Sep 23 12:09:28.214: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1695470968 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep 23 12:09:28.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:09:28.367: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep 23 12:09:28.403: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep 23 12:09:28.407: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Sep 23 12:09:28.407: INFO: e2e test version: v1.28.2
  Sep 23 12:09:28.408: INFO: kube-apiserver version: v1.28.2
  Sep 23 12:09:28.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:09:28.413: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/23/23 12:09:28.687
  Sep 23 12:09:28.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:09:28.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:09:28.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:09:28.713
  STEP: Counting existing ResourceQuota @ 09/23/23 12:09:28.717
  STEP: Creating a ResourceQuota @ 09/23/23 12:09:33.722
  STEP: Ensuring resource quota status is calculated @ 09/23/23 12:09:33.728
  Sep 23 12:09:35.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6111" for this suite. @ 09/23/23 12:09:35.738
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/23/23 12:09:35.747
  Sep 23 12:09:35.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:09:35.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:09:35.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:09:35.768
  STEP: Creating configMap with name configmap-test-volume-map-c668e072-4b49-475e-85cb-a601cb54cd49 @ 09/23/23 12:09:35.771
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:09:35.775
  STEP: Saw pod success @ 09/23/23 12:09:43.81
  Sep 23 12:09:43.814: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-dcce48d9-e88b-46a4-9601-538dadcd4fed container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:09:43.834
  Sep 23 12:09:43.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7853" for this suite. @ 09/23/23 12:09:43.853
• [8.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/23/23 12:09:43.861
  Sep 23 12:09:43.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/23/23 12:09:43.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:09:43.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:09:43.883
  STEP: creating a target pod @ 09/23/23 12:09:43.886
  STEP: adding an ephemeral container @ 09/23/23 12:09:45.907
  STEP: checking pod container endpoints @ 09/23/23 12:09:49.933
  Sep 23 12:09:49.933: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6735 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 12:09:49.933: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:09:49.933: INFO: ExecWithOptions: Clientset creation
  Sep 23 12:09:49.933: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6735/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 23 12:09:50.015: INFO: Exec stderr: ""
  Sep 23 12:09:50.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6735" for this suite. @ 09/23/23 12:09:50.027
• [6.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/23/23 12:09:50.035
  Sep 23 12:09:50.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:09:50.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:09:50.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:09:50.058
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:09:50.06
  STEP: Saw pod success @ 09/23/23 12:10:04.114
  Sep 23 12:10:04.118: INFO: Trying to get logs from node ip-172-31-84-196 pod downwardapi-volume-e1790ddc-1ea7-48db-91f9-450d939eb06f container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:10:04.137
  Sep 23 12:10:04.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5561" for this suite. @ 09/23/23 12:10:04.16
• [14.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/23/23 12:10:04.169
  Sep 23 12:10:04.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replication-controller @ 09/23/23 12:10:04.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:04.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:04.191
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/23/23 12:10:04.194
  STEP: When a replication controller with a matching selector is created @ 09/23/23 12:10:08.22
  STEP: Then the orphan pod is adopted @ 09/23/23 12:10:08.225
  Sep 23 12:10:09.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3533" for this suite. @ 09/23/23 12:10:09.238
• [5.076 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/23/23 12:10:09.246
  Sep 23 12:10:09.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 12:10:09.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:09.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:09.269
  STEP: Creating the pod @ 09/23/23 12:10:09.273
  Sep 23 12:10:11.818: INFO: Successfully updated pod "annotationupdate8eaeaff9-3f29-4da5-bbc6-cc287bdfcced"
  Sep 23 12:10:13.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6136" for this suite. @ 09/23/23 12:10:13.84
• [4.601 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/23/23 12:10:13.848
  Sep 23 12:10:13.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 12:10:13.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:13.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:13.867
  Sep 23 12:10:13.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/23/23 12:10:15.17
  Sep 23 12:10:15.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3709 --namespace=crd-publish-openapi-3709 create -f -'
  Sep 23 12:10:15.546: INFO: stderr: ""
  Sep 23 12:10:15.546: INFO: stdout: "e2e-test-crd-publish-openapi-9961-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 23 12:10:15.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3709 --namespace=crd-publish-openapi-3709 delete e2e-test-crd-publish-openapi-9961-crds test-cr'
  Sep 23 12:10:15.610: INFO: stderr: ""
  Sep 23 12:10:15.610: INFO: stdout: "e2e-test-crd-publish-openapi-9961-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep 23 12:10:15.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3709 --namespace=crd-publish-openapi-3709 apply -f -'
  Sep 23 12:10:16.032: INFO: stderr: ""
  Sep 23 12:10:16.032: INFO: stdout: "e2e-test-crd-publish-openapi-9961-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 23 12:10:16.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3709 --namespace=crd-publish-openapi-3709 delete e2e-test-crd-publish-openapi-9961-crds test-cr'
  Sep 23 12:10:16.095: INFO: stderr: ""
  Sep 23 12:10:16.095: INFO: stdout: "e2e-test-crd-publish-openapi-9961-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/23/23 12:10:16.095
  Sep 23 12:10:16.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3709 explain e2e-test-crd-publish-openapi-9961-crds'
  Sep 23 12:10:16.268: INFO: stderr: ""
  Sep 23 12:10:16.268: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9961-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 23 12:10:17.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3709" for this suite. @ 09/23/23 12:10:17.562
• [3.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/23/23 12:10:17.574
  Sep 23 12:10:17.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:10:17.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:17.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:17.598
  STEP: Setting up server cert @ 09/23/23 12:10:17.625
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:10:18.009
  STEP: Deploying the webhook pod @ 09/23/23 12:10:18.018
  STEP: Wait for the deployment to be ready @ 09/23/23 12:10:18.032
  Sep 23 12:10:18.040: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:10:20.052
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:10:20.064
  Sep 23 12:10:21.064: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/23/23 12:10:21.072
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/23/23 12:10:21.088
  STEP: Creating a dummy validating-webhook-configuration object @ 09/23/23 12:10:21.104
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/23/23 12:10:21.113
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/23/23 12:10:21.12
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/23/23 12:10:21.129
  Sep 23 12:10:21.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4392" for this suite. @ 09/23/23 12:10:21.195
  STEP: Destroying namespace "webhook-markers-6729" for this suite. @ 09/23/23 12:10:21.203
• [3.636 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/23/23 12:10:21.21
  Sep 23 12:10:21.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:10:21.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:21.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:21.228
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:10:21.231
  STEP: Saw pod success @ 09/23/23 12:10:25.256
  Sep 23 12:10:25.260: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-1ef48c0c-bfa3-4c17-971a-9dad820e9343 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:10:25.268
  Sep 23 12:10:25.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4665" for this suite. @ 09/23/23 12:10:25.287
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/23/23 12:10:25.294
  Sep 23 12:10:25.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:10:25.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:25.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:25.314
  STEP: Creating secret with name secret-test-map-8787fbf0-a2cc-4637-8b1e-2d7cff7b8b25 @ 09/23/23 12:10:25.317
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:10:25.322
  STEP: Saw pod success @ 09/23/23 12:10:29.346
  Sep 23 12:10:29.350: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-secrets-393b32b6-c09a-447a-96a1-bd07f91ad118 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:10:29.358
  Sep 23 12:10:29.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2093" for this suite. @ 09/23/23 12:10:29.377
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/23/23 12:10:29.385
  Sep 23 12:10:29.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 12:10:29.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:29.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:29.404
  Sep 23 12:10:29.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  W0923 12:10:31.946642      22 warnings.go:70] unknown field "alpha"
  W0923 12:10:31.946661      22 warnings.go:70] unknown field "beta"
  W0923 12:10:31.946667      22 warnings.go:70] unknown field "delta"
  W0923 12:10:31.946674      22 warnings.go:70] unknown field "epsilon"
  W0923 12:10:31.946679      22 warnings.go:70] unknown field "gamma"
  Sep 23 12:10:32.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6112" for this suite. @ 09/23/23 12:10:32.494
• [3.116 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/23/23 12:10:32.501
  Sep 23 12:10:32.502: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 12:10:32.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:32.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:32.521
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/23/23 12:10:32.525
  Sep 23 12:10:32.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:10:33.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:10:39.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-80" for this suite. @ 09/23/23 12:10:39.027
• [6.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/23/23 12:10:39.034
  Sep 23 12:10:39.034: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 12:10:39.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:39.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:39.055
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:10:39.057
  STEP: Saw pod success @ 09/23/23 12:10:43.078
  Sep 23 12:10:43.082: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-fb89b466-7d63-4a8d-8c62-6a1f10643cc2 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:10:43.095
  Sep 23 12:10:43.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4228" for this suite. @ 09/23/23 12:10:43.114
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/23/23 12:10:43.12
  Sep 23 12:10:43.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 12:10:43.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:43.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:43.138
  Sep 23 12:10:45.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 12:10:45.163: INFO: Deleting pod "var-expansion-1d4ed006-c104-43cd-9f25-54cd1bdc8a62" in namespace "var-expansion-581"
  Sep 23 12:10:45.173: INFO: Wait up to 5m0s for pod "var-expansion-1d4ed006-c104-43cd-9f25-54cd1bdc8a62" to be fully deleted
  STEP: Destroying namespace "var-expansion-581" for this suite. @ 09/23/23 12:10:47.181
• [4.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/23/23 12:10:47.187
  Sep 23 12:10:47.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/23/23 12:10:47.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:10:47.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:10:47.204
  Sep 23 12:10:47.206: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 23 12:11:47.224: INFO: Waiting for terminating namespaces to be deleted...
  Sep 23 12:11:47.228: INFO: Starting informer...
  STEP: Starting pods... @ 09/23/23 12:11:47.228
  Sep 23 12:11:47.447: INFO: Pod1 is running on ip-172-31-77-156. Tainting Node
  Sep 23 12:11:49.668: INFO: Pod2 is running on ip-172-31-77-156. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/23/23 12:11:49.668
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/23 12:11:49.678
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/23/23 12:11:49.683
  Sep 23 12:11:55.850: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Sep 23 12:12:15.889: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep 23 12:12:15.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/23 12:12:15.904
  STEP: Destroying namespace "taint-multiple-pods-4950" for this suite. @ 09/23/23 12:12:15.908
• [88.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/23/23 12:12:15.918
  Sep 23 12:12:15.918: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/23 12:12:15.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:15.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:15.943
  Sep 23 12:12:17.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-233" for this suite. @ 09/23/23 12:12:17.986
• [2.076 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/23/23 12:12:17.994
  Sep 23 12:12:17.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 12:12:17.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:18.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:18.01
  STEP: Creating simple DaemonSet "daemon-set" @ 09/23/23 12:12:18.036
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/23 12:12:18.042
  Sep 23 12:12:18.046: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:18.046: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:18.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:12:18.050: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:12:19.054: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:19.054: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:19.059: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 12:12:19.059: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:12:20.054: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:20.054: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:20.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 12:12:20.058: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:12:21.055: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:21.056: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:21.060: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 12:12:21.060: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:12:22.054: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:22.054: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:12:22.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:12:22.058: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/23/23 12:12:22.061
  Sep 23 12:12:22.066: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/23/23 12:12:22.066
  Sep 23 12:12:22.075: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/23/23 12:12:22.075
  Sep 23 12:12:22.077: INFO: Observed &DaemonSet event: ADDED
  Sep 23 12:12:22.077: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.077: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.077: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.077: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.077: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.077: INFO: Found daemon set daemon-set in namespace daemonsets-7338 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 23 12:12:22.077: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/23/23 12:12:22.077
  STEP: watching for the daemon set status to be patched @ 09/23/23 12:12:22.084
  Sep 23 12:12:22.085: INFO: Observed &DaemonSet event: ADDED
  Sep 23 12:12:22.085: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.085: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.086: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.086: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.086: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.086: INFO: Observed daemon set daemon-set in namespace daemonsets-7338 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 23 12:12:22.086: INFO: Observed &DaemonSet event: MODIFIED
  Sep 23 12:12:22.086: INFO: Found daemon set daemon-set in namespace daemonsets-7338 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep 23 12:12:22.086: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/23 12:12:22.09
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7338, will wait for the garbage collector to delete the pods @ 09/23/23 12:12:22.09
  Sep 23 12:12:22.151: INFO: Deleting DaemonSet.extensions daemon-set took: 5.978834ms
  Sep 23 12:12:22.252: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.071563ms
  Sep 23 12:12:26.156: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:12:26.156: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 23 12:12:26.159: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3452"},"items":null}

  Sep 23 12:12:26.162: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3452"},"items":null}

  Sep 23 12:12:26.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7338" for this suite. @ 09/23/23 12:12:26.18
• [8.191 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/23/23 12:12:26.186
  Sep 23 12:12:26.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 12:12:26.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:26.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:26.204
  Sep 23 12:12:26.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: creating the pod @ 09/23/23 12:12:26.208
  STEP: submitting the pod to kubernetes @ 09/23/23 12:12:26.208
  Sep 23 12:12:28.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4989" for this suite. @ 09/23/23 12:12:28.252
• [2.075 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/23/23 12:12:28.261
  Sep 23 12:12:28.261: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 12:12:28.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:28.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:28.276
  Sep 23 12:12:28.291: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Sep 23 12:12:33.296: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/23 12:12:33.296
  Sep 23 12:12:33.296: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/23/23 12:12:33.306
  Sep 23 12:12:33.317: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bdf689d-ff0c-4239-9212-64e8d0480871",
      ResourceVersion: (string) (len=4) "3533",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831067953,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067953,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 12:12:33.323: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ff88c84-62cf-42c6-afc1-34b8a76e9bf3",
      ResourceVersion: (string) (len=4) "3535",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831067953,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1bdf689d-ff0c-4239-9212-64e8d0480871",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067953,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 62 64 66 36 38  39 64 2d 66 66 30 63 2d  |\"1bdf689d-ff0c-|
              00000120  34 32 33 39 2d 39 32 31  32 2d 36 34 65 38 64 30  |4239-9212-64e8d0|
              00000130  34 38 30 38 37 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |480871\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 12:12:33.324: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Sep 23 12:12:33.324: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7498a51-3ebf-4242-a97c-cc8a55b85b2d",
      ResourceVersion: (string) (len=4) "3534",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831067948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1bdf689d-ff0c-4239-9212-64e8d0480871",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067953,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 62 64 66 36 38 39  |"uid\":\"1bdf689|
              00000040  64 2d 66 66 30 63 2d 34  32 33 39 2d 39 32 31 32  |d-ff0c-4239-9212|
              00000050  2d 36 34 65 38 64 30 34  38 30 38 37 31 5c 22 7d  |-64e8d0480871\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 12:12:33.332: INFO: Pod "test-cleanup-controller-z5h6f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-z5h6f",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07d9af65-9496-47f2-bb8a-c97da50bd751",
      ResourceVersion: (string) (len=4) "3500",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831067948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "c7498a51-3ebf-4242-a97c-cc8a55b85b2d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 37 34 39 38 61 35 31  |uid\":\"c7498a51|
              00000080  2d 33 65 62 66 2d 34 32  34 32 2d 61 39 37 63 2d  |-3ebf-4242-a97c-|
              00000090  63 63 38 61 35 35 62 38  35 62 32 64 5c 22 7d 22  |cc8a55b85b2d\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 38 2e 31 39 38 5c 22  |192.168.88.198\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xc8tp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xc8tp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831067948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831067949,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://54fc88bbec30af7114792a15ccbe3b7a078310e33ce443e16c18459ec6422910",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 12:12:33.334: INFO: Pod "test-cleanup-deployment-58dcc84f74-vjjhq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-vjjhq",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-6025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f231948b-115d-4187-aa00-fa199d2caf20",
      ResourceVersion: (string) (len=4) "3536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831067953,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "5ff88c84-62cf-42c6-afc1-34b8a76e9bf3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831067953,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  66 38 38 63 38 34 2d 36  |d\":\"5ff88c84-6|
              00000090  32 63 66 2d 34 32 63 36  2d 61 66 63 31 2d 33 34  |2cf-42c6-afc1-34|
              000000a0  62 38 61 37 36 65 39 62  66 33 5c 22 7d 22 3a 7b  |b8a76e9bf3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s9kxp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s9kxp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 12:12:33.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6025" for this suite. @ 09/23/23 12:12:33.341
• [5.091 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/23/23 12:12:33.352
  Sep 23 12:12:33.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 12:12:33.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:33.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:33.369
  Sep 23 12:12:33.372: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:12:36.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1877" for this suite. @ 09/23/23 12:12:36.464
• [3.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/23/23 12:12:36.471
  Sep 23 12:12:36.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:12:36.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:36.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:36.49
  STEP: Starting the proxy @ 09/23/23 12:12:36.492
  Sep 23 12:12:36.492: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-3742 proxy --unix-socket=/tmp/kubectl-proxy-unix2241238451/test'
  STEP: retrieving proxy /api/ output @ 09/23/23 12:12:36.534
  Sep 23 12:12:36.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3742" for this suite. @ 09/23/23 12:12:36.539
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/23/23 12:12:36.547
  Sep 23 12:12:36.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:12:36.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:36.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:36.563
  STEP: Creating configMap with name projected-configmap-test-volume-map-626b363c-6d3e-4fc2-b6eb-aef24dab59bf @ 09/23/23 12:12:36.566
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:12:36.57
  STEP: Saw pod success @ 09/23/23 12:12:40.596
  Sep 23 12:12:40.599: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-projected-configmaps-7cd9160d-3b77-416d-b7a1-9ea7f1623f1b container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:12:40.613
  Sep 23 12:12:40.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6922" for this suite. @ 09/23/23 12:12:40.635
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/23/23 12:12:40.642
  Sep 23 12:12:40.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 12:12:40.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:40.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:40.657
  STEP: Creating a test headless service @ 09/23/23 12:12:40.66
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9883.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9883.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/23/23 12:12:40.665
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9883.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9883.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/23/23 12:12:40.665
  STEP: creating a pod to probe DNS @ 09/23/23 12:12:40.665
  STEP: submitting the pod to kubernetes @ 09/23/23 12:12:40.665
  STEP: retrieving the pod @ 09/23/23 12:12:48.707
  STEP: looking for the results for each expected name from probers @ 09/23/23 12:12:48.712
  Sep 23 12:12:48.729: INFO: DNS probes using dns-9883/dns-test-90da63f6-296b-41f5-bcee-8d28517a2340 succeeded

  Sep 23 12:12:48.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 12:12:48.733
  STEP: deleting the test headless service @ 09/23/23 12:12:48.744
  STEP: Destroying namespace "dns-9883" for this suite. @ 09/23/23 12:12:48.756
• [8.123 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/23/23 12:12:48.765
  Sep 23 12:12:48.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename job @ 09/23/23 12:12:48.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:48.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:48.781
  STEP: Creating a job @ 09/23/23 12:12:48.783
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/23/23 12:12:48.79
  STEP: patching /status @ 09/23/23 12:12:52.795
  STEP: updating /status @ 09/23/23 12:12:52.802
  STEP: get /status @ 09/23/23 12:12:52.81
  Sep 23 12:12:52.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5639" for this suite. @ 09/23/23 12:12:52.817
• [4.059 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/23/23 12:12:52.825
  Sep 23 12:12:52.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:12:52.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:52.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:52.842
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/23 12:12:52.844
  Sep 23 12:12:52.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-4970 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep 23 12:12:52.909: INFO: stderr: ""
  Sep 23 12:12:52.909: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/23/23 12:12:52.909
  Sep 23 12:12:52.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-4970 delete pods e2e-test-httpd-pod'
  Sep 23 12:12:54.965: INFO: stderr: ""
  Sep 23 12:12:54.965: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 23 12:12:54.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4970" for this suite. @ 09/23/23 12:12:54.97
• [2.152 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/23/23 12:12:54.977
  Sep 23 12:12:54.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:12:54.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:12:54.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:12:54.993
  STEP: creating service endpoint-test2 in namespace services-6748 @ 09/23/23 12:12:54.996
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6748 to expose endpoints map[] @ 09/23/23 12:12:55.006
  Sep 23 12:12:55.009: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Sep 23 12:12:56.019: INFO: successfully validated that service endpoint-test2 in namespace services-6748 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6748 @ 09/23/23 12:12:56.019
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6748 to expose endpoints map[pod1:[80]] @ 09/23/23 12:12:58.038
  Sep 23 12:12:58.050: INFO: successfully validated that service endpoint-test2 in namespace services-6748 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/23/23 12:12:58.05
  Sep 23 12:12:58.050: INFO: Creating new exec pod
  Sep 23 12:13:01.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-6748 exec execpodb6v8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 23 12:13:01.215: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 23 12:13:01.215: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:13:01.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-6748 exec execpodb6v8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.135 80'
  Sep 23 12:13:01.353: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.135 80\nConnection to 10.152.183.135 80 port [tcp/http] succeeded!\n"
  Sep 23 12:13:01.353: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-6748 @ 09/23/23 12:13:01.353
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6748 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/23/23 12:13:03.373
  Sep 23 12:13:03.386: INFO: successfully validated that service endpoint-test2 in namespace services-6748 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/23/23 12:13:03.386
  Sep 23 12:13:04.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-6748 exec execpodb6v8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 23 12:13:04.547: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 23 12:13:04.547: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:13:04.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-6748 exec execpodb6v8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.135 80'
  Sep 23 12:13:04.688: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.135 80\nConnection to 10.152.183.135 80 port [tcp/http] succeeded!\n"
  Sep 23 12:13:04.688: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6748 @ 09/23/23 12:13:04.688
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6748 to expose endpoints map[pod2:[80]] @ 09/23/23 12:13:04.707
  Sep 23 12:13:04.724: INFO: successfully validated that service endpoint-test2 in namespace services-6748 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/23/23 12:13:04.724
  Sep 23 12:13:05.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-6748 exec execpodb6v8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 23 12:13:05.886: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 23 12:13:05.886: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:13:05.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-6748 exec execpodb6v8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.135 80'
  Sep 23 12:13:06.054: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.135 80\nConnection to 10.152.183.135 80 port [tcp/http] succeeded!\n"
  Sep 23 12:13:06.054: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-6748 @ 09/23/23 12:13:06.054
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-6748 to expose endpoints map[] @ 09/23/23 12:13:06.066
  Sep 23 12:13:07.085: INFO: successfully validated that service endpoint-test2 in namespace services-6748 exposes endpoints map[]
  Sep 23 12:13:07.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6748" for this suite. @ 09/23/23 12:13:07.107
• [12.138 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/23/23 12:13:07.116
  Sep 23 12:13:07.116: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/23 12:13:07.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:07.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:07.134
  STEP: fetching the /apis discovery document @ 09/23/23 12:13:07.136
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/23/23 12:13:07.138
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/23/23 12:13:07.138
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/23/23 12:13:07.138
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/23/23 12:13:07.139
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/23/23 12:13:07.139
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/23/23 12:13:07.14
  Sep 23 12:13:07.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6444" for this suite. @ 09/23/23 12:13:07.143
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/23/23 12:13:07.151
  Sep 23 12:13:07.151: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename ingressclass @ 09/23/23 12:13:07.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:07.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:07.166
  STEP: getting /apis @ 09/23/23 12:13:07.169
  STEP: getting /apis/networking.k8s.io @ 09/23/23 12:13:07.174
  STEP: getting /apis/networking.k8s.iov1 @ 09/23/23 12:13:07.175
  STEP: creating @ 09/23/23 12:13:07.176
  STEP: getting @ 09/23/23 12:13:07.19
  STEP: listing @ 09/23/23 12:13:07.192
  STEP: watching @ 09/23/23 12:13:07.195
  Sep 23 12:13:07.195: INFO: starting watch
  STEP: patching @ 09/23/23 12:13:07.196
  STEP: updating @ 09/23/23 12:13:07.202
  Sep 23 12:13:07.207: INFO: waiting for watch events with expected annotations
  Sep 23 12:13:07.207: INFO: saw patched and updated annotations
  STEP: deleting @ 09/23/23 12:13:07.207
  STEP: deleting a collection @ 09/23/23 12:13:07.219
  Sep 23 12:13:07.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1613" for this suite. @ 09/23/23 12:13:07.238
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/23/23 12:13:07.248
  Sep 23 12:13:07.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename podtemplate @ 09/23/23 12:13:07.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:07.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:07.264
  Sep 23 12:13:07.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5265" for this suite. @ 09/23/23 12:13:07.3
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/23/23 12:13:07.308
  Sep 23 12:13:07.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 12:13:07.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:07.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:07.324
  Sep 23 12:13:29.401: INFO: Container started at 2023-09-23 12:13:08 +0000 UTC, pod became ready at 2023-09-23 12:13:27 +0000 UTC
  Sep 23 12:13:29.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9850" for this suite. @ 09/23/23 12:13:29.406
• [22.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/23/23 12:13:29.415
  Sep 23 12:13:29.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:13:29.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:29.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:29.438
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:13:29.441
  STEP: Saw pod success @ 09/23/23 12:13:33.468
  Sep 23 12:13:33.472: INFO: Trying to get logs from node ip-172-31-84-196 pod downwardapi-volume-1acb4537-7af7-439d-a06a-692c838067c7 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:13:33.479
  Sep 23 12:13:33.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6355" for this suite. @ 09/23/23 12:13:33.497
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/23/23 12:13:33.504
  Sep 23 12:13:33.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 12:13:33.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:33.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:33.521
  STEP: apply creating a deployment @ 09/23/23 12:13:33.524
  Sep 23 12:13:33.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1417" for this suite. @ 09/23/23 12:13:33.542
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/23/23 12:13:33.548
  Sep 23 12:13:33.548: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename watch @ 09/23/23 12:13:33.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:33.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:33.563
  STEP: creating a new configmap @ 09/23/23 12:13:33.565
  STEP: modifying the configmap once @ 09/23/23 12:13:33.569
  STEP: modifying the configmap a second time @ 09/23/23 12:13:33.577
  STEP: deleting the configmap @ 09/23/23 12:13:33.585
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/23/23 12:13:33.591
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/23/23 12:13:33.592
  Sep 23 12:13:33.592: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7277  7265611d-e094-47b5-8a8b-d073ad6d28e1 4141 0 2023-09-23 12:13:33 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-23 12:13:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 12:13:33.592: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7277  7265611d-e094-47b5-8a8b-d073ad6d28e1 4142 0 2023-09-23 12:13:33 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-23 12:13:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 12:13:33.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7277" for this suite. @ 09/23/23 12:13:33.595
• [0.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/23/23 12:13:33.602
  Sep 23 12:13:33.602: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sysctl @ 09/23/23 12:13:33.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:33.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:33.622
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/23/23 12:13:33.625
  STEP: Watching for error events or started pod @ 09/23/23 12:13:33.633
  STEP: Waiting for pod completion @ 09/23/23 12:13:35.637
  STEP: Checking that the pod succeeded @ 09/23/23 12:13:37.652
  STEP: Getting logs from the pod @ 09/23/23 12:13:37.652
  STEP: Checking that the sysctl is actually updated @ 09/23/23 12:13:37.659
  Sep 23 12:13:37.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2215" for this suite. @ 09/23/23 12:13:37.663
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/23/23 12:13:37.671
  Sep 23 12:13:37.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 12:13:37.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:37.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:37.687
  STEP: set up a multi version CRD @ 09/23/23 12:13:37.69
  Sep 23 12:13:37.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: mark a version not serverd @ 09/23/23 12:13:41.035
  STEP: check the unserved version gets removed @ 09/23/23 12:13:41.054
  STEP: check the other version is not changed @ 09/23/23 12:13:41.848
  Sep 23 12:13:44.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-344" for this suite. @ 09/23/23 12:13:44.44
• [6.775 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/23/23 12:13:44.446
  Sep 23 12:13:44.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:13:44.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:44.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:44.465
  STEP: Setting up server cert @ 09/23/23 12:13:44.487
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:13:44.831
  STEP: Deploying the webhook pod @ 09/23/23 12:13:44.843
  STEP: Wait for the deployment to be ready @ 09/23/23 12:13:44.858
  Sep 23 12:13:44.865: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:13:46.877
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:13:46.886
  Sep 23 12:13:47.887: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/23/23 12:13:47.893
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/23/23 12:13:47.908
  Sep 23 12:13:47.908: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:13:47.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6007" for this suite. @ 09/23/23 12:13:47.964
  STEP: Destroying namespace "webhook-markers-9080" for this suite. @ 09/23/23 12:13:47.971
• [3.531 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/23/23 12:13:47.978
  Sep 23 12:13:47.978: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:13:47.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:47.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:47.995
  STEP: Creating configMap with name projected-configmap-test-volume-0db64dd7-7d36-41f0-84bf-6a0d4d2d5156 @ 09/23/23 12:13:47.998
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:13:48.002
  STEP: Saw pod success @ 09/23/23 12:13:52.024
  Sep 23 12:13:52.028: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-configmaps-bd626408-d12a-4c6b-a197-b9cb8205fc63 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:13:52.043
  Sep 23 12:13:52.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4156" for this suite. @ 09/23/23 12:13:52.06
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/23/23 12:13:52.067
  Sep 23 12:13:52.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:13:52.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:52.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:52.085
  Sep 23 12:13:52.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1458" for this suite. @ 09/23/23 12:13:52.096
• [0.036 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/23/23 12:13:52.104
  Sep 23 12:13:52.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:13:52.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:52.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:52.12
  STEP: Creating Pod @ 09/23/23 12:13:52.122
  STEP: Reading file content from the nginx-container @ 09/23/23 12:13:54.141
  Sep 23 12:13:54.141: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-807 PodName:pod-sharedvolume-01b8b9db-61a6-49e6-be2d-5f71dd236bc2 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 12:13:54.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:13:54.142: INFO: ExecWithOptions: Clientset creation
  Sep 23 12:13:54.142: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-807/pods/pod-sharedvolume-01b8b9db-61a6-49e6-be2d-5f71dd236bc2/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep 23 12:13:54.231: INFO: Exec stderr: ""
  Sep 23 12:13:54.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-807" for this suite. @ 09/23/23 12:13:54.236
• [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/23/23 12:13:54.243
  Sep 23 12:13:54.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/23 12:13:54.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:54.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:54.26
  Sep 23 12:13:54.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:13:57.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2593" for this suite. @ 09/23/23 12:13:57.367
• [3.131 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/23/23 12:13:57.375
  Sep 23 12:13:57.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/23 12:13:57.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:57.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:57.391
  STEP: Deleting RuntimeClass runtimeclass-198-delete-me @ 09/23/23 12:13:57.399
  STEP: Waiting for the RuntimeClass to disappear @ 09/23/23 12:13:57.406
  Sep 23 12:13:57.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-198" for this suite. @ 09/23/23 12:13:57.418
• [0.048 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/23/23 12:13:57.424
  Sep 23 12:13:57.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:13:57.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:13:57.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:13:57.44
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9357 @ 09/23/23 12:13:57.442
  STEP: changing the ExternalName service to type=NodePort @ 09/23/23 12:13:57.448
  STEP: creating replication controller externalname-service in namespace services-9357 @ 09/23/23 12:13:57.467
  I0923 12:13:57.475811      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9357, replica count: 2
  I0923 12:14:00.526980      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 12:14:00.527: INFO: Creating new exec pod
  Sep 23 12:14:03.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9357 exec execpodnvlnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 23 12:14:03.695: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:03.695: INFO: stdout: "externalname-service-cvght"
  Sep 23 12:14:03.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9357 exec execpodnvlnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  Sep 23 12:14:03.848: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:03.848: INFO: stdout: ""
  Sep 23 12:14:04.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9357 exec execpodnvlnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  Sep 23 12:14:04.994: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:04.994: INFO: stdout: "externalname-service-cvght"
  Sep 23 12:14:04.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9357 exec execpodnvlnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.77.156 32566'
  Sep 23 12:14:05.163: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.77.156 32566\nConnection to 172.31.77.156 32566 port [tcp/*] succeeded!\n"
  Sep 23 12:14:05.163: INFO: stdout: "externalname-service-cvght"
  Sep 23 12:14:05.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9357 exec execpodnvlnw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.196 32566'
  Sep 23 12:14:05.323: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.84.196 32566\nConnection to 172.31.84.196 32566 port [tcp/*] succeeded!\n"
  Sep 23 12:14:05.323: INFO: stdout: "externalname-service-tgjxc"
  Sep 23 12:14:05.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 12:14:05.327: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-9357" for this suite. @ 09/23/23 12:14:05.351
• [7.934 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/23/23 12:14:05.358
  Sep 23 12:14:05.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/23 12:14:05.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:05.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:05.373
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/23 12:14:05.379
  STEP: create the pod with lifecycle hook @ 09/23/23 12:14:07.402
  STEP: check poststart hook @ 09/23/23 12:14:09.419
  STEP: delete the pod with lifecycle hook @ 09/23/23 12:14:09.427
  Sep 23 12:14:11.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3329" for this suite. @ 09/23/23 12:14:11.448
• [6.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/23/23 12:14:11.457
  Sep 23 12:14:11.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replicaset @ 09/23/23 12:14:11.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:11.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:11.476
  STEP: Create a ReplicaSet @ 09/23/23 12:14:11.478
  STEP: Verify that the required pods have come up @ 09/23/23 12:14:11.484
  Sep 23 12:14:11.488: INFO: Pod name sample-pod: Found 0 pods out of 3
  Sep 23 12:14:16.496: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/23/23 12:14:16.496
  Sep 23 12:14:16.500: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/23/23 12:14:16.5
  STEP: DeleteCollection of the ReplicaSets @ 09/23/23 12:14:16.503
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/23/23 12:14:16.512
  Sep 23 12:14:16.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5316" for this suite. @ 09/23/23 12:14:16.523
• [5.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/23/23 12:14:16.533
  Sep 23 12:14:16.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:14:16.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:16.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:16.553
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:14:16.556
  STEP: Saw pod success @ 09/23/23 12:14:20.581
  Sep 23 12:14:20.584: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-8268b5e3-9814-4774-aa34-8aa20818b559 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:14:20.591
  Sep 23 12:14:20.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6717" for this suite. @ 09/23/23 12:14:20.613
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/23/23 12:14:20.621
  Sep 23 12:14:20.621: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename disruption @ 09/23/23 12:14:20.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:20.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:20.64
  STEP: creating the pdb @ 09/23/23 12:14:20.643
  STEP: Waiting for the pdb to be processed @ 09/23/23 12:14:20.647
  STEP: updating the pdb @ 09/23/23 12:14:22.655
  STEP: Waiting for the pdb to be processed @ 09/23/23 12:14:22.665
  STEP: patching the pdb @ 09/23/23 12:14:24.674
  STEP: Waiting for the pdb to be processed @ 09/23/23 12:14:24.682
  STEP: Waiting for the pdb to be deleted @ 09/23/23 12:14:26.698
  Sep 23 12:14:26.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7701" for this suite. @ 09/23/23 12:14:26.706
• [6.092 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/23/23 12:14:26.713
  Sep 23 12:14:26.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:14:26.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:26.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:26.735
  STEP: starting the proxy server @ 09/23/23 12:14:26.738
  Sep 23 12:14:26.738: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-4942 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/23/23 12:14:26.78
  Sep 23 12:14:26.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4942" for this suite. @ 09/23/23 12:14:26.793
• [0.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/23/23 12:14:26.8
  Sep 23 12:14:26.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename namespaces @ 09/23/23 12:14:26.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:26.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:26.816
  STEP: Creating a test namespace @ 09/23/23 12:14:26.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:26.835
  STEP: Creating a pod in the namespace @ 09/23/23 12:14:26.839
  STEP: Waiting for the pod to have running status @ 09/23/23 12:14:26.846
  STEP: Deleting the namespace @ 09/23/23 12:14:28.856
  STEP: Waiting for the namespace to be removed. @ 09/23/23 12:14:28.862
  STEP: Recreating the namespace @ 09/23/23 12:14:39.867
  STEP: Verifying there are no pods in the namespace @ 09/23/23 12:14:39.885
  Sep 23 12:14:39.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5853" for this suite. @ 09/23/23 12:14:39.894
  STEP: Destroying namespace "nsdeletetest-278" for this suite. @ 09/23/23 12:14:39.904
  Sep 23 12:14:39.907: INFO: Namespace nsdeletetest-278 was already deleted
  STEP: Destroying namespace "nsdeletetest-9087" for this suite. @ 09/23/23 12:14:39.907
• [13.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/23/23 12:14:39.915
  Sep 23 12:14:39.915: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:14:39.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:39.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:39.931
  STEP: Creating configMap with name configmap-test-volume-a220e768-ff9c-4f62-a193-74cd895f8588 @ 09/23/23 12:14:39.933
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:14:39.939
  STEP: Saw pod success @ 09/23/23 12:14:43.963
  Sep 23 12:14:43.967: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-f061d76d-a683-453e-bd02-e9532f2e9977 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:14:43.978
  Sep 23 12:14:43.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-445" for this suite. @ 09/23/23 12:14:43.998
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/23/23 12:14:44.006
  Sep 23 12:14:44.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:14:44.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:44.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:44.022
  STEP: Setting up server cert @ 09/23/23 12:14:44.043
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:14:44.44
  STEP: Deploying the webhook pod @ 09/23/23 12:14:44.449
  STEP: Wait for the deployment to be ready @ 09/23/23 12:14:44.463
  Sep 23 12:14:44.471: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:14:46.482
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:14:46.495
  Sep 23 12:14:47.495: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/23/23 12:14:47.502
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/23/23 12:14:47.523
  STEP: Creating a configMap that should not be mutated @ 09/23/23 12:14:47.529
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/23/23 12:14:47.54
  STEP: Creating a configMap that should be mutated @ 09/23/23 12:14:47.548
  Sep 23 12:14:47.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1628" for this suite. @ 09/23/23 12:14:47.62
  STEP: Destroying namespace "webhook-markers-6015" for this suite. @ 09/23/23 12:14:47.629
• [3.631 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/23/23 12:14:47.637
  Sep 23 12:14:47.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:14:47.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:47.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:47.654
  STEP: creating service nodeport-test with type=NodePort in namespace services-5310 @ 09/23/23 12:14:47.656
  STEP: creating replication controller nodeport-test in namespace services-5310 @ 09/23/23 12:14:47.675
  I0923 12:14:47.683100      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5310, replica count: 2
  I0923 12:14:50.734171      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 12:14:50.734: INFO: Creating new exec pod
  Sep 23 12:14:53.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5310 exec execpod27n2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 23 12:14:53.903: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:53.903: INFO: stdout: ""
  Sep 23 12:14:54.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5310 exec execpod27n2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 23 12:14:55.054: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:55.054: INFO: stdout: "nodeport-test-4dh5z"
  Sep 23 12:14:55.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5310 exec execpod27n2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.251 80'
  Sep 23 12:14:55.161: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.251 80\nConnection to 10.152.183.251 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:55.161: INFO: stdout: ""
  Sep 23 12:14:56.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5310 exec execpod27n2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.251 80'
  Sep 23 12:14:56.297: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.251 80\nConnection to 10.152.183.251 80 port [tcp/http] succeeded!\n"
  Sep 23 12:14:56.297: INFO: stdout: "nodeport-test-4dh5z"
  Sep 23 12:14:56.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5310 exec execpod27n2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.104 30203'
  Sep 23 12:14:56.443: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.33.104 30203\nConnection to 172.31.33.104 30203 port [tcp/*] succeeded!\n"
  Sep 23 12:14:56.443: INFO: stdout: "nodeport-test-4dh5z"
  Sep 23 12:14:56.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5310 exec execpod27n2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.196 30203'
  Sep 23 12:14:56.590: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.84.196 30203\nConnection to 172.31.84.196 30203 port [tcp/*] succeeded!\n"
  Sep 23 12:14:56.590: INFO: stdout: "nodeport-test-m7jhb"
  Sep 23 12:14:56.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5310" for this suite. @ 09/23/23 12:14:56.594
• [8.968 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/23/23 12:14:56.605
  Sep 23 12:14:56.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/23 12:14:56.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:56.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:56.623
  Sep 23 12:14:56.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6079" for this suite. @ 09/23/23 12:14:56.637
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/23/23 12:14:56.644
  Sep 23 12:14:56.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:14:56.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:14:56.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:14:56.66
  STEP: Creating secret with name s-test-opt-del-7e1c980a-f699-49a3-82f2-ec4b572a923a @ 09/23/23 12:14:56.667
  STEP: Creating secret with name s-test-opt-upd-70870b47-2eb6-4dfa-a67b-32c6858091ba @ 09/23/23 12:14:56.67
  STEP: Creating the pod @ 09/23/23 12:14:56.676
  STEP: Deleting secret s-test-opt-del-7e1c980a-f699-49a3-82f2-ec4b572a923a @ 09/23/23 12:14:58.717
  STEP: Updating secret s-test-opt-upd-70870b47-2eb6-4dfa-a67b-32c6858091ba @ 09/23/23 12:14:58.724
  STEP: Creating secret with name s-test-opt-create-5f25d843-a049-4d60-b73d-578a0af2cfe8 @ 09/23/23 12:14:58.729
  STEP: waiting to observe update in volume @ 09/23/23 12:14:58.733
  Sep 23 12:16:25.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6556" for this suite. @ 09/23/23 12:16:25.162
• [88.525 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/23/23 12:16:25.169
  Sep 23 12:16:25.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 12:16:25.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:16:25.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:16:25.186
  STEP: Creating service test in namespace statefulset-7937 @ 09/23/23 12:16:25.189
  STEP: Creating statefulset ss in namespace statefulset-7937 @ 09/23/23 12:16:25.2
  Sep 23 12:16:25.209: INFO: Found 0 stateful pods, waiting for 1
  Sep 23 12:16:35.214: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/23/23 12:16:35.221
  STEP: Getting /status @ 09/23/23 12:16:35.229
  Sep 23 12:16:35.233: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/23/23 12:16:35.234
  Sep 23 12:16:35.243: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/23/23 12:16:35.243
  Sep 23 12:16:35.245: INFO: Observed &StatefulSet event: ADDED
  Sep 23 12:16:35.245: INFO: Found Statefulset ss in namespace statefulset-7937 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 23 12:16:35.245: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/23/23 12:16:35.245
  Sep 23 12:16:35.245: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 23 12:16:35.252: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/23/23 12:16:35.252
  Sep 23 12:16:35.254: INFO: Observed &StatefulSet event: ADDED
  Sep 23 12:16:35.254: INFO: Deleting all statefulset in ns statefulset-7937
  Sep 23 12:16:35.257: INFO: Scaling statefulset ss to 0
  Sep 23 12:16:45.277: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 12:16:45.280: INFO: Deleting statefulset ss
  Sep 23 12:16:45.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7937" for this suite. @ 09/23/23 12:16:45.299
• [20.136 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/23/23 12:16:45.305
  Sep 23 12:16:45.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 12:16:45.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:16:45.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:16:45.324
  Sep 23 12:16:45.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: creating the pod @ 09/23/23 12:16:45.327
  STEP: submitting the pod to kubernetes @ 09/23/23 12:16:45.327
  Sep 23 12:16:47.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3539" for this suite. @ 09/23/23 12:16:47.455
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/23/23 12:16:47.463
  Sep 23 12:16:47.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename job @ 09/23/23 12:16:47.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:16:47.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:16:47.479
  STEP: Creating a job @ 09/23/23 12:16:47.482
  STEP: Ensuring job reaches completions @ 09/23/23 12:16:47.488
  Sep 23 12:16:57.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1451" for this suite. @ 09/23/23 12:16:57.497
• [10.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/23/23 12:16:57.505
  Sep 23 12:16:57.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:16:57.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:16:57.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:16:57.522
  STEP: Creating configMap with name cm-test-opt-del-944c9fb1-de9e-4925-acdd-6d0bf0007b09 @ 09/23/23 12:16:57.528
  STEP: Creating configMap with name cm-test-opt-upd-612e32c9-28c5-4863-865e-485bf30c1cd8 @ 09/23/23 12:16:57.533
  STEP: Creating the pod @ 09/23/23 12:16:57.536
  STEP: Deleting configmap cm-test-opt-del-944c9fb1-de9e-4925-acdd-6d0bf0007b09 @ 09/23/23 12:16:59.579
  STEP: Updating configmap cm-test-opt-upd-612e32c9-28c5-4863-865e-485bf30c1cd8 @ 09/23/23 12:16:59.586
  STEP: Creating configMap with name cm-test-opt-create-2abe639f-f839-4cd8-ac09-9cea13a668ed @ 09/23/23 12:16:59.59
  STEP: waiting to observe update in volume @ 09/23/23 12:16:59.594
  Sep 23 12:17:03.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1460" for this suite. @ 09/23/23 12:17:03.641
• [6.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/23/23 12:17:03.65
  Sep 23 12:17:03.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:17:03.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:17:03.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:17:03.666
  STEP: Creating projection with secret that has name projected-secret-test-5b871ae0-d8a5-4cfd-836c-fdff825c7b63 @ 09/23/23 12:17:03.669
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:17:03.674
  STEP: Saw pod success @ 09/23/23 12:17:07.697
  Sep 23 12:17:07.701: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-secrets-075ab921-21eb-4b38-8d20-66ed0587f53b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:17:07.716
  Sep 23 12:17:07.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9465" for this suite. @ 09/23/23 12:17:07.734
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/23/23 12:17:07.744
  Sep 23 12:17:07.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 12:17:07.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:17:07.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:17:07.76
  STEP: Creating a test externalName service @ 09/23/23 12:17:07.763
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 09/23/23 12:17:07.767
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 09/23/23 12:17:07.767
  STEP: creating a pod to probe DNS @ 09/23/23 12:17:07.767
  STEP: submitting the pod to kubernetes @ 09/23/23 12:17:07.767
  STEP: retrieving the pod @ 09/23/23 12:17:13.795
  STEP: looking for the results for each expected name from probers @ 09/23/23 12:17:13.8
  Sep 23 12:17:13.808: INFO: DNS probes using dns-test-e94c8474-5dd6-45a3-9bd8-6b3c60138b4c succeeded

  STEP: changing the externalName to bar.example.com @ 09/23/23 12:17:13.808
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 09/23/23 12:17:13.815
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 09/23/23 12:17:13.815
  STEP: creating a second pod to probe DNS @ 09/23/23 12:17:13.815
  STEP: submitting the pod to kubernetes @ 09/23/23 12:17:13.815
  STEP: retrieving the pod @ 09/23/23 12:17:15.833
  STEP: looking for the results for each expected name from probers @ 09/23/23 12:17:15.836
  Sep 23 12:17:15.841: INFO: File wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local from pod  dns-8508/dns-test-98d40e32-4fb3-44d1-839f-7ea89d7b19dc contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 23 12:17:15.846: INFO: File jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local from pod  dns-8508/dns-test-98d40e32-4fb3-44d1-839f-7ea89d7b19dc contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 23 12:17:15.846: INFO: Lookups using dns-8508/dns-test-98d40e32-4fb3-44d1-839f-7ea89d7b19dc failed for: [wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local]

  Sep 23 12:17:15.854: INFO: Pod client logs for webserver: 
  Sep 23 12:17:15.861: INFO: Pod client logs for querier: 
  Sep 23 12:17:15.869: INFO: Pod client logs for jessie-querier: 
  Sep 23 12:17:20.879: INFO: DNS probes using dns-test-98d40e32-4fb3-44d1-839f-7ea89d7b19dc succeeded

  STEP: changing the service to type=ClusterIP @ 09/23/23 12:17:20.879
  W0923 12:17:20.894396      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 09/23/23 12:17:20.894
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 09/23/23 12:17:20.894
  STEP: creating a third pod to probe DNS @ 09/23/23 12:17:20.894
  STEP: submitting the pod to kubernetes @ 09/23/23 12:17:20.898
  STEP: retrieving the pod @ 09/23/23 12:17:22.915
  STEP: looking for the results for each expected name from probers @ 09/23/23 12:17:22.918
  Sep 23 12:17:22.927: INFO: DNS probes using dns-test-be35a347-1d18-4238-a943-84b7e853fd3e succeeded

  Sep 23 12:17:22.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 12:17:22.931
  STEP: deleting the pod @ 09/23/23 12:17:22.946
  STEP: deleting the pod @ 09/23/23 12:17:22.957
  STEP: deleting the test externalName service @ 09/23/23 12:17:22.975
  STEP: Destroying namespace "dns-8508" for this suite. @ 09/23/23 12:17:22.992
• [15.254 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/23/23 12:17:22.998
  Sep 23 12:17:22.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:17:22.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:17:23.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:17:23.015
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1983 @ 09/23/23 12:17:23.018
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/23/23 12:17:23.032
  STEP: creating service externalsvc in namespace services-1983 @ 09/23/23 12:17:23.032
  STEP: creating replication controller externalsvc in namespace services-1983 @ 09/23/23 12:17:23.043
  I0923 12:17:23.050073      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1983, replica count: 2
  I0923 12:17:26.101263      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/23/23 12:17:26.105
  Sep 23 12:17:26.126: INFO: Creating new exec pod
  Sep 23 12:17:28.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-1983 exec execpodslmjs -- /bin/sh -x -c nslookup nodeport-service.services-1983.svc.cluster.local'
  Sep 23 12:17:28.309: INFO: stderr: "+ nslookup nodeport-service.services-1983.svc.cluster.local\n"
  Sep 23 12:17:28.309: INFO: stdout: "Server:\t\t10.152.183.72\nAddress:\t10.152.183.72#53\n\nnodeport-service.services-1983.svc.cluster.local\tcanonical name = externalsvc.services-1983.svc.cluster.local.\nName:\texternalsvc.services-1983.svc.cluster.local\nAddress: 10.152.183.213\n\n"
  Sep 23 12:17:28.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-1983, will wait for the garbage collector to delete the pods @ 09/23/23 12:17:28.313
  Sep 23 12:17:28.374: INFO: Deleting ReplicationController externalsvc took: 7.365223ms
  Sep 23 12:17:28.475: INFO: Terminating ReplicationController externalsvc pods took: 100.946573ms
  Sep 23 12:17:31.593: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-1983" for this suite. @ 09/23/23 12:17:31.606
• [8.614 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/23/23 12:17:31.613
  Sep 23 12:17:31.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:17:31.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:17:31.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:17:31.629
  STEP: Creating projection with secret that has name projected-secret-test-bff071f7-b0c0-4da1-ba76-531cd49967cf @ 09/23/23 12:17:31.632
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:17:31.638
  STEP: Saw pod success @ 09/23/23 12:17:35.659
  Sep 23 12:17:35.662: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-secrets-5ad9a23c-a054-4e8e-b196-468e5fe0caa7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:17:35.67
  Sep 23 12:17:35.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1558" for this suite. @ 09/23/23 12:17:35.691
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/23/23 12:17:35.698
  Sep 23 12:17:35.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 12:17:35.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:17:35.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:17:35.718
  Sep 23 12:18:35.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8992" for this suite. @ 09/23/23 12:18:35.738
• [60.045 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/23/23 12:18:35.744
  Sep 23 12:18:35.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:18:35.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:18:35.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:18:35.762
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/23/23 12:18:35.765
  STEP: Saw pod success @ 09/23/23 12:18:39.787
  Sep 23 12:18:39.790: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-8c48a837-da47-4128-902c-838ff2ec2557 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:18:39.797
  Sep 23 12:18:39.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-767" for this suite. @ 09/23/23 12:18:39.82
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/23/23 12:18:39.828
  Sep 23 12:18:39.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename namespaces @ 09/23/23 12:18:39.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:18:39.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:18:39.842
  STEP: Updating Namespace "namespaces-1334" @ 09/23/23 12:18:39.845
  Sep 23 12:18:39.853: INFO: Namespace "namespaces-1334" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"c17679e4-bee1-4eb8-b859-bd4a262cbf5a", "kubernetes.io/metadata.name":"namespaces-1334", "namespaces-1334":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep 23 12:18:39.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1334" for this suite. @ 09/23/23 12:18:39.857
• [0.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/23/23 12:18:39.863
  Sep 23 12:18:39.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 12:18:39.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:18:39.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:18:39.88
  STEP: creating a Pod with a static label @ 09/23/23 12:18:39.889
  STEP: watching for Pod to be ready @ 09/23/23 12:18:39.897
  Sep 23 12:18:39.899: INFO: observed Pod pod-test in namespace pods-8068 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep 23 12:18:39.902: INFO: observed Pod pod-test in namespace pods-8068 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC  }]
  Sep 23 12:18:39.917: INFO: observed Pod pod-test in namespace pods-8068 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC  }]
  Sep 23 12:18:40.656: INFO: Found Pod pod-test in namespace pods-8068 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:40 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:40 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 12:18:39 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/23/23 12:18:40.66
  STEP: getting the Pod and ensuring that it's patched @ 09/23/23 12:18:40.671
  STEP: replacing the Pod's status Ready condition to False @ 09/23/23 12:18:40.675
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/23/23 12:18:40.688
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/23/23 12:18:40.688
  STEP: watching for the Pod to be deleted @ 09/23/23 12:18:40.699
  Sep 23 12:18:40.700: INFO: observed event type MODIFIED
  Sep 23 12:18:42.658: INFO: observed event type MODIFIED
  Sep 23 12:18:42.853: INFO: observed event type MODIFIED
  Sep 23 12:18:43.661: INFO: observed event type MODIFIED
  Sep 23 12:18:43.677: INFO: observed event type MODIFIED
  Sep 23 12:18:43.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8068" for this suite. @ 09/23/23 12:18:43.689
• [3.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/23/23 12:18:43.697
  Sep 23 12:18:43.697: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 12:18:43.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:18:43.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:18:43.714
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:18:43.716
  STEP: Saw pod success @ 09/23/23 12:18:47.741
  Sep 23 12:18:47.744: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-ee077b59-6895-45b2-8581-406189025112 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:18:47.751
  Sep 23 12:18:47.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4954" for this suite. @ 09/23/23 12:18:47.768
• [4.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/23/23 12:18:47.774
  Sep 23 12:18:47.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:18:47.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:18:47.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:18:47.791
  STEP: Creating projection with secret that has name projected-secret-test-map-eb98be04-d42d-4ece-9877-5f3d6ce64c43 @ 09/23/23 12:18:47.794
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:18:47.798
  STEP: Saw pod success @ 09/23/23 12:18:51.824
  Sep 23 12:18:51.827: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-secrets-8768bbc7-ccef-484e-8143-489ff2338cb2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:18:51.834
  Sep 23 12:18:51.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5331" for this suite. @ 09/23/23 12:18:51.856
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/23/23 12:18:51.862
  Sep 23 12:18:51.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename subpath @ 09/23/23 12:18:51.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:18:51.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:18:51.877
  STEP: Setting up data @ 09/23/23 12:18:51.88
  STEP: Creating pod pod-subpath-test-projected-xftf @ 09/23/23 12:18:51.889
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/23 12:18:51.889
  STEP: Saw pod success @ 09/23/23 12:19:13.956
  Sep 23 12:19:13.960: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-subpath-test-projected-xftf container test-container-subpath-projected-xftf: <nil>
  STEP: delete the pod @ 09/23/23 12:19:13.968
  STEP: Deleting pod pod-subpath-test-projected-xftf @ 09/23/23 12:19:13.982
  Sep 23 12:19:13.982: INFO: Deleting pod "pod-subpath-test-projected-xftf" in namespace "subpath-8417"
  Sep 23 12:19:13.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8417" for this suite. @ 09/23/23 12:19:13.99
• [22.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/23/23 12:19:13.998
  Sep 23 12:19:13.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:19:13.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:14.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:14.015
  STEP: Creating configMap with name projected-configmap-test-volume-map-fb66a436-bc75-4a22-917d-fcb637782c50 @ 09/23/23 12:19:14.018
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:19:14.023
  STEP: Saw pod success @ 09/23/23 12:19:18.043
  Sep 23 12:19:18.047: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-configmaps-434d2020-bd0b-4831-8f31-5245e0bf2c8a container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:19:18.054
  Sep 23 12:19:18.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8807" for this suite. @ 09/23/23 12:19:18.071
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/23/23 12:19:18.079
  Sep 23 12:19:18.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 12:19:18.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:18.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:18.095
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:19:18.099
  STEP: Saw pod success @ 09/23/23 12:19:22.122
  Sep 23 12:19:22.126: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-9c6e1e31-59e1-4b06-84b8-64d271a9a2e8 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:19:22.132
  Sep 23 12:19:22.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-299" for this suite. @ 09/23/23 12:19:22.152
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/23/23 12:19:22.16
  Sep 23 12:19:22.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sysctl @ 09/23/23 12:19:22.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:22.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:22.176
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/23/23 12:19:22.179
  Sep 23 12:19:22.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9291" for this suite. @ 09/23/23 12:19:22.188
• [0.035 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/23/23 12:19:22.195
  Sep 23 12:19:22.195: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/23 12:19:22.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:22.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:22.209
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/23 12:19:22.217
  STEP: create the pod with lifecycle hook @ 09/23/23 12:19:24.239
  STEP: check poststart hook @ 09/23/23 12:19:26.259
  STEP: delete the pod with lifecycle hook @ 09/23/23 12:19:26.266
  Sep 23 12:19:28.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6738" for this suite. @ 09/23/23 12:19:28.287
• [6.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/23/23 12:19:28.294
  Sep 23 12:19:28.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:19:28.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:28.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:28.312
  STEP: Creating configMap with name configmap-test-volume-1286d90d-58e0-45b9-9672-db65da64b254 @ 09/23/23 12:19:28.314
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:19:28.319
  STEP: Saw pod success @ 09/23/23 12:19:32.342
  Sep 23 12:19:32.346: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-configmaps-f935fdd5-71b4-49d7-b848-9404af26b044 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:19:32.363
  Sep 23 12:19:32.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7451" for this suite. @ 09/23/23 12:19:32.382
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/23/23 12:19:32.388
  Sep 23 12:19:32.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename discovery @ 09/23/23 12:19:32.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:32.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:32.405
  STEP: Setting up server cert @ 09/23/23 12:19:32.409
  STEP: Requesting APIResourceList from "/api/v1" @ 09/23/23 12:19:32.951
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/23/23 12:19:32.953
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/23/23 12:19:32.954
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/23/23 12:19:32.955
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/23/23 12:19:32.956
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/23/23 12:19:32.957
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/23/23 12:19:32.958
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/23/23 12:19:32.96
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/23/23 12:19:32.961
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/23/23 12:19:32.962
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/23/23 12:19:32.963
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/23/23 12:19:32.964
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/23/23 12:19:32.965
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/23/23 12:19:32.966
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/23/23 12:19:32.967
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/23/23 12:19:32.969
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/23/23 12:19:32.97
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/23/23 12:19:32.971
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/23/23 12:19:32.972
  Sep 23 12:19:32.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4454" for this suite. @ 09/23/23 12:19:32.977
• [0.597 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/23/23 12:19:32.986
  Sep 23 12:19:32.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/23 12:19:32.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:19:33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:19:33.003
  Sep 23 12:19:33.019: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 23 12:20:33.042: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/23/23 12:20:33.046
  Sep 23 12:20:33.071: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 23 12:20:33.078: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 23 12:20:33.099: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 23 12:20:33.109: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 23 12:20:33.129: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 23 12:20:33.136: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/23/23 12:20:33.136
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/23/23 12:20:35.161
  Sep 23 12:20:39.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9168" for this suite. @ 09/23/23 12:20:39.243
• [66.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/23/23 12:20:39.25
  Sep 23 12:20:39.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 12:20:39.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:20:39.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:20:39.267
  STEP: creating the pod @ 09/23/23 12:20:39.27
  STEP: setting up watch @ 09/23/23 12:20:39.27
  STEP: submitting the pod to kubernetes @ 09/23/23 12:20:39.374
  STEP: verifying the pod is in kubernetes @ 09/23/23 12:20:39.383
  STEP: verifying pod creation was observed @ 09/23/23 12:20:39.389
  STEP: deleting the pod gracefully @ 09/23/23 12:20:41.404
  STEP: verifying pod deletion was observed @ 09/23/23 12:20:41.411
  Sep 23 12:20:42.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5970" for this suite. @ 09/23/23 12:20:42.912
• [3.668 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/23/23 12:20:42.919
  Sep 23 12:20:42.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename init-container @ 09/23/23 12:20:42.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:20:42.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:20:42.936
  STEP: creating the pod @ 09/23/23 12:20:42.94
  Sep 23 12:20:42.940: INFO: PodSpec: initContainers in spec.initContainers
  Sep 23 12:21:24.970: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4101219f-72d6-444e-9aba-c9d8f99180fc", GenerateName:"", Namespace:"init-container-6309", SelfLink:"", UID:"b058dc05-d7f6-4ef5-9d7f-dce9a113f910", ResourceVersion:"7356", Generation:0, CreationTimestamp:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"940805353"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f32810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 23, 12, 21, 24, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f32840), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-j6nt2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004c825a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j6nt2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j6nt2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-j6nt2", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003582bd0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-77-156", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0002b0930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003582c60)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003582c80)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003582c88), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003582c8c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000c68900), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.77.156", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.55.115", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.55.115"}}, StartTime:time.Date(2023, time.September, 23, 12, 20, 42, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc000f328d0), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002b0af0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://339a00d0192d97775f8ac43aadfdbd67c0ff3b2ebf5475bd792fc9adf37af12a", Started:(*bool)(0xc003582d2a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c82620), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc003582d3f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c82600), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003582d04), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep 23 12:21:24.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6309" for this suite. @ 09/23/23 12:21:24.976
• [42.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/23/23 12:21:24.985
  Sep 23 12:21:24.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 12:21:24.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:21:25.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:21:25.005
  STEP: create the deployment @ 09/23/23 12:21:25.008
  W0923 12:21:25.016973      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/23/23 12:21:25.017
  STEP: delete the deployment @ 09/23/23 12:21:25.532
  STEP: wait for all rs to be garbage collected @ 09/23/23 12:21:25.543
  STEP: expected 0 pods, got 2 pods @ 09/23/23 12:21:25.558
  STEP: Gathering metrics @ 09/23/23 12:21:26.068
  W0923 12:21:26.074739      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 23 12:21:26.074: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 23 12:21:26.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4132" for this suite. @ 09/23/23 12:21:26.078
• [1.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/23/23 12:21:26.088
  Sep 23 12:21:26.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:21:26.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:21:26.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:21:26.107
  STEP: Creating the pod @ 09/23/23 12:21:26.109
  Sep 23 12:21:28.661: INFO: Successfully updated pod "annotationupdate26d06aa9-1ef6-4b2f-85b5-0ab22529d971"
  Sep 23 12:21:30.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2610" for this suite. @ 09/23/23 12:21:30.68
• [4.599 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/23/23 12:21:30.688
  Sep 23 12:21:30.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 12:21:30.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:21:30.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:21:30.705
  STEP: Creating service test in namespace statefulset-6992 @ 09/23/23 12:21:30.708
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/23/23 12:21:30.714
  STEP: Creating stateful set ss in namespace statefulset-6992 @ 09/23/23 12:21:30.719
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6992 @ 09/23/23 12:21:30.726
  Sep 23 12:21:30.731: INFO: Found 0 stateful pods, waiting for 1
  Sep 23 12:21:40.737: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/23/23 12:21:40.737
  Sep 23 12:21:40.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 12:21:40.886: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 12:21:40.887: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 12:21:40.887: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 12:21:40.890: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep 23 12:21:50.895: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 12:21:50.895: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 23 12:21:50.913: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999984s
  Sep 23 12:21:51.918: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994824729s
  Sep 23 12:21:52.923: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989905181s
  Sep 23 12:21:53.929: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.985177276s
  Sep 23 12:21:54.933: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.980099173s
  Sep 23 12:21:55.938: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.975074794s
  Sep 23 12:21:56.942: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.97033506s
  Sep 23 12:21:57.948: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.965452026s
  Sep 23 12:21:58.952: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.960296267s
  Sep 23 12:21:59.957: INFO: Verifying statefulset ss doesn't scale past 1 for another 956.191867ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6992 @ 09/23/23 12:22:00.957
  Sep 23 12:22:00.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 12:22:01.113: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 12:22:01.113: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 12:22:01.113: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 12:22:01.117: INFO: Found 1 stateful pods, waiting for 3
  Sep 23 12:22:11.124: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 12:22:11.124: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 12:22:11.124: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/23/23 12:22:11.124
  STEP: Scale down will halt with unhealthy stateful pod @ 09/23/23 12:22:11.125
  Sep 23 12:22:11.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 12:22:11.300: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 12:22:11.300: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 12:22:11.300: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 12:22:11.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 12:22:11.441: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 12:22:11.441: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 12:22:11.441: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 12:22:11.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 12:22:11.612: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 12:22:11.612: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 12:22:11.612: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 12:22:11.612: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 23 12:22:11.616: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Sep 23 12:22:21.624: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 12:22:21.624: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 12:22:21.624: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 12:22:21.643: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999826s
  Sep 23 12:22:22.649: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.989066876s
  Sep 23 12:22:23.654: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.983174769s
  Sep 23 12:22:24.658: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.978855239s
  Sep 23 12:22:25.663: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.974923713s
  Sep 23 12:22:26.668: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969511723s
  Sep 23 12:22:27.673: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.965164387s
  Sep 23 12:22:28.678: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.959930928s
  Sep 23 12:22:29.681: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.955654798s
  Sep 23 12:22:30.686: INFO: Verifying statefulset ss doesn't scale past 3 for another 951.732169ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6992 @ 09/23/23 12:22:31.687
  Sep 23 12:22:31.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 12:22:31.848: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 12:22:31.848: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 12:22:31.848: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 12:22:31.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 12:22:32.011: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 12:22:32.011: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 12:22:32.011: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 12:22:32.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-6992 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 12:22:32.164: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 12:22:32.164: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 12:22:32.164: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 12:22:32.164: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/23/23 12:22:42.182
  Sep 23 12:22:42.182: INFO: Deleting all statefulset in ns statefulset-6992
  Sep 23 12:22:42.185: INFO: Scaling statefulset ss to 0
  Sep 23 12:22:42.197: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 12:22:42.200: INFO: Deleting statefulset ss
  Sep 23 12:22:42.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6992" for this suite. @ 09/23/23 12:22:42.219
• [71.536 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/23/23 12:22:42.225
  Sep 23 12:22:42.225: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:22:42.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:22:42.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:22:42.24
  STEP: Creating projection with secret that has name projected-secret-test-map-f8777d9b-def9-4573-8e77-4ef012daceb8 @ 09/23/23 12:22:42.243
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:22:42.248
  STEP: Saw pod success @ 09/23/23 12:22:46.272
  Sep 23 12:22:46.276: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-secrets-a1bcbddc-3472-4d47-b590-8753932cf8c6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:22:46.293
  Sep 23 12:22:46.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-724" for this suite. @ 09/23/23 12:22:46.313
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/23/23 12:22:46.322
  Sep 23 12:22:46.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/23/23 12:22:46.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:22:46.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:22:46.338
  STEP: Creating two CSIDrivers @ 09/23/23 12:22:46.34
  STEP: Getting "inline-driver-5d9e3c2f-d666-421a-878c-88c7335ea9d0" & "inline-driver-aab33228-7d3a-4fb3-8685-bb29d4f207e0" @ 09/23/23 12:22:46.355
  STEP: Patching the CSIDriver "inline-driver-aab33228-7d3a-4fb3-8685-bb29d4f207e0" @ 09/23/23 12:22:46.362
  STEP: Updating the CSIDriver "inline-driver-aab33228-7d3a-4fb3-8685-bb29d4f207e0" @ 09/23/23 12:22:46.368
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5552" @ 09/23/23 12:22:46.376
  STEP: Deleting CSIDriver "inline-driver-5d9e3c2f-d666-421a-878c-88c7335ea9d0" @ 09/23/23 12:22:46.379
  STEP: Confirm deletion of CSIDriver "inline-driver-5d9e3c2f-d666-421a-878c-88c7335ea9d0" @ 09/23/23 12:22:46.385
  STEP: Deleting CSIDriver "inline-driver-aab33228-7d3a-4fb3-8685-bb29d4f207e0" via DeleteCollection @ 09/23/23 12:22:46.388
  STEP: Confirm deletion of CSIDriver "inline-driver-aab33228-7d3a-4fb3-8685-bb29d4f207e0" @ 09/23/23 12:22:46.396
  Sep 23 12:22:46.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5552" for this suite. @ 09/23/23 12:22:46.403
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/23/23 12:22:46.412
  Sep 23 12:22:46.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:22:46.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:22:46.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:22:46.428
  STEP: Creating configMap configmap-8366/configmap-test-adaa4669-3940-4e32-9760-8e4799e6c8d2 @ 09/23/23 12:22:46.43
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:22:46.435
  STEP: Saw pod success @ 09/23/23 12:22:50.456
  Sep 23 12:22:50.461: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-0feb979d-e0c3-42a3-8649-af88b1858051 container env-test: <nil>
  STEP: delete the pod @ 09/23/23 12:22:50.468
  Sep 23 12:22:50.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8366" for this suite. @ 09/23/23 12:22:50.49
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/23/23 12:22:50.497
  Sep 23 12:22:50.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename server-version @ 09/23/23 12:22:50.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:22:50.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:22:50.512
  STEP: Request ServerVersion @ 09/23/23 12:22:50.515
  STEP: Confirm major version @ 09/23/23 12:22:50.516
  Sep 23 12:22:50.516: INFO: Major version: 1
  STEP: Confirm minor version @ 09/23/23 12:22:50.516
  Sep 23 12:22:50.516: INFO: cleanMinorVersion: 28
  Sep 23 12:22:50.516: INFO: Minor version: 28
  Sep 23 12:22:50.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4761" for this suite. @ 09/23/23 12:22:50.52
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/23/23 12:22:50.529
  Sep 23 12:22:50.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:22:50.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:22:50.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:22:50.543
  STEP: Creating configMap with name configmap-test-volume-map-4f702294-c991-47e5-b0f3-276427233d06 @ 09/23/23 12:22:50.547
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:22:50.552
  STEP: Saw pod success @ 09/23/23 12:22:54.574
  Sep 23 12:22:54.577: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-65c5f1d1-c75c-4191-afa1-839b56b7ea29 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:22:54.585
  Sep 23 12:22:54.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-143" for this suite. @ 09/23/23 12:22:54.603
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/23/23 12:22:54.612
  Sep 23 12:22:54.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename job @ 09/23/23 12:22:54.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:22:54.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:22:54.629
  STEP: Creating Indexed job @ 09/23/23 12:22:54.632
  STEP: Ensuring job reaches completions @ 09/23/23 12:22:54.638
  STEP: Ensuring pods with index for job exist @ 09/23/23 12:23:02.643
  Sep 23 12:23:02.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4983" for this suite. @ 09/23/23 12:23:02.651
• [8.045 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/23/23 12:23:02.657
  Sep 23 12:23:02.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 12:23:02.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:02.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:02.673
  STEP: Creating service test in namespace statefulset-7104 @ 09/23/23 12:23:02.676
  Sep 23 12:23:02.693: INFO: Found 0 stateful pods, waiting for 1
  Sep 23 12:23:12.700: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/23/23 12:23:12.706
  W0923 12:23:12.713783      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep 23 12:23:12.723: INFO: Found 1 stateful pods, waiting for 2
  Sep 23 12:23:22.728: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 12:23:22.728: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/23/23 12:23:22.734
  STEP: Delete all of the StatefulSets @ 09/23/23 12:23:22.737
  STEP: Verify that StatefulSets have been deleted @ 09/23/23 12:23:22.745
  Sep 23 12:23:22.749: INFO: Deleting all statefulset in ns statefulset-7104
  Sep 23 12:23:22.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7104" for this suite. @ 09/23/23 12:23:22.77
• [20.122 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/23/23 12:23:22.779
  Sep 23 12:23:22.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/23 12:23:22.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:22.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:22.797
  Sep 23 12:23:24.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5919" for this suite. @ 09/23/23 12:23:24.829
• [2.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/23/23 12:23:24.836
  Sep 23 12:23:24.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:23:24.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:24.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:24.855
  STEP: Counting existing ResourceQuota @ 09/23/23 12:23:24.857
  STEP: Creating a ResourceQuota @ 09/23/23 12:23:29.861
  STEP: Ensuring resource quota status is calculated @ 09/23/23 12:23:29.867
  STEP: Creating a ReplicaSet @ 09/23/23 12:23:31.873
  STEP: Ensuring resource quota status captures replicaset creation @ 09/23/23 12:23:31.884
  STEP: Deleting a ReplicaSet @ 09/23/23 12:23:33.888
  STEP: Ensuring resource quota status released usage @ 09/23/23 12:23:33.894
  Sep 23 12:23:35.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3132" for this suite. @ 09/23/23 12:23:35.903
• [11.073 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/23/23 12:23:35.909
  Sep 23 12:23:35.909: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:23:35.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:35.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:35.926
  STEP: Setting up server cert @ 09/23/23 12:23:35.947
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:23:36.573
  STEP: Deploying the webhook pod @ 09/23/23 12:23:36.584
  STEP: Wait for the deployment to be ready @ 09/23/23 12:23:36.594
  Sep 23 12:23:36.603: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:23:38.614
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:23:38.625
  Sep 23 12:23:39.626: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 23 12:23:39.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/23/23 12:23:40.144
  STEP: Creating a custom resource that should be denied by the webhook @ 09/23/23 12:23:40.159
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/23/23 12:23:42.178
  STEP: Updating the custom resource with disallowed data should be denied @ 09/23/23 12:23:42.184
  STEP: Deleting the custom resource should be denied @ 09/23/23 12:23:42.193
  STEP: Remove the offending key and value from the custom resource data @ 09/23/23 12:23:42.199
  STEP: Deleting the updated custom resource should be successful @ 09/23/23 12:23:42.212
  Sep 23 12:23:42.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-872" for this suite. @ 09/23/23 12:23:42.795
  STEP: Destroying namespace "webhook-markers-2215" for this suite. @ 09/23/23 12:23:42.801
• [6.899 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/23/23 12:23:42.809
  Sep 23 12:23:42.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 12:23:42.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:42.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:42.825
  STEP: Creating simple DaemonSet "daemon-set" @ 09/23/23 12:23:42.846
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/23 12:23:42.851
  Sep 23 12:23:42.854: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:42.854: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:42.858: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:23:42.858: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:23:43.863: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:43.863: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:43.867: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:23:43.867: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:23:44.862: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:44.862: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:44.867: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:23:44.867: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/23/23 12:23:44.871
  Sep 23 12:23:44.887: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:44.887: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:44.890: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 23 12:23:44.890: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 12:23:45.896: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:45.897: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:45.900: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 23 12:23:45.900: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 12:23:46.896: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:46.896: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:46.899: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 23 12:23:46.899: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 12:23:47.895: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:47.895: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:23:47.899: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:23:47.899: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/23 12:23:47.905
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7374, will wait for the garbage collector to delete the pods @ 09/23/23 12:23:47.905
  Sep 23 12:23:47.965: INFO: Deleting DaemonSet.extensions daemon-set took: 6.567572ms
  Sep 23 12:23:48.066: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.575637ms
  Sep 23 12:23:50.370: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:23:50.370: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 23 12:23:50.373: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8636"},"items":null}

  Sep 23 12:23:50.377: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8636"},"items":null}

  Sep 23 12:23:50.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7374" for this suite. @ 09/23/23 12:23:50.395
• [7.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/23/23 12:23:50.404
  Sep 23 12:23:50.404: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:23:50.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:50.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:50.421
  STEP: Setting up server cert @ 09/23/23 12:23:50.441
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:23:50.69
  STEP: Deploying the webhook pod @ 09/23/23 12:23:50.697
  STEP: Wait for the deployment to be ready @ 09/23/23 12:23:50.707
  Sep 23 12:23:50.717: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:23:52.728
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:23:52.74
  Sep 23 12:23:53.740: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 23 12:23:53.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4384-crds.webhook.example.com via the AdmissionRegistration API @ 09/23/23 12:23:54.258
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/23/23 12:23:54.273
  Sep 23 12:23:56.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9342" for this suite. @ 09/23/23 12:23:56.86
  STEP: Destroying namespace "webhook-markers-7052" for this suite. @ 09/23/23 12:23:56.867
• [6.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/23/23 12:23:56.876
  Sep 23 12:23:56.876: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 12:23:56.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:23:56.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:23:56.891
  Sep 23 12:23:56.908: INFO: created pod
  STEP: Saw pod success @ 09/23/23 12:24:00.924
  Sep 23 12:24:30.924: INFO: polling logs
  Sep 23 12:24:30.953: INFO: Pod logs: 
  I0923 12:23:57.663566       1 log.go:194] OK: Got token
  I0923 12:23:57.663613       1 log.go:194] validating with in-cluster discovery
  I0923 12:23:57.663860       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0923 12:23:57.663889       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3626:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00029dfe0), NotBefore:(*jwt.NumericDate)(0xc0000480e8), IssuedAt:(*jwt.NumericDate)(0xc00029dff0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3626", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"02d274f1-422f-4509-a4d9-1026f19dbb43"}}}
  I0923 12:23:57.674947       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0923 12:23:57.681760       1 log.go:194] OK: Validated signature on JWT
  I0923 12:23:57.681865       1 log.go:194] OK: Got valid claims from token!
  I0923 12:23:57.681895       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3626:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000491f0), NotBefore:(*jwt.NumericDate)(0xc000049218), IssuedAt:(*jwt.NumericDate)(0xc0000491f8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3626", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"02d274f1-422f-4509-a4d9-1026f19dbb43"}}}

  Sep 23 12:24:30.953: INFO: completed pod
  Sep 23 12:24:30.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3626" for this suite. @ 09/23/23 12:24:30.969
• [34.101 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/23/23 12:24:30.976
  Sep 23 12:24:30.976: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:24:30.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:30.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:24:31.001
  STEP: Creating secret with name secret-test-c89d4607-4239-42b6-a227-cbc93e408192 @ 09/23/23 12:24:31.004
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:24:31.012
  STEP: Saw pod success @ 09/23/23 12:24:35.041
  Sep 23 12:24:35.045: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-secrets-b8a0a95a-3f76-47a8-b105-b33a0a60b9bf container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:24:35.052
  Sep 23 12:24:35.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8224" for this suite. @ 09/23/23 12:24:35.073
• [4.105 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/23/23 12:24:35.081
  Sep 23 12:24:35.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename namespaces @ 09/23/23 12:24:35.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:35.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:24:35.098
  STEP: Creating a test namespace @ 09/23/23 12:24:35.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:35.113
  STEP: Creating a service in the namespace @ 09/23/23 12:24:35.116
  STEP: Deleting the namespace @ 09/23/23 12:24:35.128
  STEP: Waiting for the namespace to be removed. @ 09/23/23 12:24:35.136
  STEP: Recreating the namespace @ 09/23/23 12:24:41.141
  STEP: Verifying there is no service in the namespace @ 09/23/23 12:24:41.155
  Sep 23 12:24:41.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7854" for this suite. @ 09/23/23 12:24:41.163
  STEP: Destroying namespace "nsdeletetest-655" for this suite. @ 09/23/23 12:24:41.17
  Sep 23 12:24:41.173: INFO: Namespace nsdeletetest-655 was already deleted
  STEP: Destroying namespace "nsdeletetest-3437" for this suite. @ 09/23/23 12:24:41.173
• [6.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/23/23 12:24:41.18
  Sep 23 12:24:41.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:24:41.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:41.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:24:41.196
  STEP: Setting up server cert @ 09/23/23 12:24:41.216
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:24:41.517
  STEP: Deploying the webhook pod @ 09/23/23 12:24:41.527
  STEP: Wait for the deployment to be ready @ 09/23/23 12:24:41.538
  Sep 23 12:24:41.546: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:24:43.558
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:24:43.568
  Sep 23 12:24:44.569: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 23 12:24:44.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6359-crds.webhook.example.com via the AdmissionRegistration API @ 09/23/23 12:24:45.088
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/23/23 12:24:45.103
  Sep 23 12:24:47.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7774" for this suite. @ 09/23/23 12:24:47.701
  STEP: Destroying namespace "webhook-markers-4676" for this suite. @ 09/23/23 12:24:47.708
• [6.535 seconds]
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/23/23 12:24:47.715
  Sep 23 12:24:47.715: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:24:47.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:47.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:24:47.732
  STEP: Creating secret with name secret-test-39350306-c79d-4d32-abd7-1d95d3f9527a @ 09/23/23 12:24:47.734
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:24:47.738
  STEP: Saw pod success @ 09/23/23 12:24:51.763
  Sep 23 12:24:51.767: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-secrets-d2e4f994-77c5-4b71-8206-08697799e8d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:24:51.774
  Sep 23 12:24:51.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2662" for this suite. @ 09/23/23 12:24:51.792
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/23/23 12:24:51.8
  Sep 23 12:24:51.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename proxy @ 09/23/23 12:24:51.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:51.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:24:51.818
  Sep 23 12:24:51.821: INFO: Creating pod...
  Sep 23 12:24:53.840: INFO: Creating service...
  Sep 23 12:24:53.849: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/DELETE
  Sep 23 12:24:53.859: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 23 12:24:53.859: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/GET
  Sep 23 12:24:53.863: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 23 12:24:53.863: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/HEAD
  Sep 23 12:24:53.866: INFO: http.Client request:HEAD | StatusCode:200
  Sep 23 12:24:53.866: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep 23 12:24:53.870: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 23 12:24:53.870: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/PATCH
  Sep 23 12:24:53.874: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 23 12:24:53.874: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/POST
  Sep 23 12:24:53.877: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 23 12:24:53.877: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/pods/agnhost/proxy/some/path/with/PUT
  Sep 23 12:24:53.881: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 23 12:24:53.881: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/DELETE
  Sep 23 12:24:53.887: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 23 12:24:53.887: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/GET
  Sep 23 12:24:53.893: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 23 12:24:53.893: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/HEAD
  Sep 23 12:24:53.899: INFO: http.Client request:HEAD | StatusCode:200
  Sep 23 12:24:53.899: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/OPTIONS
  Sep 23 12:24:53.904: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 23 12:24:53.904: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/PATCH
  Sep 23 12:24:53.910: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 23 12:24:53.910: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/POST
  Sep 23 12:24:53.916: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 23 12:24:53.916: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1517/services/test-service/proxy/some/path/with/PUT
  Sep 23 12:24:53.921: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 23 12:24:53.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1517" for this suite. @ 09/23/23 12:24:53.925
• [2.132 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/23/23 12:24:53.932
  Sep 23 12:24:53.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename job @ 09/23/23 12:24:53.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:24:53.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:24:53.947
  STEP: Creating a suspended job @ 09/23/23 12:24:53.952
  STEP: Patching the Job @ 09/23/23 12:24:53.959
  STEP: Watching for Job to be patched @ 09/23/23 12:24:53.975
  Sep 23 12:24:53.976: INFO: Event ADDED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-job-label:e2e-952hp] and annotations: map[]
  Sep 23 12:24:53.976: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-job-label:e2e-952hp] and annotations: map[]
  Sep 23 12:24:53.976: INFO: Event MODIFIED found for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[]
  STEP: Updating the job @ 09/23/23 12:24:53.976
  STEP: Watching for Job to be updated @ 09/23/23 12:24:53.986
  Sep 23 12:24:53.988: INFO: Event MODIFIED found for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:24:53.988: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/23/23 12:24:53.988
  Sep 23 12:24:53.992: INFO: Job: e2e-952hp as labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp]
  STEP: Waiting for job to complete @ 09/23/23 12:24:53.992
  STEP: Delete a job collection with a labelselector @ 09/23/23 12:25:01.998
  STEP: Watching for Job to be deleted @ 09/23/23 12:25:02.007
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event MODIFIED observed for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  Sep 23 12:25:02.009: INFO: Event DELETED found for Job e2e-952hp in namespace job-2380 with labels: map[e2e-952hp:patched e2e-job-label:e2e-952hp] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/23/23 12:25:02.009
  Sep 23 12:25:02.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2380" for this suite. @ 09/23/23 12:25:02.023
• [8.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/23/23 12:25:02.033
  Sep 23 12:25:02.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replication-controller @ 09/23/23 12:25:02.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:25:02.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:25:02.05
  STEP: Creating ReplicationController "e2e-rc-4smsv" @ 09/23/23 12:25:02.053
  Sep 23 12:25:02.059: INFO: Get Replication Controller "e2e-rc-4smsv" to confirm replicas
  Sep 23 12:25:03.063: INFO: Get Replication Controller "e2e-rc-4smsv" to confirm replicas
  Sep 23 12:25:03.068: INFO: Found 1 replicas for "e2e-rc-4smsv" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-4smsv" @ 09/23/23 12:25:03.068
  STEP: Updating a scale subresource @ 09/23/23 12:25:03.071
  STEP: Verifying replicas where modified for replication controller "e2e-rc-4smsv" @ 09/23/23 12:25:03.077
  Sep 23 12:25:03.077: INFO: Get Replication Controller "e2e-rc-4smsv" to confirm replicas
  Sep 23 12:25:04.082: INFO: Get Replication Controller "e2e-rc-4smsv" to confirm replicas
  Sep 23 12:25:04.086: INFO: Found 2 replicas for "e2e-rc-4smsv" replication controller
  Sep 23 12:25:04.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9660" for this suite. @ 09/23/23 12:25:04.09
• [2.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/23/23 12:25:04.097
  Sep 23 12:25:04.097: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:25:04.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:25:04.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:25:04.114
  STEP: Creating a ResourceQuota with terminating scope @ 09/23/23 12:25:04.116
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/23 12:25:04.123
  STEP: Creating a ResourceQuota with not terminating scope @ 09/23/23 12:25:06.128
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/23 12:25:06.133
  STEP: Creating a long running pod @ 09/23/23 12:25:08.138
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/23/23 12:25:08.153
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/23/23 12:25:10.158
  STEP: Deleting the pod @ 09/23/23 12:25:12.162
  STEP: Ensuring resource quota status released the pod usage @ 09/23/23 12:25:12.179
  STEP: Creating a terminating pod @ 09/23/23 12:25:14.183
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/23/23 12:25:14.194
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/23/23 12:25:16.199
  STEP: Deleting the pod @ 09/23/23 12:25:18.203
  STEP: Ensuring resource quota status released the pod usage @ 09/23/23 12:25:18.219
  Sep 23 12:25:20.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5006" for this suite. @ 09/23/23 12:25:20.23
• [16.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/23/23 12:25:20.237
  Sep 23 12:25:20.237: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 12:25:20.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:25:20.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:25:20.254
  Sep 23 12:25:20.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  W0923 12:25:22.796997      22 warnings.go:70] unknown field "alpha"
  W0923 12:25:22.797023      22 warnings.go:70] unknown field "beta"
  W0923 12:25:22.797030      22 warnings.go:70] unknown field "delta"
  W0923 12:25:22.797036      22 warnings.go:70] unknown field "epsilon"
  W0923 12:25:22.797044      22 warnings.go:70] unknown field "gamma"
  Sep 23 12:25:23.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7404" for this suite. @ 09/23/23 12:25:23.341
• [3.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/23/23 12:25:23.348
  Sep 23 12:25:23.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 12:25:23.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:25:23.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:25:23.366
  STEP: Creating pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427 @ 09/23/23 12:25:23.368
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 12:25:25.386
  Sep 23 12:25:25.389: INFO: Initial restart count of pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d is 0
  Sep 23 12:25:25.392: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:27.398: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:29.402: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:31.408: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:33.413: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:35.418: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:37.423: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:39.430: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:41.435: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:43.440: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:45.445: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:47.450: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:49.454: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:51.459: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:53.464: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:55.468: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:57.473: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:25:59.477: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:01.482: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:03.486: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:05.492: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:07.496: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:09.501: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:11.505: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:13.512: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:15.517: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:17.522: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:19.527: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:21.532: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:23.538: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:25.542: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:27.548: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:29.553: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:31.558: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:33.562: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:35.567: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:37.571: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:39.577: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:41.581: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:43.586: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:45.590: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:47.595: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:49.600: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:51.604: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:53.609: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:55.616: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:57.620: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:26:59.624: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:01.629: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:03.634: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:05.639: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:07.644: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:09.652: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:11.656: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:13.662: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:15.667: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:17.672: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:19.677: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:21.682: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:23.688: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:25.693: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:27.698: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:29.702: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:31.708: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:33.712: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:35.717: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:37.721: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:39.727: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:41.731: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:43.736: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:45.741: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:47.746: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:49.751: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:51.756: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:53.760: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:55.765: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:57.770: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:27:59.774: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:01.780: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:03.785: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:05.790: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:07.795: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:09.799: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:11.803: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:13.808: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:15.814: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:17.818: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:19.823: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:21.827: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:23.832: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:25.837: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:27.842: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:29.847: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:31.852: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:33.856: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:35.861: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:37.866: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:39.871: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:41.875: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:43.881: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:45.885: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:47.890: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:49.895: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:51.900: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:53.905: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:55.908: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:57.914: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:28:59.919: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:01.923: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:03.928: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:05.933: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:07.938: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:09.942: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:11.946: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:13.952: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:15.958: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:17.963: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:19.968: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:21.972: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:23.977: INFO: Get pod test-webserver-4c0f5677-9bd8-48fc-a3ff-26e7e750109d in namespace container-probe-7427
  Sep 23 12:29:25.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 12:29:25.983
  STEP: Destroying namespace "container-probe-7427" for this suite. @ 09/23/23 12:29:25.995
• [242.656 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/23/23 12:29:26.004
  Sep 23 12:29:26.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:29:26.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:26.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:26.019
  STEP: creating the pod @ 09/23/23 12:29:26.022
  Sep 23 12:29:26.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 create -f -'
  Sep 23 12:29:26.303: INFO: stderr: ""
  Sep 23 12:29:26.303: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/23/23 12:29:28.313
  Sep 23 12:29:28.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 label pods pause testing-label=testing-label-value'
  Sep 23 12:29:28.385: INFO: stderr: ""
  Sep 23 12:29:28.385: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/23/23 12:29:28.385
  Sep 23 12:29:28.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 get pod pause -L testing-label'
  Sep 23 12:29:28.441: INFO: stderr: ""
  Sep 23 12:29:28.441: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/23/23 12:29:28.441
  Sep 23 12:29:28.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 label pods pause testing-label-'
  Sep 23 12:29:28.507: INFO: stderr: ""
  Sep 23 12:29:28.507: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/23/23 12:29:28.507
  Sep 23 12:29:28.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 get pod pause -L testing-label'
  Sep 23 12:29:28.562: INFO: stderr: ""
  Sep 23 12:29:28.562: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/23/23 12:29:28.562
  Sep 23 12:29:28.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 delete --grace-period=0 --force -f -'
  Sep 23 12:29:28.631: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:29:28.631: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep 23 12:29:28.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 get rc,svc -l name=pause --no-headers'
  Sep 23 12:29:28.692: INFO: stderr: "No resources found in kubectl-9341 namespace.\n"
  Sep 23 12:29:28.692: INFO: stdout: ""
  Sep 23 12:29:28.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9341 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 23 12:29:28.748: INFO: stderr: ""
  Sep 23 12:29:28.748: INFO: stdout: ""
  Sep 23 12:29:28.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9341" for this suite. @ 09/23/23 12:29:28.752
• [2.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/23/23 12:29:28.762
  Sep 23 12:29:28.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:29:28.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:28.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:28.779
  STEP: Creating configMap configmap-7476/configmap-test-b8e537d2-37b2-4910-a742-1884154ded44 @ 09/23/23 12:29:28.782
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:29:28.785
  STEP: Saw pod success @ 09/23/23 12:29:32.809
  Sep 23 12:29:32.812: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-e27432a6-0456-4134-a94c-79d7b56144c7 container env-test: <nil>
  STEP: delete the pod @ 09/23/23 12:29:32.832
  Sep 23 12:29:32.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7476" for this suite. @ 09/23/23 12:29:32.853
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/23/23 12:29:32.86
  Sep 23 12:29:32.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:29:32.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:32.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:32.878
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:29:32.881
  STEP: Saw pod success @ 09/23/23 12:29:36.904
  Sep 23 12:29:36.907: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-942a394c-d115-4e81-b39b-9379e53dd390 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:29:36.915
  Sep 23 12:29:36.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-586" for this suite. @ 09/23/23 12:29:36.937
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/23/23 12:29:36.946
  Sep 23 12:29:36.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/23 12:29:36.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:36.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:36.964
  Sep 23 12:29:36.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8913" for this suite. @ 09/23/23 12:29:36.995
• [0.059 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/23/23 12:29:37.005
  Sep 23 12:29:37.005: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 12:29:37.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:37.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:37.019
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:29:37.022
  STEP: Saw pod success @ 09/23/23 12:29:41.052
  Sep 23 12:29:41.055: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-13ee7a1c-fe41-4e3f-b01e-8d2f4289c77a container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:29:41.062
  Sep 23 12:29:41.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9632" for this suite. @ 09/23/23 12:29:41.083
• [4.085 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/23/23 12:29:41.09
  Sep 23 12:29:41.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:29:41.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:41.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:41.105
  STEP: Creating configMap with name configmap-test-upd-68fce883-865e-4bb3-9247-5cbf16fc664c @ 09/23/23 12:29:41.113
  STEP: Creating the pod @ 09/23/23 12:29:41.118
  STEP: Waiting for pod with text data @ 09/23/23 12:29:43.139
  STEP: Waiting for pod with binary data @ 09/23/23 12:29:43.148
  Sep 23 12:29:43.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2577" for this suite. @ 09/23/23 12:29:43.158
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/23/23 12:29:43.167
  Sep 23 12:29:43.167: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 12:29:43.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:43.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:43.182
  Sep 23 12:29:43.207: INFO: Create a RollingUpdate DaemonSet
  Sep 23 12:29:43.212: INFO: Check that daemon pods launch on every node of the cluster
  Sep 23 12:29:43.215: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:43.215: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:43.218: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:29:43.218: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:29:44.224: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:44.224: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:44.228: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:29:44.228: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:29:45.223: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:45.223: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:45.227: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:29:45.228: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Sep 23 12:29:45.228: INFO: Update the DaemonSet to trigger a rollout
  Sep 23 12:29:45.238: INFO: Updating DaemonSet daemon-set
  Sep 23 12:29:46.261: INFO: Roll back the DaemonSet before rollout is complete
  Sep 23 12:29:46.271: INFO: Updating DaemonSet daemon-set
  Sep 23 12:29:46.271: INFO: Make sure DaemonSet rollback is complete
  Sep 23 12:29:46.275: INFO: Wrong image for pod: daemon-set-4qpv2. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep 23 12:29:46.275: INFO: Pod daemon-set-4qpv2 is not available
  Sep 23 12:29:46.279: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:46.279: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:47.288: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:47.289: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:48.284: INFO: Pod daemon-set-z8fmx is not available
  Sep 23 12:29:48.287: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:29:48.287: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/23 12:29:48.297
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7734, will wait for the garbage collector to delete the pods @ 09/23/23 12:29:48.297
  Sep 23 12:29:48.358: INFO: Deleting DaemonSet.extensions daemon-set took: 6.832292ms
  Sep 23 12:29:48.458: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.29826ms
  Sep 23 12:29:49.662: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:29:49.662: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 23 12:29:49.666: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10341"},"items":null}

  Sep 23 12:29:49.670: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10341"},"items":null}

  Sep 23 12:29:49.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7734" for this suite. @ 09/23/23 12:29:49.688
• [6.529 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/23/23 12:29:49.696
  Sep 23 12:29:49.696: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 12:29:49.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:49.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:49.711
  STEP: Creating a test headless service @ 09/23/23 12:29:49.714
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-534.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-534.svc.cluster.local;sleep 1; done
   @ 09/23/23 12:29:49.72
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-534.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-534.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-534.svc.cluster.local;sleep 1; done
   @ 09/23/23 12:29:49.72
  STEP: creating a pod to probe DNS @ 09/23/23 12:29:49.72
  STEP: submitting the pod to kubernetes @ 09/23/23 12:29:49.72
  STEP: retrieving the pod @ 09/23/23 12:29:51.742
  STEP: looking for the results for each expected name from probers @ 09/23/23 12:29:51.745
  Sep 23 12:29:51.750: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.754: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.757: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.762: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.765: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.769: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.773: INFO: Unable to read jessie_udp@dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.776: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-534.svc.cluster.local from pod dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2: the server could not find the requested resource (get pods dns-test-6388e795-75cd-4492-a17a-7030911ac3f2)
  Sep 23 12:29:51.776: INFO: Lookups using dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local wheezy_udp@dns-test-service-2.dns-534.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-534.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-534.svc.cluster.local jessie_udp@dns-test-service-2.dns-534.svc.cluster.local jessie_tcp@dns-test-service-2.dns-534.svc.cluster.local]

  Sep 23 12:29:51.783: INFO: Pod client logs for webserver: 
  Sep 23 12:29:51.790: INFO: Pod client logs for querier: 
  Sep 23 12:29:51.797: INFO: Pod client logs for jessie-querier: 
  Sep 23 12:29:56.831: INFO: DNS probes using dns-534/dns-test-6388e795-75cd-4492-a17a-7030911ac3f2 succeeded

  Sep 23 12:29:56.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 12:29:56.835
  STEP: deleting the test headless service @ 09/23/23 12:29:56.855
  STEP: Destroying namespace "dns-534" for this suite. @ 09/23/23 12:29:56.868
• [7.181 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/23/23 12:29:56.877
  Sep 23 12:29:56.877: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:29:56.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:29:56.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:29:56.895
  STEP: creating all guestbook components @ 09/23/23 12:29:56.899
  Sep 23 12:29:56.899: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep 23 12:29:56.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 create -f -'
  Sep 23 12:29:57.178: INFO: stderr: ""
  Sep 23 12:29:57.178: INFO: stdout: "service/agnhost-replica created\n"
  Sep 23 12:29:57.178: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep 23 12:29:57.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 create -f -'
  Sep 23 12:29:57.532: INFO: stderr: ""
  Sep 23 12:29:57.532: INFO: stdout: "service/agnhost-primary created\n"
  Sep 23 12:29:57.532: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep 23 12:29:57.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 create -f -'
  Sep 23 12:29:57.712: INFO: stderr: ""
  Sep 23 12:29:57.712: INFO: stdout: "service/frontend created\n"
  Sep 23 12:29:57.712: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep 23 12:29:57.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 create -f -'
  Sep 23 12:29:57.982: INFO: stderr: ""
  Sep 23 12:29:57.982: INFO: stdout: "deployment.apps/frontend created\n"
  Sep 23 12:29:57.982: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 23 12:29:57.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 create -f -'
  Sep 23 12:29:58.122: INFO: stderr: ""
  Sep 23 12:29:58.122: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep 23 12:29:58.122: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 23 12:29:58.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 create -f -'
  Sep 23 12:29:58.354: INFO: stderr: ""
  Sep 23 12:29:58.355: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/23/23 12:29:58.355
  Sep 23 12:29:58.355: INFO: Waiting for all frontend pods to be Running.
  Sep 23 12:30:03.406: INFO: Waiting for frontend to serve content.
  Sep 23 12:30:03.418: INFO: Trying to add a new entry to the guestbook.
  Sep 23 12:30:03.431: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/23/23 12:30:03.442
  Sep 23 12:30:03.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 delete --grace-period=0 --force -f -'
  Sep 23 12:30:03.515: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:30:03.515: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/23 12:30:03.515
  Sep 23 12:30:03.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 delete --grace-period=0 --force -f -'
  Sep 23 12:30:03.589: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:30:03.589: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/23 12:30:03.59
  Sep 23 12:30:03.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 delete --grace-period=0 --force -f -'
  Sep 23 12:30:03.658: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:30:03.658: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/23 12:30:03.658
  Sep 23 12:30:03.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 delete --grace-period=0 --force -f -'
  Sep 23 12:30:03.719: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:30:03.719: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/23 12:30:03.719
  Sep 23 12:30:03.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 delete --grace-period=0 --force -f -'
  Sep 23 12:30:03.787: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:30:03.787: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/23/23 12:30:03.787
  Sep 23 12:30:03.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2746 delete --grace-period=0 --force -f -'
  Sep 23 12:30:03.854: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:30:03.854: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep 23 12:30:03.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2746" for this suite. @ 09/23/23 12:30:03.858
• [6.990 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/23/23 12:30:03.867
  Sep 23 12:30:03.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/23 12:30:03.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:30:03.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:30:03.885
  STEP: getting /apis @ 09/23/23 12:30:03.888
  STEP: getting /apis/node.k8s.io @ 09/23/23 12:30:03.892
  STEP: getting /apis/node.k8s.io/v1 @ 09/23/23 12:30:03.893
  STEP: creating @ 09/23/23 12:30:03.894
  STEP: watching @ 09/23/23 12:30:03.914
  Sep 23 12:30:03.914: INFO: starting watch
  STEP: getting @ 09/23/23 12:30:03.92
  STEP: listing @ 09/23/23 12:30:03.923
  STEP: patching @ 09/23/23 12:30:03.931
  STEP: updating @ 09/23/23 12:30:03.936
  Sep 23 12:30:03.940: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/23/23 12:30:03.94
  STEP: deleting a collection @ 09/23/23 12:30:03.953
  Sep 23 12:30:03.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1441" for this suite. @ 09/23/23 12:30:03.974
• [0.116 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/23/23 12:30:03.984
  Sep 23 12:30:03.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename cronjob @ 09/23/23 12:30:03.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:30:04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:30:04.002
  STEP: Creating a suspended cronjob @ 09/23/23 12:30:04.005
  STEP: Ensuring no jobs are scheduled @ 09/23/23 12:30:04.012
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/23/23 12:35:04.019
  STEP: Removing cronjob @ 09/23/23 12:35:04.022
  Sep 23 12:35:04.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9594" for this suite. @ 09/23/23 12:35:04.033
• [300.056 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/23/23 12:35:04.04
  Sep 23 12:35:04.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 12:35:04.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:35:04.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:35:04.058
  STEP: creating a Deployment @ 09/23/23 12:35:04.064
  STEP: waiting for Deployment to be created @ 09/23/23 12:35:04.069
  STEP: waiting for all Replicas to be Ready @ 09/23/23 12:35:04.07
  Sep 23 12:35:04.072: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.072: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.081: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.081: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.092: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.092: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.119: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:04.119: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 23 12:35:05.100: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 23 12:35:05.100: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 23 12:35:05.466: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/23/23 12:35:05.467
  Sep 23 12:35:05.475: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/23/23 12:35:05.475
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 0
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.476: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.477: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.485: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.485: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.510: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.510: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:05.522: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:05.522: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:05.528: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:05.528: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:06.480: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:06.480: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:06.501: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  STEP: listing Deployments @ 09/23/23 12:35:06.501
  Sep 23 12:35:06.505: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/23/23 12:35:06.505
  Sep 23 12:35:06.519: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/23/23 12:35:06.519
  Sep 23 12:35:06.527: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:06.532: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:06.559: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:06.573: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:06.580: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:07.512: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:07.529: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:07.536: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:07.553: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 23 12:35:09.121: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/23/23 12:35:09.145
  STEP: fetching the DeploymentStatus @ 09/23/23 12:35:09.156
  Sep 23 12:35:09.162: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:09.162: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:09.162: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:09.162: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:09.162: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 1
  Sep 23 12:35:09.163: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:09.163: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:09.163: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:09.163: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 2
  Sep 23 12:35:09.163: INFO: observed Deployment test-deployment in namespace deployment-9448 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/23/23 12:35:09.163
  Sep 23 12:35:09.178: INFO: observed event type MODIFIED
  Sep 23 12:35:09.178: INFO: observed event type MODIFIED
  Sep 23 12:35:09.178: INFO: observed event type MODIFIED
  Sep 23 12:35:09.179: INFO: observed event type MODIFIED
  Sep 23 12:35:09.179: INFO: observed event type MODIFIED
  Sep 23 12:35:09.179: INFO: observed event type MODIFIED
  Sep 23 12:35:09.179: INFO: observed event type MODIFIED
  Sep 23 12:35:09.179: INFO: observed event type MODIFIED
  Sep 23 12:35:09.179: INFO: observed event type MODIFIED
  Sep 23 12:35:09.180: INFO: observed event type MODIFIED
  Sep 23 12:35:09.180: INFO: observed event type MODIFIED
  Sep 23 12:35:09.180: INFO: observed event type MODIFIED
  Sep 23 12:35:09.180: INFO: observed event type MODIFIED
  Sep 23 12:35:09.186: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep 23 12:35:09.191: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9448",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24ef8319-9f35-4736-8550-c94973fcd3f0",
      ResourceVersion: (string) (len=5) "11505",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3661a870-77d1-4f60-9a1e-a405db4573a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 36 36 31  61 38 37 30 2d 37 37 64  |":\"3661a870-77d|
              00000130  31 2d 34 66 36 30 2d 39  61 31 65 2d 61 34 30 35  |1-4f60-9a1e-a405|
              00000140  64 62 34 35 37 33 61 34  5c 22 7d 22 3a 7b 7d 7d  |db4573a4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 23 12:35:09.202: INFO: pod: "test-deployment-64fd565c98-46652":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-46652",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9448",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c615a982-f29e-4e7b-bfe9-d21e17bad3e8",
      ResourceVersion: (string) (len=5) "11499",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069311,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "24ef8319-9f35-4736-8550-c94973fcd3f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 34 65 66 38 33 31 39  |uid\":\"24ef8319|
              000000a0  2d 39 66 33 35 2d 34 37  33 36 2d 38 35 35 30 2d  |-9f35-4736-8550-|
              000000b0  63 39 34 39 37 33 66 63  64 33 66 30 5c 22 7d 22  |c94973fcd3f0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 38 38 5c 22 7d  |192.168.55.88\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nb826",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nb826",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.55.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.55.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831069306,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://b3adcf82a21dffe157a834460da876265636219b369ba73878015f19ad2d37fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 23 12:35:09.204: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9448",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a988fc8-f978-4a63-8c84-e043412410a0",
      ResourceVersion: (string) (len=5) "11401",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069304,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3661a870-77d1-4f60-9a1e-a405db4573a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 36 36 31  61 38 37 30 2d 37 37 64  |":\"3661a870-77d|
              00000130  31 2d 34 66 36 30 2d 39  61 31 65 2d 61 34 30 35  |1-4f60-9a1e-a405|
              00000140  64 62 34 35 37 33 61 34  5c 22 7d 22 3a 7b 7d 7d  |db4573a4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 23 12:35:09.213: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9448",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe61cf2e-7a8c-4547-9da5-c20588443c2b",
      ResourceVersion: (string) (len=5) "11493",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069306,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3661a870-77d1-4f60-9a1e-a405db4573a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 36 36 31  61 38 37 30 2d 37 37 64  |":\"3661a870-77d|
              00000130  31 2d 34 66 36 30 2d 39  61 31 65 2d 61 34 30 35  |1-4f60-9a1e-a405|
              00000140  64 62 34 35 37 33 61 34  5c 22 7d 22 3a 7b 7d 7d  |db4573a4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 23 12:35:09.220: INFO: pod: "test-deployment-79ff746c4-mk2j7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-mk2j7",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9448",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5320c900-16bb-44c0-9849-15d31314f75f",
      ResourceVersion: (string) (len=5) "11514",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069306,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "fe61cf2e-7a8c-4547-9da5-c20588443c2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 65 36 31 63 66 32 65  |uid\":\"fe61cf2e|
              000000a0  2d 37 61 38 63 2d 34 35  34 37 2d 39 64 61 35 2d  |-7a8c-4547-9da5-|
              000000b0  63 32 30 35 38 38 34 34  33 63 32 62 5c 22 7d 22  |c20588443c2b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 38 39 5c 22 7d  |192.168.55.89\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cm6tr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cm6tr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069306,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.55.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.55.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069306,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831069307,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://13783b274ae17914c82ed502936f1790a74b7f27fa16b83cb410bef375b09245",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 23 12:35:09.223: INFO: pod: "test-deployment-79ff746c4-zdrtb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-zdrtb",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9448",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee2b61e7-d0c7-4f8a-954b-e97eb110f8b5",
      ResourceVersion: (string) (len=5) "11515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "fe61cf2e-7a8c-4547-9da5-c20588443c2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 65 36 31 63 66 32 65  |uid\":\"fe61cf2e|
              000000a0  2d 37 61 38 63 2d 34 35  34 37 2d 39 64 61 35 2d  |-7a8c-4547-9da5-|
              000000b0  63 32 30 35 38 38 34 34  33 63 32 62 5c 22 7d 22  |c20588443c2b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 38 2e 32 33 35 5c 22  |192.168.88.235\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hvnp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hvnp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.235",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.235"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831069308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://25451bac748aca8ec1009574494c312ecd4f124b5501346723f48baa507039d3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 23 12:35:09.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9448" for this suite. @ 09/23/23 12:35:09.231
• [5.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/23/23 12:35:09.238
  Sep 23 12:35:09.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replication-controller @ 09/23/23 12:35:09.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:35:09.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:35:09.254
  Sep 23 12:35:09.256: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/23/23 12:35:10.269
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/23/23 12:35:10.276
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/23/23 12:35:11.284
  Sep 23 12:35:11.294: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/23/23 12:35:11.294
  Sep 23 12:35:12.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3416" for this suite. @ 09/23/23 12:35:12.307
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/23/23 12:35:12.315
  Sep 23 12:35:12.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 12:35:12.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:35:12.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:35:12.331
  STEP: Creating a pod to test service account token:  @ 09/23/23 12:35:12.334
  STEP: Saw pod success @ 09/23/23 12:35:16.359
  Sep 23 12:35:16.362: INFO: Trying to get logs from node ip-172-31-77-156 pod test-pod-d2398e25-979e-4f91-9b1f-8cb129c614d5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:35:16.381
  Sep 23 12:35:16.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5756" for this suite. @ 09/23/23 12:35:16.402
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/23/23 12:35:16.409
  Sep 23 12:35:16.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:35:16.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:35:16.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:35:16.426
  STEP: Creating secret with name s-test-opt-del-9856440d-27b5-49ad-9f3d-7f5d49316a69 @ 09/23/23 12:35:16.433
  STEP: Creating secret with name s-test-opt-upd-48ea1e7f-0724-4872-82fa-866f9516a1e3 @ 09/23/23 12:35:16.438
  STEP: Creating the pod @ 09/23/23 12:35:16.442
  STEP: Deleting secret s-test-opt-del-9856440d-27b5-49ad-9f3d-7f5d49316a69 @ 09/23/23 12:35:18.49
  STEP: Updating secret s-test-opt-upd-48ea1e7f-0724-4872-82fa-866f9516a1e3 @ 09/23/23 12:35:18.498
  STEP: Creating secret with name s-test-opt-create-780be936-eb54-4e87-9681-e2aa49a8eca6 @ 09/23/23 12:35:18.503
  STEP: waiting to observe update in volume @ 09/23/23 12:35:18.507
  Sep 23 12:36:34.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-365" for this suite. @ 09/23/23 12:36:34.872
• [78.469 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/23/23 12:36:34.878
  Sep 23 12:36:34.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-pred @ 09/23/23 12:36:34.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:36:34.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:36:34.895
  Sep 23 12:36:34.899: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 23 12:36:34.907: INFO: Waiting for terminating namespaces to be deleted...
  Sep 23 12:36:34.910: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-104 before test
  Sep 23 12:36:34.916: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5mp42 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.916: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep 23 12:36:34.916: INFO: nginx-ingress-controller-kubernetes-worker-4q5pn from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:48 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.916: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 12:36:34.916: INFO: calico-kube-controllers-787f44f89c-8smff from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.916: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 23 12:36:34.916: INFO: calico-node-qk2dv from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.916: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 12:36:34.916: INFO: coredns-59cfb5bf46-49k5p from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.917: INFO: 	Container coredns ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: kube-state-metrics-775d9f4f79-c6pt8 from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.917: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: metrics-server-v0.6.3-69d7fbfdf8-c8fkg from kube-system started at 2023-09-23 12:00:47 +0000 UTC (2 container statuses recorded)
  Sep 23 12:36:34.917: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: dashboard-metrics-scraper-5dd7cb5fc-jbtp9 from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.917: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: kubernetes-dashboard-7b899cb9d9-cwmjh from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.917: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-wpzt8 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 12:36:34.917: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 12:36:34.917: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-77-156 before test
  Sep 23 12:36:34.922: INFO: nginx-ingress-controller-kubernetes-worker-gp88p from ingress-nginx-kubernetes-worker started at 2023-09-23 12:12:15 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.922: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: calico-node-z8495 from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.922: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: pod-secrets-a2c739c0-eeb8-478c-a2bb-b1d73ef53bef from secrets-365 started at 2023-09-23 12:35:16 +0000 UTC (3 container statuses recorded)
  Sep 23 12:36:34.922: INFO: 	Container creates-volume-test ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: 	Container dels-volume-test ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: 	Container upds-volume-test ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: sonobuoy from sonobuoy started at 2023-09-23 12:09:14 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.922: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-l6pp5 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 12:36:34.922: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 12:36:34.922: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-196 before test
  Sep 23 12:36:34.929: INFO: nginx-ingress-controller-kubernetes-worker-jcv67 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:02:23 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.929: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 12:36:34.929: INFO: calico-node-knkkv from kube-system started at 2023-09-23 12:02:04 +0000 UTC (1 container statuses recorded)
  Sep 23 12:36:34.929: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 12:36:34.929: INFO: sonobuoy-e2e-job-68378cf9dc5e499f from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 12:36:34.929: INFO: 	Container e2e ready: true, restart count 0
  Sep 23 12:36:34.929: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 12:36:34.929: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-lfvtl from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 12:36:34.929: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 12:36:34.929: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-33-104 @ 09/23/23 12:36:34.945
  STEP: verifying the node has the label node ip-172-31-77-156 @ 09/23/23 12:36:34.956
  STEP: verifying the node has the label node ip-172-31-84-196 @ 09/23/23 12:36:34.969
  Sep 23 12:36:34.982: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-5mp42 requesting resource cpu=10m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod nginx-ingress-controller-kubernetes-worker-4q5pn requesting resource cpu=0m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod nginx-ingress-controller-kubernetes-worker-gp88p requesting resource cpu=0m on Node ip-172-31-77-156
  Sep 23 12:36:34.982: INFO: Pod nginx-ingress-controller-kubernetes-worker-jcv67 requesting resource cpu=0m on Node ip-172-31-84-196
  Sep 23 12:36:34.982: INFO: Pod calico-kube-controllers-787f44f89c-8smff requesting resource cpu=0m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod calico-node-knkkv requesting resource cpu=250m on Node ip-172-31-84-196
  Sep 23 12:36:34.982: INFO: Pod calico-node-qk2dv requesting resource cpu=250m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod calico-node-z8495 requesting resource cpu=250m on Node ip-172-31-77-156
  Sep 23 12:36:34.982: INFO: Pod coredns-59cfb5bf46-49k5p requesting resource cpu=100m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod kube-state-metrics-775d9f4f79-c6pt8 requesting resource cpu=0m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-c8fkg requesting resource cpu=5m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-jbtp9 requesting resource cpu=0m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod kubernetes-dashboard-7b899cb9d9-cwmjh requesting resource cpu=0m on Node ip-172-31-33-104
  Sep 23 12:36:34.982: INFO: Pod pod-secrets-a2c739c0-eeb8-478c-a2bb-b1d73ef53bef requesting resource cpu=0m on Node ip-172-31-77-156
  Sep 23 12:36:34.982: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-77-156
  Sep 23 12:36:34.982: INFO: Pod sonobuoy-e2e-job-68378cf9dc5e499f requesting resource cpu=0m on Node ip-172-31-84-196
  Sep 23 12:36:34.982: INFO: Pod sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-l6pp5 requesting resource cpu=0m on Node ip-172-31-77-156
  Sep 23 12:36:34.982: INFO: Pod sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-lfvtl requesting resource cpu=0m on Node ip-172-31-84-196
  Sep 23 12:36:34.982: INFO: Pod sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-wpzt8 requesting resource cpu=0m on Node ip-172-31-33-104
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/23/23 12:36:34.982
  Sep 23 12:36:34.982: INFO: Creating a pod which consumes cpu=2625m on Node ip-172-31-77-156
  Sep 23 12:36:34.993: INFO: Creating a pod which consumes cpu=2625m on Node ip-172-31-84-196
  Sep 23 12:36:34.999: INFO: Creating a pod which consumes cpu=2544m on Node ip-172-31-33-104
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/23/23 12:36:37.022
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4.1787875797de3b9b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4067/filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4 to ip-172-31-84-196] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4.17878757bd5df1ed], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4.17878757beb6441f], Reason = [Created], Message = [Created container filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4.17878757c52bc773], Reason = [Started], Message = [Started container filler-pod-63363f57-855c-43ef-8ffa-66a65e4c28d4] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65.17878757983c96ca], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4067/filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65 to ip-172-31-33-104] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65.17878757bb41ce8d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65.17878757bc78ff15], Reason = [Created], Message = [Created container filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65.17878757c49eaca5], Reason = [Started], Message = [Started container filler-pod-6368bf4d-ec6d-4057-9178-662877c3ef65] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f.17878757978197d5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4067/filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f to ip-172-31-77-156] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f.17878757bc5d3c3c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f.17878757bd4c858a], Reason = [Created], Message = [Created container filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f.17878757c47812ee], Reason = [Started], Message = [Started container filler-pod-7f4d45ad-1ed1-4996-83cf-224bef053d8f] @ 09/23/23 12:36:37.027
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1787875810d13987], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 09/23/23 12:36:37.041
  STEP: removing the label node off the node ip-172-31-33-104 @ 09/23/23 12:36:38.039
  STEP: verifying the node doesn't have the label node @ 09/23/23 12:36:38.052
  STEP: removing the label node off the node ip-172-31-77-156 @ 09/23/23 12:36:38.054
  STEP: verifying the node doesn't have the label node @ 09/23/23 12:36:38.067
  STEP: removing the label node off the node ip-172-31-84-196 @ 09/23/23 12:36:38.071
  STEP: verifying the node doesn't have the label node @ 09/23/23 12:36:38.082
  Sep 23 12:36:38.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4067" for this suite. @ 09/23/23 12:36:38.091
• [3.219 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/23/23 12:36:38.098
  Sep 23 12:36:38.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 12:36:38.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:36:38.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:36:38.114
  STEP: Creating service test in namespace statefulset-2693 @ 09/23/23 12:36:38.117
  STEP: Looking for a node to schedule stateful set and pod @ 09/23/23 12:36:38.121
  STEP: Creating pod with conflicting port in namespace statefulset-2693 @ 09/23/23 12:36:38.128
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2693 @ 09/23/23 12:36:38.135
  STEP: Creating statefulset with conflicting port in namespace statefulset-2693 @ 09/23/23 12:36:40.143
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2693 @ 09/23/23 12:36:40.148
  Sep 23 12:36:40.159: INFO: Observed stateful pod in namespace: statefulset-2693, name: ss-0, uid: e6b391b6-53f6-4561-beef-ef1530a8a2a5, status phase: Pending. Waiting for statefulset controller to delete.
  Sep 23 12:36:40.176: INFO: Observed stateful pod in namespace: statefulset-2693, name: ss-0, uid: e6b391b6-53f6-4561-beef-ef1530a8a2a5, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 23 12:36:40.187: INFO: Observed stateful pod in namespace: statefulset-2693, name: ss-0, uid: e6b391b6-53f6-4561-beef-ef1530a8a2a5, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 23 12:36:40.193: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2693
  STEP: Removing pod with conflicting port in namespace statefulset-2693 @ 09/23/23 12:36:40.193
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2693 and will be in running state @ 09/23/23 12:36:40.206
  Sep 23 12:36:42.217: INFO: Deleting all statefulset in ns statefulset-2693
  Sep 23 12:36:42.221: INFO: Scaling statefulset ss to 0
  Sep 23 12:36:52.238: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 12:36:52.242: INFO: Deleting statefulset ss
  Sep 23 12:36:52.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2693" for this suite. @ 09/23/23 12:36:52.259
• [14.169 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/23/23 12:36:52.267
  Sep 23 12:36:52.267: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/23 12:36:52.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:36:52.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:36:52.285
  Sep 23 12:36:52.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:36:58.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7105" for this suite. @ 09/23/23 12:36:58.481
• [6.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/23/23 12:36:58.489
  Sep 23 12:36:58.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename subjectreview @ 09/23/23 12:36:58.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:36:58.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:36:58.504
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5146" @ 09/23/23 12:36:58.506
  Sep 23 12:36:58.512: INFO: saUsername: "system:serviceaccount:subjectreview-5146:e2e"
  Sep 23 12:36:58.512: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5146"}
  Sep 23 12:36:58.512: INFO: saUID: "97d6edcb-48fc-4392-acb1-c79eddb64487"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5146:e2e" @ 09/23/23 12:36:58.512
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5146:e2e" @ 09/23/23 12:36:58.512
  Sep 23 12:36:58.514: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5146:e2e" api 'list' configmaps in "subjectreview-5146" namespace @ 09/23/23 12:36:58.514
  Sep 23 12:36:58.515: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5146:e2e" @ 09/23/23 12:36:58.515
  Sep 23 12:36:58.517: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep 23 12:36:58.517: INFO: LocalSubjectAccessReview has been verified
  Sep 23 12:36:58.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5146" for this suite. @ 09/23/23 12:36:58.52
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/23/23 12:36:58.527
  Sep 23 12:36:58.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 12:36:58.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:36:58.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:36:58.543
  STEP: create the deployment @ 09/23/23 12:36:58.545
  W0923 12:36:58.552753      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/23/23 12:36:58.552
  STEP: delete the deployment @ 09/23/23 12:36:59.066
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/23/23 12:36:59.074
  STEP: Gathering metrics @ 09/23/23 12:36:59.596
  W0923 12:36:59.601766      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 23 12:36:59.601: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 23 12:36:59.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1899" for this suite. @ 09/23/23 12:36:59.607
• [1.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/23/23 12:36:59.614
  Sep 23 12:36:59.614: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 12:36:59.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:36:59.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:36:59.631
  Sep 23 12:36:59.653: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/23 12:36:59.659
  Sep 23 12:36:59.665: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:36:59.665: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:36:59.667: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:36:59.667: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:37:00.672: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:00.672: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:00.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:37:00.676: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:37:01.672: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:01.672: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:01.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:37:01.676: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/23/23 12:37:01.691
  STEP: Check that daemon pods images are updated. @ 09/23/23 12:37:01.701
  Sep 23 12:37:01.704: INFO: Wrong image for pod: daemon-set-pqd5c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:01.704: INFO: Wrong image for pod: daemon-set-st9r6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:01.704: INFO: Wrong image for pod: daemon-set-vqtds. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:01.711: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:01.711: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:02.716: INFO: Pod daemon-set-87fq7 is not available
  Sep 23 12:37:02.716: INFO: Wrong image for pod: daemon-set-st9r6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:02.716: INFO: Wrong image for pod: daemon-set-vqtds. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:02.721: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:02.721: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:03.714: INFO: Pod daemon-set-lbwn8 is not available
  Sep 23 12:37:03.714: INFO: Wrong image for pod: daemon-set-st9r6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:03.720: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:03.720: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:04.715: INFO: Pod daemon-set-lbwn8 is not available
  Sep 23 12:37:04.715: INFO: Wrong image for pod: daemon-set-st9r6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 23 12:37:04.718: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:04.718: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:05.719: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:05.719: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:06.715: INFO: Pod daemon-set-mswrq is not available
  Sep 23 12:37:06.718: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:06.719: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/23/23 12:37:06.719
  Sep 23 12:37:06.722: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:06.722: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:06.726: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 23 12:37:06.726: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 12:37:07.731: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:07.731: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:37:07.735: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:37:07.735: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/23 12:37:07.753
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1820, will wait for the garbage collector to delete the pods @ 09/23/23 12:37:07.754
  Sep 23 12:37:07.814: INFO: Deleting DaemonSet.extensions daemon-set took: 7.246104ms
  Sep 23 12:37:07.914: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.1317ms
  Sep 23 12:37:08.820: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:37:08.820: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 23 12:37:08.823: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12515"},"items":null}

  Sep 23 12:37:08.827: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12515"},"items":null}

  Sep 23 12:37:08.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1820" for this suite. @ 09/23/23 12:37:08.845
• [9.239 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/23/23 12:37:08.853
  Sep 23 12:37:08.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename taint-single-pod @ 09/23/23 12:37:08.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:37:08.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:37:08.87
  Sep 23 12:37:08.873: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 23 12:38:08.890: INFO: Waiting for terminating namespaces to be deleted...
  Sep 23 12:38:08.893: INFO: Starting informer...
  STEP: Starting pod... @ 09/23/23 12:38:08.893
  Sep 23 12:38:09.110: INFO: Pod is running on ip-172-31-77-156. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/23/23 12:38:09.11
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/23 12:38:09.12
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/23/23 12:38:09.123
  Sep 23 12:38:09.123: INFO: Pod wasn't evicted. Proceeding
  Sep 23 12:38:09.123: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/23/23 12:38:09.134
  STEP: Waiting some time to make sure that toleration time passed. @ 09/23/23 12:38:09.143
  Sep 23 12:39:24.143: INFO: Pod wasn't evicted. Test successful
  Sep 23 12:39:24.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4336" for this suite. @ 09/23/23 12:39:24.147
• [135.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/23/23 12:39:24.156
  Sep 23 12:39:24.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:39:24.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:39:24.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:39:24.173
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/23/23 12:39:24.176
  STEP: Saw pod success @ 09/23/23 12:39:28.199
  Sep 23 12:39:28.203: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-3dd9a3a7-17f6-4da3-bbd7-38939a360bb4 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:39:28.217
  Sep 23 12:39:28.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8848" for this suite. @ 09/23/23 12:39:28.239
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/23/23 12:39:28.245
  Sep 23 12:39:28.245: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:39:28.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:39:28.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:39:28.261
  STEP: creating a ConfigMap @ 09/23/23 12:39:28.263
  STEP: fetching the ConfigMap @ 09/23/23 12:39:28.268
  STEP: patching the ConfigMap @ 09/23/23 12:39:28.271
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/23/23 12:39:28.276
  STEP: deleting the ConfigMap by collection with a label selector @ 09/23/23 12:39:28.28
  STEP: listing all ConfigMaps in test namespace @ 09/23/23 12:39:28.288
  Sep 23 12:39:28.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7934" for this suite. @ 09/23/23 12:39:28.296
• [0.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/23/23 12:39:28.302
  Sep 23 12:39:28.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/23 12:39:28.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:39:28.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:39:28.316
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/23 12:39:28.322
  STEP: create the pod with lifecycle hook @ 09/23/23 12:39:30.342
  STEP: delete the pod with lifecycle hook @ 09/23/23 12:39:32.36
  STEP: check prestop hook @ 09/23/23 12:39:34.376
  Sep 23 12:39:34.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1811" for this suite. @ 09/23/23 12:39:34.399
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/23/23 12:39:34.407
  Sep 23 12:39:34.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename subpath @ 09/23/23 12:39:34.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:39:34.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:39:34.424
  STEP: Setting up data @ 09/23/23 12:39:34.427
  STEP: Creating pod pod-subpath-test-configmap-sfww @ 09/23/23 12:39:34.435
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/23 12:39:34.435
  STEP: Saw pod success @ 09/23/23 12:39:58.517
  Sep 23 12:39:58.520: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-subpath-test-configmap-sfww container test-container-subpath-configmap-sfww: <nil>
  STEP: delete the pod @ 09/23/23 12:39:58.528
  STEP: Deleting pod pod-subpath-test-configmap-sfww @ 09/23/23 12:39:58.545
  Sep 23 12:39:58.545: INFO: Deleting pod "pod-subpath-test-configmap-sfww" in namespace "subpath-3752"
  Sep 23 12:39:58.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3752" for this suite. @ 09/23/23 12:39:58.552
• [24.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/23/23 12:39:58.559
  Sep 23 12:39:58.559: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:39:58.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:39:58.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:39:58.574
  STEP: Creating secret with name secret-test-7654bac7-62b2-4815-803d-abdd46ffa017 @ 09/23/23 12:39:58.599
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:39:58.603
  STEP: Saw pod success @ 09/23/23 12:40:02.624
  Sep 23 12:40:02.628: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-secrets-20024143-9e69-49db-be46-b2dcc16660b7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:40:02.636
  Sep 23 12:40:02.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3598" for this suite. @ 09/23/23 12:40:02.653
  STEP: Destroying namespace "secret-namespace-8327" for this suite. @ 09/23/23 12:40:02.662
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/23/23 12:40:02.671
  Sep 23 12:40:02.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:40:02.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:40:02.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:40:02.691
  STEP: Creating resourceQuota "e2e-rq-status-kc7rz" @ 09/23/23 12:40:02.696
  Sep 23 12:40:02.706: INFO: Resource quota "e2e-rq-status-kc7rz" reports spec: hard cpu limit of 500m
  Sep 23 12:40:02.706: INFO: Resource quota "e2e-rq-status-kc7rz" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kc7rz" /status @ 09/23/23 12:40:02.706
  STEP: Confirm /status for "e2e-rq-status-kc7rz" resourceQuota via watch @ 09/23/23 12:40:02.715
  Sep 23 12:40:02.716: INFO: observed resourceQuota "e2e-rq-status-kc7rz" in namespace "resourcequota-3443" with hard status: v1.ResourceList(nil)
  Sep 23 12:40:02.716: INFO: Found resourceQuota "e2e-rq-status-kc7rz" in namespace "resourcequota-3443" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 23 12:40:02.716: INFO: ResourceQuota "e2e-rq-status-kc7rz" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/23/23 12:40:02.719
  Sep 23 12:40:02.726: INFO: Resource quota "e2e-rq-status-kc7rz" reports spec: hard cpu limit of 1
  Sep 23 12:40:02.726: INFO: Resource quota "e2e-rq-status-kc7rz" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kc7rz" /status @ 09/23/23 12:40:02.726
  STEP: Confirm /status for "e2e-rq-status-kc7rz" resourceQuota via watch @ 09/23/23 12:40:02.732
  Sep 23 12:40:02.733: INFO: observed resourceQuota "e2e-rq-status-kc7rz" in namespace "resourcequota-3443" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 23 12:40:02.733: INFO: Found resourceQuota "e2e-rq-status-kc7rz" in namespace "resourcequota-3443" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep 23 12:40:02.733: INFO: ResourceQuota "e2e-rq-status-kc7rz" /status was patched
  STEP: Get "e2e-rq-status-kc7rz" /status @ 09/23/23 12:40:02.733
  Sep 23 12:40:02.737: INFO: Resourcequota "e2e-rq-status-kc7rz" reports status: hard cpu of 1
  Sep 23 12:40:02.737: INFO: Resourcequota "e2e-rq-status-kc7rz" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kc7rz" /status before checking Spec is unchanged @ 09/23/23 12:40:02.741
  Sep 23 12:40:02.745: INFO: Resourcequota "e2e-rq-status-kc7rz" reports status: hard cpu of 2
  Sep 23 12:40:02.745: INFO: Resourcequota "e2e-rq-status-kc7rz" reports status: hard memory of 2Gi
  Sep 23 12:40:02.746: INFO: Found resourceQuota "e2e-rq-status-kc7rz" in namespace "resourcequota-3443" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Sep 23 12:41:37.755: INFO: ResourceQuota "e2e-rq-status-kc7rz" Spec was unchanged and /status reset
  Sep 23 12:41:37.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3443" for this suite. @ 09/23/23 12:41:37.759
• [95.095 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/23/23 12:41:37.766
  Sep 23 12:41:37.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:41:37.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:37.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:37.783
  STEP: creating a collection of services @ 09/23/23 12:41:37.785
  Sep 23 12:41:37.785: INFO: Creating e2e-svc-a-kwwcg
  Sep 23 12:41:37.794: INFO: Creating e2e-svc-b-5lz8k
  Sep 23 12:41:37.803: INFO: Creating e2e-svc-c-5pjsh
  STEP: deleting service collection @ 09/23/23 12:41:37.816
  Sep 23 12:41:37.847: INFO: Collection of services has been deleted
  Sep 23 12:41:37.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1968" for this suite. @ 09/23/23 12:41:37.851
• [0.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/23/23 12:41:37.858
  Sep 23 12:41:37.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replicaset @ 09/23/23 12:41:37.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:37.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:37.872
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/23/23 12:41:37.875
  STEP: When a replicaset with a matching selector is created @ 09/23/23 12:41:39.894
  STEP: Then the orphan pod is adopted @ 09/23/23 12:41:39.899
  STEP: When the matched label of one of its pods change @ 09/23/23 12:41:40.907
  Sep 23 12:41:40.912: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/23/23 12:41:40.922
  Sep 23 12:41:41.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7440" for this suite. @ 09/23/23 12:41:41.935
• [4.085 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/23/23 12:41:41.943
  Sep 23 12:41:41.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:41:41.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:41.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:41.959
  STEP: creating Agnhost RC @ 09/23/23 12:41:41.961
  Sep 23 12:41:41.961: INFO: namespace kubectl-6501
  Sep 23 12:41:41.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6501 create -f -'
  Sep 23 12:41:42.417: INFO: stderr: ""
  Sep 23 12:41:42.417: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/23/23 12:41:42.417
  Sep 23 12:41:43.422: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 12:41:43.422: INFO: Found 0 / 1
  Sep 23 12:41:44.421: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 12:41:44.421: INFO: Found 1 / 1
  Sep 23 12:41:44.421: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 23 12:41:44.424: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 12:41:44.424: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 23 12:41:44.424: INFO: wait on agnhost-primary startup in kubectl-6501 
  Sep 23 12:41:44.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6501 logs agnhost-primary-m6ds4 agnhost-primary'
  Sep 23 12:41:44.499: INFO: stderr: ""
  Sep 23 12:41:44.499: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/23/23 12:41:44.499
  Sep 23 12:41:44.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6501 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep 23 12:41:44.566: INFO: stderr: ""
  Sep 23 12:41:44.566: INFO: stdout: "service/rm2 exposed\n"
  Sep 23 12:41:44.572: INFO: Service rm2 in namespace kubectl-6501 found.
  STEP: exposing service @ 09/23/23 12:41:46.58
  Sep 23 12:41:46.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6501 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep 23 12:41:46.650: INFO: stderr: ""
  Sep 23 12:41:46.650: INFO: stdout: "service/rm3 exposed\n"
  Sep 23 12:41:46.653: INFO: Service rm3 in namespace kubectl-6501 found.
  Sep 23 12:41:48.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6501" for this suite. @ 09/23/23 12:41:48.665
• [6.728 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/23/23 12:41:48.675
  Sep 23 12:41:48.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename init-container @ 09/23/23 12:41:48.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:48.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:48.694
  STEP: creating the pod @ 09/23/23 12:41:48.696
  Sep 23 12:41:48.696: INFO: PodSpec: initContainers in spec.initContainers
  Sep 23 12:41:52.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2995" for this suite. @ 09/23/23 12:41:52.223
• [3.555 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/23/23 12:41:52.23
  Sep 23 12:41:52.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename ingress @ 09/23/23 12:41:52.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:52.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:52.245
  STEP: getting /apis @ 09/23/23 12:41:52.248
  STEP: getting /apis/networking.k8s.io @ 09/23/23 12:41:52.251
  STEP: getting /apis/networking.k8s.iov1 @ 09/23/23 12:41:52.252
  STEP: creating @ 09/23/23 12:41:52.254
  STEP: getting @ 09/23/23 12:41:52.272
  STEP: listing @ 09/23/23 12:41:52.277
  STEP: watching @ 09/23/23 12:41:52.28
  Sep 23 12:41:52.280: INFO: starting watch
  STEP: cluster-wide listing @ 09/23/23 12:41:52.282
  STEP: cluster-wide watching @ 09/23/23 12:41:52.285
  Sep 23 12:41:52.285: INFO: starting watch
  STEP: patching @ 09/23/23 12:41:52.286
  STEP: updating @ 09/23/23 12:41:52.29
  Sep 23 12:41:52.300: INFO: waiting for watch events with expected annotations
  Sep 23 12:41:52.300: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/23/23 12:41:52.3
  STEP: updating /status @ 09/23/23 12:41:52.305
  STEP: get /status @ 09/23/23 12:41:52.318
  STEP: deleting @ 09/23/23 12:41:52.322
  STEP: deleting a collection @ 09/23/23 12:41:52.336
  Sep 23 12:41:52.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4111" for this suite. @ 09/23/23 12:41:52.36
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/23/23 12:41:52.371
  Sep 23 12:41:52.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:41:52.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:52.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:52.387
  Sep 23 12:41:52.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9499" for this suite. @ 09/23/23 12:41:52.436
• [0.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/23/23 12:41:52.444
  Sep 23 12:41:52.444: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 12:41:52.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:52.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:52.46
  Sep 23 12:41:52.467: INFO: Got root ca configmap in namespace "svcaccounts-3728"
  Sep 23 12:41:52.473: INFO: Deleted root ca configmap in namespace "svcaccounts-3728"
  STEP: waiting for a new root ca configmap created @ 09/23/23 12:41:52.973
  Sep 23 12:41:52.977: INFO: Recreated root ca configmap in namespace "svcaccounts-3728"
  Sep 23 12:41:52.982: INFO: Updated root ca configmap in namespace "svcaccounts-3728"
  STEP: waiting for the root ca configmap reconciled @ 09/23/23 12:41:53.483
  Sep 23 12:41:53.487: INFO: Reconciled root ca configmap in namespace "svcaccounts-3728"
  Sep 23 12:41:53.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3728" for this suite. @ 09/23/23 12:41:53.492
• [1.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/23/23 12:41:53.499
  Sep 23 12:41:53.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:41:53.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:53.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:53.516
  STEP: Creating a ResourceQuota @ 09/23/23 12:41:53.518
  STEP: Getting a ResourceQuota @ 09/23/23 12:41:53.523
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/23/23 12:41:53.525
  STEP: Patching the ResourceQuota @ 09/23/23 12:41:53.528
  STEP: Deleting a Collection of ResourceQuotas @ 09/23/23 12:41:53.533
  STEP: Verifying the deleted ResourceQuota @ 09/23/23 12:41:53.542
  Sep 23 12:41:53.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4199" for this suite. @ 09/23/23 12:41:53.548
• [0.056 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/23/23 12:41:53.556
  Sep 23 12:41:53.556: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-runtime @ 09/23/23 12:41:53.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:53.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:53.57
  STEP: create the container @ 09/23/23 12:41:53.572
  W0923 12:41:53.581707      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/23/23 12:41:53.581
  STEP: get the container status @ 09/23/23 12:41:56.597
  STEP: the container should be terminated @ 09/23/23 12:41:56.601
  STEP: the termination message should be set @ 09/23/23 12:41:56.601
  Sep 23 12:41:56.601: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/23/23 12:41:56.601
  Sep 23 12:41:56.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-718" for this suite. @ 09/23/23 12:41:56.62
• [3.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/23/23 12:41:56.627
  Sep 23 12:41:56.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:41:56.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:56.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:56.642
  STEP: create deployment with httpd image @ 09/23/23 12:41:56.645
  Sep 23 12:41:56.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-3644 create -f -'
  Sep 23 12:41:56.792: INFO: stderr: ""
  Sep 23 12:41:56.792: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/23/23 12:41:56.792
  Sep 23 12:41:56.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-3644 diff -f -'
  Sep 23 12:41:56.917: INFO: rc: 1
  Sep 23 12:41:56.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-3644 delete -f -'
  Sep 23 12:41:56.977: INFO: stderr: ""
  Sep 23 12:41:56.977: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep 23 12:41:56.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3644" for this suite. @ 09/23/23 12:41:56.982
• [0.361 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/23/23 12:41:56.989
  Sep 23 12:41:56.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:41:56.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:57.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:57.005
  STEP: creating a secret @ 09/23/23 12:41:57.008
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/23/23 12:41:57.013
  STEP: patching the secret @ 09/23/23 12:41:57.017
  STEP: deleting the secret using a LabelSelector @ 09/23/23 12:41:57.026
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/23/23 12:41:57.034
  Sep 23 12:41:57.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4027" for this suite. @ 09/23/23 12:41:57.041
• [0.059 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/23/23 12:41:57.047
  Sep 23 12:41:57.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename namespaces @ 09/23/23 12:41:57.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:57.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:57.063
  STEP: creating a Namespace @ 09/23/23 12:41:57.066
  STEP: patching the Namespace @ 09/23/23 12:41:57.079
  STEP: get the Namespace and ensuring it has the label @ 09/23/23 12:41:57.084
  Sep 23 12:41:57.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4174" for this suite. @ 09/23/23 12:41:57.092
  STEP: Destroying namespace "nspatchtest-6250363c-d882-4e18-af44-34105a44a6af-2904" for this suite. @ 09/23/23 12:41:57.097
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/23/23 12:41:57.105
  Sep 23 12:41:57.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:41:57.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:41:57.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:41:57.118
  STEP: Setting up server cert @ 09/23/23 12:41:57.139
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:41:57.473
  STEP: Deploying the webhook pod @ 09/23/23 12:41:57.481
  STEP: Wait for the deployment to be ready @ 09/23/23 12:41:57.492
  Sep 23 12:41:57.500: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:41:59.511
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:41:59.521
  Sep 23 12:42:00.521: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/23/23 12:42:00.529
  STEP: create a pod that should be updated by the webhook @ 09/23/23 12:42:00.542
  Sep 23 12:42:00.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9143" for this suite. @ 09/23/23 12:42:00.609
  STEP: Destroying namespace "webhook-markers-5198" for this suite. @ 09/23/23 12:42:00.615
• [3.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/23/23 12:42:00.623
  Sep 23 12:42:00.623: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-runtime @ 09/23/23 12:42:00.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:42:00.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:42:00.64
  STEP: create the container @ 09/23/23 12:42:00.643
  W0923 12:42:00.650878      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/23/23 12:42:00.651
  STEP: get the container status @ 09/23/23 12:42:03.669
  STEP: the container should be terminated @ 09/23/23 12:42:03.672
  STEP: the termination message should be set @ 09/23/23 12:42:03.672
  Sep 23 12:42:03.672: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/23/23 12:42:03.672
  Sep 23 12:42:03.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2602" for this suite. @ 09/23/23 12:42:03.695
• [3.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/23/23 12:42:03.703
  Sep 23 12:42:03.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:42:03.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:42:03.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:42:03.717
  STEP: creating service multi-endpoint-test in namespace services-5558 @ 09/23/23 12:42:03.72
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5558 to expose endpoints map[] @ 09/23/23 12:42:03.73
  Sep 23 12:42:03.738: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Sep 23 12:42:04.746: INFO: successfully validated that service multi-endpoint-test in namespace services-5558 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5558 @ 09/23/23 12:42:04.746
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5558 to expose endpoints map[pod1:[100]] @ 09/23/23 12:42:06.77
  Sep 23 12:42:06.782: INFO: successfully validated that service multi-endpoint-test in namespace services-5558 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5558 @ 09/23/23 12:42:06.782
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5558 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/23/23 12:42:08.799
  Sep 23 12:42:08.812: INFO: successfully validated that service multi-endpoint-test in namespace services-5558 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/23/23 12:42:08.812
  Sep 23 12:42:08.812: INFO: Creating new exec pod
  Sep 23 12:42:11.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5558 exec execpod4bqhg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep 23 12:42:11.999: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep 23 12:42:11.999: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:42:11.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5558 exec execpod4bqhg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.129 80'
  Sep 23 12:42:12.153: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.129 80\nConnection to 10.152.183.129 80 port [tcp/http] succeeded!\n"
  Sep 23 12:42:12.153: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:42:12.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5558 exec execpod4bqhg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep 23 12:42:12.311: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep 23 12:42:12.311: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:42:12.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-5558 exec execpod4bqhg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.129 81'
  Sep 23 12:42:12.466: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.129 81\nConnection to 10.152.183.129 81 port [tcp/*] succeeded!\n"
  Sep 23 12:42:12.466: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5558 @ 09/23/23 12:42:12.466
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5558 to expose endpoints map[pod2:[101]] @ 09/23/23 12:42:12.483
  Sep 23 12:42:12.494: INFO: successfully validated that service multi-endpoint-test in namespace services-5558 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5558 @ 09/23/23 12:42:12.494
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5558 to expose endpoints map[] @ 09/23/23 12:42:12.512
  Sep 23 12:42:12.520: INFO: successfully validated that service multi-endpoint-test in namespace services-5558 exposes endpoints map[]
  Sep 23 12:42:12.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5558" for this suite. @ 09/23/23 12:42:12.542
• [8.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/23/23 12:42:12.55
  Sep 23 12:42:12.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:42:12.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:42:12.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:42:12.567
  STEP: Creating secret with name secret-test-8cf8ae23-6c1f-4e79-ba44-4b69b2401cfe @ 09/23/23 12:42:12.57
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:42:12.574
  STEP: Saw pod success @ 09/23/23 12:42:16.596
  Sep 23 12:42:16.600: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-secrets-de1f9205-bf5a-486b-b89d-eb8958398ab3 container secret-env-test: <nil>
  STEP: delete the pod @ 09/23/23 12:42:16.607
  Sep 23 12:42:16.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2217" for this suite. @ 09/23/23 12:42:16.627
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/23/23 12:42:16.633
  Sep 23 12:42:16.633: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-watch @ 09/23/23 12:42:16.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:42:16.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:42:16.65
  Sep 23 12:42:16.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Creating first CR  @ 09/23/23 12:42:19.189
  Sep 23 12:42:19.194: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-23T12:42:19Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-23T12:42:19Z]] name:name1 resourceVersion:14122 uid:3d867319-f86d-4031-9ded-5d019cc4ee50] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/23/23 12:42:29.194
  Sep 23 12:42:29.200: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-23T12:42:29Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-23T12:42:29Z]] name:name2 resourceVersion:14153 uid:4824e52c-dbd3-4917-a82e-49c5a83cf0bd] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/23/23 12:42:39.2
  Sep 23 12:42:39.207: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-23T12:42:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-23T12:42:39Z]] name:name1 resourceVersion:14173 uid:3d867319-f86d-4031-9ded-5d019cc4ee50] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/23/23 12:42:49.208
  Sep 23 12:42:49.214: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-23T12:42:29Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-23T12:42:49Z]] name:name2 resourceVersion:14193 uid:4824e52c-dbd3-4917-a82e-49c5a83cf0bd] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/23/23 12:42:59.215
  Sep 23 12:42:59.223: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-23T12:42:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-23T12:42:39Z]] name:name1 resourceVersion:14212 uid:3d867319-f86d-4031-9ded-5d019cc4ee50] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/23/23 12:43:09.224
  Sep 23 12:43:09.235: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-23T12:42:29Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-23T12:42:49Z]] name:name2 resourceVersion:14232 uid:4824e52c-dbd3-4917-a82e-49c5a83cf0bd] num:map[num1:9223372036854775807 num2:1000000]]}
  Sep 23 12:43:19.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7516" for this suite. @ 09/23/23 12:43:19.755
• [63.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/23/23 12:43:19.764
  Sep 23 12:43:19.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 12:43:19.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:43:19.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:43:19.782
  STEP: Creating a pod to test substitution in container's args @ 09/23/23 12:43:19.785
  STEP: Saw pod success @ 09/23/23 12:43:23.807
  Sep 23 12:43:23.811: INFO: Trying to get logs from node ip-172-31-77-156 pod var-expansion-95dd9b1d-22bd-49dc-97ff-d53a4109d9ad container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 12:43:23.829
  Sep 23 12:43:23.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3299" for this suite. @ 09/23/23 12:43:23.85
• [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/23/23 12:43:23.857
  Sep 23 12:43:23.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 12:43:23.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:43:23.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:43:23.873
  STEP: Creating service test in namespace statefulset-2740 @ 09/23/23 12:43:23.876
  STEP: Creating a new StatefulSet @ 09/23/23 12:43:23.881
  Sep 23 12:43:23.891: INFO: Found 0 stateful pods, waiting for 3
  Sep 23 12:43:33.901: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 12:43:33.901: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 12:43:33.901: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 12:43:33.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-2740 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 12:43:34.061: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 12:43:34.061: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 12:43:34.061: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/23/23 12:43:44.079
  Sep 23 12:43:44.099: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/23/23 12:43:44.099
  STEP: Updating Pods in reverse ordinal order @ 09/23/23 12:43:54.117
  Sep 23 12:43:54.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-2740 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 12:43:54.258: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 12:43:54.258: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 12:43:54.258: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 12:44:04.280: INFO: Waiting for StatefulSet statefulset-2740/ss2 to complete update
  Sep 23 12:44:04.280: INFO: Waiting for Pod statefulset-2740/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 09/23/23 12:44:14.289
  Sep 23 12:44:14.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-2740 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 12:44:14.442: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 12:44:14.442: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 12:44:14.442: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 12:44:24.477: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/23/23 12:44:34.494
  Sep 23 12:44:34.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-2740 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 12:44:34.659: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 12:44:34.659: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 12:44:34.659: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 12:44:44.684: INFO: Deleting all statefulset in ns statefulset-2740
  Sep 23 12:44:44.688: INFO: Scaling statefulset ss2 to 0
  Sep 23 12:44:54.705: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 12:44:54.708: INFO: Deleting statefulset ss2
  Sep 23 12:44:54.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2740" for this suite. @ 09/23/23 12:44:54.726
• [90.876 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/23/23 12:44:54.734
  Sep 23 12:44:54.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:44:54.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:44:54.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:44:54.752
  STEP: Creating secret with name secret-test-d5567ff6-6130-4131-95c6-2356acd94e0a @ 09/23/23 12:44:54.758
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:44:54.763
  STEP: Saw pod success @ 09/23/23 12:44:58.785
  Sep 23 12:44:58.789: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-secrets-a6df28d4-c237-49a0-a44a-3a5cecb39919 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 12:44:58.803
  Sep 23 12:44:58.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4348" for this suite. @ 09/23/23 12:44:58.821
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/23/23 12:44:58.828
  Sep 23 12:44:58.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 12:44:58.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:44:58.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:44:58.844
  STEP: creating a Deployment @ 09/23/23 12:44:58.851
  Sep 23 12:44:58.851: INFO: Creating simple deployment test-deployment-fzvn6
  Sep 23 12:44:58.862: INFO: deployment "test-deployment-fzvn6" doesn't have the required revision set
  STEP: Getting /status @ 09/23/23 12:45:00.878
  Sep 23 12:45:00.882: INFO: Deployment test-deployment-fzvn6 has Conditions: [{Available True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:45:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fzvn6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/23/23 12:45:00.882
  Sep 23 12:45:00.891: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 12, 45, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 12, 45, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 12, 45, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 12, 44, 58, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-fzvn6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/23/23 12:45:00.891
  Sep 23 12:45:00.893: INFO: Observed &Deployment event: ADDED
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fzvn6-5d576bd769"}
  Sep 23 12:45:00.893: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fzvn6-5d576bd769"}
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 23 12:45:00.893: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fzvn6-5d576bd769" is progressing.}
  Sep 23 12:45:00.893: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:45:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fzvn6-5d576bd769" has successfully progressed.}
  Sep 23 12:45:00.893: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:45:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 23 12:45:00.893: INFO: Observed Deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fzvn6-5d576bd769" has successfully progressed.}
  Sep 23 12:45:00.893: INFO: Found Deployment test-deployment-fzvn6 in namespace deployment-832 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 23 12:45:00.893: INFO: Deployment test-deployment-fzvn6 has an updated status
  STEP: patching the Statefulset Status @ 09/23/23 12:45:00.894
  Sep 23 12:45:00.894: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 23 12:45:00.900: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/23/23 12:45:00.9
  Sep 23 12:45:00.902: INFO: Observed &Deployment event: ADDED
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fzvn6-5d576bd769"}
  Sep 23 12:45:00.902: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fzvn6-5d576bd769"}
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 23 12:45:00.902: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:44:58 +0000 UTC 2023-09-23 12:44:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fzvn6-5d576bd769" is progressing.}
  Sep 23 12:45:00.902: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:45:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 23 12:45:00.902: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fzvn6-5d576bd769" has successfully progressed.}
  Sep 23 12:45:00.902: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.903: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:45:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 23 12:45:00.903: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-23 12:45:00 +0000 UTC 2023-09-23 12:44:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fzvn6-5d576bd769" has successfully progressed.}
  Sep 23 12:45:00.903: INFO: Observed deployment test-deployment-fzvn6 in namespace deployment-832 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 23 12:45:00.903: INFO: Observed &Deployment event: MODIFIED
  Sep 23 12:45:00.903: INFO: Found deployment test-deployment-fzvn6 in namespace deployment-832 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep 23 12:45:00.903: INFO: Deployment test-deployment-fzvn6 has a patched status
  Sep 23 12:45:00.908: INFO: Deployment "test-deployment-fzvn6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-fzvn6",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f536ca0-66f5-44c1-84f2-8c446b6ac998",
      ResourceVersion: (string) (len=5) "15017",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-fzvn6-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 12:45:00.913: INFO: New ReplicaSet "test-deployment-fzvn6-5d576bd769" of Deployment "test-deployment-fzvn6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-fzvn6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be2110f3-0092-48c8-b696-691ab90d2a9a",
      ResourceVersion: (string) (len=5) "15012",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-fzvn6",
          UID: (types.UID) (len=36) "5f536ca0-66f5-44c1-84f2-8c446b6ac998",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 66 35  |k:{\"uid\":\"5f5|
              00000120  33 36 63 61 30 2d 36 36  66 35 2d 34 34 63 31 2d  |36ca0-66f5-44c1-|
              00000130  38 34 66 32 2d 38 63 34  34 36 62 36 61 63 39 39  |84f2-8c446b6ac99|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 12:45:00.919: INFO: Pod "test-deployment-fzvn6-5d576bd769-hwccr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-fzvn6-5d576bd769-hwccr",
      GenerateName: (string) (len=33) "test-deployment-fzvn6-5d576bd769-",
      Namespace: (string) (len=14) "deployment-832",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "175f5b83-b747-40ff-bbc9-c66b2d50d33a",
      ResourceVersion: (string) (len=5) "15011",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-fzvn6-5d576bd769",
          UID: (types.UID) (len=36) "be2110f3-0092-48c8-b696-691ab90d2a9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 65 32 31 31 30 66  33 2d 30 30 39 32 2d 34  |"be2110f3-0092-4|
              000000a0  38 63 38 2d 62 36 39 36  2d 36 39 31 61 62 39 30  |8c8-b696-691ab90|
              000000b0  64 32 61 39 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d2a9a\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 31 35 5c 22  |192.168.55.115\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2rtcq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2rtcq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831069898,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831069898,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831069899,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0801c89bc3f1d5980d13c6cace54ec9bb3a4714f4062375773e1dc4669c2bf99",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 12:45:00.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-832" for this suite. @ 09/23/23 12:45:00.926
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/23/23 12:45:00.933
  Sep 23 12:45:00.933: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:45:00.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:45:00.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:45:00.949
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/23/23 12:45:00.952
  STEP: Saw pod success @ 09/23/23 12:45:04.976
  Sep 23 12:45:04.980: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-b1a38e6c-1f5d-43af-a17e-69405b7979b0 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:45:04.987
  Sep 23 12:45:05.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5542" for this suite. @ 09/23/23 12:45:05.011
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/23/23 12:45:05.018
  Sep 23 12:45:05.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 12:45:05.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:45:05.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:45:05.04
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-86c4f879-f096-45c7-8f67-f873fce9d190 @ 09/23/23 12:45:05.047
  STEP: Creating the pod @ 09/23/23 12:45:05.052
  STEP: Updating configmap projected-configmap-test-upd-86c4f879-f096-45c7-8f67-f873fce9d190 @ 09/23/23 12:45:07.084
  STEP: waiting to observe update in volume @ 09/23/23 12:45:07.088
  Sep 23 12:46:31.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1528" for this suite. @ 09/23/23 12:46:31.484
• [86.473 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/23/23 12:46:31.492
  Sep 23 12:46:31.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename security-context-test @ 09/23/23 12:46:31.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:46:31.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:46:31.509
  Sep 23 12:46:35.548: INFO: Got logs for pod "busybox-privileged-false-d1f13c5d-0989-4440-89a7-357bca3fb58f": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep 23 12:46:35.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9840" for this suite. @ 09/23/23 12:46:35.553
• [4.070 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/23/23 12:46:35.562
  Sep 23 12:46:35.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename subpath @ 09/23/23 12:46:35.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:46:35.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:46:35.577
  STEP: Setting up data @ 09/23/23 12:46:35.58
  STEP: Creating pod pod-subpath-test-downwardapi-x2r6 @ 09/23/23 12:46:35.589
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/23 12:46:35.59
  STEP: Saw pod success @ 09/23/23 12:46:59.668
  Sep 23 12:46:59.672: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-subpath-test-downwardapi-x2r6 container test-container-subpath-downwardapi-x2r6: <nil>
  STEP: delete the pod @ 09/23/23 12:46:59.682
  STEP: Deleting pod pod-subpath-test-downwardapi-x2r6 @ 09/23/23 12:46:59.696
  Sep 23 12:46:59.696: INFO: Deleting pod "pod-subpath-test-downwardapi-x2r6" in namespace "subpath-4434"
  Sep 23 12:46:59.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4434" for this suite. @ 09/23/23 12:46:59.704
• [24.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/23/23 12:46:59.713
  Sep 23 12:46:59.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/23 12:46:59.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:46:59.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:46:59.729
  Sep 23 12:46:59.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:47:00.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6934" for this suite. @ 09/23/23 12:47:00.278
• [0.572 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/23/23 12:47:00.286
  Sep 23 12:47:00.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:47:00.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:47:00.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:47:00.301
  STEP: Creating configMap with name configmap-test-upd-4ecb5315-638a-44f8-a244-df5bc928d0f9 @ 09/23/23 12:47:00.31
  STEP: Creating the pod @ 09/23/23 12:47:00.314
  STEP: Updating configmap configmap-test-upd-4ecb5315-638a-44f8-a244-df5bc928d0f9 @ 09/23/23 12:47:02.341
  STEP: waiting to observe update in volume @ 09/23/23 12:47:02.346
  Sep 23 12:48:32.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7713" for this suite. @ 09/23/23 12:48:32.759
• [92.480 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/23/23 12:48:32.766
  Sep 23 12:48:32.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename limitrange @ 09/23/23 12:48:32.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:48:32.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:48:32.783
  STEP: Creating a LimitRange @ 09/23/23 12:48:32.786
  STEP: Setting up watch @ 09/23/23 12:48:32.786
  STEP: Submitting a LimitRange @ 09/23/23 12:48:32.89
  STEP: Verifying LimitRange creation was observed @ 09/23/23 12:48:32.895
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/23/23 12:48:32.895
  Sep 23 12:48:32.899: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 23 12:48:32.900: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/23/23 12:48:32.9
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/23/23 12:48:32.906
  Sep 23 12:48:32.910: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 23 12:48:32.910: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/23/23 12:48:32.91
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/23/23 12:48:32.919
  Sep 23 12:48:32.928: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep 23 12:48:32.928: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/23/23 12:48:32.928
  STEP: Failing to create a Pod with more than max resources @ 09/23/23 12:48:32.929
  STEP: Updating a LimitRange @ 09/23/23 12:48:32.931
  STEP: Verifying LimitRange updating is effective @ 09/23/23 12:48:32.938
  STEP: Creating a Pod with less than former min resources @ 09/23/23 12:48:34.943
  STEP: Failing to create a Pod with more than max resources @ 09/23/23 12:48:34.949
  STEP: Deleting a LimitRange @ 09/23/23 12:48:34.951
  STEP: Verifying the LimitRange was deleted @ 09/23/23 12:48:34.959
  Sep 23 12:48:39.964: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/23/23 12:48:39.964
  Sep 23 12:48:39.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4821" for this suite. @ 09/23/23 12:48:39.978
• [7.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/23/23 12:48:39.986
  Sep 23 12:48:39.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:48:39.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:48:39.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:48:40.001
  STEP: Counting existing ResourceQuota @ 09/23/23 12:48:40.005
  STEP: Creating a ResourceQuota @ 09/23/23 12:48:45.009
  STEP: Ensuring resource quota status is calculated @ 09/23/23 12:48:45.015
  STEP: Creating a Service @ 09/23/23 12:48:47.021
  STEP: Creating a NodePort Service @ 09/23/23 12:48:47.038
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/23/23 12:48:47.059
  STEP: Ensuring resource quota status captures service creation @ 09/23/23 12:48:47.081
  STEP: Deleting Services @ 09/23/23 12:48:49.087
  STEP: Ensuring resource quota status released usage @ 09/23/23 12:48:49.122
  Sep 23 12:48:51.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1888" for this suite. @ 09/23/23 12:48:51.132
• [11.152 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/23/23 12:48:51.139
  Sep 23 12:48:51.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:48:51.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:48:51.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:48:51.156
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/23/23 12:48:51.158
  STEP: Saw pod success @ 09/23/23 12:48:55.182
  Sep 23 12:48:55.187: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-dbabf53d-93bb-4184-8f01-e63dd7b6186c container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:48:55.194
  Sep 23 12:48:55.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5659" for this suite. @ 09/23/23 12:48:55.212
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/23/23 12:48:55.22
  Sep 23 12:48:55.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 12:48:55.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:48:55.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:48:55.236
  Sep 23 12:48:55.257: INFO: created pod pod-service-account-defaultsa
  Sep 23 12:48:55.257: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep 23 12:48:55.265: INFO: created pod pod-service-account-mountsa
  Sep 23 12:48:55.265: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep 23 12:48:55.271: INFO: created pod pod-service-account-nomountsa
  Sep 23 12:48:55.271: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep 23 12:48:55.279: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep 23 12:48:55.279: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep 23 12:48:55.286: INFO: created pod pod-service-account-mountsa-mountspec
  Sep 23 12:48:55.286: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep 23 12:48:55.297: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep 23 12:48:55.297: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep 23 12:48:55.301: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep 23 12:48:55.301: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep 23 12:48:55.308: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep 23 12:48:55.308: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep 23 12:48:55.314: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep 23 12:48:55.314: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep 23 12:48:55.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1386" for this suite. @ 09/23/23 12:48:55.321
• [0.109 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/23/23 12:48:55.33
  Sep 23 12:48:55.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replication-controller @ 09/23/23 12:48:55.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:48:55.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:48:55.349
  STEP: Creating replication controller my-hostname-basic-0b9edaa4-0e14-4145-85f7-e6f28902a709 @ 09/23/23 12:48:55.352
  Sep 23 12:48:55.361: INFO: Pod name my-hostname-basic-0b9edaa4-0e14-4145-85f7-e6f28902a709: Found 0 pods out of 1
  Sep 23 12:49:00.368: INFO: Pod name my-hostname-basic-0b9edaa4-0e14-4145-85f7-e6f28902a709: Found 1 pods out of 1
  Sep 23 12:49:00.368: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-0b9edaa4-0e14-4145-85f7-e6f28902a709" are running
  Sep 23 12:49:00.372: INFO: Pod "my-hostname-basic-0b9edaa4-0e14-4145-85f7-e6f28902a709-k2nkx" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 12:48:55 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 12:48:56 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 12:48:56 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 12:48:55 +0000 UTC Reason: Message:}])
  Sep 23 12:49:00.372: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/23/23 12:49:00.372
  Sep 23 12:49:00.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5787" for this suite. @ 09/23/23 12:49:00.39
• [5.067 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/23/23 12:49:00.398
  Sep 23 12:49:00.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 12:49:00.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:49:00.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:49:00.412
  STEP: Creating pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931 @ 09/23/23 12:49:00.416
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 12:49:02.436
  Sep 23 12:49:02.439: INFO: Initial restart count of pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea is 0
  Sep 23 12:49:02.442: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:04.447: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:06.452: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:08.457: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:10.462: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:12.468: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:14.472: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:16.478: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:18.483: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:20.488: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:22.493: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:24.498: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:26.504: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:28.508: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:30.513: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:32.518: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:34.524: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:36.528: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:38.533: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:40.538: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:42.544: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:44.549: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:46.554: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:48.558: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:50.564: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:52.568: INFO: Get pod busybox-bd34b021-309e-4e67-9349-96e4b19a1bea in namespace container-probe-8931
  Sep 23 12:49:52.568: INFO: Restart count of pod container-probe-8931/busybox-bd34b021-309e-4e67-9349-96e4b19a1bea is now 1 (50.129089821s elapsed)
  Sep 23 12:49:52.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 12:49:52.573
  STEP: Destroying namespace "container-probe-8931" for this suite. @ 09/23/23 12:49:52.587
• [52.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/23/23 12:49:52.595
  Sep 23 12:49:52.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename proxy @ 09/23/23 12:49:52.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:49:52.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:49:52.614
  STEP: starting an echo server on multiple ports @ 09/23/23 12:49:52.627
  STEP: creating replication controller proxy-service-kx9cv in namespace proxy-1058 @ 09/23/23 12:49:52.627
  I0923 12:49:52.634616      22 runners.go:197] Created replication controller with name: proxy-service-kx9cv, namespace: proxy-1058, replica count: 1
  I0923 12:49:53.685361      22 runners.go:197] proxy-service-kx9cv Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 12:49:54.685529      22 runners.go:197] proxy-service-kx9cv Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 12:49:54.689: INFO: setup took 2.072795286s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/23/23 12:49:54.689
  Sep 23 12:49:54.693: INFO: (0) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.395903ms)
  Sep 23 12:49:54.694: INFO: (0) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.416006ms)
  Sep 23 12:49:54.695: INFO: (0) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 6.072403ms)
  Sep 23 12:49:54.695: INFO: (0) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.119175ms)
  Sep 23 12:49:54.696: INFO: (0) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.600841ms)
  Sep 23 12:49:54.699: INFO: (0) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 9.919809ms)
  Sep 23 12:49:54.699: INFO: (0) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 10.16991ms)
  Sep 23 12:49:54.699: INFO: (0) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 10.073177ms)
  Sep 23 12:49:54.699: INFO: (0) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 10.246392ms)
  Sep 23 12:49:54.700: INFO: (0) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 10.434639ms)
  Sep 23 12:49:54.700: INFO: (0) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 10.867352ms)
  Sep 23 12:49:54.700: INFO: (0) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 11.085783ms)
  Sep 23 12:49:54.701: INFO: (0) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 11.826334ms)
  Sep 23 12:49:54.701: INFO: (0) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 11.961082ms)
  Sep 23 12:49:54.702: INFO: (0) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 13.152759ms)
  Sep 23 12:49:54.702: INFO: (0) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 13.157092ms)
  Sep 23 12:49:54.706: INFO: (1) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.815868ms)
  Sep 23 12:49:54.707: INFO: (1) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.325564ms)
  Sep 23 12:49:54.707: INFO: (1) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.87036ms)
  Sep 23 12:49:54.707: INFO: (1) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.954925ms)
  Sep 23 12:49:54.707: INFO: (1) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.926753ms)
  Sep 23 12:49:54.708: INFO: (1) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.170418ms)
  Sep 23 12:49:54.708: INFO: (1) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 5.497377ms)
  Sep 23 12:49:54.709: INFO: (1) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.13435ms)
  Sep 23 12:49:54.709: INFO: (1) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 6.225149ms)
  Sep 23 12:49:54.709: INFO: (1) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 6.344412ms)
  Sep 23 12:49:54.709: INFO: (1) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.525126ms)
  Sep 23 12:49:54.709: INFO: (1) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 6.468203ms)
  Sep 23 12:49:54.710: INFO: (1) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.474247ms)
  Sep 23 12:49:54.710: INFO: (1) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.778652ms)
  Sep 23 12:49:54.710: INFO: (1) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 7.737231ms)
  Sep 23 12:49:54.712: INFO: (1) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 9.211673ms)
  Sep 23 12:49:54.715: INFO: (2) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 3.627348ms)
  Sep 23 12:49:54.715: INFO: (2) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 3.631644ms)
  Sep 23 12:49:54.716: INFO: (2) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.451748ms)
  Sep 23 12:49:54.717: INFO: (2) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.985969ms)
  Sep 23 12:49:54.717: INFO: (2) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.024685ms)
  Sep 23 12:49:54.717: INFO: (2) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 5.12885ms)
  Sep 23 12:49:54.717: INFO: (2) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.176992ms)
  Sep 23 12:49:54.717: INFO: (2) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 5.225462ms)
  Sep 23 12:49:54.717: INFO: (2) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 5.666254ms)
  Sep 23 12:49:54.718: INFO: (2) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 5.995337ms)
  Sep 23 12:49:54.718: INFO: (2) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.274658ms)
  Sep 23 12:49:54.718: INFO: (2) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.414561ms)
  Sep 23 12:49:54.718: INFO: (2) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.52358ms)
  Sep 23 12:49:54.719: INFO: (2) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.577961ms)
  Sep 23 12:49:54.720: INFO: (2) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.696671ms)
  Sep 23 12:49:54.721: INFO: (2) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 9.061541ms)
  Sep 23 12:49:54.725: INFO: (3) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 3.990912ms)
  Sep 23 12:49:54.725: INFO: (3) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 4.007364ms)
  Sep 23 12:49:54.726: INFO: (3) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.805699ms)
  Sep 23 12:49:54.726: INFO: (3) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.957197ms)
  Sep 23 12:49:54.726: INFO: (3) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 5.265399ms)
  Sep 23 12:49:54.727: INFO: (3) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 5.951853ms)
  Sep 23 12:49:54.727: INFO: (3) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.042952ms)
  Sep 23 12:49:54.727: INFO: (3) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.033993ms)
  Sep 23 12:49:54.727: INFO: (3) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.0705ms)
  Sep 23 12:49:54.727: INFO: (3) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.431758ms)
  Sep 23 12:49:54.728: INFO: (3) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 6.788425ms)
  Sep 23 12:49:54.728: INFO: (3) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 6.616237ms)
  Sep 23 12:49:54.728: INFO: (3) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 6.797074ms)
  Sep 23 12:49:54.729: INFO: (3) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 7.958577ms)
  Sep 23 12:49:54.729: INFO: (3) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 8.24037ms)
  Sep 23 12:49:54.729: INFO: (3) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 8.269157ms)
  Sep 23 12:49:54.733: INFO: (4) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 3.530233ms)
  Sep 23 12:49:54.733: INFO: (4) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.754116ms)
  Sep 23 12:49:54.734: INFO: (4) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.201708ms)
  Sep 23 12:49:54.734: INFO: (4) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.310237ms)
  Sep 23 12:49:54.734: INFO: (4) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.749603ms)
  Sep 23 12:49:54.734: INFO: (4) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.919976ms)
  Sep 23 12:49:54.735: INFO: (4) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.128941ms)
  Sep 23 12:49:54.735: INFO: (4) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.844667ms)
  Sep 23 12:49:54.736: INFO: (4) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.073716ms)
  Sep 23 12:49:54.736: INFO: (4) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.294325ms)
  Sep 23 12:49:54.736: INFO: (4) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 6.307712ms)
  Sep 23 12:49:54.736: INFO: (4) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 6.537648ms)
  Sep 23 12:49:54.737: INFO: (4) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.307552ms)
  Sep 23 12:49:54.737: INFO: (4) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.356701ms)
  Sep 23 12:49:54.737: INFO: (4) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 7.639471ms)
  Sep 23 12:49:54.739: INFO: (4) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 9.271957ms)
  Sep 23 12:49:54.742: INFO: (5) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 3.557649ms)
  Sep 23 12:49:54.743: INFO: (5) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 3.847563ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.061768ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 5.067927ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 5.221341ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.347766ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.234035ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.27271ms)
  Sep 23 12:49:54.744: INFO: (5) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 5.51757ms)
  Sep 23 12:49:54.745: INFO: (5) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.509938ms)
  Sep 23 12:49:54.745: INFO: (5) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.65035ms)
  Sep 23 12:49:54.746: INFO: (5) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 6.680364ms)
  Sep 23 12:49:54.746: INFO: (5) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.851475ms)
  Sep 23 12:49:54.747: INFO: (5) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.807853ms)
  Sep 23 12:49:54.747: INFO: (5) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 8.253259ms)
  Sep 23 12:49:54.748: INFO: (5) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 9.410094ms)
  Sep 23 12:49:54.752: INFO: (6) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 3.459763ms)
  Sep 23 12:49:54.752: INFO: (6) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 3.948956ms)
  Sep 23 12:49:54.753: INFO: (6) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.833678ms)
  Sep 23 12:49:54.753: INFO: (6) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.889375ms)
  Sep 23 12:49:54.754: INFO: (6) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 5.363692ms)
  Sep 23 12:49:54.754: INFO: (6) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.264983ms)
  Sep 23 12:49:54.754: INFO: (6) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 5.715665ms)
  Sep 23 12:49:54.754: INFO: (6) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.069795ms)
  Sep 23 12:49:54.755: INFO: (6) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.333566ms)
  Sep 23 12:49:54.755: INFO: (6) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.493573ms)
  Sep 23 12:49:54.755: INFO: (6) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.568352ms)
  Sep 23 12:49:54.755: INFO: (6) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 6.697973ms)
  Sep 23 12:49:54.756: INFO: (6) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.637965ms)
  Sep 23 12:49:54.756: INFO: (6) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 7.836658ms)
  Sep 23 12:49:54.756: INFO: (6) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.760075ms)
  Sep 23 12:49:54.756: INFO: (6) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.757031ms)
  Sep 23 12:49:54.760: INFO: (7) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 3.632868ms)
  Sep 23 12:49:54.760: INFO: (7) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.004036ms)
  Sep 23 12:49:54.761: INFO: (7) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.412728ms)
  Sep 23 12:49:54.761: INFO: (7) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.908686ms)
  Sep 23 12:49:54.761: INFO: (7) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.610152ms)
  Sep 23 12:49:54.762: INFO: (7) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.884198ms)
  Sep 23 12:49:54.762: INFO: (7) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 5.116544ms)
  Sep 23 12:49:54.763: INFO: (7) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.967039ms)
  Sep 23 12:49:54.763: INFO: (7) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.092298ms)
  Sep 23 12:49:54.763: INFO: (7) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.895826ms)
  Sep 23 12:49:54.763: INFO: (7) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 6.335399ms)
  Sep 23 12:49:54.763: INFO: (7) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.376205ms)
  Sep 23 12:49:54.765: INFO: (7) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.970658ms)
  Sep 23 12:49:54.765: INFO: (7) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.735029ms)
  Sep 23 12:49:54.765: INFO: (7) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.935518ms)
  Sep 23 12:49:54.766: INFO: (7) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 8.933343ms)
  Sep 23 12:49:54.769: INFO: (8) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 3.408065ms)
  Sep 23 12:49:54.770: INFO: (8) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.054031ms)
  Sep 23 12:49:54.770: INFO: (8) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.373435ms)
  Sep 23 12:49:54.770: INFO: (8) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.424789ms)
  Sep 23 12:49:54.771: INFO: (8) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.717915ms)
  Sep 23 12:49:54.771: INFO: (8) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 5.387228ms)
  Sep 23 12:49:54.772: INFO: (8) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.573935ms)
  Sep 23 12:49:54.772: INFO: (8) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.611832ms)
  Sep 23 12:49:54.772: INFO: (8) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.991126ms)
  Sep 23 12:49:54.772: INFO: (8) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.980141ms)
  Sep 23 12:49:54.772: INFO: (8) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.389676ms)
  Sep 23 12:49:54.773: INFO: (8) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 6.747477ms)
  Sep 23 12:49:54.773: INFO: (8) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.651296ms)
  Sep 23 12:49:54.773: INFO: (8) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.415709ms)
  Sep 23 12:49:54.774: INFO: (8) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 7.732143ms)
  Sep 23 12:49:54.775: INFO: (8) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 8.79444ms)
  Sep 23 12:49:54.779: INFO: (9) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.024028ms)
  Sep 23 12:49:54.779: INFO: (9) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.199911ms)
  Sep 23 12:49:54.779: INFO: (9) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.405914ms)
  Sep 23 12:49:54.779: INFO: (9) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.420739ms)
  Sep 23 12:49:54.780: INFO: (9) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 4.372454ms)
  Sep 23 12:49:54.780: INFO: (9) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.127682ms)
  Sep 23 12:49:54.781: INFO: (9) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.3745ms)
  Sep 23 12:49:54.781: INFO: (9) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 5.773977ms)
  Sep 23 12:49:54.781: INFO: (9) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.877358ms)
  Sep 23 12:49:54.781: INFO: (9) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.935328ms)
  Sep 23 12:49:54.781: INFO: (9) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 5.795854ms)
  Sep 23 12:49:54.781: INFO: (9) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 6.382635ms)
  Sep 23 12:49:54.782: INFO: (9) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.165275ms)
  Sep 23 12:49:54.782: INFO: (9) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.529684ms)
  Sep 23 12:49:54.783: INFO: (9) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 7.303882ms)
  Sep 23 12:49:54.784: INFO: (9) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 8.636212ms)
  Sep 23 12:49:54.787: INFO: (10) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 3.474748ms)
  Sep 23 12:49:54.788: INFO: (10) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 3.59002ms)
  Sep 23 12:49:54.788: INFO: (10) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.168209ms)
  Sep 23 12:49:54.789: INFO: (10) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.820296ms)
  Sep 23 12:49:54.789: INFO: (10) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 5.040854ms)
  Sep 23 12:49:54.789: INFO: (10) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.967749ms)
  Sep 23 12:49:54.789: INFO: (10) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.052169ms)
  Sep 23 12:49:54.789: INFO: (10) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.113514ms)
  Sep 23 12:49:54.790: INFO: (10) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 5.854128ms)
  Sep 23 12:49:54.790: INFO: (10) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.034507ms)
  Sep 23 12:49:54.790: INFO: (10) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 6.32291ms)
  Sep 23 12:49:54.791: INFO: (10) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.515833ms)
  Sep 23 12:49:54.791: INFO: (10) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.548792ms)
  Sep 23 12:49:54.792: INFO: (10) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.663306ms)
  Sep 23 12:49:54.792: INFO: (10) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.797714ms)
  Sep 23 12:49:54.793: INFO: (10) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 9.123163ms)
  Sep 23 12:49:54.797: INFO: (11) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 3.161253ms)
  Sep 23 12:49:54.797: INFO: (11) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.522132ms)
  Sep 23 12:49:54.797: INFO: (11) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.118653ms)
  Sep 23 12:49:54.798: INFO: (11) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.507788ms)
  Sep 23 12:49:54.798: INFO: (11) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 4.531964ms)
  Sep 23 12:49:54.798: INFO: (11) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.721748ms)
  Sep 23 12:49:54.799: INFO: (11) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 5.186284ms)
  Sep 23 12:49:54.799: INFO: (11) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.816546ms)
  Sep 23 12:49:54.800: INFO: (11) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.03304ms)
  Sep 23 12:49:54.800: INFO: (11) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 6.33518ms)
  Sep 23 12:49:54.800: INFO: (11) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 6.391725ms)
  Sep 23 12:49:54.801: INFO: (11) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.383297ms)
  Sep 23 12:49:54.801: INFO: (11) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.420276ms)
  Sep 23 12:49:54.801: INFO: (11) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.498876ms)
  Sep 23 12:49:54.802: INFO: (11) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 8.441742ms)
  Sep 23 12:49:54.802: INFO: (11) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 8.819798ms)
  Sep 23 12:49:54.806: INFO: (12) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 3.881085ms)
  Sep 23 12:49:54.807: INFO: (12) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.202786ms)
  Sep 23 12:49:54.807: INFO: (12) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.743231ms)
  Sep 23 12:49:54.807: INFO: (12) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.886096ms)
  Sep 23 12:49:54.807: INFO: (12) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.985906ms)
  Sep 23 12:49:54.808: INFO: (12) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 5.231978ms)
  Sep 23 12:49:54.808: INFO: (12) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.341497ms)
  Sep 23 12:49:54.809: INFO: (12) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 6.677907ms)
  Sep 23 12:49:54.809: INFO: (12) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.597183ms)
  Sep 23 12:49:54.809: INFO: (12) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.615701ms)
  Sep 23 12:49:54.809: INFO: (12) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.608012ms)
  Sep 23 12:49:54.809: INFO: (12) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.785421ms)
  Sep 23 12:49:54.810: INFO: (12) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.491822ms)
  Sep 23 12:49:54.810: INFO: (12) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.587691ms)
  Sep 23 12:49:54.810: INFO: (12) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 7.693497ms)
  Sep 23 12:49:54.811: INFO: (12) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 9.198366ms)
  Sep 23 12:49:54.815: INFO: (13) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.394111ms)
  Sep 23 12:49:54.815: INFO: (13) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 3.587712ms)
  Sep 23 12:49:54.816: INFO: (13) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.777705ms)
  Sep 23 12:49:54.816: INFO: (13) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.782457ms)
  Sep 23 12:49:54.817: INFO: (13) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.766806ms)
  Sep 23 12:49:54.817: INFO: (13) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 4.954642ms)
  Sep 23 12:49:54.817: INFO: (13) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 5.055381ms)
  Sep 23 12:49:54.817: INFO: (13) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 5.348256ms)
  Sep 23 12:49:54.817: INFO: (13) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 5.860756ms)
  Sep 23 12:49:54.818: INFO: (13) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.347855ms)
  Sep 23 12:49:54.818: INFO: (13) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 6.416914ms)
  Sep 23 12:49:54.818: INFO: (13) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 6.591274ms)
  Sep 23 12:49:54.818: INFO: (13) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 6.799294ms)
  Sep 23 12:49:54.819: INFO: (13) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.714804ms)
  Sep 23 12:49:54.820: INFO: (13) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 7.962975ms)
  Sep 23 12:49:54.821: INFO: (13) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 9.171616ms)
  Sep 23 12:49:54.825: INFO: (14) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 4.107442ms)
  Sep 23 12:49:54.825: INFO: (14) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.270031ms)
  Sep 23 12:49:54.826: INFO: (14) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.543671ms)
  Sep 23 12:49:54.826: INFO: (14) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.919232ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.735811ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.77328ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.054189ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 6.313923ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.432136ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 6.57463ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.520871ms)
  Sep 23 12:49:54.827: INFO: (14) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 6.654219ms)
  Sep 23 12:49:54.828: INFO: (14) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.636373ms)
  Sep 23 12:49:54.829: INFO: (14) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.635828ms)
  Sep 23 12:49:54.829: INFO: (14) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 7.685296ms)
  Sep 23 12:49:54.829: INFO: (14) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 7.657573ms)
  Sep 23 12:49:54.833: INFO: (15) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.472237ms)
  Sep 23 12:49:54.833: INFO: (15) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.6761ms)
  Sep 23 12:49:54.833: INFO: (15) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.473256ms)
  Sep 23 12:49:54.834: INFO: (15) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 5.404278ms)
  Sep 23 12:49:54.835: INFO: (15) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.094356ms)
  Sep 23 12:49:54.835: INFO: (15) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 6.005957ms)
  Sep 23 12:49:54.835: INFO: (15) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.005503ms)
  Sep 23 12:49:54.835: INFO: (15) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.256466ms)
  Sep 23 12:49:54.835: INFO: (15) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 6.518627ms)
  Sep 23 12:49:54.836: INFO: (15) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.842902ms)
  Sep 23 12:49:54.836: INFO: (15) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.931784ms)
  Sep 23 12:49:54.836: INFO: (15) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.94637ms)
  Sep 23 12:49:54.836: INFO: (15) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.286576ms)
  Sep 23 12:49:54.837: INFO: (15) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 8.079117ms)
  Sep 23 12:49:54.838: INFO: (15) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 8.924145ms)
  Sep 23 12:49:54.839: INFO: (15) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 10.530204ms)
  Sep 23 12:49:54.843: INFO: (16) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 3.533167ms)
  Sep 23 12:49:54.843: INFO: (16) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.951784ms)
  Sep 23 12:49:54.844: INFO: (16) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.498855ms)
  Sep 23 12:49:54.844: INFO: (16) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.989337ms)
  Sep 23 12:49:54.844: INFO: (16) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.931717ms)
  Sep 23 12:49:54.845: INFO: (16) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 5.157863ms)
  Sep 23 12:49:54.845: INFO: (16) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 5.869762ms)
  Sep 23 12:49:54.846: INFO: (16) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.160687ms)
  Sep 23 12:49:54.846: INFO: (16) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.326235ms)
  Sep 23 12:49:54.846: INFO: (16) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.458978ms)
  Sep 23 12:49:54.846: INFO: (16) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.454836ms)
  Sep 23 12:49:54.846: INFO: (16) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 6.879181ms)
  Sep 23 12:49:54.847: INFO: (16) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.365391ms)
  Sep 23 12:49:54.847: INFO: (16) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 7.623312ms)
  Sep 23 12:49:54.848: INFO: (16) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 8.447134ms)
  Sep 23 12:49:54.848: INFO: (16) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 9.014658ms)
  Sep 23 12:49:54.852: INFO: (17) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 3.362174ms)
  Sep 23 12:49:54.852: INFO: (17) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 3.777342ms)
  Sep 23 12:49:54.853: INFO: (17) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.980404ms)
  Sep 23 12:49:54.853: INFO: (17) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 4.754077ms)
  Sep 23 12:49:54.854: INFO: (17) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.884762ms)
  Sep 23 12:49:54.854: INFO: (17) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.959262ms)
  Sep 23 12:49:54.854: INFO: (17) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 5.163714ms)
  Sep 23 12:49:54.854: INFO: (17) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 5.146669ms)
  Sep 23 12:49:54.855: INFO: (17) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 6.019829ms)
  Sep 23 12:49:54.855: INFO: (17) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.137362ms)
  Sep 23 12:49:54.855: INFO: (17) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 6.570593ms)
  Sep 23 12:49:54.855: INFO: (17) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.640372ms)
  Sep 23 12:49:54.856: INFO: (17) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.723793ms)
  Sep 23 12:49:54.856: INFO: (17) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 7.856587ms)
  Sep 23 12:49:54.857: INFO: (17) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.986373ms)
  Sep 23 12:49:54.858: INFO: (17) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 9.197294ms)
  Sep 23 12:49:54.862: INFO: (18) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 3.650679ms)
  Sep 23 12:49:54.862: INFO: (18) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 3.795897ms)
  Sep 23 12:49:54.863: INFO: (18) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 4.65136ms)
  Sep 23 12:49:54.863: INFO: (18) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 5.236843ms)
  Sep 23 12:49:54.863: INFO: (18) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.431726ms)
  Sep 23 12:49:54.864: INFO: (18) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.495828ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.527167ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 6.51408ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 6.468569ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 6.521674ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 6.457102ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.932777ms)
  Sep 23 12:49:54.865: INFO: (18) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 7.492751ms)
  Sep 23 12:49:54.866: INFO: (18) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 7.669173ms)
  Sep 23 12:49:54.866: INFO: (18) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.686469ms)
  Sep 23 12:49:54.867: INFO: (18) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 9.114868ms)
  Sep 23 12:49:54.871: INFO: (19) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:443/proxy/tlsrewritem... (200; 3.701745ms)
  Sep 23 12:49:54.871: INFO: (19) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">test<... (200; 4.147516ms)
  Sep 23 12:49:54.872: INFO: (19) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc/proxy/rewriteme">test</a> (200; 4.542574ms)
  Sep 23 12:49:54.872: INFO: (19) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 4.650591ms)
  Sep 23 12:49:54.872: INFO: (19) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 4.956187ms)
  Sep 23 12:49:54.873: INFO: (19) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:160/proxy/: foo (200; 5.454709ms)
  Sep 23 12:49:54.873: INFO: (19) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:460/proxy/: tls baz (200; 5.365236ms)
  Sep 23 12:49:54.873: INFO: (19) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname1/proxy/: foo (200; 6.168435ms)
  Sep 23 12:49:54.874: INFO: (19) /api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1058/pods/http:proxy-service-kx9cv-mwcwc:1080/proxy/rewriteme">... (200; 6.301428ms)
  Sep 23 12:49:54.874: INFO: (19) /api/v1/namespaces/proxy-1058/pods/proxy-service-kx9cv-mwcwc:162/proxy/: bar (200; 6.364963ms)
  Sep 23 12:49:54.874: INFO: (19) /api/v1/namespaces/proxy-1058/pods/https:proxy-service-kx9cv-mwcwc:462/proxy/: tls qux (200; 6.485053ms)
  Sep 23 12:49:54.874: INFO: (19) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname2/proxy/: tls qux (200; 6.785464ms)
  Sep 23 12:49:54.874: INFO: (19) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname1/proxy/: foo (200; 6.896984ms)
  Sep 23 12:49:54.875: INFO: (19) /api/v1/namespaces/proxy-1058/services/http:proxy-service-kx9cv:portname2/proxy/: bar (200; 7.338653ms)
  Sep 23 12:49:54.875: INFO: (19) /api/v1/namespaces/proxy-1058/services/proxy-service-kx9cv:portname2/proxy/: bar (200; 7.967597ms)
  Sep 23 12:49:54.876: INFO: (19) /api/v1/namespaces/proxy-1058/services/https:proxy-service-kx9cv:tlsportname1/proxy/: tls baz (200; 9.181414ms)
  Sep 23 12:49:54.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-kx9cv in namespace proxy-1058, will wait for the garbage collector to delete the pods @ 09/23/23 12:49:54.881
  Sep 23 12:49:54.943: INFO: Deleting ReplicationController proxy-service-kx9cv took: 7.137958ms
  Sep 23 12:49:55.043: INFO: Terminating ReplicationController proxy-service-kx9cv pods took: 100.072502ms
  STEP: Destroying namespace "proxy-1058" for this suite. @ 09/23/23 12:49:57.144
• [4.556 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/23/23 12:49:57.151
  Sep 23 12:49:57.151: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename cronjob @ 09/23/23 12:49:57.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:49:57.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:49:57.166
  STEP: Creating a cronjob @ 09/23/23 12:49:57.169
  STEP: Ensuring more than one job is running at a time @ 09/23/23 12:49:57.175
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/23/23 12:51:01.181
  STEP: Removing cronjob @ 09/23/23 12:51:01.184
  Sep 23 12:51:01.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9510" for this suite. @ 09/23/23 12:51:01.195
• [64.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/23/23 12:51:01.203
  Sep 23 12:51:01.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-runtime @ 09/23/23 12:51:01.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:51:01.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:51:01.221
  STEP: create the container @ 09/23/23 12:51:01.224
  W0923 12:51:01.236491      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/23/23 12:51:01.236
  STEP: get the container status @ 09/23/23 12:51:04.256
  STEP: the container should be terminated @ 09/23/23 12:51:04.259
  STEP: the termination message should be set @ 09/23/23 12:51:04.259
  Sep 23 12:51:04.259: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/23/23 12:51:04.259
  Sep 23 12:51:04.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4354" for this suite. @ 09/23/23 12:51:04.278
• [3.082 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/23/23 12:51:04.285
  Sep 23 12:51:04.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:51:04.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:51:04.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:51:04.303
  STEP: creating service in namespace services-2041 @ 09/23/23 12:51:04.305
  STEP: creating service affinity-nodeport in namespace services-2041 @ 09/23/23 12:51:04.305
  STEP: creating replication controller affinity-nodeport in namespace services-2041 @ 09/23/23 12:51:04.322
  I0923 12:51:04.328098      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2041, replica count: 3
  I0923 12:51:07.379227      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 12:51:07.391: INFO: Creating new exec pod
  Sep 23 12:51:10.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-2041 exec execpod-affinityc48p9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep 23 12:51:10.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep 23 12:51:10.584: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:51:10.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-2041 exec execpod-affinityc48p9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  Sep 23 12:51:10.734: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.93 80\nConnection to 10.152.183.93 80 port [tcp/http] succeeded!\n"
  Sep 23 12:51:10.734: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:51:10.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-2041 exec execpod-affinityc48p9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.104 30776'
  Sep 23 12:51:10.896: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.33.104 30776\nConnection to 172.31.33.104 30776 port [tcp/*] succeeded!\n"
  Sep 23 12:51:10.896: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:51:10.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-2041 exec execpod-affinityc48p9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.77.156 30776'
  Sep 23 12:51:11.043: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.77.156 30776\nConnection to 172.31.77.156 30776 port [tcp/*] succeeded!\n"
  Sep 23 12:51:11.043: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 12:51:11.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-2041 exec execpod-affinityc48p9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.33.104:30776/ ; done'
  Sep 23 12:51:11.298: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30776/\n"
  Sep 23 12:51:11.298: INFO: stdout: "\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4\naffinity-nodeport-tpmx4"
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Received response from host: affinity-nodeport-tpmx4
  Sep 23 12:51:11.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 12:51:11.302: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2041, will wait for the garbage collector to delete the pods @ 09/23/23 12:51:11.317
  Sep 23 12:51:11.379: INFO: Deleting ReplicationController affinity-nodeport took: 6.861748ms
  Sep 23 12:51:11.480: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.343842ms
  STEP: Destroying namespace "services-2041" for this suite. @ 09/23/23 12:51:14.306
• [10.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/23/23 12:51:14.314
  Sep 23 12:51:14.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 12:51:14.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:51:14.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:51:14.331
  STEP: create the rc @ 09/23/23 12:51:14.334
  W0923 12:51:14.340078      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/23/23 12:51:19.344
  STEP: wait for all pods to be garbage collected @ 09/23/23 12:51:19.352
  STEP: Gathering metrics @ 09/23/23 12:51:24.359
  W0923 12:51:24.365926      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 23 12:51:24.365: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 23 12:51:24.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8761" for this suite. @ 09/23/23 12:51:24.369
• [10.062 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/23/23 12:51:24.376
  Sep 23 12:51:24.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 12:51:24.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:51:24.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:51:24.394
  STEP: Counting existing ResourceQuota @ 09/23/23 12:51:24.397
  STEP: Creating a ResourceQuota @ 09/23/23 12:51:29.402
  STEP: Ensuring resource quota status is calculated @ 09/23/23 12:51:29.408
  STEP: Creating a ReplicationController @ 09/23/23 12:51:31.413
  STEP: Ensuring resource quota status captures replication controller creation @ 09/23/23 12:51:31.427
  STEP: Deleting a ReplicationController @ 09/23/23 12:51:33.432
  STEP: Ensuring resource quota status released usage @ 09/23/23 12:51:33.44
  Sep 23 12:51:35.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8793" for this suite. @ 09/23/23 12:51:35.448
• [11.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/23/23 12:51:35.455
  Sep 23 12:51:35.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 12:51:35.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:51:35.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:51:35.474
  STEP: Creating simple DaemonSet "daemon-set" @ 09/23/23 12:51:35.497
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/23 12:51:35.503
  Sep 23 12:51:35.507: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:51:35.508: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:51:35.514: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:51:35.514: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:51:36.519: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:51:36.519: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:51:36.522: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 12:51:36.522: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:51:37.518: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:51:37.518: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:51:37.523: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 12:51:37.523: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/23/23 12:51:37.526
  STEP: DeleteCollection of the DaemonSets @ 09/23/23 12:51:37.529
  STEP: Verify that ReplicaSets have been deleted @ 09/23/23 12:51:37.538
  Sep 23 12:51:37.550: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16775"},"items":null}

  Sep 23 12:51:37.554: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16775"},"items":[{"metadata":{"name":"daemon-set-4n44w","generateName":"daemon-set-","namespace":"daemonsets-8622","uid":"866e0b17-d37d-41db-a229-bfb220fe443c","resourceVersion":"16773","creationTimestamp":"2023-09-23T12:51:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2c9ffc71-698c-4e81-b555-65836122b539","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-23T12:51:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2c9ffc71-698c-4e81-b555-65836122b539\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-23T12:51:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.55.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-64gmn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-64gmn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-77-156","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-77-156"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:35Z"}],"hostIP":"172.31.77.156","podIP":"192.168.55.69","podIPs":[{"ip":"192.168.55.69"}],"startTime":"2023-09-23T12:51:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-23T12:51:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2da551565591366664393d12b4bf06b2a0d6c08ed0f28e1ecc7c0d6eefde055e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-n7sx7","generateName":"daemon-set-","namespace":"daemonsets-8622","uid":"a1d8b57d-e0c8-412d-a7c7-e81063810ff8","resourceVersion":"16771","creationTimestamp":"2023-09-23T12:51:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2c9ffc71-698c-4e81-b555-65836122b539","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-23T12:51:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2c9ffc71-698c-4e81-b555-65836122b539\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-23T12:51:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.20.92\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mzkkh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mzkkh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-33-104","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-33-104"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:35Z"}],"hostIP":"172.31.33.104","podIP":"192.168.20.92","podIPs":[{"ip":"192.168.20.92"}],"startTime":"2023-09-23T12:51:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-23T12:51:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ac22ff97f2d7df1fc5540db8f852f5bd24f9a7069bf63a134a54d1297fc9ec8e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rz9dt","generateName":"daemon-set-","namespace":"daemonsets-8622","uid":"19bcaaaf-d644-45fe-b29f-6498fc42b975","resourceVersion":"16768","creationTimestamp":"2023-09-23T12:51:35Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2c9ffc71-698c-4e81-b555-65836122b539","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-23T12:51:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2c9ffc71-698c-4e81-b555-65836122b539\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-23T12:51:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.88.255\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-btxv5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-btxv5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-84-196","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-84-196"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-23T12:51:35Z"}],"hostIP":"172.31.84.196","podIP":"192.168.88.255","podIPs":[{"ip":"192.168.88.255"}],"startTime":"2023-09-23T12:51:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-23T12:51:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://604e3b702950c2f2c33a7b95a91b61cd6cb5bc12d030010ea1458eed59cf9ef4","started":true}],"qosClass":"BestEffort"}}]}

  Sep 23 12:51:37.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8622" for this suite. @ 09/23/23 12:51:37.577
• [2.128 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/23/23 12:51:37.584
  Sep 23 12:51:37.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/23 12:51:37.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:51:37.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:51:37.599
  Sep 23 12:51:37.615: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 23 12:52:37.639: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/23/23 12:52:37.642
  Sep 23 12:52:37.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/23/23 12:52:37.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:52:37.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:52:37.661
  Sep 23 12:52:37.680: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep 23 12:52:37.684: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep 23 12:52:37.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 12:52:37.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-318" for this suite. @ 09/23/23 12:52:37.768
  STEP: Destroying namespace "sched-preemption-9731" for this suite. @ 09/23/23 12:52:37.776
• [60.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/23/23 12:52:37.784
  Sep 23 12:52:37.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:52:37.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:52:37.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:52:37.8
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/23/23 12:52:37.803
  STEP: Saw pod success @ 09/23/23 12:52:41.826
  Sep 23 12:52:41.830: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-efdae574-b750-49f9-b17a-59bbf4fdc719 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:52:41.844
  Sep 23 12:52:41.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-195" for this suite. @ 09/23/23 12:52:41.862
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/23/23 12:52:41.87
  Sep 23 12:52:41.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 12:52:41.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:52:41.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:52:41.888
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/23/23 12:52:41.89
  STEP: Saw pod success @ 09/23/23 12:52:45.914
  Sep 23 12:52:45.917: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-74685c70-df8d-4226-80b7-a425d43a388b container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:52:45.923
  Sep 23 12:52:45.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3572" for this suite. @ 09/23/23 12:52:45.946
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/23/23 12:52:45.953
  Sep 23 12:52:45.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename job @ 09/23/23 12:52:45.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:52:45.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:52:45.971
  STEP: Creating a job @ 09/23/23 12:52:45.973
  STEP: Ensuring active pods == parallelism @ 09/23/23 12:52:45.978
  STEP: Orphaning one of the Job's Pods @ 09/23/23 12:52:47.983
  Sep 23 12:52:48.499: INFO: Successfully updated pod "adopt-release-7n26k"
  STEP: Checking that the Job readopts the Pod @ 09/23/23 12:52:48.499
  STEP: Removing the labels from the Job's Pod @ 09/23/23 12:52:50.507
  Sep 23 12:52:51.020: INFO: Successfully updated pod "adopt-release-7n26k"
  STEP: Checking that the Job releases the Pod @ 09/23/23 12:52:51.02
  Sep 23 12:52:53.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8272" for this suite. @ 09/23/23 12:52:53.032
• [7.085 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/23/23 12:52:53.038
  Sep 23 12:52:53.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 12:52:53.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:52:53.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:52:53.056
  STEP: Creating configMap with name configmap-test-volume-2a096018-309a-4ebd-8d9a-7f5a5834d19e @ 09/23/23 12:52:53.058
  STEP: Creating a pod to test consume configMaps @ 09/23/23 12:52:53.062
  STEP: Saw pod success @ 09/23/23 12:52:57.084
  Sep 23 12:52:57.088: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-faabf123-2aa4-4c80-89b9-c30fa8384bc6 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 12:52:57.096
  Sep 23 12:52:57.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1059" for this suite. @ 09/23/23 12:52:57.114
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/23/23 12:52:57.121
  Sep 23 12:52:57.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:52:57.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:52:57.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:52:57.138
  STEP: creating a replication controller @ 09/23/23 12:52:57.141
  Sep 23 12:52:57.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 create -f -'
  Sep 23 12:52:57.405: INFO: stderr: ""
  Sep 23 12:52:57.405: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/23 12:52:57.405
  Sep 23 12:52:57.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 23 12:52:57.464: INFO: stderr: ""
  Sep 23 12:52:57.464: INFO: stdout: "update-demo-nautilus-nd25g update-demo-nautilus-tbk2k "
  Sep 23 12:52:57.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods update-demo-nautilus-nd25g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 12:52:57.522: INFO: stderr: ""
  Sep 23 12:52:57.522: INFO: stdout: ""
  Sep 23 12:52:57.522: INFO: update-demo-nautilus-nd25g is created but not running
  Sep 23 12:53:02.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 23 12:53:02.582: INFO: stderr: ""
  Sep 23 12:53:02.582: INFO: stdout: "update-demo-nautilus-nd25g update-demo-nautilus-tbk2k "
  Sep 23 12:53:02.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods update-demo-nautilus-nd25g -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 12:53:02.638: INFO: stderr: ""
  Sep 23 12:53:02.638: INFO: stdout: "true"
  Sep 23 12:53:02.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods update-demo-nautilus-nd25g -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 12:53:02.692: INFO: stderr: ""
  Sep 23 12:53:02.692: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 12:53:02.692: INFO: validating pod update-demo-nautilus-nd25g
  Sep 23 12:53:02.697: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 12:53:02.697: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 12:53:02.697: INFO: update-demo-nautilus-nd25g is verified up and running
  Sep 23 12:53:02.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods update-demo-nautilus-tbk2k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 12:53:02.753: INFO: stderr: ""
  Sep 23 12:53:02.753: INFO: stdout: "true"
  Sep 23 12:53:02.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods update-demo-nautilus-tbk2k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 12:53:02.810: INFO: stderr: ""
  Sep 23 12:53:02.810: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 12:53:02.810: INFO: validating pod update-demo-nautilus-tbk2k
  Sep 23 12:53:02.815: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 12:53:02.815: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 12:53:02.815: INFO: update-demo-nautilus-tbk2k is verified up and running
  STEP: using delete to clean up resources @ 09/23/23 12:53:02.815
  Sep 23 12:53:02.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 delete --grace-period=0 --force -f -'
  Sep 23 12:53:02.877: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 12:53:02.877: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 23 12:53:02.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get rc,svc -l name=update-demo --no-headers'
  Sep 23 12:53:02.943: INFO: stderr: "No resources found in kubectl-2167 namespace.\n"
  Sep 23 12:53:02.943: INFO: stdout: ""
  Sep 23 12:53:02.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-2167 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 23 12:53:03.002: INFO: stderr: ""
  Sep 23 12:53:03.002: INFO: stdout: ""
  Sep 23 12:53:03.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2167" for this suite. @ 09/23/23 12:53:03.007
• [5.894 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/23/23 12:53:03.015
  Sep 23 12:53:03.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 12:53:03.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:53:03.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:53:03.031
  STEP: Setting up server cert @ 09/23/23 12:53:03.051
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 12:53:03.435
  STEP: Deploying the webhook pod @ 09/23/23 12:53:03.444
  STEP: Wait for the deployment to be ready @ 09/23/23 12:53:03.457
  Sep 23 12:53:03.466: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/23/23 12:53:05.479
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:53:05.489
  Sep 23 12:53:06.490: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/23/23 12:53:06.496
  STEP: create a pod that should be denied by the webhook @ 09/23/23 12:53:06.51
  STEP: create a pod that causes the webhook to hang @ 09/23/23 12:53:06.521
  STEP: create a configmap that should be denied by the webhook @ 09/23/23 12:53:16.528
  STEP: create a configmap that should be admitted by the webhook @ 09/23/23 12:53:16.572
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/23/23 12:53:16.58
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/23/23 12:53:16.589
  STEP: create a namespace that bypass the webhook @ 09/23/23 12:53:16.593
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/23/23 12:53:16.605
  Sep 23 12:53:16.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1769" for this suite. @ 09/23/23 12:53:16.666
  STEP: Destroying namespace "webhook-markers-8711" for this suite. @ 09/23/23 12:53:16.675
  STEP: Destroying namespace "exempted-namespace-1807" for this suite. @ 09/23/23 12:53:16.682
• [13.672 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/23/23 12:53:16.687
  Sep 23 12:53:16.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 12:53:16.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:53:16.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:53:16.702
  STEP: Creating pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312 @ 09/23/23 12:53:16.706
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 12:53:18.725
  Sep 23 12:53:18.728: INFO: Initial restart count of pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c is 0
  Sep 23 12:53:18.731: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:20.736: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:22.740: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:24.746: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:26.752: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:28.757: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:30.762: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:32.766: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:34.771: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:36.776: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:38.781: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:40.784: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:42.790: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:44.795: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:46.801: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:48.806: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:50.811: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:52.816: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:54.821: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:56.827: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:53:58.832: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:00.838: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:02.842: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:04.848: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:06.853: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:08.857: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:10.861: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:12.865: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:14.875: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:16.880: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:18.884: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:20.889: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:22.894: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:24.898: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:26.903: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:28.909: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:30.913: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:32.918: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:34.924: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:36.930: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:38.934: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:40.939: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:42.944: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:44.949: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:46.953: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:48.958: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:50.966: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:52.971: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:54.975: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:56.980: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:54:58.986: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:00.990: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:02.996: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:05.000: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:07.007: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:09.011: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:11.016: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:13.020: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:15.025: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:17.030: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:19.035: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:21.041: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:23.046: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:25.052: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:27.057: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:29.061: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:31.065: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:33.071: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:35.076: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:37.080: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:39.084: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:41.088: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:43.093: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:45.097: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:47.102: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:49.107: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:51.112: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:53.116: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:55.121: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:57.126: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:55:59.131: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:01.135: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:03.140: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:05.145: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:07.151: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:09.156: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:11.162: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:13.166: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:15.171: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:17.176: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:19.181: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:21.185: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:23.190: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:25.195: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:27.200: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:29.206: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:31.211: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:33.217: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:35.222: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:37.227: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:39.231: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:41.235: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:43.239: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:45.244: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:47.249: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:49.253: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:51.259: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:53.264: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:55.268: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:57.273: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:56:59.278: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:01.283: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:03.288: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:05.293: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:07.299: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:09.303: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:11.309: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:13.314: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:15.319: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:17.323: INFO: Get pod busybox-0025a36e-8bc0-4d22-9929-05e4dc9c518c in namespace container-probe-2312
  Sep 23 12:57:19.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 12:57:19.329
  STEP: Destroying namespace "container-probe-2312" for this suite. @ 09/23/23 12:57:19.345
• [242.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/23/23 12:57:19.354
  Sep 23 12:57:19.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svc-latency @ 09/23/23 12:57:19.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:19.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:19.38
  Sep 23 12:57:19.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8060 @ 09/23/23 12:57:19.383
  I0923 12:57:19.388266      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8060, replica count: 1
  I0923 12:57:20.439426      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0923 12:57:21.440375      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 12:57:21.554: INFO: Created: latency-svc-xb5hj
  Sep 23 12:57:21.560: INFO: Got endpoints: latency-svc-xb5hj [20.012903ms]
  Sep 23 12:57:21.570: INFO: Created: latency-svc-4kn8x
  Sep 23 12:57:21.575: INFO: Got endpoints: latency-svc-4kn8x [14.724223ms]
  Sep 23 12:57:21.579: INFO: Created: latency-svc-d6rss
  Sep 23 12:57:21.584: INFO: Got endpoints: latency-svc-d6rss [22.833973ms]
  Sep 23 12:57:21.586: INFO: Created: latency-svc-kp5mv
  Sep 23 12:57:21.589: INFO: Created: latency-svc-vklgw
  Sep 23 12:57:21.592: INFO: Got endpoints: latency-svc-kp5mv [31.311469ms]
  Sep 23 12:57:21.595: INFO: Got endpoints: latency-svc-vklgw [33.868223ms]
  Sep 23 12:57:21.604: INFO: Created: latency-svc-q8t7m
  Sep 23 12:57:21.606: INFO: Created: latency-svc-swnwm
  Sep 23 12:57:21.609: INFO: Got endpoints: latency-svc-q8t7m [48.197193ms]
  Sep 23 12:57:21.609: INFO: Created: latency-svc-gp8fb
  Sep 23 12:57:21.612: INFO: Got endpoints: latency-svc-swnwm [19.504975ms]
  Sep 23 12:57:21.618: INFO: Got endpoints: latency-svc-gp8fb [57.164996ms]
  Sep 23 12:57:21.619: INFO: Created: latency-svc-v98dj
  Sep 23 12:57:21.622: INFO: Got endpoints: latency-svc-v98dj [61.185045ms]
  Sep 23 12:57:21.626: INFO: Created: latency-svc-tzk5b
  Sep 23 12:57:21.631: INFO: Got endpoints: latency-svc-tzk5b [70.27908ms]
  Sep 23 12:57:21.633: INFO: Created: latency-svc-2v2k5
  Sep 23 12:57:21.638: INFO: Got endpoints: latency-svc-2v2k5 [76.882166ms]
  Sep 23 12:57:21.641: INFO: Created: latency-svc-m2qgj
  Sep 23 12:57:21.643: INFO: Got endpoints: latency-svc-m2qgj [82.446196ms]
  Sep 23 12:57:21.650: INFO: Created: latency-svc-5lt2n
  Sep 23 12:57:21.656: INFO: Got endpoints: latency-svc-5lt2n [94.463333ms]
  Sep 23 12:57:21.656: INFO: Created: latency-svc-mdtch
  Sep 23 12:57:21.661: INFO: Got endpoints: latency-svc-mdtch [100.101769ms]
  Sep 23 12:57:21.663: INFO: Created: latency-svc-s2gl9
  Sep 23 12:57:21.667: INFO: Got endpoints: latency-svc-s2gl9 [105.74404ms]
  Sep 23 12:57:21.670: INFO: Created: latency-svc-q95pt
  Sep 23 12:57:21.675: INFO: Created: latency-svc-wrxdw
  Sep 23 12:57:21.676: INFO: Got endpoints: latency-svc-q95pt [115.133111ms]
  Sep 23 12:57:21.682: INFO: Got endpoints: latency-svc-wrxdw [106.154222ms]
  Sep 23 12:57:21.684: INFO: Created: latency-svc-4jchd
  Sep 23 12:57:21.687: INFO: Got endpoints: latency-svc-4jchd [103.149726ms]
  Sep 23 12:57:21.691: INFO: Created: latency-svc-sxcc4
  Sep 23 12:57:21.696: INFO: Got endpoints: latency-svc-sxcc4 [135.789951ms]
  Sep 23 12:57:21.697: INFO: Created: latency-svc-jg5zz
  Sep 23 12:57:21.704: INFO: Got endpoints: latency-svc-jg5zz [109.075155ms]
  Sep 23 12:57:21.705: INFO: Created: latency-svc-2xds6
  Sep 23 12:57:21.710: INFO: Got endpoints: latency-svc-2xds6 [100.878608ms]
  Sep 23 12:57:21.713: INFO: Created: latency-svc-5bc5f
  Sep 23 12:57:21.719: INFO: Created: latency-svc-62gsg
  Sep 23 12:57:21.720: INFO: Got endpoints: latency-svc-5bc5f [108.017517ms]
  Sep 23 12:57:21.725: INFO: Got endpoints: latency-svc-62gsg [106.63469ms]
  Sep 23 12:57:21.729: INFO: Created: latency-svc-4tqbl
  Sep 23 12:57:21.733: INFO: Got endpoints: latency-svc-4tqbl [110.64949ms]
  Sep 23 12:57:21.735: INFO: Created: latency-svc-9n99g
  Sep 23 12:57:21.741: INFO: Got endpoints: latency-svc-9n99g [109.326373ms]
  Sep 23 12:57:21.742: INFO: Created: latency-svc-4vq6h
  Sep 23 12:57:21.747: INFO: Got endpoints: latency-svc-4vq6h [109.38596ms]
  Sep 23 12:57:21.750: INFO: Created: latency-svc-j59qn
  Sep 23 12:57:21.756: INFO: Got endpoints: latency-svc-j59qn [112.298758ms]
  Sep 23 12:57:21.757: INFO: Created: latency-svc-mb2nv
  Sep 23 12:57:21.762: INFO: Got endpoints: latency-svc-mb2nv [106.813965ms]
  Sep 23 12:57:21.764: INFO: Created: latency-svc-vbr8x
  Sep 23 12:57:21.768: INFO: Got endpoints: latency-svc-vbr8x [107.697109ms]
  Sep 23 12:57:21.772: INFO: Created: latency-svc-mz5jt
  Sep 23 12:57:21.776: INFO: Got endpoints: latency-svc-mz5jt [109.529716ms]
  Sep 23 12:57:21.779: INFO: Created: latency-svc-7qj8s
  Sep 23 12:57:21.786: INFO: Created: latency-svc-vzltm
  Sep 23 12:57:21.787: INFO: Got endpoints: latency-svc-7qj8s [111.07141ms]
  Sep 23 12:57:21.792: INFO: Got endpoints: latency-svc-vzltm [110.491744ms]
  Sep 23 12:57:21.797: INFO: Created: latency-svc-6sv5w
  Sep 23 12:57:21.801: INFO: Got endpoints: latency-svc-6sv5w [114.16667ms]
  Sep 23 12:57:21.802: INFO: Created: latency-svc-lmxh8
  Sep 23 12:57:21.809: INFO: Got endpoints: latency-svc-lmxh8 [112.377874ms]
  Sep 23 12:57:21.810: INFO: Created: latency-svc-qhvcl
  Sep 23 12:57:21.816: INFO: Got endpoints: latency-svc-qhvcl [111.757887ms]
  Sep 23 12:57:21.823: INFO: Created: latency-svc-wtrhw
  Sep 23 12:57:21.826: INFO: Created: latency-svc-k7mxv
  Sep 23 12:57:21.830: INFO: Created: latency-svc-ct966
  Sep 23 12:57:21.837: INFO: Created: latency-svc-4mzg6
  Sep 23 12:57:21.843: INFO: Created: latency-svc-q9tmt
  Sep 23 12:57:21.848: INFO: Created: latency-svc-jlnbf
  Sep 23 12:57:21.856: INFO: Created: latency-svc-7jv25
  Sep 23 12:57:21.858: INFO: Got endpoints: latency-svc-wtrhw [148.357144ms]
  Sep 23 12:57:21.862: INFO: Created: latency-svc-7kz8w
  Sep 23 12:57:21.867: INFO: Created: latency-svc-zzzzw
  Sep 23 12:57:21.873: INFO: Created: latency-svc-7t82l
  Sep 23 12:57:21.879: INFO: Created: latency-svc-2jh6n
  Sep 23 12:57:21.884: INFO: Created: latency-svc-9s5gh
  Sep 23 12:57:21.892: INFO: Created: latency-svc-2q8d7
  Sep 23 12:57:21.897: INFO: Created: latency-svc-mwz88
  Sep 23 12:57:21.901: INFO: Created: latency-svc-rkj88
  Sep 23 12:57:21.909: INFO: Created: latency-svc-hmdxw
  Sep 23 12:57:21.910: INFO: Got endpoints: latency-svc-k7mxv [189.975626ms]
  Sep 23 12:57:21.920: INFO: Created: latency-svc-ds7qv
  Sep 23 12:57:21.959: INFO: Got endpoints: latency-svc-ct966 [234.529674ms]
  Sep 23 12:57:21.968: INFO: Created: latency-svc-7kljv
  Sep 23 12:57:22.009: INFO: Got endpoints: latency-svc-4mzg6 [276.028805ms]
  Sep 23 12:57:22.020: INFO: Created: latency-svc-t4t9p
  Sep 23 12:57:22.059: INFO: Got endpoints: latency-svc-q9tmt [318.389047ms]
  Sep 23 12:57:22.070: INFO: Created: latency-svc-bf2sz
  Sep 23 12:57:22.110: INFO: Got endpoints: latency-svc-jlnbf [362.537549ms]
  Sep 23 12:57:22.118: INFO: Created: latency-svc-z7xrv
  Sep 23 12:57:22.159: INFO: Got endpoints: latency-svc-7jv25 [402.909393ms]
  Sep 23 12:57:22.169: INFO: Created: latency-svc-77zcq
  Sep 23 12:57:22.209: INFO: Got endpoints: latency-svc-7kz8w [446.830999ms]
  Sep 23 12:57:22.221: INFO: Created: latency-svc-rxg9w
  Sep 23 12:57:22.259: INFO: Got endpoints: latency-svc-zzzzw [490.739923ms]
  Sep 23 12:57:22.268: INFO: Created: latency-svc-xcsvn
  Sep 23 12:57:22.309: INFO: Got endpoints: latency-svc-7t82l [532.426605ms]
  Sep 23 12:57:22.322: INFO: Created: latency-svc-q9q24
  Sep 23 12:57:22.359: INFO: Got endpoints: latency-svc-2jh6n [571.7656ms]
  Sep 23 12:57:22.369: INFO: Created: latency-svc-z5pfq
  Sep 23 12:57:22.410: INFO: Got endpoints: latency-svc-9s5gh [617.689353ms]
  Sep 23 12:57:22.419: INFO: Created: latency-svc-wpsww
  Sep 23 12:57:22.459: INFO: Got endpoints: latency-svc-2q8d7 [657.717387ms]
  Sep 23 12:57:22.470: INFO: Created: latency-svc-kk95g
  Sep 23 12:57:22.510: INFO: Got endpoints: latency-svc-mwz88 [700.801769ms]
  Sep 23 12:57:22.520: INFO: Created: latency-svc-fm74s
  Sep 23 12:57:22.559: INFO: Got endpoints: latency-svc-rkj88 [743.626489ms]
  Sep 23 12:57:22.570: INFO: Created: latency-svc-l9nht
  Sep 23 12:57:22.609: INFO: Got endpoints: latency-svc-hmdxw [750.701869ms]
  Sep 23 12:57:22.621: INFO: Created: latency-svc-qbjn5
  Sep 23 12:57:22.659: INFO: Got endpoints: latency-svc-ds7qv [749.478913ms]
  Sep 23 12:57:22.676: INFO: Created: latency-svc-hpkmp
  Sep 23 12:57:22.709: INFO: Got endpoints: latency-svc-7kljv [750.088135ms]
  Sep 23 12:57:22.718: INFO: Created: latency-svc-rl5gl
  Sep 23 12:57:22.757: INFO: Got endpoints: latency-svc-t4t9p [748.532586ms]
  Sep 23 12:57:22.770: INFO: Created: latency-svc-r4zws
  Sep 23 12:57:22.809: INFO: Got endpoints: latency-svc-bf2sz [749.783787ms]
  Sep 23 12:57:22.820: INFO: Created: latency-svc-dnlnc
  Sep 23 12:57:22.858: INFO: Got endpoints: latency-svc-z7xrv [747.963398ms]
  Sep 23 12:57:22.866: INFO: Created: latency-svc-tzm5v
  Sep 23 12:57:22.908: INFO: Got endpoints: latency-svc-77zcq [748.965293ms]
  Sep 23 12:57:22.919: INFO: Created: latency-svc-9qt5g
  Sep 23 12:57:22.959: INFO: Got endpoints: latency-svc-rxg9w [750.120265ms]
  Sep 23 12:57:22.973: INFO: Created: latency-svc-fpk9p
  Sep 23 12:57:23.009: INFO: Got endpoints: latency-svc-xcsvn [749.936904ms]
  Sep 23 12:57:23.019: INFO: Created: latency-svc-d4mzr
  Sep 23 12:57:23.058: INFO: Got endpoints: latency-svc-q9q24 [749.427586ms]
  Sep 23 12:57:23.070: INFO: Created: latency-svc-j9g5j
  Sep 23 12:57:23.109: INFO: Got endpoints: latency-svc-z5pfq [750.325177ms]
  Sep 23 12:57:23.120: INFO: Created: latency-svc-fqbgm
  Sep 23 12:57:23.159: INFO: Got endpoints: latency-svc-wpsww [749.335797ms]
  Sep 23 12:57:23.168: INFO: Created: latency-svc-q9lst
  Sep 23 12:57:23.209: INFO: Got endpoints: latency-svc-kk95g [750.181581ms]
  Sep 23 12:57:23.220: INFO: Created: latency-svc-zl5rp
  Sep 23 12:57:23.260: INFO: Got endpoints: latency-svc-fm74s [750.509937ms]
  Sep 23 12:57:23.270: INFO: Created: latency-svc-ckwrq
  Sep 23 12:57:23.309: INFO: Got endpoints: latency-svc-l9nht [749.791974ms]
  Sep 23 12:57:23.319: INFO: Created: latency-svc-r5ljf
  Sep 23 12:57:23.357: INFO: Got endpoints: latency-svc-qbjn5 [747.672152ms]
  Sep 23 12:57:23.369: INFO: Created: latency-svc-b7gkg
  Sep 23 12:57:23.409: INFO: Got endpoints: latency-svc-hpkmp [749.903522ms]
  Sep 23 12:57:23.420: INFO: Created: latency-svc-9v6wn
  Sep 23 12:57:23.459: INFO: Got endpoints: latency-svc-rl5gl [749.54389ms]
  Sep 23 12:57:23.469: INFO: Created: latency-svc-bqstj
  Sep 23 12:57:23.509: INFO: Got endpoints: latency-svc-r4zws [751.308048ms]
  Sep 23 12:57:23.521: INFO: Created: latency-svc-jhp5t
  Sep 23 12:57:23.560: INFO: Got endpoints: latency-svc-dnlnc [750.865815ms]
  Sep 23 12:57:23.571: INFO: Created: latency-svc-x9h8t
  Sep 23 12:57:23.610: INFO: Got endpoints: latency-svc-tzm5v [751.803266ms]
  Sep 23 12:57:23.620: INFO: Created: latency-svc-j2tzx
  Sep 23 12:57:23.658: INFO: Got endpoints: latency-svc-9qt5g [750.813051ms]
  Sep 23 12:57:23.670: INFO: Created: latency-svc-r5xsc
  Sep 23 12:57:23.710: INFO: Got endpoints: latency-svc-fpk9p [750.537924ms]
  Sep 23 12:57:23.720: INFO: Created: latency-svc-6bnzq
  Sep 23 12:57:23.758: INFO: Got endpoints: latency-svc-d4mzr [749.003811ms]
  Sep 23 12:57:23.768: INFO: Created: latency-svc-vdpmv
  Sep 23 12:57:23.808: INFO: Got endpoints: latency-svc-j9g5j [749.866271ms]
  Sep 23 12:57:23.819: INFO: Created: latency-svc-rh7fq
  Sep 23 12:57:23.860: INFO: Got endpoints: latency-svc-fqbgm [750.709519ms]
  Sep 23 12:57:23.871: INFO: Created: latency-svc-msk6w
  Sep 23 12:57:23.908: INFO: Got endpoints: latency-svc-q9lst [749.259263ms]
  Sep 23 12:57:23.918: INFO: Created: latency-svc-pfvtt
  Sep 23 12:57:23.958: INFO: Got endpoints: latency-svc-zl5rp [749.506922ms]
  Sep 23 12:57:23.970: INFO: Created: latency-svc-59vqk
  Sep 23 12:57:24.009: INFO: Got endpoints: latency-svc-ckwrq [749.029173ms]
  Sep 23 12:57:24.019: INFO: Created: latency-svc-vpnmn
  Sep 23 12:57:24.057: INFO: Got endpoints: latency-svc-r5ljf [748.245564ms]
  Sep 23 12:57:24.066: INFO: Created: latency-svc-95hj9
  Sep 23 12:57:24.108: INFO: Got endpoints: latency-svc-b7gkg [751.532172ms]
  Sep 23 12:57:24.119: INFO: Created: latency-svc-nqmml
  Sep 23 12:57:24.160: INFO: Got endpoints: latency-svc-9v6wn [750.830222ms]
  Sep 23 12:57:24.170: INFO: Created: latency-svc-6hj8k
  Sep 23 12:57:24.208: INFO: Got endpoints: latency-svc-bqstj [749.369821ms]
  Sep 23 12:57:24.218: INFO: Created: latency-svc-mfkpb
  Sep 23 12:57:24.259: INFO: Got endpoints: latency-svc-jhp5t [750.301584ms]
  Sep 23 12:57:24.270: INFO: Created: latency-svc-v2snw
  Sep 23 12:57:24.310: INFO: Got endpoints: latency-svc-x9h8t [750.244458ms]
  Sep 23 12:57:24.321: INFO: Created: latency-svc-wbx8q
  Sep 23 12:57:24.359: INFO: Got endpoints: latency-svc-j2tzx [749.244492ms]
  Sep 23 12:57:24.369: INFO: Created: latency-svc-qbvf7
  Sep 23 12:57:24.408: INFO: Got endpoints: latency-svc-r5xsc [749.851296ms]
  Sep 23 12:57:24.419: INFO: Created: latency-svc-w6x2z
  Sep 23 12:57:24.457: INFO: Got endpoints: latency-svc-6bnzq [747.234962ms]
  Sep 23 12:57:24.468: INFO: Created: latency-svc-xq8ks
  Sep 23 12:57:24.509: INFO: Got endpoints: latency-svc-vdpmv [751.177689ms]
  Sep 23 12:57:24.520: INFO: Created: latency-svc-j8dcs
  Sep 23 12:57:24.559: INFO: Got endpoints: latency-svc-rh7fq [750.37239ms]
  Sep 23 12:57:24.569: INFO: Created: latency-svc-9f6r6
  Sep 23 12:57:24.607: INFO: Got endpoints: latency-svc-msk6w [746.478668ms]
  Sep 23 12:57:24.618: INFO: Created: latency-svc-22nhq
  Sep 23 12:57:24.660: INFO: Got endpoints: latency-svc-pfvtt [751.34757ms]
  Sep 23 12:57:24.671: INFO: Created: latency-svc-v4svl
  Sep 23 12:57:24.709: INFO: Got endpoints: latency-svc-59vqk [750.593119ms]
  Sep 23 12:57:24.719: INFO: Created: latency-svc-n5tqv
  Sep 23 12:57:24.758: INFO: Got endpoints: latency-svc-vpnmn [748.959606ms]
  Sep 23 12:57:24.769: INFO: Created: latency-svc-ckczc
  Sep 23 12:57:24.810: INFO: Got endpoints: latency-svc-95hj9 [752.335723ms]
  Sep 23 12:57:24.820: INFO: Created: latency-svc-p455h
  Sep 23 12:57:24.860: INFO: Got endpoints: latency-svc-nqmml [751.177569ms]
  Sep 23 12:57:24.870: INFO: Created: latency-svc-b42h2
  Sep 23 12:57:24.908: INFO: Got endpoints: latency-svc-6hj8k [748.414632ms]
  Sep 23 12:57:24.922: INFO: Created: latency-svc-m5hvg
  Sep 23 12:57:24.960: INFO: Got endpoints: latency-svc-mfkpb [751.151988ms]
  Sep 23 12:57:24.970: INFO: Created: latency-svc-5xgcw
  Sep 23 12:57:25.010: INFO: Got endpoints: latency-svc-v2snw [750.830132ms]
  Sep 23 12:57:25.020: INFO: Created: latency-svc-78j6z
  Sep 23 12:57:25.060: INFO: Got endpoints: latency-svc-wbx8q [749.618018ms]
  Sep 23 12:57:25.071: INFO: Created: latency-svc-xp8qx
  Sep 23 12:57:25.109: INFO: Got endpoints: latency-svc-qbvf7 [750.267225ms]
  Sep 23 12:57:25.126: INFO: Created: latency-svc-mf2xq
  Sep 23 12:57:25.158: INFO: Got endpoints: latency-svc-w6x2z [749.954857ms]
  Sep 23 12:57:25.171: INFO: Created: latency-svc-29vjz
  Sep 23 12:57:25.210: INFO: Got endpoints: latency-svc-xq8ks [752.74082ms]
  Sep 23 12:57:25.223: INFO: Created: latency-svc-l8s8x
  Sep 23 12:57:25.259: INFO: Got endpoints: latency-svc-j8dcs [749.617163ms]
  Sep 23 12:57:25.269: INFO: Created: latency-svc-pfc87
  Sep 23 12:57:25.309: INFO: Got endpoints: latency-svc-9f6r6 [750.409816ms]
  Sep 23 12:57:25.321: INFO: Created: latency-svc-nqhrw
  Sep 23 12:57:25.360: INFO: Got endpoints: latency-svc-22nhq [753.735561ms]
  Sep 23 12:57:25.372: INFO: Created: latency-svc-cm5b8
  Sep 23 12:57:25.409: INFO: Got endpoints: latency-svc-v4svl [748.76997ms]
  Sep 23 12:57:25.420: INFO: Created: latency-svc-6msm9
  Sep 23 12:57:25.459: INFO: Got endpoints: latency-svc-n5tqv [749.372447ms]
  Sep 23 12:57:25.470: INFO: Created: latency-svc-f7z6b
  Sep 23 12:57:25.510: INFO: Got endpoints: latency-svc-ckczc [752.02543ms]
  Sep 23 12:57:25.521: INFO: Created: latency-svc-tnkp8
  Sep 23 12:57:25.559: INFO: Got endpoints: latency-svc-p455h [749.35309ms]
  Sep 23 12:57:25.569: INFO: Created: latency-svc-4w4gr
  Sep 23 12:57:25.608: INFO: Got endpoints: latency-svc-b42h2 [748.86654ms]
  Sep 23 12:57:25.619: INFO: Created: latency-svc-72fkr
  Sep 23 12:57:25.660: INFO: Got endpoints: latency-svc-m5hvg [751.578317ms]
  Sep 23 12:57:25.671: INFO: Created: latency-svc-ssn6r
  Sep 23 12:57:25.711: INFO: Got endpoints: latency-svc-5xgcw [750.961317ms]
  Sep 23 12:57:25.721: INFO: Created: latency-svc-8s4v5
  Sep 23 12:57:25.758: INFO: Got endpoints: latency-svc-78j6z [748.445407ms]
  Sep 23 12:57:25.768: INFO: Created: latency-svc-gh4xj
  Sep 23 12:57:25.811: INFO: Got endpoints: latency-svc-xp8qx [750.788318ms]
  Sep 23 12:57:25.822: INFO: Created: latency-svc-cqv6s
  Sep 23 12:57:25.858: INFO: Got endpoints: latency-svc-mf2xq [748.841696ms]
  Sep 23 12:57:25.868: INFO: Created: latency-svc-nn7bv
  Sep 23 12:57:25.909: INFO: Got endpoints: latency-svc-29vjz [750.346678ms]
  Sep 23 12:57:25.918: INFO: Created: latency-svc-jn25n
  Sep 23 12:57:25.959: INFO: Got endpoints: latency-svc-l8s8x [749.282386ms]
  Sep 23 12:57:25.972: INFO: Created: latency-svc-hw66z
  Sep 23 12:57:26.009: INFO: Got endpoints: latency-svc-pfc87 [749.548486ms]
  Sep 23 12:57:26.018: INFO: Created: latency-svc-hwchk
  Sep 23 12:57:26.058: INFO: Got endpoints: latency-svc-nqhrw [749.142049ms]
  Sep 23 12:57:26.069: INFO: Created: latency-svc-9gpfq
  Sep 23 12:57:26.109: INFO: Got endpoints: latency-svc-cm5b8 [749.034886ms]
  Sep 23 12:57:26.120: INFO: Created: latency-svc-6q842
  Sep 23 12:57:26.159: INFO: Got endpoints: latency-svc-6msm9 [750.030909ms]
  Sep 23 12:57:26.168: INFO: Created: latency-svc-7bh2q
  Sep 23 12:57:26.210: INFO: Got endpoints: latency-svc-f7z6b [751.253356ms]
  Sep 23 12:57:26.222: INFO: Created: latency-svc-jznb5
  Sep 23 12:57:26.259: INFO: Got endpoints: latency-svc-tnkp8 [748.577233ms]
  Sep 23 12:57:26.271: INFO: Created: latency-svc-2xb5q
  Sep 23 12:57:26.309: INFO: Got endpoints: latency-svc-4w4gr [750.265474ms]
  Sep 23 12:57:26.319: INFO: Created: latency-svc-gv8tw
  Sep 23 12:57:26.358: INFO: Got endpoints: latency-svc-72fkr [750.040892ms]
  Sep 23 12:57:26.369: INFO: Created: latency-svc-bjsz9
  Sep 23 12:57:26.408: INFO: Got endpoints: latency-svc-ssn6r [748.433503ms]
  Sep 23 12:57:26.420: INFO: Created: latency-svc-75v6x
  Sep 23 12:57:26.459: INFO: Got endpoints: latency-svc-8s4v5 [748.142029ms]
  Sep 23 12:57:26.469: INFO: Created: latency-svc-txtzx
  Sep 23 12:57:26.508: INFO: Got endpoints: latency-svc-gh4xj [749.838777ms]
  Sep 23 12:57:26.518: INFO: Created: latency-svc-6znk8
  Sep 23 12:57:26.559: INFO: Got endpoints: latency-svc-cqv6s [748.785391ms]
  Sep 23 12:57:26.570: INFO: Created: latency-svc-95wfx
  Sep 23 12:57:26.609: INFO: Got endpoints: latency-svc-nn7bv [750.603881ms]
  Sep 23 12:57:26.618: INFO: Created: latency-svc-dzmgg
  Sep 23 12:57:26.658: INFO: Got endpoints: latency-svc-jn25n [749.315859ms]
  Sep 23 12:57:26.669: INFO: Created: latency-svc-xdvg4
  Sep 23 12:57:26.709: INFO: Got endpoints: latency-svc-hw66z [749.884073ms]
  Sep 23 12:57:26.720: INFO: Created: latency-svc-zrkk9
  Sep 23 12:57:26.760: INFO: Got endpoints: latency-svc-hwchk [751.112183ms]
  Sep 23 12:57:26.770: INFO: Created: latency-svc-sxdzt
  Sep 23 12:57:26.809: INFO: Got endpoints: latency-svc-9gpfq [750.234557ms]
  Sep 23 12:57:26.819: INFO: Created: latency-svc-5rfrf
  Sep 23 12:57:26.859: INFO: Got endpoints: latency-svc-6q842 [749.733671ms]
  Sep 23 12:57:26.870: INFO: Created: latency-svc-fcmxw
  Sep 23 12:57:26.909: INFO: Got endpoints: latency-svc-7bh2q [750.16678ms]
  Sep 23 12:57:26.919: INFO: Created: latency-svc-mlczl
  Sep 23 12:57:26.957: INFO: Got endpoints: latency-svc-jznb5 [746.891192ms]
  Sep 23 12:57:26.970: INFO: Created: latency-svc-8fs9v
  Sep 23 12:57:27.009: INFO: Got endpoints: latency-svc-2xb5q [749.590074ms]
  Sep 23 12:57:27.019: INFO: Created: latency-svc-wnr8x
  Sep 23 12:57:27.061: INFO: Got endpoints: latency-svc-gv8tw [751.398467ms]
  Sep 23 12:57:27.071: INFO: Created: latency-svc-9zlnw
  Sep 23 12:57:27.107: INFO: Got endpoints: latency-svc-bjsz9 [748.539406ms]
  Sep 23 12:57:27.119: INFO: Created: latency-svc-cwlhg
  Sep 23 12:57:27.160: INFO: Got endpoints: latency-svc-75v6x [751.969364ms]
  Sep 23 12:57:27.174: INFO: Created: latency-svc-5pzkm
  Sep 23 12:57:27.209: INFO: Got endpoints: latency-svc-txtzx [750.270463ms]
  Sep 23 12:57:27.219: INFO: Created: latency-svc-jmxgn
  Sep 23 12:57:27.259: INFO: Got endpoints: latency-svc-6znk8 [750.856905ms]
  Sep 23 12:57:27.270: INFO: Created: latency-svc-mhs28
  Sep 23 12:57:27.310: INFO: Got endpoints: latency-svc-95wfx [750.371178ms]
  Sep 23 12:57:27.323: INFO: Created: latency-svc-mcsxx
  Sep 23 12:57:27.359: INFO: Got endpoints: latency-svc-dzmgg [750.58338ms]
  Sep 23 12:57:27.369: INFO: Created: latency-svc-zthcd
  Sep 23 12:57:27.409: INFO: Got endpoints: latency-svc-xdvg4 [750.423475ms]
  Sep 23 12:57:27.419: INFO: Created: latency-svc-ll2gm
  Sep 23 12:57:27.460: INFO: Got endpoints: latency-svc-zrkk9 [750.410593ms]
  Sep 23 12:57:27.471: INFO: Created: latency-svc-72gdx
  Sep 23 12:57:27.509: INFO: Got endpoints: latency-svc-sxdzt [749.160994ms]
  Sep 23 12:57:27.519: INFO: Created: latency-svc-hnwx4
  Sep 23 12:57:27.559: INFO: Got endpoints: latency-svc-5rfrf [750.706166ms]
  Sep 23 12:57:27.570: INFO: Created: latency-svc-5gbrn
  Sep 23 12:57:27.610: INFO: Got endpoints: latency-svc-fcmxw [750.253877ms]
  Sep 23 12:57:27.620: INFO: Created: latency-svc-6dh5p
  Sep 23 12:57:27.660: INFO: Got endpoints: latency-svc-mlczl [750.840406ms]
  Sep 23 12:57:27.671: INFO: Created: latency-svc-fj7j8
  Sep 23 12:57:27.707: INFO: Got endpoints: latency-svc-8fs9v [750.511181ms]
  Sep 23 12:57:27.717: INFO: Created: latency-svc-4hksk
  Sep 23 12:57:27.760: INFO: Got endpoints: latency-svc-wnr8x [751.645053ms]
  Sep 23 12:57:27.772: INFO: Created: latency-svc-8gv2v
  Sep 23 12:57:27.809: INFO: Got endpoints: latency-svc-9zlnw [747.656583ms]
  Sep 23 12:57:27.819: INFO: Created: latency-svc-h6lkh
  Sep 23 12:57:27.859: INFO: Got endpoints: latency-svc-cwlhg [751.658547ms]
  Sep 23 12:57:27.869: INFO: Created: latency-svc-9hzjj
  Sep 23 12:57:27.910: INFO: Got endpoints: latency-svc-5pzkm [749.105081ms]
  Sep 23 12:57:27.921: INFO: Created: latency-svc-7528f
  Sep 23 12:57:27.959: INFO: Got endpoints: latency-svc-jmxgn [750.447405ms]
  Sep 23 12:57:27.969: INFO: Created: latency-svc-9hwn8
  Sep 23 12:57:28.008: INFO: Got endpoints: latency-svc-mhs28 [748.522151ms]
  Sep 23 12:57:28.019: INFO: Created: latency-svc-4rzr7
  Sep 23 12:57:28.060: INFO: Got endpoints: latency-svc-mcsxx [750.206735ms]
  Sep 23 12:57:28.070: INFO: Created: latency-svc-9bcwx
  Sep 23 12:57:28.108: INFO: Got endpoints: latency-svc-zthcd [748.410982ms]
  Sep 23 12:57:28.117: INFO: Created: latency-svc-wld8n
  Sep 23 12:57:28.158: INFO: Got endpoints: latency-svc-ll2gm [749.00858ms]
  Sep 23 12:57:28.169: INFO: Created: latency-svc-q2gfh
  Sep 23 12:57:28.209: INFO: Got endpoints: latency-svc-72gdx [749.271311ms]
  Sep 23 12:57:28.220: INFO: Created: latency-svc-7ccqw
  Sep 23 12:57:28.259: INFO: Got endpoints: latency-svc-hnwx4 [750.253089ms]
  Sep 23 12:57:28.269: INFO: Created: latency-svc-qxvlh
  Sep 23 12:57:28.309: INFO: Got endpoints: latency-svc-5gbrn [749.72838ms]
  Sep 23 12:57:28.320: INFO: Created: latency-svc-ffkxf
  Sep 23 12:57:28.360: INFO: Got endpoints: latency-svc-6dh5p [750.01709ms]
  Sep 23 12:57:28.371: INFO: Created: latency-svc-lkmxn
  Sep 23 12:57:28.409: INFO: Got endpoints: latency-svc-fj7j8 [748.973525ms]
  Sep 23 12:57:28.420: INFO: Created: latency-svc-h9pl9
  Sep 23 12:57:28.459: INFO: Got endpoints: latency-svc-4hksk [751.561185ms]
  Sep 23 12:57:28.469: INFO: Created: latency-svc-mgsbc
  Sep 23 12:57:28.509: INFO: Got endpoints: latency-svc-8gv2v [749.037214ms]
  Sep 23 12:57:28.520: INFO: Created: latency-svc-99q76
  Sep 23 12:57:28.559: INFO: Got endpoints: latency-svc-h6lkh [750.586588ms]
  Sep 23 12:57:28.569: INFO: Created: latency-svc-27npn
  Sep 23 12:57:28.609: INFO: Got endpoints: latency-svc-9hzjj [750.332467ms]
  Sep 23 12:57:28.619: INFO: Created: latency-svc-xfpf2
  Sep 23 12:57:28.659: INFO: Got endpoints: latency-svc-7528f [749.399877ms]
  Sep 23 12:57:28.670: INFO: Created: latency-svc-t57nk
  Sep 23 12:57:28.709: INFO: Got endpoints: latency-svc-9hwn8 [749.328883ms]
  Sep 23 12:57:28.719: INFO: Created: latency-svc-9nzjl
  Sep 23 12:57:28.758: INFO: Got endpoints: latency-svc-4rzr7 [750.841691ms]
  Sep 23 12:57:28.769: INFO: Created: latency-svc-qjtj7
  Sep 23 12:57:28.810: INFO: Got endpoints: latency-svc-9bcwx [749.42933ms]
  Sep 23 12:57:28.821: INFO: Created: latency-svc-j4d2k
  Sep 23 12:57:28.858: INFO: Got endpoints: latency-svc-wld8n [750.457926ms]
  Sep 23 12:57:28.868: INFO: Created: latency-svc-5hr5b
  Sep 23 12:57:28.909: INFO: Got endpoints: latency-svc-q2gfh [751.787654ms]
  Sep 23 12:57:28.919: INFO: Created: latency-svc-7cq5p
  Sep 23 12:57:28.959: INFO: Got endpoints: latency-svc-7ccqw [749.76407ms]
  Sep 23 12:57:28.971: INFO: Created: latency-svc-2kc5x
  Sep 23 12:57:29.008: INFO: Got endpoints: latency-svc-qxvlh [748.854019ms]
  Sep 23 12:57:29.017: INFO: Created: latency-svc-xmrp9
  Sep 23 12:57:29.058: INFO: Got endpoints: latency-svc-ffkxf [748.925331ms]
  Sep 23 12:57:29.068: INFO: Created: latency-svc-7vj77
  Sep 23 12:57:29.109: INFO: Got endpoints: latency-svc-lkmxn [749.611699ms]
  Sep 23 12:57:29.120: INFO: Created: latency-svc-f8srl
  Sep 23 12:57:29.159: INFO: Got endpoints: latency-svc-h9pl9 [750.062412ms]
  Sep 23 12:57:29.169: INFO: Created: latency-svc-lvgjp
  Sep 23 12:57:29.208: INFO: Got endpoints: latency-svc-mgsbc [749.353443ms]
  Sep 23 12:57:29.218: INFO: Created: latency-svc-s4lj9
  Sep 23 12:57:29.259: INFO: Got endpoints: latency-svc-99q76 [749.881425ms]
  Sep 23 12:57:29.270: INFO: Created: latency-svc-284z6
  Sep 23 12:57:29.309: INFO: Got endpoints: latency-svc-27npn [749.458965ms]
  Sep 23 12:57:29.319: INFO: Created: latency-svc-7qdg6
  Sep 23 12:57:29.358: INFO: Got endpoints: latency-svc-xfpf2 [749.282555ms]
  Sep 23 12:57:29.369: INFO: Created: latency-svc-bm6zf
  Sep 23 12:57:29.411: INFO: Got endpoints: latency-svc-t57nk [752.336972ms]
  Sep 23 12:57:29.459: INFO: Got endpoints: latency-svc-9nzjl [750.367498ms]
  Sep 23 12:57:29.509: INFO: Got endpoints: latency-svc-qjtj7 [750.517521ms]
  Sep 23 12:57:29.560: INFO: Got endpoints: latency-svc-j4d2k [750.251421ms]
  Sep 23 12:57:29.610: INFO: Got endpoints: latency-svc-5hr5b [751.188053ms]
  Sep 23 12:57:29.657: INFO: Got endpoints: latency-svc-7cq5p [747.654305ms]
  Sep 23 12:57:29.710: INFO: Got endpoints: latency-svc-2kc5x [751.320177ms]
  Sep 23 12:57:29.759: INFO: Got endpoints: latency-svc-xmrp9 [751.074747ms]
  Sep 23 12:57:29.808: INFO: Got endpoints: latency-svc-7vj77 [749.901524ms]
  Sep 23 12:57:29.860: INFO: Got endpoints: latency-svc-f8srl [750.406972ms]
  Sep 23 12:57:29.910: INFO: Got endpoints: latency-svc-lvgjp [751.088702ms]
  Sep 23 12:57:29.958: INFO: Got endpoints: latency-svc-s4lj9 [749.635487ms]
  Sep 23 12:57:30.009: INFO: Got endpoints: latency-svc-284z6 [750.148585ms]
  Sep 23 12:57:30.059: INFO: Got endpoints: latency-svc-7qdg6 [749.714744ms]
  Sep 23 12:57:30.109: INFO: Got endpoints: latency-svc-bm6zf [750.091821ms]
  Sep 23 12:57:30.109: INFO: Latencies: [14.724223ms 19.504975ms 22.833973ms 31.311469ms 33.868223ms 48.197193ms 57.164996ms 61.185045ms 70.27908ms 76.882166ms 82.446196ms 94.463333ms 100.101769ms 100.878608ms 103.149726ms 105.74404ms 106.154222ms 106.63469ms 106.813965ms 107.697109ms 108.017517ms 109.075155ms 109.326373ms 109.38596ms 109.529716ms 110.491744ms 110.64949ms 111.07141ms 111.757887ms 112.298758ms 112.377874ms 114.16667ms 115.133111ms 135.789951ms 148.357144ms 189.975626ms 234.529674ms 276.028805ms 318.389047ms 362.537549ms 402.909393ms 446.830999ms 490.739923ms 532.426605ms 571.7656ms 617.689353ms 657.717387ms 700.801769ms 743.626489ms 746.478668ms 746.891192ms 747.234962ms 747.654305ms 747.656583ms 747.672152ms 747.963398ms 748.142029ms 748.245564ms 748.410982ms 748.414632ms 748.433503ms 748.445407ms 748.522151ms 748.532586ms 748.539406ms 748.577233ms 748.76997ms 748.785391ms 748.841696ms 748.854019ms 748.86654ms 748.925331ms 748.959606ms 748.965293ms 748.973525ms 749.003811ms 749.00858ms 749.029173ms 749.034886ms 749.037214ms 749.105081ms 749.142049ms 749.160994ms 749.244492ms 749.259263ms 749.271311ms 749.282386ms 749.282555ms 749.315859ms 749.328883ms 749.335797ms 749.35309ms 749.353443ms 749.369821ms 749.372447ms 749.399877ms 749.427586ms 749.42933ms 749.458965ms 749.478913ms 749.506922ms 749.54389ms 749.548486ms 749.590074ms 749.611699ms 749.617163ms 749.618018ms 749.635487ms 749.714744ms 749.72838ms 749.733671ms 749.76407ms 749.783787ms 749.791974ms 749.838777ms 749.851296ms 749.866271ms 749.881425ms 749.884073ms 749.901524ms 749.903522ms 749.936904ms 749.954857ms 750.01709ms 750.030909ms 750.040892ms 750.062412ms 750.088135ms 750.091821ms 750.120265ms 750.148585ms 750.16678ms 750.181581ms 750.206735ms 750.234557ms 750.244458ms 750.251421ms 750.253089ms 750.253877ms 750.265474ms 750.267225ms 750.270463ms 750.301584ms 750.325177ms 750.332467ms 750.346678ms 750.367498ms 750.371178ms 750.37239ms 750.406972ms 750.409816ms 750.410593ms 750.423475ms 750.447405ms 750.457926ms 750.509937ms 750.511181ms 750.517521ms 750.537924ms 750.58338ms 750.586588ms 750.593119ms 750.603881ms 750.701869ms 750.706166ms 750.709519ms 750.788318ms 750.813051ms 750.830132ms 750.830222ms 750.840406ms 750.841691ms 750.856905ms 750.865815ms 750.961317ms 751.074747ms 751.088702ms 751.112183ms 751.151988ms 751.177569ms 751.177689ms 751.188053ms 751.253356ms 751.308048ms 751.320177ms 751.34757ms 751.398467ms 751.532172ms 751.561185ms 751.578317ms 751.645053ms 751.658547ms 751.787654ms 751.803266ms 751.969364ms 752.02543ms 752.335723ms 752.336972ms 752.74082ms 753.735561ms]
  Sep 23 12:57:30.109: INFO: 50 %ile: 749.506922ms
  Sep 23 12:57:30.109: INFO: 90 %ile: 751.177689ms
  Sep 23 12:57:30.109: INFO: 99 %ile: 752.74082ms
  Sep 23 12:57:30.109: INFO: Total sample count: 200
  Sep 23 12:57:30.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8060" for this suite. @ 09/23/23 12:57:30.114
• [10.767 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/23/23 12:57:30.125
  Sep 23 12:57:30.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 12:57:30.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:30.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:30.144
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 12:57:30.147
  STEP: Saw pod success @ 09/23/23 12:57:34.174
  Sep 23 12:57:34.178: INFO: Trying to get logs from node ip-172-31-84-196 pod downwardapi-volume-05f42ab1-17d1-4240-988a-e53fab158d48 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 12:57:34.197
  Sep 23 12:57:34.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1056" for this suite. @ 09/23/23 12:57:34.219
• [4.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/23/23 12:57:34.227
  Sep 23 12:57:34.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename discovery @ 09/23/23 12:57:34.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:34.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:34.242
  STEP: Setting up server cert @ 09/23/23 12:57:34.245
  Sep 23 12:57:34.419: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep 23 12:57:34.420: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep 23 12:57:34.420: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep 23 12:57:34.420: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep 23 12:57:34.420: INFO: Checking APIGroup: apps
  Sep 23 12:57:34.421: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep 23 12:57:34.421: INFO: Versions found [{apps/v1 v1}]
  Sep 23 12:57:34.421: INFO: apps/v1 matches apps/v1
  Sep 23 12:57:34.421: INFO: Checking APIGroup: events.k8s.io
  Sep 23 12:57:34.422: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep 23 12:57:34.422: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep 23 12:57:34.422: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep 23 12:57:34.422: INFO: Checking APIGroup: authentication.k8s.io
  Sep 23 12:57:34.423: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep 23 12:57:34.423: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep 23 12:57:34.423: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep 23 12:57:34.423: INFO: Checking APIGroup: authorization.k8s.io
  Sep 23 12:57:34.424: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep 23 12:57:34.424: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep 23 12:57:34.424: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep 23 12:57:34.424: INFO: Checking APIGroup: autoscaling
  Sep 23 12:57:34.426: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep 23 12:57:34.426: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep 23 12:57:34.426: INFO: autoscaling/v2 matches autoscaling/v2
  Sep 23 12:57:34.426: INFO: Checking APIGroup: batch
  Sep 23 12:57:34.427: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep 23 12:57:34.427: INFO: Versions found [{batch/v1 v1}]
  Sep 23 12:57:34.427: INFO: batch/v1 matches batch/v1
  Sep 23 12:57:34.427: INFO: Checking APIGroup: certificates.k8s.io
  Sep 23 12:57:34.428: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep 23 12:57:34.428: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep 23 12:57:34.428: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep 23 12:57:34.428: INFO: Checking APIGroup: networking.k8s.io
  Sep 23 12:57:34.429: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep 23 12:57:34.429: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep 23 12:57:34.429: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep 23 12:57:34.429: INFO: Checking APIGroup: policy
  Sep 23 12:57:34.430: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep 23 12:57:34.430: INFO: Versions found [{policy/v1 v1}]
  Sep 23 12:57:34.430: INFO: policy/v1 matches policy/v1
  Sep 23 12:57:34.430: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep 23 12:57:34.431: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep 23 12:57:34.431: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep 23 12:57:34.431: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep 23 12:57:34.431: INFO: Checking APIGroup: storage.k8s.io
  Sep 23 12:57:34.432: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep 23 12:57:34.432: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep 23 12:57:34.432: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep 23 12:57:34.432: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep 23 12:57:34.433: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep 23 12:57:34.433: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep 23 12:57:34.433: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep 23 12:57:34.433: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep 23 12:57:34.434: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep 23 12:57:34.434: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep 23 12:57:34.434: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep 23 12:57:34.434: INFO: Checking APIGroup: scheduling.k8s.io
  Sep 23 12:57:34.435: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep 23 12:57:34.435: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep 23 12:57:34.435: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep 23 12:57:34.435: INFO: Checking APIGroup: coordination.k8s.io
  Sep 23 12:57:34.436: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep 23 12:57:34.436: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep 23 12:57:34.436: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep 23 12:57:34.436: INFO: Checking APIGroup: node.k8s.io
  Sep 23 12:57:34.437: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep 23 12:57:34.437: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep 23 12:57:34.437: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep 23 12:57:34.437: INFO: Checking APIGroup: discovery.k8s.io
  Sep 23 12:57:34.438: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep 23 12:57:34.438: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep 23 12:57:34.438: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep 23 12:57:34.438: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep 23 12:57:34.439: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep 23 12:57:34.439: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep 23 12:57:34.439: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep 23 12:57:34.439: INFO: Checking APIGroup: metrics.k8s.io
  Sep 23 12:57:34.440: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Sep 23 12:57:34.440: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Sep 23 12:57:34.440: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Sep 23 12:57:34.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-276" for this suite. @ 09/23/23 12:57:34.444
• [0.226 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/23/23 12:57:34.453
  Sep 23 12:57:34.453: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:57:34.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:34.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:34.468
  Sep 23 12:57:34.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 create -f -'
  Sep 23 12:57:34.729: INFO: stderr: ""
  Sep 23 12:57:34.729: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep 23 12:57:34.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 create -f -'
  Sep 23 12:57:35.012: INFO: stderr: ""
  Sep 23 12:57:35.012: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/23/23 12:57:35.012
  Sep 23 12:57:36.017: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 12:57:36.017: INFO: Found 0 / 1
  Sep 23 12:57:37.017: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 12:57:37.017: INFO: Found 1 / 1
  Sep 23 12:57:37.017: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 23 12:57:37.023: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 12:57:37.023: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 23 12:57:37.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 describe pod agnhost-primary-thbcs'
  Sep 23 12:57:37.094: INFO: stderr: ""
  Sep 23 12:57:37.094: INFO: stdout: "Name:             agnhost-primary-thbcs\nNamespace:        kubectl-7222\nPriority:         0\nService Account:  default\nNode:             ip-172-31-84-196/172.31.84.196\nStart Time:       Sat, 23 Sep 2023 12:57:34 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.88.198\nIPs:\n  IP:           192.168.88.198\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4b7af1984907d767419d744dabcbb4ed3aea367341e365d3e6bc19dcb28f1535\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 23 Sep 2023 12:57:35 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-prptp (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-prptp:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-7222/agnhost-primary-thbcs to ip-172-31-84-196\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Sep 23 12:57:37.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 describe rc agnhost-primary'
  Sep 23 12:57:37.169: INFO: stderr: ""
  Sep 23 12:57:37.169: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7222\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-thbcs\n"
  Sep 23 12:57:37.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 describe service agnhost-primary'
  Sep 23 12:57:37.254: INFO: stderr: ""
  Sep 23 12:57:37.254: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7222\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.185\nIPs:               10.152.183.185\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         <none>\nSession Affinity:  None\nEvents:            <none>\n"
  Sep 23 12:57:37.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 describe node ip-172-31-1-51'
  Sep 23 12:57:37.365: INFO: stderr: ""
  Sep 23 12:57:37.365: INFO: stdout: "Name:               ip-172-31-1-51\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-1-51\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 23 Sep 2023 12:01:16 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-1-51\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 23 Sep 2023 12:57:35 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 23 Sep 2023 12:02:28 +0000   Sat, 23 Sep 2023 12:02:28 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 23 Sep 2023 12:55:40 +0000   Sat, 23 Sep 2023 12:01:16 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 23 Sep 2023 12:55:40 +0000   Sat, 23 Sep 2023 12:01:16 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 23 Sep 2023 12:55:40 +0000   Sat, 23 Sep 2023 12:01:16 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 23 Sep 2023 12:55:40 +0000   Sat, 23 Sep 2023 12:02:27 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.1.51\n  Hostname:    ip-172-31-1-51\nCapacity:\n  cpu:                4\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15893692Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15791292Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec22963c71736de2d2a7c287a4fa7f1d\n  System UUID:                ec22963c-7173-6de2-d2a7-c287a4fa7f1d\n  Boot ID:                    b206797f-ef09-407f-8d14-9e0479691256\n  Kernel Version:             6.2.0-1012-aws\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.28.2\n  Kube-Proxy Version:         v1.28.2\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-ntnnf                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         56m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-s7z7t    0 (0%)        0 (0%)      0 (0%)           0 (0%)         48m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                250m (6%)  0 (0%)\n  memory             0 (0%)     0 (0%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:\n  Type    Reason          Age   From             Message\n  ----    ------          ----  ----             -------\n  Normal  RegisteredNode  56m   node-controller  Node ip-172-31-1-51 event: Registered Node ip-172-31-1-51 in Controller\n"
  Sep 23 12:57:37.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-7222 describe namespace kubectl-7222'
  Sep 23 12:57:37.436: INFO: stderr: ""
  Sep 23 12:57:37.436: INFO: stdout: "Name:         kubectl-7222\nLabels:       e2e-framework=kubectl\n              e2e-run=c17679e4-bee1-4eb8-b859-bd4a262cbf5a\n              kubernetes.io/metadata.name=kubectl-7222\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep 23 12:57:37.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7222" for this suite. @ 09/23/23 12:57:37.441
• [2.995 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/23/23 12:57:37.449
  Sep 23 12:57:37.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename controllerrevisions @ 09/23/23 12:57:37.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:37.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:37.466
  STEP: Creating DaemonSet "e2e-dvchp-daemon-set" @ 09/23/23 12:57:37.491
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/23 12:57:37.496
  Sep 23 12:57:37.500: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:57:37.500: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:57:37.503: INFO: Number of nodes with available pods controlled by daemonset e2e-dvchp-daemon-set: 0
  Sep 23 12:57:37.503: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:57:38.509: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:57:38.509: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:57:38.513: INFO: Number of nodes with available pods controlled by daemonset e2e-dvchp-daemon-set: 1
  Sep 23 12:57:38.513: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 12:57:39.508: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:57:39.508: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 12:57:39.512: INFO: Number of nodes with available pods controlled by daemonset e2e-dvchp-daemon-set: 3
  Sep 23 12:57:39.512: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-dvchp-daemon-set
  STEP: Confirm DaemonSet "e2e-dvchp-daemon-set" successfully created with "daemonset-name=e2e-dvchp-daemon-set" label @ 09/23/23 12:57:39.515
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-dvchp-daemon-set" @ 09/23/23 12:57:39.524
  Sep 23 12:57:39.528: INFO: Located ControllerRevision: "e2e-dvchp-daemon-set-54d69b875b"
  STEP: Patching ControllerRevision "e2e-dvchp-daemon-set-54d69b875b" @ 09/23/23 12:57:39.531
  Sep 23 12:57:39.536: INFO: e2e-dvchp-daemon-set-54d69b875b has been patched
  STEP: Create a new ControllerRevision @ 09/23/23 12:57:39.536
  Sep 23 12:57:39.544: INFO: Created ControllerRevision: e2e-dvchp-daemon-set-6f676fd89d
  STEP: Confirm that there are two ControllerRevisions @ 09/23/23 12:57:39.544
  Sep 23 12:57:39.544: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 23 12:57:39.548: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-dvchp-daemon-set-54d69b875b" @ 09/23/23 12:57:39.548
  STEP: Confirm that there is only one ControllerRevision @ 09/23/23 12:57:39.554
  Sep 23 12:57:39.554: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 23 12:57:39.557: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-dvchp-daemon-set-6f676fd89d" @ 09/23/23 12:57:39.56
  Sep 23 12:57:39.570: INFO: e2e-dvchp-daemon-set-6f676fd89d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/23/23 12:57:39.57
  W0923 12:57:39.575592      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/23/23 12:57:39.575
  Sep 23 12:57:39.575: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 23 12:57:40.579: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 23 12:57:40.582: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-dvchp-daemon-set-6f676fd89d=updated" @ 09/23/23 12:57:40.582
  STEP: Confirm that there is only one ControllerRevision @ 09/23/23 12:57:40.591
  Sep 23 12:57:40.591: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 23 12:57:40.594: INFO: Found 1 ControllerRevisions
  Sep 23 12:57:40.598: INFO: ControllerRevision "e2e-dvchp-daemon-set-54b47f8c8c" has revision 3
  STEP: Deleting DaemonSet "e2e-dvchp-daemon-set" @ 09/23/23 12:57:40.603
  STEP: deleting DaemonSet.extensions e2e-dvchp-daemon-set in namespace controllerrevisions-1178, will wait for the garbage collector to delete the pods @ 09/23/23 12:57:40.603
  Sep 23 12:57:40.664: INFO: Deleting DaemonSet.extensions e2e-dvchp-daemon-set took: 6.886677ms
  Sep 23 12:57:40.764: INFO: Terminating DaemonSet.extensions e2e-dvchp-daemon-set pods took: 100.73911ms
  Sep 23 12:57:42.968: INFO: Number of nodes with available pods controlled by daemonset e2e-dvchp-daemon-set: 0
  Sep 23 12:57:42.968: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-dvchp-daemon-set
  Sep 23 12:57:42.972: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19890"},"items":null}

  Sep 23 12:57:42.976: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19890"},"items":null}

  Sep 23 12:57:42.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1178" for this suite. @ 09/23/23 12:57:42.993
• [5.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/23/23 12:57:43
  Sep 23 12:57:43.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 12:57:43.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:43.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:43.018
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/23 12:57:43.021
  Sep 23 12:57:43.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6525 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 23 12:57:43.089: INFO: stderr: ""
  Sep 23 12:57:43.089: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/23/23 12:57:43.089
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/23/23 12:57:48.144
  Sep 23 12:57:48.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6525 get pod e2e-test-httpd-pod -o json'
  Sep 23 12:57:48.200: INFO: stderr: ""
  Sep 23 12:57:48.200: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-09-23T12:57:43Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6525\",\n        \"resourceVersion\": \"19913\",\n        \"uid\": \"8df084dd-f99f-401b-9791-7c019a5eda74\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qbpvg\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-77-156\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qbpvg\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-23T12:57:43Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-23T12:57:43Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-23T12:57:43Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-23T12:57:43Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://6a2cad1050d0b9535ead9237cac5c5a4a53eadcd049b1b99c844c04ae23ce4f6\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-23T12:57:43Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.77.156\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.55.79\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.55.79\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-23T12:57:43Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/23/23 12:57:48.201
  Sep 23 12:57:48.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6525 replace -f -'
  Sep 23 12:57:48.369: INFO: stderr: ""
  Sep 23 12:57:48.369: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/23/23 12:57:48.369
  Sep 23 12:57:48.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-6525 delete pods e2e-test-httpd-pod'
  Sep 23 12:57:49.948: INFO: stderr: ""
  Sep 23 12:57:49.948: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 23 12:57:49.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6525" for this suite. @ 09/23/23 12:57:49.952
• [6.959 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/23/23 12:57:49.959
  Sep 23 12:57:49.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename podtemplate @ 09/23/23 12:57:49.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:49.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:49.976
  STEP: Create a pod template @ 09/23/23 12:57:49.979
  STEP: Replace a pod template @ 09/23/23 12:57:49.983
  Sep 23 12:57:49.993: INFO: Found updated podtemplate annotation: "true"

  Sep 23 12:57:49.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4074" for this suite. @ 09/23/23 12:57:49.997
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/23/23 12:57:50.005
  Sep 23 12:57:50.005: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename job @ 09/23/23 12:57:50.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:57:50.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:57:50.021
  STEP: Creating a job @ 09/23/23 12:57:50.023
  STEP: Ensuring active pods == parallelism @ 09/23/23 12:57:50.028
  STEP: delete a job @ 09/23/23 12:57:52.033
  STEP: deleting Job.batch foo in namespace job-8116, will wait for the garbage collector to delete the pods @ 09/23/23 12:57:52.033
  Sep 23 12:57:52.095: INFO: Deleting Job.batch foo took: 7.493292ms
  Sep 23 12:57:52.195: INFO: Terminating Job.batch foo pods took: 100.524809ms
  STEP: Ensuring job was deleted @ 09/23/23 12:58:23.096
  Sep 23 12:58:23.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8116" for this suite. @ 09/23/23 12:58:23.104
• [33.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/23/23 12:58:23.112
  Sep 23 12:58:23.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 12:58:23.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:58:23.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:58:23.131
  Sep 23 12:58:23.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/23/23 12:58:24.46
  Sep 23 12:58:24.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 create -f -'
  Sep 23 12:58:26.829: INFO: stderr: ""
  Sep 23 12:58:26.829: INFO: stdout: "e2e-test-crd-publish-openapi-1267-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 23 12:58:26.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 delete e2e-test-crd-publish-openapi-1267-crds test-foo'
  Sep 23 12:58:26.905: INFO: stderr: ""
  Sep 23 12:58:26.905: INFO: stdout: "e2e-test-crd-publish-openapi-1267-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep 23 12:58:26.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 apply -f -'
  Sep 23 12:58:27.275: INFO: stderr: ""
  Sep 23 12:58:27.275: INFO: stdout: "e2e-test-crd-publish-openapi-1267-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 23 12:58:27.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 delete e2e-test-crd-publish-openapi-1267-crds test-foo'
  Sep 23 12:58:27.357: INFO: stderr: ""
  Sep 23 12:58:27.357: INFO: stdout: "e2e-test-crd-publish-openapi-1267-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/23/23 12:58:27.357
  Sep 23 12:58:27.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 create -f -'
  Sep 23 12:58:27.594: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/23/23 12:58:27.594
  Sep 23 12:58:27.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 create -f -'
  Sep 23 12:58:27.720: INFO: rc: 1
  Sep 23 12:58:27.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 apply -f -'
  Sep 23 12:58:27.843: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/23/23 12:58:27.843
  Sep 23 12:58:27.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 create -f -'
  Sep 23 12:58:27.962: INFO: rc: 1
  Sep 23 12:58:27.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 --namespace=crd-publish-openapi-9516 apply -f -'
  Sep 23 12:58:28.084: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/23/23 12:58:28.084
  Sep 23 12:58:28.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 explain e2e-test-crd-publish-openapi-1267-crds'
  Sep 23 12:58:28.288: INFO: stderr: ""
  Sep 23 12:58:28.288: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1267-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/23/23 12:58:28.289
  Sep 23 12:58:28.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 explain e2e-test-crd-publish-openapi-1267-crds.metadata'
  Sep 23 12:58:28.410: INFO: stderr: ""
  Sep 23 12:58:28.410: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1267-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep 23 12:58:28.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 explain e2e-test-crd-publish-openapi-1267-crds.spec'
  Sep 23 12:58:28.617: INFO: stderr: ""
  Sep 23 12:58:28.617: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1267-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep 23 12:58:28.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 explain e2e-test-crd-publish-openapi-1267-crds.spec.bars'
  Sep 23 12:58:28.827: INFO: stderr: ""
  Sep 23 12:58:28.827: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1267-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/23/23 12:58:28.827
  Sep 23 12:58:28.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-9516 explain e2e-test-crd-publish-openapi-1267-crds.spec.bars2'
  Sep 23 12:58:29.045: INFO: rc: 1
  Sep 23 12:58:30.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9516" for this suite. @ 09/23/23 12:58:30.345
• [7.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/23/23 12:58:30.354
  Sep 23 12:58:30.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename prestop @ 09/23/23 12:58:30.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:58:30.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:58:30.374
  STEP: Creating server pod server in namespace prestop-1344 @ 09/23/23 12:58:30.377
  STEP: Waiting for pods to come up. @ 09/23/23 12:58:30.386
  STEP: Creating tester pod tester in namespace prestop-1344 @ 09/23/23 12:58:32.399
  STEP: Deleting pre-stop pod @ 09/23/23 12:58:34.422
  Sep 23 12:58:39.437: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep 23 12:58:39.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/23/23 12:58:39.441
  STEP: Destroying namespace "prestop-1344" for this suite. @ 09/23/23 12:58:39.453
• [9.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/23/23 12:58:39.466
  Sep 23 12:58:39.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-webhook @ 09/23/23 12:58:39.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:58:39.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:58:39.486
  STEP: Setting up server cert @ 09/23/23 12:58:39.489
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/23/23 12:58:39.947
  STEP: Deploying the custom resource conversion webhook pod @ 09/23/23 12:58:39.955
  STEP: Wait for the deployment to be ready @ 09/23/23 12:58:39.967
  Sep 23 12:58:39.975: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 12:58:41.988
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 12:58:42
  Sep 23 12:58:43.000: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 23 12:58:43.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Creating a v1 custom resource @ 09/23/23 12:58:45.575
  STEP: Create a v2 custom resource @ 09/23/23 12:58:45.592
  STEP: List CRs in v1 @ 09/23/23 12:58:45.623
  STEP: List CRs in v2 @ 09/23/23 12:58:45.628
  Sep 23 12:58:45.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7963" for this suite. @ 09/23/23 12:58:46.195
• [6.738 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/23/23 12:58:46.205
  Sep 23 12:58:46.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 12:58:46.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:58:46.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:58:46.226
  STEP: creating secret secrets-5206/secret-test-063da7a6-43fe-4ff7-94db-ab6764a4f134 @ 09/23/23 12:58:46.229
  STEP: Creating a pod to test consume secrets @ 09/23/23 12:58:46.234
  STEP: Saw pod success @ 09/23/23 12:58:50.259
  Sep 23 12:58:50.263: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-d97ae41c-921e-4f71-8896-34f26747dfc3 container env-test: <nil>
  STEP: delete the pod @ 09/23/23 12:58:50.284
  Sep 23 12:58:50.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5206" for this suite. @ 09/23/23 12:58:50.303
• [4.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/23/23 12:58:50.31
  Sep 23 12:58:50.310: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename security-context @ 09/23/23 12:58:50.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:58:50.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:58:50.331
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/23/23 12:58:50.334
  STEP: Saw pod success @ 09/23/23 12:58:54.36
  Sep 23 12:58:54.364: INFO: Trying to get logs from node ip-172-31-77-156 pod security-context-5b1594e8-f2ea-4a32-b49f-517e88dacc87 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 12:58:54.372
  Sep 23 12:58:54.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3388" for this suite. @ 09/23/23 12:58:54.392
• [4.089 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/23/23 12:58:54.399
  Sep 23 12:58:54.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename subpath @ 09/23/23 12:58:54.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:58:54.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:58:54.419
  STEP: Setting up data @ 09/23/23 12:58:54.422
  STEP: Creating pod pod-subpath-test-configmap-gs2x @ 09/23/23 12:58:54.432
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/23 12:58:54.432
  STEP: Saw pod success @ 09/23/23 12:59:18.509
  Sep 23 12:59:18.513: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-subpath-test-configmap-gs2x container test-container-subpath-configmap-gs2x: <nil>
  STEP: delete the pod @ 09/23/23 12:59:18.522
  STEP: Deleting pod pod-subpath-test-configmap-gs2x @ 09/23/23 12:59:18.537
  Sep 23 12:59:18.537: INFO: Deleting pod "pod-subpath-test-configmap-gs2x" in namespace "subpath-8520"
  Sep 23 12:59:18.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8520" for this suite. @ 09/23/23 12:59:18.545
• [24.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/23/23 12:59:18.554
  Sep 23 12:59:18.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 12:59:18.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:59:18.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:59:18.574
  STEP: creating an Endpoint @ 09/23/23 12:59:18.581
  STEP: waiting for available Endpoint @ 09/23/23 12:59:18.585
  STEP: listing all Endpoints @ 09/23/23 12:59:18.587
  STEP: updating the Endpoint @ 09/23/23 12:59:18.591
  STEP: fetching the Endpoint @ 09/23/23 12:59:18.597
  STEP: patching the Endpoint @ 09/23/23 12:59:18.6
  STEP: fetching the Endpoint @ 09/23/23 12:59:18.608
  STEP: deleting the Endpoint by Collection @ 09/23/23 12:59:18.612
  STEP: waiting for Endpoint deletion @ 09/23/23 12:59:18.621
  STEP: fetching the Endpoint @ 09/23/23 12:59:18.622
  Sep 23 12:59:18.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9432" for this suite. @ 09/23/23 12:59:18.63
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/23/23 12:59:18.637
  Sep 23 12:59:18.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/23/23 12:59:18.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:59:18.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:59:18.657
  Sep 23 12:59:18.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:59:19.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-400" for this suite. @ 09/23/23 12:59:19.687
• [1.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/23/23 12:59:19.695
  Sep 23 12:59:19.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replicaset @ 09/23/23 12:59:19.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:59:19.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:59:19.716
  Sep 23 12:59:19.733: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 23 12:59:24.738: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/23 12:59:24.738
  STEP: Scaling up "test-rs" replicaset  @ 09/23/23 12:59:24.738
  Sep 23 12:59:24.749: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/23/23 12:59:24.749
  Sep 23 12:59:24.760: INFO: observed ReplicaSet test-rs in namespace replicaset-5380 with ReadyReplicas 1, AvailableReplicas 1
  Sep 23 12:59:24.772: INFO: observed ReplicaSet test-rs in namespace replicaset-5380 with ReadyReplicas 1, AvailableReplicas 1
  Sep 23 12:59:24.783: INFO: observed ReplicaSet test-rs in namespace replicaset-5380 with ReadyReplicas 1, AvailableReplicas 1
  Sep 23 12:59:24.791: INFO: observed ReplicaSet test-rs in namespace replicaset-5380 with ReadyReplicas 1, AvailableReplicas 1
  Sep 23 12:59:25.902: INFO: observed ReplicaSet test-rs in namespace replicaset-5380 with ReadyReplicas 2, AvailableReplicas 2
  Sep 23 12:59:26.517: INFO: observed Replicaset test-rs in namespace replicaset-5380 with ReadyReplicas 3 found true
  Sep 23 12:59:26.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5380" for this suite. @ 09/23/23 12:59:26.523
• [6.836 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/23/23 12:59:26.531
  Sep 23 12:59:26.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename hostport @ 09/23/23 12:59:26.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:59:26.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:59:26.55
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/23/23 12:59:26.558
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.33.104 on the node which pod1 resides and expect scheduled @ 09/23/23 12:59:28.575
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.33.104 but use UDP protocol on the node which pod2 resides @ 09/23/23 12:59:40.618
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/23/23 12:59:44.654
  Sep 23 12:59:44.654: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.33.104 http://127.0.0.1:54323/hostname] Namespace:hostport-9886 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 12:59:44.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:59:44.654: INFO: ExecWithOptions: Clientset creation
  Sep 23 12:59:44.654: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9886/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.33.104+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.33.104, port: 54323 @ 09/23/23 12:59:44.758
  Sep 23 12:59:44.758: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.33.104:54323/hostname] Namespace:hostport-9886 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 12:59:44.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:59:44.759: INFO: ExecWithOptions: Clientset creation
  Sep 23 12:59:44.759: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9886/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.33.104%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.33.104, port: 54323 UDP @ 09/23/23 12:59:44.866
  Sep 23 12:59:44.866: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.33.104 54323] Namespace:hostport-9886 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 12:59:44.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 12:59:44.866: INFO: ExecWithOptions: Clientset creation
  Sep 23 12:59:44.866: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9886/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.33.104+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Sep 23 12:59:49.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9886" for this suite. @ 09/23/23 12:59:49.964
• [23.441 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/23/23 12:59:49.972
  Sep 23 12:59:49.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename watch @ 09/23/23 12:59:49.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:59:49.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:59:49.992
  STEP: creating a watch on configmaps @ 09/23/23 12:59:49.995
  STEP: creating a new configmap @ 09/23/23 12:59:49.996
  STEP: modifying the configmap once @ 09/23/23 12:59:50.001
  STEP: closing the watch once it receives two notifications @ 09/23/23 12:59:50.009
  Sep 23 12:59:50.009: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6386  76a88736-05d6-4fea-a104-e0f4f9978ef8 20758 0 2023-09-23 12:59:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-23 12:59:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 12:59:50.009: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6386  76a88736-05d6-4fea-a104-e0f4f9978ef8 20759 0 2023-09-23 12:59:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-23 12:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/23/23 12:59:50.01
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/23/23 12:59:50.018
  STEP: deleting the configmap @ 09/23/23 12:59:50.019
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/23/23 12:59:50.03
  Sep 23 12:59:50.030: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6386  76a88736-05d6-4fea-a104-e0f4f9978ef8 20760 0 2023-09-23 12:59:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-23 12:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 12:59:50.030: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6386  76a88736-05d6-4fea-a104-e0f4f9978ef8 20761 0 2023-09-23 12:59:49 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-23 12:59:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 12:59:50.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6386" for this suite. @ 09/23/23 12:59:50.035
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/23/23 12:59:50.042
  Sep 23 12:59:50.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-runtime @ 09/23/23 12:59:50.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 12:59:50.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 12:59:50.063
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/23/23 12:59:50.074
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/23/23 13:00:07.162
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/23/23 13:00:07.166
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/23/23 13:00:07.174
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/23/23 13:00:07.174
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/23/23 13:00:07.197
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/23/23 13:00:09.212
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/23/23 13:00:11.226
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/23/23 13:00:11.233
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/23/23 13:00:11.233
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/23/23 13:00:11.257
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/23/23 13:00:12.266
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/23/23 13:00:14.28
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/23/23 13:00:14.288
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/23/23 13:00:14.288
  Sep 23 13:00:14.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8778" for this suite. @ 09/23/23 13:00:14.322
• [24.287 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/23/23 13:00:14.33
  Sep 23 13:00:14.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 13:00:14.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:14.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:14.351
  STEP: apply creating a deployment @ 09/23/23 13:00:14.354
  Sep 23 13:00:14.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9991" for this suite. @ 09/23/23 13:00:14.374
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/23/23 13:00:14.382
  Sep 23 13:00:14.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replication-controller @ 09/23/23 13:00:14.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:14.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:14.402
  STEP: Given a ReplicationController is created @ 09/23/23 13:00:14.405
  STEP: When the matched label of one of its pods change @ 09/23/23 13:00:14.41
  Sep 23 13:00:14.415: INFO: Pod name pod-release: Found 0 pods out of 1
  Sep 23 13:00:19.419: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/23/23 13:00:19.431
  Sep 23 13:00:20.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-307" for this suite. @ 09/23/23 13:00:20.445
• [6.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/23/23 13:00:20.454
  Sep 23 13:00:20.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename endpointslice @ 09/23/23 13:00:20.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:20.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:20.474
  STEP: referencing a single matching pod @ 09/23/23 13:00:25.543
  STEP: referencing matching pods with named port @ 09/23/23 13:00:30.552
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/23/23 13:00:35.562
  STEP: recreating EndpointSlices after they've been deleted @ 09/23/23 13:00:40.572
  Sep 23 13:00:40.593: INFO: EndpointSlice for Service endpointslice-5252/example-named-port not found
  Sep 23 13:00:50.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5252" for this suite. @ 09/23/23 13:00:50.608
• [30.162 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/23/23 13:00:50.616
  Sep 23 13:00:50.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename watch @ 09/23/23 13:00:50.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:50.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:50.636
  STEP: getting a starting resourceVersion @ 09/23/23 13:00:50.64
  STEP: starting a background goroutine to produce watch events @ 09/23/23 13:00:50.644
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/23/23 13:00:50.644
  Sep 23 13:00:53.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7409" for this suite. @ 09/23/23 13:00:53.471
• [2.910 seconds]
------------------------------
S
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/23/23 13:00:53.526
  Sep 23 13:00:53.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/23/23 13:00:53.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:53.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:53.547
  STEP: Setting up the test @ 09/23/23 13:00:53.55
  STEP: Creating hostNetwork=false pod @ 09/23/23 13:00:53.55
  STEP: Creating hostNetwork=true pod @ 09/23/23 13:00:55.574
  STEP: Running the test @ 09/23/23 13:00:57.593
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/23/23 13:00:57.593
  Sep 23 13:00:57.593: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:57.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:57.593: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:57.593: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 23 13:00:57.699: INFO: Exec stderr: ""
  Sep 23 13:00:57.699: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:57.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:57.700: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:57.700: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 23 13:00:57.818: INFO: Exec stderr: ""
  Sep 23 13:00:57.818: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:57.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:57.819: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:57.819: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 23 13:00:57.911: INFO: Exec stderr: ""
  Sep 23 13:00:57.911: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:57.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:57.912: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:57.912: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 23 13:00:58.019: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/23/23 13:00:58.019
  Sep 23 13:00:58.019: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:58.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:58.020: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:58.020: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 23 13:00:58.099: INFO: Exec stderr: ""
  Sep 23 13:00:58.099: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:58.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:58.100: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:58.100: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 23 13:00:58.203: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/23/23 13:00:58.203
  Sep 23 13:00:58.203: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:58.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:58.204: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:58.204: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 23 13:00:58.289: INFO: Exec stderr: ""
  Sep 23 13:00:58.289: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:58.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:58.289: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:58.289: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 23 13:00:58.381: INFO: Exec stderr: ""
  Sep 23 13:00:58.381: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:58.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:58.381: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:58.381: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 23 13:00:58.457: INFO: Exec stderr: ""
  Sep 23 13:00:58.457: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7874 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:00:58.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:00:58.457: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:00:58.458: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7874/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 23 13:00:58.537: INFO: Exec stderr: ""
  Sep 23 13:00:58.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7874" for this suite. @ 09/23/23 13:00:58.542
• [5.022 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/23/23 13:00:58.549
  Sep 23 13:00:58.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:00:58.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:58.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:58.57
  STEP: creating a Service @ 09/23/23 13:00:58.577
  STEP: watching for the Service to be added @ 09/23/23 13:00:58.587
  Sep 23 13:00:58.588: INFO: Found Service test-service-gbnqd in namespace services-4980 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep 23 13:00:58.589: INFO: Service test-service-gbnqd created
  STEP: Getting /status @ 09/23/23 13:00:58.589
  Sep 23 13:00:58.593: INFO: Service test-service-gbnqd has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/23/23 13:00:58.593
  STEP: watching for the Service to be patched @ 09/23/23 13:00:58.6
  Sep 23 13:00:58.602: INFO: observed Service test-service-gbnqd in namespace services-4980 with annotations: map[] & LoadBalancer: {[]}
  Sep 23 13:00:58.602: INFO: Found Service test-service-gbnqd in namespace services-4980 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep 23 13:00:58.602: INFO: Service test-service-gbnqd has service status patched
  STEP: updating the ServiceStatus @ 09/23/23 13:00:58.602
  Sep 23 13:00:58.611: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/23/23 13:00:58.611
  Sep 23 13:00:58.613: INFO: Observed Service test-service-gbnqd in namespace services-4980 with annotations: map[] & Conditions: {[]}
  Sep 23 13:00:58.613: INFO: Observed event: &Service{ObjectMeta:{test-service-gbnqd  services-4980  d6d0288b-0db6-49d2-ac53-79393d599f39 21362 0 2023-09-23 13:00:58 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-23 13:00:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-23 13:00:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.234,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.234],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep 23 13:00:58.613: INFO: Found Service test-service-gbnqd in namespace services-4980 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 23 13:00:58.613: INFO: Service test-service-gbnqd has service status updated
  STEP: patching the service @ 09/23/23 13:00:58.613
  STEP: watching for the Service to be patched @ 09/23/23 13:00:58.625
  Sep 23 13:00:58.626: INFO: observed Service test-service-gbnqd in namespace services-4980 with labels: map[test-service-static:true]
  Sep 23 13:00:58.626: INFO: observed Service test-service-gbnqd in namespace services-4980 with labels: map[test-service-static:true]
  Sep 23 13:00:58.627: INFO: observed Service test-service-gbnqd in namespace services-4980 with labels: map[test-service-static:true]
  Sep 23 13:00:58.627: INFO: Found Service test-service-gbnqd in namespace services-4980 with labels: map[test-service:patched test-service-static:true]
  Sep 23 13:00:58.627: INFO: Service test-service-gbnqd patched
  STEP: deleting the service @ 09/23/23 13:00:58.627
  STEP: watching for the Service to be deleted @ 09/23/23 13:00:58.64
  Sep 23 13:00:58.642: INFO: Observed event: ADDED
  Sep 23 13:00:58.642: INFO: Observed event: MODIFIED
  Sep 23 13:00:58.642: INFO: Observed event: MODIFIED
  Sep 23 13:00:58.642: INFO: Observed event: MODIFIED
  Sep 23 13:00:58.642: INFO: Found Service test-service-gbnqd in namespace services-4980 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep 23 13:00:58.642: INFO: Service test-service-gbnqd deleted
  Sep 23 13:00:58.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4980" for this suite. @ 09/23/23 13:00:58.647
• [0.106 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/23/23 13:00:58.655
  Sep 23 13:00:58.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/23 13:00:58.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:00:58.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:00:58.674
  STEP: Performing setup for networking test in namespace pod-network-test-8562 @ 09/23/23 13:00:58.677
  STEP: creating a selector @ 09/23/23 13:00:58.677
  STEP: Creating the service pods in kubernetes @ 09/23/23 13:00:58.677
  Sep 23 13:00:58.677: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/23/23 13:01:10.764
  Sep 23 13:01:12.795: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep 23 13:01:12.796: INFO: Going to poll 192.168.20.98 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep 23 13:01:12.799: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.20.98:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8562 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:01:12.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:01:12.800: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:01:12.800: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8562/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.20.98%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:01:12.898: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 23 13:01:12.898: INFO: Going to poll 192.168.55.96 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep 23 13:01:12.902: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.55.96:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8562 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:01:12.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:01:12.903: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:01:12.903: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8562/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.55.96%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:01:13.005: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 23 13:01:13.005: INFO: Going to poll 192.168.88.204 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep 23 13:01:13.009: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.88.204:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8562 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:01:13.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:01:13.009: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:01:13.010: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8562/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.88.204%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:01:13.089: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 23 13:01:13.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8562" for this suite. @ 09/23/23 13:01:13.094
• [14.447 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/23/23 13:01:13.103
  Sep 23 13:01:13.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename endpointslice @ 09/23/23 13:01:13.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:13.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:13.123
  Sep 23 13:01:13.137: INFO: Endpoints addresses: [172.31.1.51 172.31.42.69] , ports: [6443]
  Sep 23 13:01:13.137: INFO: EndpointSlices addresses: [172.31.1.51 172.31.42.69] , ports: [6443]
  Sep 23 13:01:13.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5818" for this suite. @ 09/23/23 13:01:13.142
• [0.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/23/23 13:01:13.149
  Sep 23 13:01:13.149: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename proxy @ 09/23/23 13:01:13.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:13.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:13.17
  Sep 23 13:01:13.172: INFO: Creating pod...
  Sep 23 13:01:15.191: INFO: Creating service...
  Sep 23 13:01:15.202: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=DELETE
  Sep 23 13:01:15.211: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 23 13:01:15.211: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=OPTIONS
  Sep 23 13:01:15.216: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 23 13:01:15.216: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=PATCH
  Sep 23 13:01:15.221: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 23 13:01:15.221: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=POST
  Sep 23 13:01:15.225: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 23 13:01:15.225: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=PUT
  Sep 23 13:01:15.230: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 23 13:01:15.230: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep 23 13:01:15.237: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 23 13:01:15.237: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep 23 13:01:15.243: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 23 13:01:15.243: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep 23 13:01:15.250: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 23 13:01:15.250: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=POST
  Sep 23 13:01:15.257: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 23 13:01:15.257: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=PUT
  Sep 23 13:01:15.263: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 23 13:01:15.263: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=GET
  Sep 23 13:01:15.266: INFO: http.Client request:GET StatusCode:301
  Sep 23 13:01:15.266: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=GET
  Sep 23 13:01:15.273: INFO: http.Client request:GET StatusCode:301
  Sep 23 13:01:15.273: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/pods/agnhost/proxy?method=HEAD
  Sep 23 13:01:15.276: INFO: http.Client request:HEAD StatusCode:301
  Sep 23 13:01:15.276: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4842/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep 23 13:01:15.281: INFO: http.Client request:HEAD StatusCode:301
  Sep 23 13:01:15.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4842" for this suite. @ 09/23/23 13:01:15.286
• [2.143 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/23/23 13:01:15.293
  Sep 23 13:01:15.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 13:01:15.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:15.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:15.313
  STEP: Creating ServiceAccount "e2e-sa-7gd9n"  @ 09/23/23 13:01:15.316
  Sep 23 13:01:15.321: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7gd9n"  @ 09/23/23 13:01:15.321
  Sep 23 13:01:15.330: INFO: AutomountServiceAccountToken: true
  Sep 23 13:01:15.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2825" for this suite. @ 09/23/23 13:01:15.334
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/23/23 13:01:15.342
  Sep 23 13:01:15.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:01:15.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:15.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:15.361
  STEP: fetching services @ 09/23/23 13:01:15.364
  Sep 23 13:01:15.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9276" for this suite. @ 09/23/23 13:01:15.373
• [0.037 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/23/23 13:01:15.38
  Sep 23 13:01:15.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replicaset @ 09/23/23 13:01:15.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:15.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:15.4
  STEP: Create a Replicaset @ 09/23/23 13:01:15.407
  STEP: Verify that the required pods have come up. @ 09/23/23 13:01:15.412
  Sep 23 13:01:15.416: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 23 13:01:20.423: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/23 13:01:20.423
  STEP: Getting /status @ 09/23/23 13:01:20.423
  Sep 23 13:01:20.429: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/23/23 13:01:20.429
  Sep 23 13:01:20.440: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/23/23 13:01:20.44
  Sep 23 13:01:20.442: INFO: Observed &ReplicaSet event: ADDED
  Sep 23 13:01:20.442: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.443: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.443: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.443: INFO: Found replicaset test-rs in namespace replicaset-8589 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 23 13:01:20.443: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/23/23 13:01:20.443
  Sep 23 13:01:20.443: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 23 13:01:20.450: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/23/23 13:01:20.45
  Sep 23 13:01:20.452: INFO: Observed &ReplicaSet event: ADDED
  Sep 23 13:01:20.452: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.452: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.452: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.452: INFO: Observed replicaset test-rs in namespace replicaset-8589 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 23 13:01:20.452: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 23 13:01:20.452: INFO: Found replicaset test-rs in namespace replicaset-8589 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 23 13:01:20.452: INFO: Replicaset test-rs has a patched status
  Sep 23 13:01:20.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8589" for this suite. @ 09/23/23 13:01:20.457
• [5.084 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/23/23 13:01:20.464
  Sep 23 13:01:20.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 13:01:20.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:20.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:20.483
  Sep 23 13:01:20.486: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep 23 13:01:20.496: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 23 13:01:25.501: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/23 13:01:25.501
  Sep 23 13:01:25.501: INFO: Creating deployment "test-rolling-update-deployment"
  Sep 23 13:01:25.507: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep 23 13:01:25.514: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Sep 23 13:01:27.523: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep 23 13:01:27.527: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep 23 13:01:27.538: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e78f5e8a-3bdc-4cc3-b537-fc72c4893047",
      ResourceVersion: (string) (len=5) "21775",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831070885,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 13:01:27.544: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a017ccc-f5a1-431a-a563-61398ce66584",
      ResourceVersion: (string) (len=5) "21765",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831070885,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e78f5e8a-3bdc-4cc3-b537-fc72c4893047",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 37 38 66 35 65  38 61 2d 33 62 64 63 2d  |\"e78f5e8a-3bdc-|
              00000120  34 63 63 33 2d 62 35 33  37 2d 66 63 37 32 63 34  |4cc3-b537-fc72c4|
              00000130  38 39 33 30 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |893047\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:01:27.545: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep 23 13:01:27.545: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac2c6997-a565-4d73-a768-81982f25027d",
      ResourceVersion: (string) (len=5) "21774",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831070880,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e78f5e8a-3bdc-4cc3-b537-fc72c4893047",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 37 38 66 35 65 38  |"uid\":\"e78f5e8|
              000000b0  61 2d 33 62 64 63 2d 34  63 63 33 2d 62 35 33 37  |a-3bdc-4cc3-b537|
              000000c0  2d 66 63 37 32 63 34 38  39 33 30 34 37 5c 22 7d  |-fc72c4893047\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:01:27.551: INFO: Pod "test-rolling-update-deployment-7f5c55c64-8gtqv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-8gtqv",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-6552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7a8c927-c5ab-4d99-8f0d-93f39499037e",
      ResourceVersion: (string) (len=5) "21764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831070885,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "1a017ccc-f5a1-431a-a563-61398ce66584",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  30 31 37 63 63 63 2d 66  |d\":\"1a017ccc-f|
              00000090  35 61 31 2d 34 33 31 61  2d 61 35 36 33 2d 36 31  |5a1-431a-a563-61|
              000000a0  33 39 38 63 65 36 36 35  38 34 5c 22 7d 22 3a 7b  |398ce66584\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 39 38 5c 22 7d  |192.168.55.98\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9xcbc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9xcbc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831070885,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.55.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.55.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831070885,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831070886,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://64712be08901b643ff0ee5604b194d9a894948b98b1cc095b62178a60385eca9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:01:27.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6552" for this suite. @ 09/23/23 13:01:27.558
• [7.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/23/23 13:01:27.565
  Sep 23 13:01:27.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 13:01:27.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:27.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:27.585
  STEP: Creating secret with name secret-test-map-d268d115-ae78-40c7-b96d-d77241886f8b @ 09/23/23 13:01:27.588
  STEP: Creating a pod to test consume secrets @ 09/23/23 13:01:27.594
  STEP: Saw pod success @ 09/23/23 13:01:31.617
  Sep 23 13:01:31.621: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-secrets-d0f86bd3-4530-4530-8006-dea6c2eac59c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 13:01:31.637
  Sep 23 13:01:31.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8027" for this suite. @ 09/23/23 13:01:31.657
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/23/23 13:01:31.666
  Sep 23 13:01:31.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:01:31.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:31.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:31.686
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:01:31.689
  STEP: Saw pod success @ 09/23/23 13:01:35.715
  Sep 23 13:01:35.719: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-546513ce-343d-46f5-93d8-3e6109f39b75 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:01:35.727
  Sep 23 13:01:35.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6996" for this suite. @ 09/23/23 13:01:35.751
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/23/23 13:01:35.76
  Sep 23 13:01:35.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 13:01:35.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:35.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:35.78
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/23/23 13:01:35.805
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/23/23 13:01:35.81
  Sep 23 13:01:35.813: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:35.814: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:35.817: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:01:35.817: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 13:01:36.822: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:36.823: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:36.826: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 13:01:36.826: INFO: Node ip-172-31-33-104 is running 0 daemon pod, expected 1
  Sep 23 13:01:37.822: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:37.822: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:37.826: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 13:01:37.826: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/23/23 13:01:37.83
  Sep 23 13:01:37.845: INFO: DaemonSet pods can't tolerate node ip-172-31-1-51 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:37.845: INFO: DaemonSet pods can't tolerate node ip-172-31-42-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 23 13:01:37.848: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 23 13:01:37.848: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/23/23 13:01:37.848
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/23 13:01:38.862
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-420, will wait for the garbage collector to delete the pods @ 09/23/23 13:01:38.862
  Sep 23 13:01:38.924: INFO: Deleting DaemonSet.extensions daemon-set took: 8.076315ms
  Sep 23 13:01:39.025: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.887549ms
  Sep 23 13:01:40.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:01:40.830: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 23 13:01:40.834: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21998"},"items":null}

  Sep 23 13:01:40.838: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21998"},"items":null}

  Sep 23 13:01:40.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-420" for this suite. @ 09/23/23 13:01:40.858
• [5.105 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/23/23 13:01:40.865
  Sep 23 13:01:40.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 13:01:40.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:40.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:40.887
  Sep 23 13:01:40.925: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"dfee2e54-5181-4b53-af03-62a7e8887092", Controller:(*bool)(0xc00547d25a), BlockOwnerDeletion:(*bool)(0xc00547d25b)}}
  Sep 23 13:01:40.938: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ba6ad23c-b4b5-49e3-a7ba-806be1c83288", Controller:(*bool)(0xc00554174e), BlockOwnerDeletion:(*bool)(0xc00554174f)}}
  Sep 23 13:01:40.945: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"7b46c376-2e75-4e98-9db0-b65063ff3418", Controller:(*bool)(0xc0056ca396), BlockOwnerDeletion:(*bool)(0xc0056ca397)}}
  Sep 23 13:01:45.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5853" for this suite. @ 09/23/23 13:01:45.966
• [5.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/23/23 13:01:45.974
  Sep 23 13:01:45.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/23 13:01:45.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:45.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:46.001
  STEP: Waiting for pod completion @ 09/23/23 13:01:46.014
  Sep 23 13:01:50.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5773" for this suite. @ 09/23/23 13:01:50.045
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/23/23 13:01:50.053
  Sep 23 13:01:50.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:01:50.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:50.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:50.072
  STEP: Creating configMap with name projected-configmap-test-volume-f39d37c3-2b97-4525-913b-e171ad1b962d @ 09/23/23 13:01:50.075
  STEP: Creating a pod to test consume configMaps @ 09/23/23 13:01:50.08
  STEP: Saw pod success @ 09/23/23 13:01:54.102
  Sep 23 13:01:54.105: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-configmaps-3f30981b-f85a-4730-938f-792644de5609 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:01:54.113
  Sep 23 13:01:54.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4894" for this suite. @ 09/23/23 13:01:54.137
• [4.092 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/23/23 13:01:54.145
  Sep 23 13:01:54.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename security-context @ 09/23/23 13:01:54.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:54.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:54.165
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/23/23 13:01:54.168
  STEP: Saw pod success @ 09/23/23 13:01:58.195
  Sep 23 13:01:58.199: INFO: Trying to get logs from node ip-172-31-77-156 pod security-context-e47209c0-7e22-4dcd-b76f-54569ebef29f container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:01:58.207
  Sep 23 13:01:58.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-704" for this suite. @ 09/23/23 13:01:58.227
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/23/23 13:01:58.235
  Sep 23 13:01:58.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 13:01:58.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:01:58.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:01:58.254
  Sep 23 13:01:58.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  W0923 13:02:00.798933      22 warnings.go:70] unknown field "alpha"
  W0923 13:02:00.798951      22 warnings.go:70] unknown field "beta"
  W0923 13:02:00.798956      22 warnings.go:70] unknown field "delta"
  W0923 13:02:00.798961      22 warnings.go:70] unknown field "epsilon"
  W0923 13:02:00.798965      22 warnings.go:70] unknown field "gamma"
  Sep 23 13:02:01.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-419" for this suite. @ 09/23/23 13:02:01.369
• [3.142 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/23/23 13:02:01.377
  Sep 23 13:02:01.377: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename init-container @ 09/23/23 13:02:01.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:02:01.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:02:01.398
  STEP: creating the pod @ 09/23/23 13:02:01.401
  Sep 23 13:02:01.401: INFO: PodSpec: initContainers in spec.initContainers
  Sep 23 13:02:05.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4925" for this suite. @ 09/23/23 13:02:05.682
• [4.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/23/23 13:02:05.691
  Sep 23 13:02:05.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename events @ 09/23/23 13:02:05.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:02:05.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:02:05.712
  STEP: Create set of events @ 09/23/23 13:02:05.715
  Sep 23 13:02:05.721: INFO: created test-event-1
  Sep 23 13:02:05.725: INFO: created test-event-2
  Sep 23 13:02:05.730: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/23/23 13:02:05.73
  STEP: delete collection of events @ 09/23/23 13:02:05.733
  Sep 23 13:02:05.733: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/23/23 13:02:05.759
  Sep 23 13:02:05.759: INFO: requesting list of events to confirm quantity
  Sep 23 13:02:05.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7612" for this suite. @ 09/23/23 13:02:05.766
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/23/23 13:02:05.776
  Sep 23 13:02:05.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 13:02:05.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:02:05.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:02:05.798
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/23 13:02:05.801
  Sep 23 13:02:05.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9516 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 23 13:02:05.864: INFO: stderr: ""
  Sep 23 13:02:05.864: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/23/23 13:02:05.864
  Sep 23 13:02:05.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9516 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep 23 13:02:05.928: INFO: stderr: ""
  Sep 23 13:02:05.928: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/23/23 13:02:05.928
  Sep 23 13:02:05.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9516 delete pods e2e-test-httpd-pod'
  Sep 23 13:02:07.500: INFO: stderr: ""
  Sep 23 13:02:07.500: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 23 13:02:07.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9516" for this suite. @ 09/23/23 13:02:07.505
• [1.736 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/23/23 13:02:07.513
  Sep 23 13:02:07.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename endpointslice @ 09/23/23 13:02:07.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:02:07.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:02:07.534
  STEP: getting /apis @ 09/23/23 13:02:07.537
  STEP: getting /apis/discovery.k8s.io @ 09/23/23 13:02:07.541
  STEP: getting /apis/discovery.k8s.iov1 @ 09/23/23 13:02:07.542
  STEP: creating @ 09/23/23 13:02:07.543
  STEP: getting @ 09/23/23 13:02:07.557
  STEP: listing @ 09/23/23 13:02:07.561
  STEP: watching @ 09/23/23 13:02:07.565
  Sep 23 13:02:07.565: INFO: starting watch
  STEP: cluster-wide listing @ 09/23/23 13:02:07.566
  STEP: cluster-wide watching @ 09/23/23 13:02:07.57
  Sep 23 13:02:07.570: INFO: starting watch
  STEP: patching @ 09/23/23 13:02:07.571
  STEP: updating @ 09/23/23 13:02:07.577
  Sep 23 13:02:07.586: INFO: waiting for watch events with expected annotations
  Sep 23 13:02:07.586: INFO: saw patched and updated annotations
  STEP: deleting @ 09/23/23 13:02:07.586
  STEP: deleting a collection @ 09/23/23 13:02:07.6
  Sep 23 13:02:07.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9430" for this suite. @ 09/23/23 13:02:07.622
• [0.116 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/23/23 13:02:07.629
  Sep 23 13:02:07.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/23 13:02:07.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:02:07.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:02:07.651
  Sep 23 13:02:07.668: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 23 13:03:07.692: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/23/23 13:03:07.696
  Sep 23 13:03:07.717: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 23 13:03:07.723: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 23 13:03:07.739: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 23 13:03:07.747: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 23 13:03:07.764: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 23 13:03:07.770: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/23/23 13:03:07.771
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/23/23 13:03:09.8
  Sep 23 13:03:13.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8969" for this suite. @ 09/23/23 13:03:13.913
• [66.290 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/23/23 13:03:13.919
  Sep 23 13:03:13.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/23 13:03:13.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:03:13.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:03:13.941
  Sep 23 13:03:17.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8612" for this suite. @ 09/23/23 13:03:17.97
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/23/23 13:03:17.979
  Sep 23 13:03:17.979: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename containers @ 09/23/23 13:03:17.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:03:17.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:03:17.999
  STEP: Creating a pod to test override arguments @ 09/23/23 13:03:18.002
  STEP: Saw pod success @ 09/23/23 13:03:22.027
  Sep 23 13:03:22.031: INFO: Trying to get logs from node ip-172-31-77-156 pod client-containers-967050c7-6ddc-4be0-92fb-88eb0620ed90 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:03:22.039
  Sep 23 13:03:22.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-40" for this suite. @ 09/23/23 13:03:22.058
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/23/23 13:03:22.067
  Sep 23 13:03:22.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 13:03:22.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:03:22.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:03:22.089
  STEP: Discovering how many secrets are in namespace by default @ 09/23/23 13:03:22.092
  STEP: Counting existing ResourceQuota @ 09/23/23 13:03:27.097
  STEP: Creating a ResourceQuota @ 09/23/23 13:03:32.101
  STEP: Ensuring resource quota status is calculated @ 09/23/23 13:03:32.107
  STEP: Creating a Secret @ 09/23/23 13:03:34.112
  STEP: Ensuring resource quota status captures secret creation @ 09/23/23 13:03:34.123
  STEP: Deleting a secret @ 09/23/23 13:03:36.128
  STEP: Ensuring resource quota status released usage @ 09/23/23 13:03:36.135
  Sep 23 13:03:38.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6504" for this suite. @ 09/23/23 13:03:38.146
• [16.087 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/23/23 13:03:38.154
  Sep 23 13:03:38.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:03:38.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:03:38.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:03:38.175
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/23/23 13:03:38.178
  STEP: Saw pod success @ 09/23/23 13:03:42.204
  Sep 23 13:03:42.209: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-3aa2f4a2-cd68-4093-b24f-751314b53696 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:03:42.217
  Sep 23 13:03:42.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5377" for this suite. @ 09/23/23 13:03:42.236
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/23/23 13:03:42.244
  Sep 23 13:03:42.244: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 13:03:42.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:03:42.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:03:42.265
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/23/23 13:03:42.268
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/23/23 13:03:42.268
  STEP: creating a pod to probe DNS @ 09/23/23 13:03:42.268
  STEP: submitting the pod to kubernetes @ 09/23/23 13:03:42.268
  STEP: retrieving the pod @ 09/23/23 13:03:44.289
  STEP: looking for the results for each expected name from probers @ 09/23/23 13:03:44.293
  Sep 23 13:03:44.315: INFO: DNS probes using dns-1097/dns-test-03065456-d31d-4570-b27f-3013e6dedda9 succeeded

  Sep 23 13:03:44.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:03:44.319
  STEP: Destroying namespace "dns-1097" for this suite. @ 09/23/23 13:03:44.331
• [2.094 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/23/23 13:03:44.338
  Sep 23 13:03:44.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-pred @ 09/23/23 13:03:44.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:03:44.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:03:44.358
  Sep 23 13:03:44.361: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 23 13:03:44.369: INFO: Waiting for terminating namespaces to be deleted...
  Sep 23 13:03:44.373: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-104 before test
  Sep 23 13:03:44.379: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5mp42 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: nginx-ingress-controller-kubernetes-worker-4q5pn from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:48 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: calico-kube-controllers-787f44f89c-8smff from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: calico-node-qk2dv from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: coredns-59cfb5bf46-49k5p from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container coredns ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: kube-state-metrics-775d9f4f79-c6pt8 from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: metrics-server-v0.6.3-69d7fbfdf8-c8fkg from kube-system started at 2023-09-23 12:00:47 +0000 UTC (2 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: dashboard-metrics-scraper-5dd7cb5fc-jbtp9 from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: kubernetes-dashboard-7b899cb9d9-cwmjh from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-wpzt8 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:03:44.379: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 13:03:44.379: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-77-156 before test
  Sep 23 13:03:44.385: INFO: nginx-ingress-controller-kubernetes-worker-xvcbm from ingress-nginx-kubernetes-worker started at 2023-09-23 12:38:20 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.385: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:03:44.385: INFO: calico-node-z8495 from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.385: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:03:44.385: INFO: sonobuoy from sonobuoy started at 2023-09-23 12:09:14 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.385: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 23 13:03:44.385: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-l6pp5 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:03:44.385: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:03:44.385: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 13:03:44.385: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-196 before test
  Sep 23 13:03:44.391: INFO: nginx-ingress-controller-kubernetes-worker-jcv67 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:02:23 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.391: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:03:44.391: INFO: calico-node-knkkv from kube-system started at 2023-09-23 12:02:04 +0000 UTC (1 container statuses recorded)
  Sep 23 13:03:44.391: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:03:44.391: INFO: sonobuoy-e2e-job-68378cf9dc5e499f from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:03:44.391: INFO: 	Container e2e ready: true, restart count 0
  Sep 23 13:03:44.391: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:03:44.391: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-lfvtl from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:03:44.391: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:03:44.391: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/23/23 13:03:44.391
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/23/23 13:03:46.419
  STEP: Trying to apply a random label on the found node. @ 09/23/23 13:03:46.435
  STEP: verifying the node has the label kubernetes.io/e2e-5e4d5ebf-ca87-4ebd-9d9a-fe3e7b1192f6 95 @ 09/23/23 13:03:46.443
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/23/23 13:03:46.447
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.77.156 on the node which pod4 resides and expect not scheduled @ 09/23/23 13:03:48.463
  STEP: removing the label kubernetes.io/e2e-5e4d5ebf-ca87-4ebd-9d9a-fe3e7b1192f6 off the node ip-172-31-77-156 @ 09/23/23 13:08:48.471
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5e4d5ebf-ca87-4ebd-9d9a-fe3e7b1192f6 @ 09/23/23 13:08:48.485
  Sep 23 13:08:48.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6640" for this suite. @ 09/23/23 13:08:48.495
• [304.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/23/23 13:08:48.503
  Sep 23 13:08:48.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename containers @ 09/23/23 13:08:48.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:08:48.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:08:48.526
  STEP: Creating a pod to test override all @ 09/23/23 13:08:48.529
  STEP: Saw pod success @ 09/23/23 13:08:52.552
  Sep 23 13:08:52.556: INFO: Trying to get logs from node ip-172-31-77-156 pod client-containers-f7ed873b-d4a3-46e7-820d-a17ac0ca5946 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:08:52.576
  Sep 23 13:08:52.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9219" for this suite. @ 09/23/23 13:08:52.6
• [4.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/23/23 13:08:52.609
  Sep 23 13:08:52.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:08:52.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:08:52.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:08:52.632
  STEP: Creating a pod to test downward api env vars @ 09/23/23 13:08:52.636
  STEP: Saw pod success @ 09/23/23 13:08:56.664
  Sep 23 13:08:56.668: INFO: Trying to get logs from node ip-172-31-77-156 pod downward-api-2e9d3587-29cc-43f9-a960-6fadd217ab74 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:08:56.677
  Sep 23 13:08:56.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4699" for this suite. @ 09/23/23 13:08:56.701
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/23/23 13:08:56.71
  Sep 23 13:08:56.710: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:08:56.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:08:56.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:08:56.73
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/23/23 13:08:56.733
  STEP: Saw pod success @ 09/23/23 13:09:00.758
  Sep 23 13:09:00.762: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-b330d53a-6a3b-41f1-a65d-3d753a19ed53 container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:09:00.77
  Sep 23 13:09:00.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6343" for this suite. @ 09/23/23 13:09:00.792
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/23/23 13:09:00.8
  Sep 23 13:09:00.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:09:00.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:09:00.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:09:00.82
  STEP: Creating a pod to test downward api env vars @ 09/23/23 13:09:00.823
  STEP: Saw pod success @ 09/23/23 13:09:04.848
  Sep 23 13:09:04.852: INFO: Trying to get logs from node ip-172-31-77-156 pod downward-api-41179a45-df73-4241-b514-0f540da89a6c container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:09:04.861
  Sep 23 13:09:04.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-259" for this suite. @ 09/23/23 13:09:04.881
• [4.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/23/23 13:09:04.888
  Sep 23 13:09:04.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 13:09:04.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:09:04.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:09:04.908
  STEP: Creating pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674 @ 09/23/23 13:09:04.911
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 13:09:06.928
  Sep 23 13:09:06.932: INFO: Initial restart count of pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 is 0
  Sep 23 13:09:06.936: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:08.941: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:10.947: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:12.951: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:14.957: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:16.963: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:18.969: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:20.974: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:22.979: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:24.986: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:26.992: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:28.997: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:31.001: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:33.007: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:35.012: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:37.018: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:39.022: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:41.027: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:43.033: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:45.039: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:47.044: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:49.048: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:51.054: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:53.059: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:55.064: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:57.069: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:09:59.073: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:01.079: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:03.084: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:05.089: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:07.095: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:09.100: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:11.105: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:13.109: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:15.116: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:17.121: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:19.127: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:21.132: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:23.137: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:25.143: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:27.148: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:29.153: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:31.159: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:33.164: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:35.169: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:37.174: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:39.179: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:41.184: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:43.188: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:45.194: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:47.199: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:49.205: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:51.210: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:53.216: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:55.221: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:57.226: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:10:59.231: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:01.237: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:03.242: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:05.248: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:07.253: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:09.258: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:11.264: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:13.269: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:15.274: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:17.279: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:19.285: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:21.290: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:23.294: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:25.300: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:27.305: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:29.310: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:31.316: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:33.321: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:35.327: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:37.332: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:39.337: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:41.341: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:43.347: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:45.353: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:47.359: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:49.364: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:51.368: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:53.373: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:55.379: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:57.385: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:11:59.390: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:01.395: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:03.400: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:05.404: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:07.410: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:09.414: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:11.420: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:13.424: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:15.430: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:17.435: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:19.439: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:21.445: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:23.450: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:25.456: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:27.461: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:29.466: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:31.472: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:33.477: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:35.484: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:37.490: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:39.495: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:41.501: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:43.506: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:45.512: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:47.517: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:49.523: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:51.530: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:53.535: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:55.541: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:57.547: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:12:59.553: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:13:01.558: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:13:03.564: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:13:05.570: INFO: Get pod liveness-d64a5ec1-159e-4ee4-adb9-be7d500a6fd7 in namespace container-probe-1674
  Sep 23 13:13:07.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:13:07.576
  STEP: Destroying namespace "container-probe-1674" for this suite. @ 09/23/23 13:13:07.592
• [242.712 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/23/23 13:13:07.601
  Sep 23 13:13:07.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:13:07.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:07.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:07.624
  STEP: Setting up server cert @ 09/23/23 13:13:07.647
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:13:08.031
  STEP: Deploying the webhook pod @ 09/23/23 13:13:08.041
  STEP: Wait for the deployment to be ready @ 09/23/23 13:13:08.053
  Sep 23 13:13:08.062: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 13:13:10.075
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:13:10.086
  Sep 23 13:13:11.086: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/23/23 13:13:11.094
  STEP: create a configmap that should be updated by the webhook @ 09/23/23 13:13:11.11
  Sep 23 13:13:11.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6160" for this suite. @ 09/23/23 13:13:11.177
  STEP: Destroying namespace "webhook-markers-4845" for this suite. @ 09/23/23 13:13:11.184
• [3.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/23/23 13:13:11.193
  Sep 23 13:13:11.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 13:13:11.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:11.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:11.213
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/23/23 13:13:11.216
  Sep 23 13:13:11.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:13:12.602: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:13:17.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8811" for this suite. @ 09/23/23 13:13:17.897
• [6.711 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/23/23 13:13:17.904
  Sep 23 13:13:17.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:13:17.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:17.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:17.923
  STEP: Setting up server cert @ 09/23/23 13:13:17.941
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:13:18.452
  STEP: Deploying the webhook pod @ 09/23/23 13:13:18.461
  STEP: Wait for the deployment to be ready @ 09/23/23 13:13:18.475
  Sep 23 13:13:18.482: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 13:13:20.495
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:13:20.507
  Sep 23 13:13:21.507: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/23/23 13:13:21.574
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/23 13:13:21.607
  STEP: Deleting the collection of validation webhooks @ 09/23/23 13:13:21.634
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/23 13:13:21.694
  Sep 23 13:13:21.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5202" for this suite. @ 09/23/23 13:13:21.742
  STEP: Destroying namespace "webhook-markers-9093" for this suite. @ 09/23/23 13:13:21.751
• [3.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/23/23 13:13:21.763
  Sep 23 13:13:21.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/23/23 13:13:21.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:21.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:21.778
  Sep 23 13:13:23.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/23/23 13:13:23.814
  STEP: Cleaning up the configmap @ 09/23/23 13:13:23.822
  STEP: Cleaning up the pod @ 09/23/23 13:13:23.829
  STEP: Destroying namespace "emptydir-wrapper-9119" for this suite. @ 09/23/23 13:13:23.842
• [2.087 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/23/23 13:13:23.85
  Sep 23 13:13:23.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:13:23.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:23.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:23.865
  STEP: creating service in namespace services-9360 @ 09/23/23 13:13:23.867
  STEP: creating service affinity-nodeport-transition in namespace services-9360 @ 09/23/23 13:13:23.868
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9360 @ 09/23/23 13:13:23.88
  I0923 13:13:23.886212      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9360, replica count: 3
  I0923 13:13:26.938618      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 13:13:26.950: INFO: Creating new exec pod
  Sep 23 13:13:29.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9360 exec execpod-affinitysxgql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep 23 13:13:30.135: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep 23 13:13:30.135: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:13:30.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9360 exec execpod-affinitysxgql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.143 80'
  Sep 23 13:13:30.297: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.143 80\nConnection to 10.152.183.143 80 port [tcp/http] succeeded!\n"
  Sep 23 13:13:30.297: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:13:30.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9360 exec execpod-affinitysxgql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.84.196 30385'
  Sep 23 13:13:30.440: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.84.196 30385\nConnection to 172.31.84.196 30385 port [tcp/*] succeeded!\n"
  Sep 23 13:13:30.440: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:13:30.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9360 exec execpod-affinitysxgql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.77.156 30385'
  Sep 23 13:13:30.597: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.77.156 30385\nConnection to 172.31.77.156 30385 port [tcp/*] succeeded!\n"
  Sep 23 13:13:30.597: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:13:30.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9360 exec execpod-affinitysxgql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.33.104:30385/ ; done'
  Sep 23 13:13:30.855: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n"
  Sep 23 13:13:30.855: INFO: stdout: "\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-j7dgg\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-j7dgg\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-82gtz\naffinity-nodeport-transition-vqv7k"
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-j7dgg
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-j7dgg
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-82gtz
  Sep 23 13:13:30.855: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:30.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-9360 exec execpod-affinitysxgql -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.33.104:30385/ ; done'
  Sep 23 13:13:31.118: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.33.104:30385/\n"
  Sep 23 13:13:31.118: INFO: stdout: "\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k\naffinity-nodeport-transition-vqv7k"
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Received response from host: affinity-nodeport-transition-vqv7k
  Sep 23 13:13:31.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:13:31.123: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9360, will wait for the garbage collector to delete the pods @ 09/23/23 13:13:31.135
  Sep 23 13:13:31.196: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.614582ms
  Sep 23 13:13:31.297: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.998799ms
  STEP: Destroying namespace "services-9360" for this suite. @ 09/23/23 13:13:33.922
• [10.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/23/23 13:13:33.929
  Sep 23 13:13:33.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:13:33.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:33.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:33.946
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:13:33.949
  STEP: Saw pod success @ 09/23/23 13:13:37.972
  Sep 23 13:13:37.976: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-443eb54c-ab67-4ed2-84af-e8532abcfda7 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:13:37.99
  Sep 23 13:13:38.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4569" for this suite. @ 09/23/23 13:13:38.008
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/23/23 13:13:38.019
  Sep 23 13:13:38.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename security-context-test @ 09/23/23 13:13:38.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:38.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:38.034
  Sep 23 13:13:42.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4873" for this suite. @ 09/23/23 13:13:42.071
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/23/23 13:13:42.078
  Sep 23 13:13:42.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:13:42.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:42.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:42.096
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/23/23 13:13:42.098
  STEP: Saw pod success @ 09/23/23 13:13:46.121
  Sep 23 13:13:46.125: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-b7ee7bf6-04bd-49c7-8d3a-cf1c2c6655db container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:13:46.133
  Sep 23 13:13:46.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5510" for this suite. @ 09/23/23 13:13:46.153
• [4.083 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/23/23 13:13:46.161
  Sep 23 13:13:46.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename daemonsets @ 09/23/23 13:13:46.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:46.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:46.177
  Sep 23 13:13:46.199: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/23/23 13:13:46.204
  Sep 23 13:13:46.208: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:46.208: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/23/23 13:13:46.208
  Sep 23 13:13:46.234: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:46.234: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 13:13:47.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:47.239: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 13:13:48.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 13:13:48.239: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/23/23 13:13:48.243
  Sep 23 13:13:48.259: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 13:13:48.259: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Sep 23 13:13:49.264: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:49.264: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/23/23 13:13:49.264
  Sep 23 13:13:49.276: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:49.276: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 13:13:50.281: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:50.281: INFO: Node ip-172-31-77-156 is running 0 daemon pod, expected 1
  Sep 23 13:13:51.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 23 13:13:51.280: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/23/23 13:13:51.287
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-477, will wait for the garbage collector to delete the pods @ 09/23/23 13:13:51.287
  Sep 23 13:13:51.347: INFO: Deleting DaemonSet.extensions daemon-set took: 6.354342ms
  Sep 23 13:13:51.447: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.410891ms
  Sep 23 13:13:52.751: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 23 13:13:52.751: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 23 13:13:52.754: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24874"},"items":null}

  Sep 23 13:13:52.757: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24874"},"items":null}

  Sep 23 13:13:52.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-477" for this suite. @ 09/23/23 13:13:52.783
• [6.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/23/23 13:13:52.791
  Sep 23 13:13:52.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 13:13:52.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:13:52.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:13:52.806
  STEP: Creating a test headless service @ 09/23/23 13:13:52.81
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4225 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4225;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4225 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4225;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4225.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4225.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4225.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4225.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4225.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4225.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4225.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4225.svc;check="$$(dig +notcp +noall +answer +search 222.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.222_udp@PTR;check="$$(dig +tcp +noall +answer +search 222.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.222_tcp@PTR;sleep 1; done
   @ 09/23/23 13:13:52.827
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4225 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4225;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4225 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4225;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4225.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4225.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4225.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4225.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4225.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4225.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4225.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4225.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4225.svc;check="$$(dig +notcp +noall +answer +search 222.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.222_udp@PTR;check="$$(dig +tcp +noall +answer +search 222.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.222_tcp@PTR;sleep 1; done
   @ 09/23/23 13:13:52.827
  STEP: creating a pod to probe DNS @ 09/23/23 13:13:52.827
  STEP: submitting the pod to kubernetes @ 09/23/23 13:13:52.827
  STEP: retrieving the pod @ 09/23/23 13:13:54.849
  STEP: looking for the results for each expected name from probers @ 09/23/23 13:13:54.853
  Sep 23 13:13:54.857: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.860: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.865: INFO: Unable to read wheezy_udp@dns-test-service.dns-4225 from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.868: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4225 from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.872: INFO: Unable to read wheezy_udp@dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.876: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.879: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.883: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.903: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.906: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.910: INFO: Unable to read jessie_udp@dns-test-service.dns-4225 from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.914: INFO: Unable to read jessie_tcp@dns-test-service.dns-4225 from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.918: INFO: Unable to read jessie_udp@dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.925: INFO: Unable to read jessie_tcp@dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.928: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.932: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4225.svc from pod dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44: the server could not find the requested resource (get pods dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44)
  Sep 23 13:13:54.947: INFO: Lookups using dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4225 wheezy_tcp@dns-test-service.dns-4225 wheezy_udp@dns-test-service.dns-4225.svc wheezy_tcp@dns-test-service.dns-4225.svc wheezy_udp@_http._tcp.dns-test-service.dns-4225.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4225.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4225 jessie_tcp@dns-test-service.dns-4225 jessie_udp@dns-test-service.dns-4225.svc jessie_tcp@dns-test-service.dns-4225.svc jessie_udp@_http._tcp.dns-test-service.dns-4225.svc jessie_tcp@_http._tcp.dns-test-service.dns-4225.svc]

  Sep 23 13:13:54.958: INFO: Pod client logs for webserver: 
  Sep 23 13:13:54.967: INFO: Pod client logs for querier: 
  Sep 23 13:13:54.976: INFO: Pod client logs for jessie-querier: 
  Sep 23 13:14:00.072: INFO: DNS probes using dns-4225/dns-test-e21fbd7b-d619-4730-9555-4a968d81ef44 succeeded

  Sep 23 13:14:00.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:14:00.076
  STEP: deleting the test service @ 09/23/23 13:14:00.089
  STEP: deleting the test headless service @ 09/23/23 13:14:00.112
  STEP: Destroying namespace "dns-4225" for this suite. @ 09/23/23 13:14:00.122
• [7.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/23/23 13:14:00.131
  Sep 23 13:14:00.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 13:14:00.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:14:00.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:14:00.151
  STEP: Counting existing ResourceQuota @ 09/23/23 13:14:17.157
  STEP: Creating a ResourceQuota @ 09/23/23 13:14:22.163
  STEP: Ensuring resource quota status is calculated @ 09/23/23 13:14:22.168
  STEP: Creating a ConfigMap @ 09/23/23 13:14:24.173
  STEP: Ensuring resource quota status captures configMap creation @ 09/23/23 13:14:24.184
  STEP: Deleting a ConfigMap @ 09/23/23 13:14:26.189
  STEP: Ensuring resource quota status released usage @ 09/23/23 13:14:26.197
  Sep 23 13:14:28.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1220" for this suite. @ 09/23/23 13:14:28.206
• [28.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/23/23 13:14:28.213
  Sep 23 13:14:28.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/23/23 13:14:28.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:14:28.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:14:28.229
  STEP: create the container to handle the HTTPGet hook request. @ 09/23/23 13:14:28.236
  STEP: create the pod with lifecycle hook @ 09/23/23 13:14:30.258
  STEP: delete the pod with lifecycle hook @ 09/23/23 13:14:32.277
  STEP: check prestop hook @ 09/23/23 13:14:34.294
  Sep 23 13:14:34.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4932" for this suite. @ 09/23/23 13:14:34.315
• [6.109 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/23/23 13:14:34.322
  Sep 23 13:14:34.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:14:34.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:14:34.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:14:34.34
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:14:34.343
  STEP: Saw pod success @ 09/23/23 13:14:38.367
  Sep 23 13:14:38.371: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-34f07e49-30ab-428d-a214-5f7ae2390c3b container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:14:38.377
  Sep 23 13:14:38.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-974" for this suite. @ 09/23/23 13:14:38.399
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/23/23 13:14:38.408
  Sep 23 13:14:38.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:14:38.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:14:38.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:14:38.428
  STEP: Setting up server cert @ 09/23/23 13:14:38.447
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:14:38.608
  STEP: Deploying the webhook pod @ 09/23/23 13:14:38.616
  STEP: Wait for the deployment to be ready @ 09/23/23 13:14:38.627
  Sep 23 13:14:38.637: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 13:14:40.649
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:14:40.661
  Sep 23 13:14:41.661: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/23/23 13:14:41.67
  STEP: create a namespace for the webhook @ 09/23/23 13:14:41.684
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/23/23 13:14:41.696
  Sep 23 13:14:41.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2900" for this suite. @ 09/23/23 13:14:41.756
  STEP: Destroying namespace "webhook-markers-5770" for this suite. @ 09/23/23 13:14:41.762
  STEP: Destroying namespace "fail-closed-namespace-1239" for this suite. @ 09/23/23 13:14:41.77
• [3.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/23/23 13:14:41.777
  Sep 23 13:14:41.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replicaset @ 09/23/23 13:14:41.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:14:41.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:14:41.793
  Sep 23 13:14:41.796: INFO: Creating ReplicaSet my-hostname-basic-30592889-2a44-4d38-8fdd-b7e3cfcbe52f
  Sep 23 13:14:41.805: INFO: Pod name my-hostname-basic-30592889-2a44-4d38-8fdd-b7e3cfcbe52f: Found 0 pods out of 1
  Sep 23 13:14:46.813: INFO: Pod name my-hostname-basic-30592889-2a44-4d38-8fdd-b7e3cfcbe52f: Found 1 pods out of 1
  Sep 23 13:14:46.813: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-30592889-2a44-4d38-8fdd-b7e3cfcbe52f" is running
  Sep 23 13:14:46.818: INFO: Pod "my-hostname-basic-30592889-2a44-4d38-8fdd-b7e3cfcbe52f-6cr96" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 13:14:41 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 13:14:42 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 13:14:42 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-23 13:14:41 +0000 UTC Reason: Message:}])
  Sep 23 13:14:46.818: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/23/23 13:14:46.818
  Sep 23 13:14:46.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6916" for this suite. @ 09/23/23 13:14:46.837
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/23/23 13:14:46.845
  Sep 23 13:14:46.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 13:14:46.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:14:46.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:14:46.86
  STEP: Creating service test in namespace statefulset-6467 @ 09/23/23 13:14:46.863
  STEP: Creating a new StatefulSet @ 09/23/23 13:14:46.867
  Sep 23 13:14:46.879: INFO: Found 0 stateful pods, waiting for 3
  Sep 23 13:14:56.886: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 13:14:56.886: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 13:14:56.886: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/23/23 13:14:56.897
  Sep 23 13:14:56.916: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/23/23 13:14:56.916
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/23/23 13:15:06.934
  STEP: Performing a canary update @ 09/23/23 13:15:06.934
  Sep 23 13:15:06.954: INFO: Updating stateful set ss2
  Sep 23 13:15:06.964: INFO: Waiting for Pod statefulset-6467/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/23/23 13:15:16.975
  Sep 23 13:15:17.006: INFO: Found 1 stateful pods, waiting for 3
  Sep 23 13:15:27.012: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 13:15:27.012: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 13:15:27.012: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/23/23 13:15:27.02
  Sep 23 13:15:27.040: INFO: Updating stateful set ss2
  Sep 23 13:15:27.050: INFO: Waiting for Pod statefulset-6467/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 23 13:15:37.080: INFO: Updating stateful set ss2
  Sep 23 13:15:37.091: INFO: Waiting for StatefulSet statefulset-6467/ss2 to complete update
  Sep 23 13:15:37.091: INFO: Waiting for Pod statefulset-6467/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 23 13:15:47.104: INFO: Deleting all statefulset in ns statefulset-6467
  Sep 23 13:15:47.107: INFO: Scaling statefulset ss2 to 0
  Sep 23 13:15:57.125: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 13:15:57.129: INFO: Deleting statefulset ss2
  Sep 23 13:15:57.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6467" for this suite. @ 09/23/23 13:15:57.145
• [70.309 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/23/23 13:15:57.154
  Sep 23 13:15:57.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 13:15:57.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:15:57.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:15:57.17
  STEP: Creating pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417 @ 09/23/23 13:15:57.173
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 13:15:59.191
  Sep 23 13:15:59.195: INFO: Initial restart count of pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 is 0
  Sep 23 13:15:59.198: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:01.204: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:03.209: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:05.214: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:07.219: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:09.224: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:11.229: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:13.234: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:15.239: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:17.245: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:19.250: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:21.255: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:23.259: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:25.263: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:27.267: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:29.273: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:31.278: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:33.283: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:35.288: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:37.294: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:39.298: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:41.303: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:43.308: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:45.313: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:47.319: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:49.324: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:51.328: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:53.334: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:55.338: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:57.343: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:16:59.348: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:01.353: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:03.358: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:05.362: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:07.367: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:09.372: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:11.377: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:13.381: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:15.387: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:17.392: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:19.398: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:21.403: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:23.408: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:25.412: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:27.417: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:29.423: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:31.430: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:33.433: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:35.437: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:37.443: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:39.448: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:41.452: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:43.457: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:45.463: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:47.468: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:49.473: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:51.478: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:53.484: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:55.490: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:57.495: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:17:59.499: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:01.504: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:03.509: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:05.513: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:07.518: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:09.524: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:11.529: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:13.534: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:15.540: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:17.544: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:19.549: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:21.555: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:23.560: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:25.565: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:27.570: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:29.575: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:31.580: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:33.584: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:35.588: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:37.594: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:39.598: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:41.603: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:43.608: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:45.614: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:47.618: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:49.624: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:51.628: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:53.634: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:55.640: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:57.647: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:18:59.652: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:01.656: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:03.660: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:05.664: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:07.669: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:09.675: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:11.680: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:13.685: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:15.691: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:17.697: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:19.702: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:21.707: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:23.712: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:25.716: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:27.723: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:29.728: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:31.733: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:33.738: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:35.743: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:37.747: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:39.752: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:41.757: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:43.762: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:45.767: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:47.772: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:49.777: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:51.782: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:53.788: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:55.793: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:57.798: INFO: Get pod test-grpc-7539a614-16c7-4843-a760-4df245f90742 in namespace container-probe-3417
  Sep 23 13:19:59.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:19:59.804
  STEP: Destroying namespace "container-probe-3417" for this suite. @ 09/23/23 13:19:59.819
• [242.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/23/23 13:19:59.828
  Sep 23 13:19:59.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:19:59.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:19:59.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:19:59.844
  STEP: Creating configMap with name projected-configmap-test-volume-e92c9ce7-9790-4478-8877-74f9f1eae628 @ 09/23/23 13:19:59.846
  STEP: Creating a pod to test consume configMaps @ 09/23/23 13:19:59.85
  STEP: Saw pod success @ 09/23/23 13:20:03.871
  Sep 23 13:20:03.874: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-configmaps-a88696de-584d-4cfe-9b57-24080926837f container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 13:20:03.892
  Sep 23 13:20:03.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9045" for this suite. @ 09/23/23 13:20:03.914
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/23/23 13:20:03.922
  Sep 23 13:20:03.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:20:03.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:20:03.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:20:03.937
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:20:03.94
  STEP: Saw pod success @ 09/23/23 13:20:07.964
  Sep 23 13:20:07.968: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-d93caa9f-84c1-44bd-bc7e-ca9f54041914 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:20:07.974
  Sep 23 13:20:07.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6075" for this suite. @ 09/23/23 13:20:07.996
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/23/23 13:20:08.004
  Sep 23 13:20:08.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 13:20:08.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:20:08.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:20:08.022
  STEP: Creating service test in namespace statefulset-1135 @ 09/23/23 13:20:08.025
  STEP: Creating stateful set ss in namespace statefulset-1135 @ 09/23/23 13:20:08.03
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1135 @ 09/23/23 13:20:08.038
  Sep 23 13:20:08.041: INFO: Found 0 stateful pods, waiting for 1
  Sep 23 13:20:18.048: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/23/23 13:20:18.048
  Sep 23 13:20:18.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 13:20:18.200: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 13:20:18.200: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 13:20:18.200: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 13:20:18.205: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep 23 13:20:28.210: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 13:20:28.210: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 23 13:20:28.226: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Sep 23 13:20:28.226: INFO: ss-0  ip-172-31-77-156  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:08 +0000 UTC  }]
  Sep 23 13:20:28.226: INFO: 
  Sep 23 13:20:28.226: INFO: StatefulSet ss has not reached scale 3, at 1
  Sep 23 13:20:29.230: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996667682s
  Sep 23 13:20:30.234: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.99252053s
  Sep 23 13:20:31.240: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988444363s
  Sep 23 13:20:32.244: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982800165s
  Sep 23 13:20:33.249: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978192879s
  Sep 23 13:20:34.254: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.973409987s
  Sep 23 13:20:35.260: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967933054s
  Sep 23 13:20:36.264: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962805796s
  Sep 23 13:20:37.268: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.559539ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1135 @ 09/23/23 13:20:38.268
  Sep 23 13:20:38.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 13:20:38.433: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 23 13:20:38.433: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 13:20:38.433: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 13:20:38.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 13:20:38.595: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 23 13:20:38.595: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 13:20:38.595: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 13:20:38.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 23 13:20:38.740: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 23 13:20:38.740: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 23 13:20:38.740: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 23 13:20:38.744: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Sep 23 13:20:48.751: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 13:20:48.751: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 23 13:20:48.751: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/23/23 13:20:48.751
  Sep 23 13:20:48.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 13:20:48.905: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 13:20:48.905: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 13:20:48.905: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 13:20:48.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 13:20:49.057: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 13:20:49.057: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 13:20:49.057: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 13:20:49.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=statefulset-1135 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 23 13:20:49.203: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 23 13:20:49.203: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 23 13:20:49.203: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 23 13:20:49.203: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 23 13:20:49.206: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Sep 23 13:20:59.216: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 13:20:59.216: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 13:20:59.216: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 23 13:20:59.231: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Sep 23 13:20:59.231: INFO: ss-0  ip-172-31-77-156  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:08 +0000 UTC  }]
  Sep 23 13:20:59.231: INFO: ss-1  ip-172-31-84-196  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:28 +0000 UTC  }]
  Sep 23 13:20:59.231: INFO: ss-2  ip-172-31-33-104  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:28 +0000 UTC  }]
  Sep 23 13:20:59.231: INFO: 
  Sep 23 13:20:59.231: INFO: StatefulSet ss has not reached scale 0, at 3
  Sep 23 13:21:00.236: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Sep 23 13:21:00.236: INFO: ss-0  ip-172-31-77-156  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:08 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:08 +0000 UTC  }]
  Sep 23 13:21:00.236: INFO: ss-2  ip-172-31-33-104  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:28 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:49 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-23 13:20:28 +0000 UTC  }]
  Sep 23 13:21:00.236: INFO: 
  Sep 23 13:21:00.236: INFO: StatefulSet ss has not reached scale 0, at 2
  Sep 23 13:21:01.240: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990812489s
  Sep 23 13:21:02.245: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986819347s
  Sep 23 13:21:03.249: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.981924582s
  Sep 23 13:21:04.253: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.977903806s
  Sep 23 13:21:05.256: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.974205354s
  Sep 23 13:21:06.260: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.970450677s
  Sep 23 13:21:07.265: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.966787146s
  Sep 23 13:21:08.269: INFO: Verifying statefulset ss doesn't scale past 0 for another 961.526951ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1135 @ 09/23/23 13:21:09.269
  Sep 23 13:21:09.273: INFO: Scaling statefulset ss to 0
  Sep 23 13:21:09.286: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 13:21:09.289: INFO: Deleting all statefulset in ns statefulset-1135
  Sep 23 13:21:09.293: INFO: Scaling statefulset ss to 0
  Sep 23 13:21:09.303: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 13:21:09.307: INFO: Deleting statefulset ss
  Sep 23 13:21:09.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1135" for this suite. @ 09/23/23 13:21:09.327
• [61.332 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/23/23 13:21:09.336
  Sep 23 13:21:09.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename aggregator @ 09/23/23 13:21:09.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:21:09.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:21:09.354
  Sep 23 13:21:09.357: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Registering the sample API server. @ 09/23/23 13:21:09.358
  Sep 23 13:21:09.641: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep 23 13:21:09.671: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Sep 23 13:21:11.719: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:13.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:15.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:17.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:19.726: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:21.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:23.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:25.725: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:27.724: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:29.726: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:21:31.843: INFO: Waited 111.985475ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/23/23 13:21:31.875
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/23/23 13:21:31.879
  STEP: List APIServices @ 09/23/23 13:21:31.886
  Sep 23 13:21:31.890: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/23/23 13:21:31.89
  Sep 23 13:21:31.902: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/23/23 13:21:31.902
  Sep 23 13:21:31.912: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 23, 13, 21, 31, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/23/23 13:21:31.912
  Sep 23 13:21:31.916: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-23 13:21:31 +0000 UTC Passed all checks passed}
  Sep 23 13:21:31.916: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 23 13:21:31.916: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/23/23 13:21:31.916
  Sep 23 13:21:31.926: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1125334969" @ 09/23/23 13:21:31.926
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/23/23 13:21:31.934
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/23/23 13:21:31.939
  STEP: Patch APIService Status @ 09/23/23 13:21:31.942
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/23/23 13:21:31.948
  Sep 23 13:21:31.952: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-23 13:21:31 +0000 UTC Passed all checks passed}
  Sep 23 13:21:31.952: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 23 13:21:31.952: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep 23 13:21:31.952: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/23/23 13:21:31.952
  STEP: Confirm that the generated APIService has been deleted @ 09/23/23 13:21:31.956
  Sep 23 13:21:31.956: INFO: Requesting list of APIServices to confirm quantity
  Sep 23 13:21:31.960: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep 23 13:21:31.960: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep 23 13:21:32.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4374" for this suite. @ 09/23/23 13:21:32.069
• [22.739 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/23/23 13:21:32.077
  Sep 23 13:21:32.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/23/23 13:21:32.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:21:32.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:21:32.096
  STEP: creating a target pod @ 09/23/23 13:21:32.098
  STEP: adding an ephemeral container @ 09/23/23 13:21:36.123
  STEP: checking pod container endpoints @ 09/23/23 13:21:38.141
  Sep 23 13:21:38.141: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9338 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:21:38.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:21:38.142: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:21:38.142: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9338/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 23 13:21:38.243: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/23/23 13:21:38.257
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/23/23 13:21:38.262
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/23/23 13:21:38.271
  Sep 23 13:21:38.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9338" for this suite. @ 09/23/23 13:21:38.279
• [6.211 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/23/23 13:21:38.288
  Sep 23 13:21:38.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 13:21:38.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:21:38.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:21:38.304
  STEP: creating a replication controller @ 09/23/23 13:21:38.307
  Sep 23 13:21:38.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 create -f -'
  Sep 23 13:21:38.696: INFO: stderr: ""
  Sep 23 13:21:38.697: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/23 13:21:38.697
  Sep 23 13:21:38.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 23 13:21:38.757: INFO: stderr: ""
  Sep 23 13:21:38.757: INFO: stdout: "update-demo-nautilus-kz5qp update-demo-nautilus-qcfdg "
  Sep 23 13:21:38.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-kz5qp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 13:21:38.814: INFO: stderr: ""
  Sep 23 13:21:38.814: INFO: stdout: ""
  Sep 23 13:21:38.814: INFO: update-demo-nautilus-kz5qp is created but not running
  Sep 23 13:21:43.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 23 13:21:43.873: INFO: stderr: ""
  Sep 23 13:21:43.873: INFO: stdout: "update-demo-nautilus-kz5qp update-demo-nautilus-qcfdg "
  Sep 23 13:21:43.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-kz5qp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 13:21:43.928: INFO: stderr: ""
  Sep 23 13:21:43.928: INFO: stdout: "true"
  Sep 23 13:21:43.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-kz5qp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 13:21:43.982: INFO: stderr: ""
  Sep 23 13:21:43.982: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 13:21:43.982: INFO: validating pod update-demo-nautilus-kz5qp
  Sep 23 13:21:43.989: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 13:21:43.989: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 13:21:43.989: INFO: update-demo-nautilus-kz5qp is verified up and running
  Sep 23 13:21:43.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-qcfdg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 13:21:44.045: INFO: stderr: ""
  Sep 23 13:21:44.045: INFO: stdout: "true"
  Sep 23 13:21:44.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-qcfdg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 13:21:44.101: INFO: stderr: ""
  Sep 23 13:21:44.101: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 13:21:44.101: INFO: validating pod update-demo-nautilus-qcfdg
  Sep 23 13:21:44.106: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 13:21:44.106: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 13:21:44.106: INFO: update-demo-nautilus-qcfdg is verified up and running
  STEP: scaling down the replication controller @ 09/23/23 13:21:44.106
  Sep 23 13:21:44.107: INFO: scanned /root for discovery docs: <nil>
  Sep 23 13:21:44.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Sep 23 13:21:45.180: INFO: stderr: ""
  Sep 23 13:21:45.180: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/23 13:21:45.18
  Sep 23 13:21:45.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 23 13:21:45.266: INFO: stderr: ""
  Sep 23 13:21:45.266: INFO: stdout: "update-demo-nautilus-qcfdg "
  Sep 23 13:21:45.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-qcfdg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 13:21:45.322: INFO: stderr: ""
  Sep 23 13:21:45.323: INFO: stdout: "true"
  Sep 23 13:21:45.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-qcfdg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 13:21:45.379: INFO: stderr: ""
  Sep 23 13:21:45.379: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 13:21:45.379: INFO: validating pod update-demo-nautilus-qcfdg
  Sep 23 13:21:45.383: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 13:21:45.383: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 13:21:45.383: INFO: update-demo-nautilus-qcfdg is verified up and running
  STEP: scaling up the replication controller @ 09/23/23 13:21:45.383
  Sep 23 13:21:45.384: INFO: scanned /root for discovery docs: <nil>
  Sep 23 13:21:45.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Sep 23 13:21:46.459: INFO: stderr: ""
  Sep 23 13:21:46.459: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/23/23 13:21:46.459
  Sep 23 13:21:46.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 23 13:21:46.519: INFO: stderr: ""
  Sep 23 13:21:46.519: INFO: stdout: "update-demo-nautilus-qcfdg update-demo-nautilus-r7sbw "
  Sep 23 13:21:46.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-qcfdg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 13:21:46.574: INFO: stderr: ""
  Sep 23 13:21:46.574: INFO: stdout: "true"
  Sep 23 13:21:46.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-qcfdg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 13:21:46.629: INFO: stderr: ""
  Sep 23 13:21:46.629: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 13:21:46.629: INFO: validating pod update-demo-nautilus-qcfdg
  Sep 23 13:21:46.634: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 13:21:46.634: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 13:21:46.634: INFO: update-demo-nautilus-qcfdg is verified up and running
  Sep 23 13:21:46.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-r7sbw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 23 13:21:46.690: INFO: stderr: ""
  Sep 23 13:21:46.690: INFO: stdout: "true"
  Sep 23 13:21:46.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods update-demo-nautilus-r7sbw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 23 13:21:46.746: INFO: stderr: ""
  Sep 23 13:21:46.746: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 23 13:21:46.746: INFO: validating pod update-demo-nautilus-r7sbw
  Sep 23 13:21:46.752: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 23 13:21:46.752: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 23 13:21:46.752: INFO: update-demo-nautilus-r7sbw is verified up and running
  STEP: using delete to clean up resources @ 09/23/23 13:21:46.752
  Sep 23 13:21:46.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 delete --grace-period=0 --force -f -'
  Sep 23 13:21:46.812: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 23 13:21:46.812: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 23 13:21:46.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get rc,svc -l name=update-demo --no-headers'
  Sep 23 13:21:46.874: INFO: stderr: "No resources found in kubectl-9652 namespace.\n"
  Sep 23 13:21:46.874: INFO: stdout: ""
  Sep 23 13:21:46.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9652 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 23 13:21:46.931: INFO: stderr: ""
  Sep 23 13:21:46.931: INFO: stdout: ""
  Sep 23 13:21:46.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9652" for this suite. @ 09/23/23 13:21:46.936
• [8.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/23/23 13:21:46.947
  Sep 23 13:21:46.947: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 13:21:46.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:21:46.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:21:46.964
  Sep 23 13:21:48.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:21:48.995: INFO: Deleting pod "var-expansion-dbe6a5c7-1294-4761-808b-75f118530e1b" in namespace "var-expansion-5793"
  Sep 23 13:21:49.003: INFO: Wait up to 5m0s for pod "var-expansion-dbe6a5c7-1294-4761-808b-75f118530e1b" to be fully deleted
  STEP: Destroying namespace "var-expansion-5793" for this suite. @ 09/23/23 13:21:51.013
• [4.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/23/23 13:21:51.022
  Sep 23 13:21:51.022: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-runtime @ 09/23/23 13:21:51.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:21:51.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:21:51.042
  STEP: create the container @ 09/23/23 13:21:51.045
  W0923 13:21:51.055850      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/23/23 13:21:51.055
  STEP: get the container status @ 09/23/23 13:21:54.072
  STEP: the container should be terminated @ 09/23/23 13:21:54.076
  STEP: the termination message should be set @ 09/23/23 13:21:54.076
  Sep 23 13:21:54.076: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/23/23 13:21:54.076
  Sep 23 13:21:54.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2393" for this suite. @ 09/23/23 13:21:54.098
• [3.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/23/23 13:21:54.108
  Sep 23 13:21:54.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename watch @ 09/23/23 13:21:54.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:21:54.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:21:54.124
  STEP: creating a watch on configmaps with label A @ 09/23/23 13:21:54.127
  STEP: creating a watch on configmaps with label B @ 09/23/23 13:21:54.128
  STEP: creating a watch on configmaps with label A or B @ 09/23/23 13:21:54.129
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/23/23 13:21:54.13
  Sep 23 13:21:54.135: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27108 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:21:54.135: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27108 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/23/23 13:21:54.135
  Sep 23 13:21:54.143: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27109 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:21:54.144: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27109 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/23/23 13:21:54.144
  Sep 23 13:21:54.152: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27110 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:21:54.152: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27110 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/23/23 13:21:54.152
  Sep 23 13:21:54.159: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27111 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:21:54.159: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1524  1b75a194-791f-4b14-a5eb-2cc75887e4fd 27111 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/23/23 13:21:54.159
  Sep 23 13:21:54.163: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1524  d1ce6cbd-c010-4b98-811d-d4b28a8b473b 27112 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:21:54.163: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1524  d1ce6cbd-c010-4b98-811d-d4b28a8b473b 27112 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/23/23 13:22:04.164
  Sep 23 13:22:04.172: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1524  d1ce6cbd-c010-4b98-811d-d4b28a8b473b 27151 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:22:04.172: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1524  d1ce6cbd-c010-4b98-811d-d4b28a8b473b 27151 0 2023-09-23 13:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-23 13:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:22:14.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1524" for this suite. @ 09/23/23 13:22:14.178
• [20.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/23/23 13:22:14.185
  Sep 23 13:22:14.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 13:22:14.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:22:14.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:22:14.201
  Sep 23 13:22:14.204: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/23/23 13:22:15.551
  Sep 23 13:22:15.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3964 --namespace=crd-publish-openapi-3964 create -f -'
  Sep 23 13:22:17.908: INFO: stderr: ""
  Sep 23 13:22:17.908: INFO: stdout: "e2e-test-crd-publish-openapi-7172-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 23 13:22:17.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3964 --namespace=crd-publish-openapi-3964 delete e2e-test-crd-publish-openapi-7172-crds test-cr'
  Sep 23 13:22:17.973: INFO: stderr: ""
  Sep 23 13:22:17.973: INFO: stdout: "e2e-test-crd-publish-openapi-7172-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep 23 13:22:17.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3964 --namespace=crd-publish-openapi-3964 apply -f -'
  Sep 23 13:22:18.106: INFO: stderr: ""
  Sep 23 13:22:18.106: INFO: stdout: "e2e-test-crd-publish-openapi-7172-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 23 13:22:18.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3964 --namespace=crd-publish-openapi-3964 delete e2e-test-crd-publish-openapi-7172-crds test-cr'
  Sep 23 13:22:18.170: INFO: stderr: ""
  Sep 23 13:22:18.170: INFO: stdout: "e2e-test-crd-publish-openapi-7172-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/23/23 13:22:18.17
  Sep 23 13:22:18.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-3964 explain e2e-test-crd-publish-openapi-7172-crds'
  Sep 23 13:22:18.505: INFO: stderr: ""
  Sep 23 13:22:18.505: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7172-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 23 13:22:19.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3964" for this suite. @ 09/23/23 13:22:19.802
• [5.625 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/23/23 13:22:19.81
  Sep 23 13:22:19.810: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 13:22:19.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:22:19.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:22:19.828
  STEP: Creating pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072 @ 09/23/23 13:22:19.831
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 13:22:21.852
  Sep 23 13:22:21.856: INFO: Initial restart count of pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 is 0
  Sep 23 13:22:21.861: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:23.866: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:25.872: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:27.878: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:29.883: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:31.888: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:33.893: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:35.898: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:37.904: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:39.914: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:41.919: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:41.919: INFO: Restart count of pod container-probe-4072/liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 is now 1 (20.062311772s elapsed)
  Sep 23 13:22:43.924: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:45.933: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:47.939: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:49.944: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:51.949: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:53.954: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:55.959: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:57.963: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:22:59.968: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:01.973: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:01.973: INFO: Restart count of pod container-probe-4072/liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 is now 2 (40.116917001s elapsed)
  Sep 23 13:23:03.979: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:05.985: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:07.990: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:09.995: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:12.000: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:14.005: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:16.012: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:18.017: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:20.022: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:22.028: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:22.028: INFO: Restart count of pod container-probe-4072/liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 is now 3 (1m0.171440125s elapsed)
  Sep 23 13:23:24.033: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:26.039: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:28.044: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:30.050: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:32.054: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:34.060: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:36.066: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:38.072: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:40.076: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:42.082: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:42.082: INFO: Restart count of pod container-probe-4072/liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 is now 4 (1m20.22556957s elapsed)
  Sep 23 13:23:44.088: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:46.094: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:48.099: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:50.104: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:52.110: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:54.115: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:56.121: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:23:58.127: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:00.132: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:02.136: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:04.142: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:06.148: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:08.154: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:10.160: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:12.165: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:14.170: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:16.175: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:18.181: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:20.186: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:22.192: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:24.197: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:26.203: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:28.208: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:30.213: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:32.219: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:34.223: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:36.229: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:38.234: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:40.239: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:42.244: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:44.249: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:46.254: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:48.259: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:50.265: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:52.270: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:54.275: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:56.281: INFO: Get pod liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 in namespace container-probe-4072
  Sep 23 13:24:56.281: INFO: Restart count of pod container-probe-4072/liveness-46d06dc9-364e-4208-94a9-fd2415ffe438 is now 5 (2m34.424274263s elapsed)
  Sep 23 13:24:56.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:24:56.285
  STEP: Destroying namespace "container-probe-4072" for this suite. @ 09/23/23 13:24:56.297
• [156.495 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/23/23 13:24:56.306
  Sep 23 13:24:56.306: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-pred @ 09/23/23 13:24:56.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:24:56.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:24:56.329
  Sep 23 13:24:56.332: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 23 13:24:56.340: INFO: Waiting for terminating namespaces to be deleted...
  Sep 23 13:24:56.343: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-104 before test
  Sep 23 13:24:56.349: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5mp42 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.349: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep 23 13:24:56.349: INFO: nginx-ingress-controller-kubernetes-worker-4q5pn from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:48 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.349: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:24:56.349: INFO: calico-kube-controllers-787f44f89c-8smff from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.349: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 23 13:24:56.349: INFO: calico-node-qk2dv from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.349: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:24:56.349: INFO: coredns-59cfb5bf46-49k5p from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.349: INFO: 	Container coredns ready: true, restart count 0
  Sep 23 13:24:56.349: INFO: kube-state-metrics-775d9f4f79-c6pt8 from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.350: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: metrics-server-v0.6.3-69d7fbfdf8-c8fkg from kube-system started at 2023-09-23 12:00:47 +0000 UTC (2 container statuses recorded)
  Sep 23 13:24:56.350: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: dashboard-metrics-scraper-5dd7cb5fc-jbtp9 from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.350: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: kubernetes-dashboard-7b899cb9d9-cwmjh from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.350: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-wpzt8 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:24:56.350: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 13:24:56.350: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-77-156 before test
  Sep 23 13:24:56.356: INFO: nginx-ingress-controller-kubernetes-worker-xvcbm from ingress-nginx-kubernetes-worker started at 2023-09-23 12:38:20 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.356: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:24:56.356: INFO: calico-node-z8495 from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.356: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:24:56.356: INFO: sonobuoy from sonobuoy started at 2023-09-23 12:09:14 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.356: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 23 13:24:56.356: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-l6pp5 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:24:56.356: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:24:56.356: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 13:24:56.356: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-196 before test
  Sep 23 13:24:56.363: INFO: nginx-ingress-controller-kubernetes-worker-jcv67 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:02:23 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.363: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:24:56.363: INFO: calico-node-knkkv from kube-system started at 2023-09-23 12:02:04 +0000 UTC (1 container statuses recorded)
  Sep 23 13:24:56.363: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:24:56.363: INFO: sonobuoy-e2e-job-68378cf9dc5e499f from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:24:56.363: INFO: 	Container e2e ready: true, restart count 0
  Sep 23 13:24:56.363: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:24:56.363: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-lfvtl from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:24:56.363: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:24:56.363: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/23/23 13:24:56.363
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.178789fb1fe05014], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 09/23/23 13:24:56.403
  Sep 23 13:24:57.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8203" for this suite. @ 09/23/23 13:24:57.403
• [1.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/23/23 13:24:57.411
  Sep 23 13:24:57.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename cronjob @ 09/23/23 13:24:57.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:24:57.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:24:57.43
  STEP: Creating a ReplaceConcurrent cronjob @ 09/23/23 13:24:57.433
  STEP: Ensuring a job is scheduled @ 09/23/23 13:24:57.439
  STEP: Ensuring exactly one is scheduled @ 09/23/23 13:25:01.443
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/23/23 13:25:01.447
  STEP: Ensuring the job is replaced with a new one @ 09/23/23 13:25:01.451
  STEP: Removing cronjob @ 09/23/23 13:26:01.455
  Sep 23 13:26:01.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6545" for this suite. @ 09/23/23 13:26:01.467
• [64.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/23/23 13:26:01.475
  Sep 23 13:26:01.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 13:26:01.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:01.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:01.509
  Sep 23 13:26:01.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-580" for this suite. @ 09/23/23 13:26:01.563
• [0.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/23/23 13:26:01.572
  Sep 23 13:26:01.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 13:26:01.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:01.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:01.593
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9200.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9200.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/23/23 13:26:01.597
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9200.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9200.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/23/23 13:26:01.597
  STEP: creating a pod to probe /etc/hosts @ 09/23/23 13:26:01.597
  STEP: submitting the pod to kubernetes @ 09/23/23 13:26:01.597
  STEP: retrieving the pod @ 09/23/23 13:26:03.617
  STEP: looking for the results for each expected name from probers @ 09/23/23 13:26:03.621
  Sep 23 13:26:03.642: INFO: DNS probes using dns-9200/dns-test-35d0ca68-8c32-4b5e-881e-67f860309356 succeeded

  Sep 23 13:26:03.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:26:03.646
  STEP: Destroying namespace "dns-9200" for this suite. @ 09/23/23 13:26:03.659
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/23/23 13:26:03.668
  Sep 23 13:26:03.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename events @ 09/23/23 13:26:03.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:03.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:03.689
  STEP: creating a test event @ 09/23/23 13:26:03.692
  STEP: listing all events in all namespaces @ 09/23/23 13:26:03.696
  STEP: patching the test event @ 09/23/23 13:26:03.7
  STEP: fetching the test event @ 09/23/23 13:26:03.707
  STEP: updating the test event @ 09/23/23 13:26:03.711
  STEP: getting the test event @ 09/23/23 13:26:03.722
  STEP: deleting the test event @ 09/23/23 13:26:03.726
  STEP: listing all events in all namespaces @ 09/23/23 13:26:03.738
  Sep 23 13:26:03.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9421" for this suite. @ 09/23/23 13:26:03.746
• [0.086 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/23/23 13:26:03.754
  Sep 23 13:26:03.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename init-container @ 09/23/23 13:26:03.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:03.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:03.774
  STEP: creating the pod @ 09/23/23 13:26:03.778
  Sep 23 13:26:03.778: INFO: PodSpec: initContainers in spec.initContainers
  Sep 23 13:26:07.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8865" for this suite. @ 09/23/23 13:26:07.27
• [3.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/23/23 13:26:07.279
  Sep 23 13:26:07.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 13:26:07.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:07.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:07.298
  STEP: Creating pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416 @ 09/23/23 13:26:07.301
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 13:26:09.32
  Sep 23 13:26:09.324: INFO: Initial restart count of pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b is 0
  Sep 23 13:26:09.328: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:11.333: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:13.338: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:15.343: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:17.349: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:19.354: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:21.359: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:23.365: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:25.372: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:27.377: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:29.383: INFO: Get pod liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b in namespace container-probe-4416
  Sep 23 13:26:29.383: INFO: Restart count of pod container-probe-4416/liveness-f6d0d48b-a480-4aaa-a6bc-08704b36df1b is now 1 (20.059096526s elapsed)
  Sep 23 13:26:29.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:26:29.387
  STEP: Destroying namespace "container-probe-4416" for this suite. @ 09/23/23 13:26:29.401
• [22.129 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/23/23 13:26:29.409
  Sep 23 13:26:29.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:26:29.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:29.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:29.429
  STEP: Creating secret with name projected-secret-test-25a6fc2c-7cc9-49ea-aac2-14d15b800989 @ 09/23/23 13:26:29.432
  STEP: Creating a pod to test consume secrets @ 09/23/23 13:26:29.438
  STEP: Saw pod success @ 09/23/23 13:26:33.464
  Sep 23 13:26:33.468: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-secrets-d19b86c0-92e6-481f-a4d7-9e6bd4397548 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 13:26:33.489
  Sep 23 13:26:33.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-939" for this suite. @ 09/23/23 13:26:33.509
• [4.108 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/23/23 13:26:33.516
  Sep 23 13:26:33.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 13:26:33.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:33.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:33.535
  STEP: Creating projection with secret that has name secret-emptykey-test-1cb692c0-b763-45ee-b9c0-f17a8c498a20 @ 09/23/23 13:26:33.538
  Sep 23 13:26:33.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4455" for this suite. @ 09/23/23 13:26:33.543
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/23/23 13:26:33.552
  Sep 23 13:26:33.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:26:33.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:33.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:33.571
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/23/23 13:26:33.575
  STEP: Saw pod success @ 09/23/23 13:26:37.598
  Sep 23 13:26:37.602: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-a11a95a5-9775-49b4-9327-65007b88d55c container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:26:37.61
  Sep 23 13:26:37.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7923" for this suite. @ 09/23/23 13:26:37.629
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/23/23 13:26:37.637
  Sep 23 13:26:37.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 13:26:37.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:37.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:37.656
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/23/23 13:26:37.659
  Sep 23 13:26:37.660: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/23/23 13:26:42.949
  Sep 23 13:26:42.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:26:44.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:26:49.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7237" for this suite. @ 09/23/23 13:26:49.488
• [11.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/23/23 13:26:49.495
  Sep 23 13:26:49.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:26:49.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:49.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:49.513
  STEP: creating the pod @ 09/23/23 13:26:49.515
  STEP: submitting the pod to kubernetes @ 09/23/23 13:26:49.515
  STEP: verifying the pod is in kubernetes @ 09/23/23 13:26:51.534
  STEP: updating the pod @ 09/23/23 13:26:51.539
  Sep 23 13:26:52.050: INFO: Successfully updated pod "pod-update-3fb6da43-9f84-4561-9baa-944cd328f0f4"
  STEP: verifying the updated pod is in kubernetes @ 09/23/23 13:26:52.054
  Sep 23 13:26:52.059: INFO: Pod update OK
  Sep 23 13:26:52.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5329" for this suite. @ 09/23/23 13:26:52.063
• [2.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/23/23 13:26:52.07
  Sep 23 13:26:52.070: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 13:26:52.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:52.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:52.085
  STEP: Creating configMap with name configmap-test-volume-map-8e3ac92b-5f0a-4d58-88a5-412f65246885 @ 09/23/23 13:26:52.087
  STEP: Creating a pod to test consume configMaps @ 09/23/23 13:26:52.091
  STEP: Saw pod success @ 09/23/23 13:26:56.114
  Sep 23 13:26:56.117: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-configmaps-c05e56a2-511a-48ac-a48c-a92c4409c59c container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:26:56.137
  Sep 23 13:26:56.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-864" for this suite. @ 09/23/23 13:26:56.158
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/23/23 13:26:56.166
  Sep 23 13:26:56.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-preemption @ 09/23/23 13:26:56.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:26:56.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:26:56.185
  Sep 23 13:26:56.204: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 23 13:27:56.228: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/23/23 13:27:56.231
  Sep 23 13:27:56.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/23/23 13:27:56.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:27:56.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:27:56.247
  STEP: Finding an available node @ 09/23/23 13:27:56.25
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/23/23 13:27:56.25
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/23/23 13:27:58.268
  Sep 23 13:27:58.283: INFO: found a healthy node: ip-172-31-77-156
  Sep 23 13:28:04.356: INFO: pods created so far: [1 1 1]
  Sep 23 13:28:04.356: INFO: length of pods created so far: 3
  Sep 23 13:28:06.366: INFO: pods created so far: [2 2 1]
  Sep 23 13:28:13.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:28:13.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-553" for this suite. @ 09/23/23 13:28:13.45
  STEP: Destroying namespace "sched-preemption-1296" for this suite. @ 09/23/23 13:28:13.458
• [77.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/23/23 13:28:13.466
  Sep 23 13:28:13.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename security-context-test @ 09/23/23 13:28:13.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:13.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:13.486
  Sep 23 13:28:17.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3518" for this suite. @ 09/23/23 13:28:17.515
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/23/23 13:28:17.522
  Sep 23 13:28:17.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:28:17.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:17.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:17.539
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:28:17.541
  STEP: Saw pod success @ 09/23/23 13:28:21.564
  Sep 23 13:28:21.567: INFO: Trying to get logs from node ip-172-31-84-196 pod downwardapi-volume-a3383c1a-bdbd-49a3-9ba2-8622163019c9 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:28:21.575
  Sep 23 13:28:21.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1578" for this suite. @ 09/23/23 13:28:21.599
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/23/23 13:28:21.606
  Sep 23 13:28:21.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename containers @ 09/23/23 13:28:21.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:21.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:21.622
  STEP: Creating a pod to test override command @ 09/23/23 13:28:21.625
  STEP: Saw pod success @ 09/23/23 13:28:25.651
  Sep 23 13:28:25.655: INFO: Trying to get logs from node ip-172-31-77-156 pod client-containers-42075728-a2b7-4a44-b0ef-2126b0126d1a container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:28:25.67
  Sep 23 13:28:25.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8726" for this suite. @ 09/23/23 13:28:25.687
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/23/23 13:28:25.696
  Sep 23 13:28:25.696: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:28:25.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:25.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:25.713
  STEP: Creating configMap with name projected-configmap-test-volume-ba1e3fa7-0793-4240-a9a2-e941fe8e7e93 @ 09/23/23 13:28:25.715
  STEP: Creating a pod to test consume configMaps @ 09/23/23 13:28:25.721
  STEP: Saw pod success @ 09/23/23 13:28:29.744
  Sep 23 13:28:29.747: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-configmaps-51b90a5b-f8c5-4991-b7b8-ce7f219cdeae container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:28:29.756
  Sep 23 13:28:29.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3604" for this suite. @ 09/23/23 13:28:29.777
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/23/23 13:28:29.785
  Sep 23 13:28:29.785: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename sched-pred @ 09/23/23 13:28:29.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:29.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:29.801
  Sep 23 13:28:29.804: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 23 13:28:29.812: INFO: Waiting for terminating namespaces to be deleted...
  Sep 23 13:28:29.814: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-104 before test
  Sep 23 13:28:29.821: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-5mp42 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: nginx-ingress-controller-kubernetes-worker-4q5pn from ingress-nginx-kubernetes-worker started at 2023-09-23 12:00:48 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: calico-kube-controllers-787f44f89c-8smff from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: calico-node-qk2dv from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: coredns-59cfb5bf46-49k5p from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container coredns ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: kube-state-metrics-775d9f4f79-c6pt8 from kube-system started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: metrics-server-v0.6.3-69d7fbfdf8-c8fkg from kube-system started at 2023-09-23 12:00:47 +0000 UTC (2 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: dashboard-metrics-scraper-5dd7cb5fc-jbtp9 from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: kubernetes-dashboard-7b899cb9d9-cwmjh from kubernetes-dashboard started at 2023-09-23 12:00:47 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-wpzt8 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:28:29.821: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 13:28:29.821: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-77-156 before test
  Sep 23 13:28:29.826: INFO: nginx-ingress-controller-kubernetes-worker-xvcbm from ingress-nginx-kubernetes-worker started at 2023-09-23 12:38:20 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.826: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:28:29.826: INFO: calico-node-z8495 from kube-system started at 2023-09-23 12:00:35 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.826: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:28:29.826: INFO: sonobuoy from sonobuoy started at 2023-09-23 12:09:14 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.826: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 23 13:28:29.826: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-l6pp5 from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:28:29.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:28:29.826: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 23 13:28:29.826: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-84-196 before test
  Sep 23 13:28:29.832: INFO: nginx-ingress-controller-kubernetes-worker-jcv67 from ingress-nginx-kubernetes-worker started at 2023-09-23 12:02:23 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.832: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Sep 23 13:28:29.832: INFO: calico-node-knkkv from kube-system started at 2023-09-23 12:02:04 +0000 UTC (1 container statuses recorded)
  Sep 23 13:28:29.832: INFO: 	Container calico-node ready: true, restart count 0
  Sep 23 13:28:29.832: INFO: sonobuoy-e2e-job-68378cf9dc5e499f from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:28:29.832: INFO: 	Container e2e ready: true, restart count 0
  Sep 23 13:28:29.832: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:28:29.832: INFO: sonobuoy-systemd-logs-daemon-set-e059f1e7de1047ff-lfvtl from sonobuoy started at 2023-09-23 12:09:16 +0000 UTC (2 container statuses recorded)
  Sep 23 13:28:29.832: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 23 13:28:29.832: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/23/23 13:28:29.832
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/23/23 13:28:31.853
  STEP: Trying to apply a random label on the found node. @ 09/23/23 13:28:31.864
  STEP: verifying the node has the label kubernetes.io/e2e-7d82494b-1bd7-46d6-ad67-189f6bca8977 42 @ 09/23/23 13:28:31.873
  STEP: Trying to relaunch the pod, now with labels. @ 09/23/23 13:28:31.877
  STEP: removing the label kubernetes.io/e2e-7d82494b-1bd7-46d6-ad67-189f6bca8977 off the node ip-172-31-77-156 @ 09/23/23 13:28:33.896
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7d82494b-1bd7-46d6-ad67-189f6bca8977 @ 09/23/23 13:28:33.908
  Sep 23 13:28:33.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4005" for this suite. @ 09/23/23 13:28:33.916
• [4.139 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/23/23 13:28:33.924
  Sep 23 13:28:33.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:28:33.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:33.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:33.943
  STEP: Creating projection with secret that has name projected-secret-test-70517443-e107-45df-af98-63ebbec9eac5 @ 09/23/23 13:28:33.945
  STEP: Creating a pod to test consume secrets @ 09/23/23 13:28:33.95
  STEP: Saw pod success @ 09/23/23 13:28:37.969
  Sep 23 13:28:37.974: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-projected-secrets-9e274eb5-7baa-40a8-b5bf-b1c54f2631c1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 13:28:37.981
  Sep 23 13:28:37.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8421" for this suite. @ 09/23/23 13:28:37.999
• [4.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/23/23 13:28:38.006
  Sep 23 13:28:38.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename namespaces @ 09/23/23 13:28:38.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:38.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:38.024
  STEP: Creating namespace "e2e-ns-rcbd2" @ 09/23/23 13:28:38.026
  Sep 23 13:28:38.038: INFO: Namespace "e2e-ns-rcbd2-1105" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-rcbd2-1105" @ 09/23/23 13:28:38.038
  Sep 23 13:28:38.047: INFO: Namespace "e2e-ns-rcbd2-1105" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-rcbd2-1105" @ 09/23/23 13:28:38.048
  Sep 23 13:28:38.056: INFO: Namespace "e2e-ns-rcbd2-1105" has []v1.FinalizerName{"kubernetes"}
  Sep 23 13:28:38.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7092" for this suite. @ 09/23/23 13:28:38.059
  STEP: Destroying namespace "e2e-ns-rcbd2-1105" for this suite. @ 09/23/23 13:28:38.065
• [0.066 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/23/23 13:28:38.072
  Sep 23 13:28:38.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:28:38.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:38.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:38.086
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/23/23 13:28:38.088
  STEP: Saw pod success @ 09/23/23 13:28:42.111
  Sep 23 13:28:42.115: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-9e50599e-3819-4ed6-9622-76245be5b88c container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:28:42.123
  Sep 23 13:28:42.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8190" for this suite. @ 09/23/23 13:28:42.141
• [4.075 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/23/23 13:28:42.148
  Sep 23 13:28:42.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:28:42.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:42.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:42.166
  STEP: Setting up server cert @ 09/23/23 13:28:42.187
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:28:42.329
  STEP: Deploying the webhook pod @ 09/23/23 13:28:42.338
  STEP: Wait for the deployment to be ready @ 09/23/23 13:28:42.352
  Sep 23 13:28:42.360: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 13:28:44.371
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:28:44.382
  Sep 23 13:28:45.383: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/23/23 13:28:45.449
  STEP: Creating a configMap that should be mutated @ 09/23/23 13:28:45.46
  STEP: Deleting the collection of validation webhooks @ 09/23/23 13:28:45.486
  STEP: Creating a configMap that should not be mutated @ 09/23/23 13:28:45.539
  Sep 23 13:28:45.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4069" for this suite. @ 09/23/23 13:28:45.591
  STEP: Destroying namespace "webhook-markers-6973" for this suite. @ 09/23/23 13:28:45.599
• [3.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/23/23 13:28:45.607
  Sep 23 13:28:45.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 13:28:45.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:45.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:45.622
  STEP: reading a file in the container @ 09/23/23 13:28:47.646
  Sep 23 13:28:47.646: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1310 pod-service-account-5f2cf203-ad16-4029-a55e-324f0b8d5de9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/23/23 13:28:47.796
  Sep 23 13:28:47.796: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1310 pod-service-account-5f2cf203-ad16-4029-a55e-324f0b8d5de9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/23/23 13:28:47.944
  Sep 23 13:28:47.944: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1310 pod-service-account-5f2cf203-ad16-4029-a55e-324f0b8d5de9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep 23 13:28:48.088: INFO: Got root ca configmap in namespace "svcaccounts-1310"
  Sep 23 13:28:48.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1310" for this suite. @ 09/23/23 13:28:48.095
• [2.495 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/23/23 13:28:48.103
  Sep 23 13:28:48.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename lease-test @ 09/23/23 13:28:48.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:48.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:48.122
  Sep 23 13:28:48.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2594" for this suite. @ 09/23/23 13:28:48.183
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/23/23 13:28:48.191
  Sep 23 13:28:48.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/23 13:28:48.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:28:48.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:28:48.207
  STEP: Performing setup for networking test in namespace pod-network-test-4673 @ 09/23/23 13:28:48.21
  STEP: creating a selector @ 09/23/23 13:28:48.21
  STEP: Creating the service pods in kubernetes @ 09/23/23 13:28:48.21
  Sep 23 13:28:48.210: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/23/23 13:29:00.293
  Sep 23 13:29:02.313: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep 23 13:29:02.313: INFO: Breadth first check of 192.168.20.108 on host 172.31.33.104...
  Sep 23 13:29:02.316: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.55.103:9080/dial?request=hostname&protocol=udp&host=192.168.20.108&port=8081&tries=1'] Namespace:pod-network-test-4673 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:29:02.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:29:02.316: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:29:02.316: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4673/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.55.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.20.108%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 23 13:29:02.407: INFO: Waiting for responses: map[]
  Sep 23 13:29:02.407: INFO: reached 192.168.20.108 after 0/1 tries
  Sep 23 13:29:02.407: INFO: Breadth first check of 192.168.55.104 on host 172.31.77.156...
  Sep 23 13:29:02.412: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.55.103:9080/dial?request=hostname&protocol=udp&host=192.168.55.104&port=8081&tries=1'] Namespace:pod-network-test-4673 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:29:02.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:29:02.412: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:29:02.412: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4673/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.55.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.55.104%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 23 13:29:02.510: INFO: Waiting for responses: map[]
  Sep 23 13:29:02.510: INFO: reached 192.168.55.104 after 0/1 tries
  Sep 23 13:29:02.510: INFO: Breadth first check of 192.168.88.223 on host 172.31.84.196...
  Sep 23 13:29:02.513: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.55.103:9080/dial?request=hostname&protocol=udp&host=192.168.88.223&port=8081&tries=1'] Namespace:pod-network-test-4673 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:29:02.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:29:02.514: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:29:02.514: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4673/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.55.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.88.223%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 23 13:29:02.610: INFO: Waiting for responses: map[]
  Sep 23 13:29:02.611: INFO: reached 192.168.88.223 after 0/1 tries
  Sep 23 13:29:02.611: INFO: Going to retry 0 out of 3 pods....
  Sep 23 13:29:02.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4673" for this suite. @ 09/23/23 13:29:02.616
• [14.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/23/23 13:29:02.624
  Sep 23 13:29:02.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 13:29:02.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:02.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:02.643
  Sep 23 13:29:02.646: INFO: Creating deployment "webserver-deployment"
  Sep 23 13:29:02.653: INFO: Waiting for observed generation 1
  Sep 23 13:29:04.660: INFO: Waiting for all required pods to come up
  Sep 23 13:29:04.665: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/23/23 13:29:04.665
  Sep 23 13:29:04.665: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep 23 13:29:04.672: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep 23 13:29:04.681: INFO: Updating deployment webserver-deployment
  Sep 23 13:29:04.681: INFO: Waiting for observed generation 2
  Sep 23 13:29:06.690: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep 23 13:29:06.693: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep 23 13:29:06.697: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 23 13:29:06.707: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep 23 13:29:06.707: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep 23 13:29:06.710: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 23 13:29:06.716: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep 23 13:29:06.716: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep 23 13:29:06.724: INFO: Updating deployment webserver-deployment
  Sep 23 13:29:06.724: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep 23 13:29:06.733: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep 23 13:29:06.739: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Sep 23 13:29:06.758: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78e9888b-b381-4ccb-81f9-36f2a64b7327",
      ResourceVersion: (string) (len=5) "29497",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 13:29:06.772: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
      ResourceVersion: (string) (len=5) "29490",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "78e9888b-b381-4ccb-81f9-36f2a64b7327",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 38 65 39 38 38  38 62 2d 62 33 38 31 2d  |\"78e9888b-b381-|
              00000120  34 63 63 62 2d 38 31 66  39 2d 33 36 66 32 61 36  |4ccb-81f9-36f2a6|
              00000130  34 62 37 33 32 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4b7327\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:29:06.775: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep 23 13:29:06.775: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
      ResourceVersion: (string) (len=5) "29488",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "78e9888b-b381-4ccb-81f9-36f2a64b7327",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 38 65 39 38 38  38 62 2d 62 33 38 31 2d  |\"78e9888b-b381-|
              00000120  34 63 63 62 2d 38 31 66  39 2d 33 36 66 32 61 36  |4ccb-81f9-36f2a6|
              00000130  34 62 37 33 32 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4b7327\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:29:06.794: INFO: Pod "webserver-deployment-557759b7c7-2vkg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2vkg5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e6c1070-d888-4f09-bfce-608cc24779e0",
      ResourceVersion: (string) (len=5) "29527",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k67rl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k67rl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.796: INFO: Pod "webserver-deployment-557759b7c7-5s48t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5s48t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0737a9d6-6a19-417d-8411-1c2aadc32444",
      ResourceVersion: (string) (len=5) "29366",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 30 36 5c 22  |192.168.55.106\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvg5c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvg5c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1ce9718881bb380f269360fead5046221caa4b0e84f80a55b7e52d090d8f1cbc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.799: INFO: Pod "webserver-deployment-557759b7c7-6s2wg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6s2wg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6ca4859-22a1-4600-aafd-625d5fa0d754",
      ResourceVersion: (string) (len=5) "29531",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z54ds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z54ds",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.800: INFO: Pod "webserver-deployment-557759b7c7-7zck7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7zck7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13b6b638-66c6-433f-8354-66cf28919f5d",
      ResourceVersion: (string) (len=5) "29535",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g8htq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g8htq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.802: INFO: Pod "webserver-deployment-557759b7c7-b775v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b775v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd9004e4-b798-4362-91d8-27baac07761c",
      ResourceVersion: (string) (len=5) "29526",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kgbbn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kgbbn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.803: INFO: Pod "webserver-deployment-557759b7c7-czlgw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-czlgw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c66f238-2be9-46a8-8c85-01ec936380cb",
      ResourceVersion: (string) (len=5) "29518",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bhdq7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bhdq7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.805: INFO: Pod "webserver-deployment-557759b7c7-fb99b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fb99b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "942caa3e-05b1-4096-8a73-adcc642b4b2f",
      ResourceVersion: (string) (len=5) "29528",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27vhk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27vhk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.807: INFO: Pod "webserver-deployment-557759b7c7-hlgcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hlgcx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d1ac6bf-dfaa-4b9a-ac90-20f9c15db12b",
      ResourceVersion: (string) (len=5) "29504",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mmc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mmc2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.809: INFO: Pod "webserver-deployment-557759b7c7-j4lz7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j4lz7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98840222-1cf5-4674-b127-0a73f9a9247f",
      ResourceVersion: (string) (len=5) "29364",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 38 2e 32 32 34 5c 22  |192.168.88.224\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nbww4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nbww4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bc61313c30f20f3ecb0cf265162b3be8edd116c99cbeffe67c0abf9bad817c13",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.811: INFO: Pod "webserver-deployment-557759b7c7-jvqxl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jvqxl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15532329-85b0-46e8-ad7b-5b7acf2e9681",
      ResourceVersion: (string) (len=5) "29529",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-md4kt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-md4kt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.813: INFO: Pod "webserver-deployment-557759b7c7-n2g9k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n2g9k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf0aac73-ca7e-4ebe-a41b-658c13663a85",
      ResourceVersion: (string) (len=5) "29355",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 30 2e 31 30 39 5c 22  |192.168.20.109\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jws6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jws6b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.104",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.20.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a5bfff240d64aaf3aecb37cee52dcc1f233ed8fa2054c5f58d588f631efd5954",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.815: INFO: Pod "webserver-deployment-557759b7c7-pd96c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pd96c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "304f7f01-8a62-4a98-beb8-7f972cc0ee3f",
      ResourceVersion: (string) (len=5) "29361",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 38 2e 32 32 35 5c 22  |192.168.88.225\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7kl24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7kl24",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65883266b4d30d1240d21f3c5ddbde6d502cb3de2d33a8114cebc38f035e66f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.818: INFO: Pod "webserver-deployment-557759b7c7-pxzp9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pxzp9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b90fa2a-c809-4d4a-8975-cb30d4fa6532",
      ResourceVersion: (string) (len=5) "29521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pf9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pf9s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.820: INFO: Pod "webserver-deployment-557759b7c7-sgnmz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sgnmz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65728b28-c49b-4b6c-9bf9-b2755bf7ff60",
      ResourceVersion: (string) (len=5) "29376",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 30 38 5c 22  |192.168.55.108\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s92t6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s92t6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e1bed32e00f8cd162e1958a5ef5aefffbaec332f291a6746d28613827b9bc1e9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.823: INFO: Pod "webserver-deployment-557759b7c7-srp9m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-srp9m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0270c72-422e-4d9b-9dae-b0f560eac317",
      ResourceVersion: (string) (len=5) "29352",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 30 2e 31 31 30 5c 22  |192.168.20.110\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pmfv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pmfv5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.104",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.20.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a0accfaf3e2b0eea771ecfea71d203a04f758ce65fe747351f0a0db5843c4ad1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.825: INFO: Pod "webserver-deployment-557759b7c7-tvffn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tvffn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06beb492-f1c0-49c9-8acf-5706c120a1a9",
      ResourceVersion: (string) (len=5) "29370",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 31 30 35 5c 22  |192.168.55.105\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rhp47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rhp47",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://20c13e72f201b7664a31c2981a462c85b30c6a31b2d3d6799c30eeefa5d32c51",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.827: INFO: Pod "webserver-deployment-557759b7c7-vqcvb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vqcvb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b79b90a-ff33-4529-9dc0-7fefea893981",
      ResourceVersion: (string) (len=5) "29515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bn9rq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bn9rq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.828: INFO: Pod "webserver-deployment-557759b7c7-w2mm9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-w2mm9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea622bee-1339-4669-9e81-a7a77e1e8c78",
      ResourceVersion: (string) (len=5) "29522",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h7ljf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h7ljf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.830: INFO: Pod "webserver-deployment-557759b7c7-wh24g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wh24g",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eef8528a-00aa-4b3a-818d-7279cc97982d",
      ResourceVersion: (string) (len=5) "29349",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  32 30 2e 31 31 31 5c 22  |192.168.20.111\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7q58c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7q58c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.104",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.20.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072543,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ab104ee9fa3421fedcce30f9cae2af1752b530f2a397945f56528a60727891fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.832: INFO: Pod "webserver-deployment-557759b7c7-z9q4h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z9q4h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "115101ee-9355-4739-b3bf-b2f897697652",
      ResourceVersion: (string) (len=5) "29537",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7db68a27-0038-44e1-b72b-a4573394868c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  62 36 38 61 32 37 2d 30  |d\":\"7db68a27-0|
              00000090  30 33 38 2d 34 34 65 31  2d 62 37 32 62 2d 61 34  |038-44e1-b72b-a4|
              000000a0  35 37 33 33 39 34 38 36  38 63 5c 22 7d 22 3a 7b  |573394868c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4clc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4clc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.834: INFO: Pod "webserver-deployment-9b4f5bf69-2wcrl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2wcrl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e4e8fc4-aa95-4bd8-8ef4-c1f217979a2a",
      ResourceVersion: (string) (len=5) "29508",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-468l2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-468l2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.835: INFO: Pod "webserver-deployment-9b4f5bf69-4lzg9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4lzg9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41ac9a16-31b0-480c-a0c4-0e7bc0f16c8e",
      ResourceVersion: (string) (len=5) "29473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 32 30 2e  31 31 32 5c 22 7d 22 3a  |.168.20.112\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85bhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85bhp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.104",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.20.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.838: INFO: Pod "webserver-deployment-9b4f5bf69-ck79b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ck79b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c54e1daf-6a9b-4372-b01c-793a50303a2c",
      ResourceVersion: (string) (len=5) "29483",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 35 35 2e  31 31 30 5c 22 7d 22 3a  |.168.55.110\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9r78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9r78",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.840: INFO: Pod "webserver-deployment-9b4f5bf69-jsgfq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jsgfq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b470e64c-5848-4c6a-90d5-44b9f9131463",
      ResourceVersion: (string) (len=5) "29534",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrqsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrqsp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.842: INFO: Pod "webserver-deployment-9b4f5bf69-l9gbc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-l9gbc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7692aeda-2eca-49c0-9c0d-c29fe1bf0aa3",
      ResourceVersion: (string) (len=5) "29477",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 38 38 2e  32 32 37 5c 22 7d 22 3a  |.168.88.227\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vvkgk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vvkgk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.844: INFO: Pod "webserver-deployment-9b4f5bf69-ls7pj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ls7pj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60e09f5d-ce28-4a06-a24f-527d39da2a5b",
      ResourceVersion: (string) (len=5) "29536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4z5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4z5g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.846: INFO: Pod "webserver-deployment-9b4f5bf69-n9kl8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n9kl8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bf9ec28-ee81-454a-9f59-a51147eee194",
      ResourceVersion: (string) (len=5) "29480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 38 38 2e  32 32 38 5c 22 7d 22 3a  |.168.88.228\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhpj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhpj5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.848: INFO: Pod "webserver-deployment-9b4f5bf69-nngz6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nngz6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0d31831-038d-43d6-9514-05a9b00db6d8",
      ResourceVersion: (string) (len=5) "29530",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlbpx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlbpx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.849: INFO: Pod "webserver-deployment-9b4f5bf69-nt2dx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nt2dx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "914a1bac-cb8c-440d-9619-76a383d51804",
      ResourceVersion: (string) (len=5) "29533",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9g848",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9g848",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.851: INFO: Pod "webserver-deployment-9b4f5bf69-pgt8t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pgt8t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd82b2a7-ec8d-411a-8b11-58cd0ec09b78",
      ResourceVersion: (string) (len=5) "29513",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g2q7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g2q7s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.852: INFO: Pod "webserver-deployment-9b4f5bf69-s5rq8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-s5rq8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ec50c84-e387-4a2b-8e7c-6a61186c6d73",
      ResourceVersion: (string) (len=5) "29486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 35 35 2e  31 30 39 5c 22 7d 22 3a  |.168.55.109\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5w8m5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5w8m5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.55.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072544,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.854: INFO: Pod "webserver-deployment-9b4f5bf69-xbvzl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xbvzl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1016",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0a32981-0f42-4f7e-9fe4-b5a8f9e58f01",
      ResourceVersion: (string) (len=5) "29525",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d718e2b7-2a65-440a-90be-2a4f2fcf71b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  31 38 65 32 62 37 2d 32  |d\":\"d718e2b7-2|
              00000090  61 36 35 2d 34 34 30 61  2d 39 30 62 65 2d 32 61  |a65-440a-90be-2a|
              000000a0  34 66 32 66 63 66 37 31  62 37 5c 22 7d 22 3a 7b  |4f2fcf71b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b69q7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b69q7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.104",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:29:06.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1016" for this suite. @ 09/23/23 13:29:06.863
• [4.248 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/23/23 13:29:06.873
  Sep 23 13:29:06.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl-logs @ 09/23/23 13:29:06.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:06.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:06.89
  STEP: creating an pod @ 09/23/23 13:29:06.894
  Sep 23 13:29:06.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep 23 13:29:06.957: INFO: stderr: ""
  Sep 23 13:29:06.957: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/23/23 13:29:06.957
  Sep 23 13:29:06.957: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Sep 23 13:29:08.966: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/23/23 13:29:08.966
  Sep 23 13:29:08.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 logs logs-generator logs-generator'
  Sep 23 13:29:09.029: INFO: stderr: ""
  Sep 23 13:29:09.029: INFO: stdout: "I0923 13:29:07.696071       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/ngch 319\nI0923 13:29:07.896179       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/4tl2 471\nI0923 13:29:08.096730       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/pl5 528\nI0923 13:29:08.297032       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/6wz 286\nI0923 13:29:08.496269       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/tdx 393\nI0923 13:29:08.696560       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/65m 557\nI0923 13:29:08.896853       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/tz2 372\n"
  STEP: limiting log lines @ 09/23/23 13:29:09.029
  Sep 23 13:29:09.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --tail=1'
  Sep 23 13:29:09.101: INFO: stderr: ""
  Sep 23 13:29:09.101: INFO: stdout: "I0923 13:29:09.096089       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/cvp 396\n"
  Sep 23 13:29:09.101: INFO: got output "I0923 13:29:09.096089       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/cvp 396\n"
  STEP: limiting log bytes @ 09/23/23 13:29:09.101
  Sep 23 13:29:09.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --limit-bytes=1'
  Sep 23 13:29:09.168: INFO: stderr: ""
  Sep 23 13:29:09.168: INFO: stdout: "I"
  Sep 23 13:29:09.168: INFO: got output "I"
  STEP: exposing timestamps @ 09/23/23 13:29:09.168
  Sep 23 13:29:09.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep 23 13:29:09.231: INFO: stderr: ""
  Sep 23 13:29:09.231: INFO: stdout: "2023-09-23T13:29:09.096177479Z I0923 13:29:09.096089       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/cvp 396\n"
  Sep 23 13:29:09.231: INFO: got output "2023-09-23T13:29:09.096177479Z I0923 13:29:09.096089       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/cvp 396\n"
  STEP: restricting to a time range @ 09/23/23 13:29:09.231
  Sep 23 13:29:11.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --since=1s'
  Sep 23 13:29:11.796: INFO: stderr: ""
  Sep 23 13:29:11.796: INFO: stdout: "I0923 13:29:10.896442       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/qhl 502\nI0923 13:29:11.096567       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/w8t 487\nI0923 13:29:11.296879       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/6zt 302\nI0923 13:29:11.496100       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/vff 215\nI0923 13:29:11.696392       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/rxj 279\n"
  Sep 23 13:29:11.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --since=24h'
  Sep 23 13:29:11.858: INFO: stderr: ""
  Sep 23 13:29:11.858: INFO: stdout: "I0923 13:29:07.696071       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/ngch 319\nI0923 13:29:07.896179       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/4tl2 471\nI0923 13:29:08.096730       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/pl5 528\nI0923 13:29:08.297032       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/6wz 286\nI0923 13:29:08.496269       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/tdx 393\nI0923 13:29:08.696560       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/65m 557\nI0923 13:29:08.896853       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/tz2 372\nI0923 13:29:09.096089       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/cvp 396\nI0923 13:29:09.296381       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/l8rh 325\nI0923 13:29:09.496512       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/sg4 484\nI0923 13:29:09.696810       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/wj9q 300\nI0923 13:29:09.897106       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/psd 406\nI0923 13:29:10.096397       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/qtcr 369\nI0923 13:29:10.296657       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/lg5q 392\nI0923 13:29:10.496962       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/bmc 448\nI0923 13:29:10.696154       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/9z6c 565\nI0923 13:29:10.896442       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/qhl 502\nI0923 13:29:11.096567       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/w8t 487\nI0923 13:29:11.296879       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/6zt 302\nI0923 13:29:11.496100       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/vff 215\nI0923 13:29:11.696392       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/rxj 279\n"
  Sep 23 13:29:11.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-logs-7687 delete pod logs-generator'
  Sep 23 13:29:12.449: INFO: stderr: ""
  Sep 23 13:29:12.449: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep 23 13:29:12.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7687" for this suite. @ 09/23/23 13:29:12.454
• [5.588 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/23/23 13:29:12.461
  Sep 23 13:29:12.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replicaset @ 09/23/23 13:29:12.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:12.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:12.476
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/23/23 13:29:12.478
  Sep 23 13:29:12.488: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 23 13:29:17.495: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/23 13:29:17.495
  STEP: getting scale subresource @ 09/23/23 13:29:17.495
  STEP: updating a scale subresource @ 09/23/23 13:29:17.499
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/23/23 13:29:17.504
  STEP: Patch a scale subresource @ 09/23/23 13:29:17.507
  Sep 23 13:29:17.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2402" for this suite. @ 09/23/23 13:29:17.524
• [5.071 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/23/23 13:29:17.538
  Sep 23 13:29:17.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/23/23 13:29:17.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:17.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:17.556
  STEP: getting /apis @ 09/23/23 13:29:17.559
  STEP: getting /apis/storage.k8s.io @ 09/23/23 13:29:17.562
  STEP: getting /apis/storage.k8s.io/v1 @ 09/23/23 13:29:17.563
  STEP: creating @ 09/23/23 13:29:17.564
  STEP: watching @ 09/23/23 13:29:17.58
  Sep 23 13:29:17.580: INFO: starting watch
  STEP: getting @ 09/23/23 13:29:17.586
  STEP: listing in namespace @ 09/23/23 13:29:17.589
  STEP: listing across namespaces @ 09/23/23 13:29:17.593
  STEP: patching @ 09/23/23 13:29:17.595
  STEP: updating @ 09/23/23 13:29:17.602
  Sep 23 13:29:17.607: INFO: waiting for watch events with expected annotations in namespace
  Sep 23 13:29:17.607: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/23/23 13:29:17.608
  STEP: deleting a collection @ 09/23/23 13:29:17.621
  Sep 23 13:29:17.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6335" for this suite. @ 09/23/23 13:29:17.642
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/23/23 13:29:17.651
  Sep 23 13:29:17.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:29:17.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:17.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:17.666
  STEP: creating the pod @ 09/23/23 13:29:17.669
  STEP: submitting the pod to kubernetes @ 09/23/23 13:29:17.669
  W0923 13:29:17.680390      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 09/23/23 13:29:19.692
  STEP: updating the pod @ 09/23/23 13:29:19.696
  Sep 23 13:29:20.206: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a382656d-704b-4eee-b716-ad510a6f5606"
  Sep 23 13:29:24.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-72" for this suite. @ 09/23/23 13:29:24.225
• [6.580 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/23/23 13:29:24.231
  Sep 23 13:29:24.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename namespaces @ 09/23/23 13:29:24.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:24.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:24.25
  STEP: Read namespace status @ 09/23/23 13:29:24.253
  Sep 23 13:29:24.256: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/23/23 13:29:24.256
  Sep 23 13:29:24.261: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/23/23 13:29:24.261
  Sep 23 13:29:24.270: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep 23 13:29:24.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9014" for this suite. @ 09/23/23 13:29:24.274
• [0.049 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/23/23 13:29:24.28
  Sep 23 13:29:24.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/23 13:29:24.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:24.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:24.296
  STEP: Performing setup for networking test in namespace pod-network-test-6898 @ 09/23/23 13:29:24.299
  STEP: creating a selector @ 09/23/23 13:29:24.299
  STEP: Creating the service pods in kubernetes @ 09/23/23 13:29:24.299
  Sep 23 13:29:24.299: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/23/23 13:29:46.404
  Sep 23 13:29:48.422: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep 23 13:29:48.422: INFO: Breadth first check of 192.168.20.113 on host 172.31.33.104...
  Sep 23 13:29:48.425: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.55.116:9080/dial?request=hostname&protocol=http&host=192.168.20.113&port=8083&tries=1'] Namespace:pod-network-test-6898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:29:48.425: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:29:48.425: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:29:48.425: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.55.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.20.113%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 23 13:29:48.516: INFO: Waiting for responses: map[]
  Sep 23 13:29:48.516: INFO: reached 192.168.20.113 after 0/1 tries
  Sep 23 13:29:48.516: INFO: Breadth first check of 192.168.55.112 on host 172.31.77.156...
  Sep 23 13:29:48.519: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.55.116:9080/dial?request=hostname&protocol=http&host=192.168.55.112&port=8083&tries=1'] Namespace:pod-network-test-6898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:29:48.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:29:48.520: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:29:48.520: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.55.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.55.112%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 23 13:29:48.610: INFO: Waiting for responses: map[]
  Sep 23 13:29:48.610: INFO: reached 192.168.55.112 after 0/1 tries
  Sep 23 13:29:48.610: INFO: Breadth first check of 192.168.88.229 on host 172.31.84.196...
  Sep 23 13:29:48.618: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.55.116:9080/dial?request=hostname&protocol=http&host=192.168.88.229&port=8083&tries=1'] Namespace:pod-network-test-6898 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:29:48.618: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:29:48.619: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:29:48.619: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6898/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.55.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.88.229%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 23 13:29:48.711: INFO: Waiting for responses: map[]
  Sep 23 13:29:48.711: INFO: reached 192.168.88.229 after 0/1 tries
  Sep 23 13:29:48.711: INFO: Going to retry 0 out of 3 pods....
  Sep 23 13:29:48.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6898" for this suite. @ 09/23/23 13:29:48.716
• [24.442 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/23/23 13:29:48.722
  Sep 23 13:29:48.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:29:48.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:48.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:48.74
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:29:48.743
  STEP: Saw pod success @ 09/23/23 13:29:52.764
  Sep 23 13:29:52.767: INFO: Trying to get logs from node ip-172-31-84-196 pod downwardapi-volume-dcf59570-c929-4710-90e0-493f8f65f1d7 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:29:52.774
  Sep 23 13:29:52.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3217" for this suite. @ 09/23/23 13:29:52.796
• [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/23/23 13:29:52.803
  Sep 23 13:29:52.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 13:29:52.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:52.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:52.818
  STEP: validating cluster-info @ 09/23/23 13:29:52.821
  Sep 23 13:29:52.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9540 cluster-info'
  Sep 23 13:29:52.877: INFO: stderr: ""
  Sep 23 13:29:52.877: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep 23 13:29:52.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9540" for this suite. @ 09/23/23 13:29:52.882
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/23/23 13:29:52.888
  Sep 23 13:29:52.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename events @ 09/23/23 13:29:52.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:52.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:52.903
  STEP: Create set of events @ 09/23/23 13:29:52.906
  STEP: get a list of Events with a label in the current namespace @ 09/23/23 13:29:52.923
  STEP: delete a list of events @ 09/23/23 13:29:52.927
  Sep 23 13:29:52.927: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/23/23 13:29:52.951
  Sep 23 13:29:52.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1793" for this suite. @ 09/23/23 13:29:52.957
• [0.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/23/23 13:29:52.963
  Sep 23 13:29:52.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 13:29:52.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:29:52.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:29:52.98
  STEP: create the rc1 @ 09/23/23 13:29:52.987
  STEP: create the rc2 @ 09/23/23 13:29:52.992
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/23/23 13:29:59.004
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/23/23 13:29:59.342
  STEP: wait for the rc to be deleted @ 09/23/23 13:29:59.349
  Sep 23 13:30:04.363: INFO: 69 pods remaining
  Sep 23 13:30:04.363: INFO: 69 pods has nil DeletionTimestamp
  Sep 23 13:30:04.363: INFO: 
  STEP: Gathering metrics @ 09/23/23 13:30:09.36
  W0923 13:30:09.366304      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 23 13:30:09.366: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 23 13:30:09.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-287fn" in namespace "gc-8721"
  Sep 23 13:30:09.380: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mkjn" in namespace "gc-8721"
  Sep 23 13:30:09.390: INFO: Deleting pod "simpletest-rc-to-be-deleted-2plns" in namespace "gc-8721"
  Sep 23 13:30:09.404: INFO: Deleting pod "simpletest-rc-to-be-deleted-42hjb" in namespace "gc-8721"
  Sep 23 13:30:09.415: INFO: Deleting pod "simpletest-rc-to-be-deleted-44sk9" in namespace "gc-8721"
  Sep 23 13:30:09.429: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g822" in namespace "gc-8721"
  Sep 23 13:30:09.443: INFO: Deleting pod "simpletest-rc-to-be-deleted-4sxg4" in namespace "gc-8721"
  Sep 23 13:30:09.458: INFO: Deleting pod "simpletest-rc-to-be-deleted-54k6k" in namespace "gc-8721"
  Sep 23 13:30:09.468: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dmfj" in namespace "gc-8721"
  Sep 23 13:30:09.479: INFO: Deleting pod "simpletest-rc-to-be-deleted-6fbk2" in namespace "gc-8721"
  Sep 23 13:30:09.494: INFO: Deleting pod "simpletest-rc-to-be-deleted-6wnq4" in namespace "gc-8721"
  Sep 23 13:30:09.504: INFO: Deleting pod "simpletest-rc-to-be-deleted-754pq" in namespace "gc-8721"
  Sep 23 13:30:09.519: INFO: Deleting pod "simpletest-rc-to-be-deleted-75vwg" in namespace "gc-8721"
  Sep 23 13:30:09.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-7csrt" in namespace "gc-8721"
  Sep 23 13:30:09.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-7j59q" in namespace "gc-8721"
  Sep 23 13:30:09.562: INFO: Deleting pod "simpletest-rc-to-be-deleted-88thj" in namespace "gc-8721"
  Sep 23 13:30:09.573: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ccrb" in namespace "gc-8721"
  Sep 23 13:30:09.587: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fzwm" in namespace "gc-8721"
  Sep 23 13:30:09.604: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t2t5" in namespace "gc-8721"
  Sep 23 13:30:09.617: INFO: Deleting pod "simpletest-rc-to-be-deleted-8v2b6" in namespace "gc-8721"
  Sep 23 13:30:09.634: INFO: Deleting pod "simpletest-rc-to-be-deleted-98wlk" in namespace "gc-8721"
  Sep 23 13:30:09.649: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xg47" in namespace "gc-8721"
  Sep 23 13:30:09.664: INFO: Deleting pod "simpletest-rc-to-be-deleted-bh5dj" in namespace "gc-8721"
  Sep 23 13:30:09.676: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhxcl" in namespace "gc-8721"
  Sep 23 13:30:09.691: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctpl8" in namespace "gc-8721"
  Sep 23 13:30:09.704: INFO: Deleting pod "simpletest-rc-to-be-deleted-d27b8" in namespace "gc-8721"
  Sep 23 13:30:09.717: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlg4j" in namespace "gc-8721"
  Sep 23 13:30:09.729: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6s6r" in namespace "gc-8721"
  Sep 23 13:30:09.745: INFO: Deleting pod "simpletest-rc-to-be-deleted-fbqx8" in namespace "gc-8721"
  Sep 23 13:30:09.755: INFO: Deleting pod "simpletest-rc-to-be-deleted-fcsg5" in namespace "gc-8721"
  Sep 23 13:30:09.779: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgntd" in namespace "gc-8721"
  Sep 23 13:30:09.790: INFO: Deleting pod "simpletest-rc-to-be-deleted-frchl" in namespace "gc-8721"
  Sep 23 13:30:09.804: INFO: Deleting pod "simpletest-rc-to-be-deleted-frsnw" in namespace "gc-8721"
  Sep 23 13:30:09.818: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxfts" in namespace "gc-8721"
  Sep 23 13:30:09.830: INFO: Deleting pod "simpletest-rc-to-be-deleted-g6gqw" in namespace "gc-8721"
  Sep 23 13:30:09.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-g76cd" in namespace "gc-8721"
  Sep 23 13:30:09.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-g92rv" in namespace "gc-8721"
  Sep 23 13:30:09.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpgbb" in namespace "gc-8721"
  Sep 23 13:30:09.884: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpmrc" in namespace "gc-8721"
  Sep 23 13:30:09.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-gsjs4" in namespace "gc-8721"
  Sep 23 13:30:09.914: INFO: Deleting pod "simpletest-rc-to-be-deleted-h56vr" in namespace "gc-8721"
  Sep 23 13:30:09.928: INFO: Deleting pod "simpletest-rc-to-be-deleted-h96lk" in namespace "gc-8721"
  Sep 23 13:30:09.943: INFO: Deleting pod "simpletest-rc-to-be-deleted-hhkl4" in namespace "gc-8721"
  Sep 23 13:30:09.957: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkmvh" in namespace "gc-8721"
  Sep 23 13:30:09.970: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2mlf" in namespace "gc-8721"
  Sep 23 13:30:09.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-j76hb" in namespace "gc-8721"
  Sep 23 13:30:09.999: INFO: Deleting pod "simpletest-rc-to-be-deleted-jm64p" in namespace "gc-8721"
  Sep 23 13:30:10.010: INFO: Deleting pod "simpletest-rc-to-be-deleted-jswtc" in namespace "gc-8721"
  Sep 23 13:30:10.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-jv8vc" in namespace "gc-8721"
  Sep 23 13:30:10.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-k62hl" in namespace "gc-8721"
  Sep 23 13:30:10.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8721" for this suite. @ 09/23/23 13:30:10.053
• [17.099 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/23/23 13:30:10.064
  Sep 23 13:30:10.064: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:30:10.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:10.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:10.081
  STEP: creating service in namespace services-581 @ 09/23/23 13:30:10.084
  STEP: creating service affinity-clusterip-transition in namespace services-581 @ 09/23/23 13:30:10.084
  STEP: creating replication controller affinity-clusterip-transition in namespace services-581 @ 09/23/23 13:30:10.096
  I0923 13:30:10.104297      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-581, replica count: 3
  I0923 13:30:13.154866      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 13:30:13.161: INFO: Creating new exec pod
  Sep 23 13:30:16.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-581 exec execpod-affinityvtf48 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep 23 13:30:16.335: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep 23 13:30:16.335: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:30:16.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-581 exec execpod-affinityvtf48 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.65 80'
  Sep 23 13:30:16.486: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.65 80\nConnection to 10.152.183.65 80 port [tcp/http] succeeded!\n"
  Sep 23 13:30:16.486: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:30:16.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-581 exec execpod-affinityvtf48 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.65:80/ ; done'
  Sep 23 13:30:16.718: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n"
  Sep 23 13:30:16.718: INFO: stdout: "\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-b7v4l\naffinity-clusterip-transition-b7v4l\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-b7v4l\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-b7v4l\naffinity-clusterip-transition-b7v4l\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-b7v4l\naffinity-clusterip-transition-t5g7p\naffinity-clusterip-transition-b7v4l"
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-t5g7p
  Sep 23 13:30:16.718: INFO: Received response from host: affinity-clusterip-transition-b7v4l
  Sep 23 13:30:16.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-581 exec execpod-affinityvtf48 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.65:80/ ; done'
  Sep 23 13:30:16.927: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.65:80/\n"
  Sep 23 13:30:16.927: INFO: stdout: "\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm\naffinity-clusterip-transition-v57tm"
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Received response from host: affinity-clusterip-transition-v57tm
  Sep 23 13:30:16.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:30:16.937: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-581, will wait for the garbage collector to delete the pods @ 09/23/23 13:30:16.954
  Sep 23 13:30:17.015: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.961867ms
  Sep 23 13:30:17.116: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.894892ms
  STEP: Destroying namespace "services-581" for this suite. @ 09/23/23 13:30:20.235
• [10.177 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/23/23 13:30:20.241
  Sep 23 13:30:20.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:30:20.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:20.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:20.259
  STEP: Saw pod success @ 09/23/23 13:30:26.311
  Sep 23 13:30:26.315: INFO: Trying to get logs from node ip-172-31-84-196 pod client-envvars-52705be4-03a4-4a31-9360-a2e9b6af2e5c container env3cont: <nil>
  STEP: delete the pod @ 09/23/23 13:30:26.323
  Sep 23 13:30:26.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9228" for this suite. @ 09/23/23 13:30:26.343
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/23/23 13:30:26.352
  Sep 23 13:30:26.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:30:26.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:26.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:26.367
  STEP: Creating a pod to test downward api env vars @ 09/23/23 13:30:26.37
  STEP: Saw pod success @ 09/23/23 13:30:30.39
  Sep 23 13:30:30.394: INFO: Trying to get logs from node ip-172-31-84-196 pod downward-api-862d5fbe-5cb3-4376-881f-757ae7dfc613 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:30:30.402
  Sep 23 13:30:30.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7020" for this suite. @ 09/23/23 13:30:30.422
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/23/23 13:30:30.431
  Sep 23 13:30:30.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:30:30.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:30.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:30.449
  STEP: Creating a pod to test downward api env vars @ 09/23/23 13:30:30.452
  STEP: Saw pod success @ 09/23/23 13:30:34.476
  Sep 23 13:30:34.479: INFO: Trying to get logs from node ip-172-31-84-196 pod downward-api-68fdb55a-ddec-4c1a-9494-d7a49deff5ab container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:30:34.49
  Sep 23 13:30:34.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1893" for this suite. @ 09/23/23 13:30:34.512
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/23/23 13:30:34.522
  Sep 23 13:30:34.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 13:30:34.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:34.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:34.537
  STEP: creating Agnhost RC @ 09/23/23 13:30:34.54
  Sep 23 13:30:34.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9039 create -f -'
  Sep 23 13:30:34.778: INFO: stderr: ""
  Sep 23 13:30:34.778: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/23/23 13:30:34.778
  Sep 23 13:30:35.783: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 13:30:35.783: INFO: Found 0 / 1
  Sep 23 13:30:36.782: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 13:30:36.782: INFO: Found 1 / 1
  Sep 23 13:30:36.782: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/23/23 13:30:36.782
  Sep 23 13:30:36.785: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 13:30:36.785: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 23 13:30:36.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-9039 patch pod agnhost-primary-xhk7v -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep 23 13:30:36.851: INFO: stderr: ""
  Sep 23 13:30:36.851: INFO: stdout: "pod/agnhost-primary-xhk7v patched\n"
  STEP: checking annotations @ 09/23/23 13:30:36.851
  Sep 23 13:30:36.854: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 23 13:30:36.854: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 23 13:30:36.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9039" for this suite. @ 09/23/23 13:30:36.858
• [2.342 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/23/23 13:30:36.864
  Sep 23 13:30:36.864: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename podtemplate @ 09/23/23 13:30:36.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:36.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:36.882
  STEP: Create set of pod templates @ 09/23/23 13:30:36.885
  Sep 23 13:30:36.889: INFO: created test-podtemplate-1
  Sep 23 13:30:36.894: INFO: created test-podtemplate-2
  Sep 23 13:30:36.900: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/23/23 13:30:36.9
  STEP: delete collection of pod templates @ 09/23/23 13:30:36.903
  Sep 23 13:30:36.903: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/23/23 13:30:36.92
  Sep 23 13:30:36.920: INFO: requesting list of pod templates to confirm quantity
  Sep 23 13:30:36.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6632" for this suite. @ 09/23/23 13:30:36.927
• [0.068 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/23/23 13:30:36.932
  Sep 23 13:30:36.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename security-context-test @ 09/23/23 13:30:36.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:36.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:36.949
  Sep 23 13:30:40.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8058" for this suite. @ 09/23/23 13:30:40.98
• [4.056 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/23/23 13:30:40.988
  Sep 23 13:30:40.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 13:30:40.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:30:41.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:30:41.004
  STEP: create the rc @ 09/23/23 13:30:41.011
  W0923 13:30:41.016409      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/23/23 13:30:47.023
  STEP: wait for the rc to be deleted @ 09/23/23 13:30:47.029
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/23/23 13:30:52.034
  STEP: Gathering metrics @ 09/23/23 13:31:22.047
  W0923 13:31:22.054445      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 23 13:31:22.054: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 23 13:31:22.054: INFO: Deleting pod "simpletest.rc-286dj" in namespace "gc-3659"
  Sep 23 13:31:22.067: INFO: Deleting pod "simpletest.rc-2h5d4" in namespace "gc-3659"
  Sep 23 13:31:22.078: INFO: Deleting pod "simpletest.rc-2kgrk" in namespace "gc-3659"
  Sep 23 13:31:22.090: INFO: Deleting pod "simpletest.rc-2pwr7" in namespace "gc-3659"
  Sep 23 13:31:22.107: INFO: Deleting pod "simpletest.rc-2z4r7" in namespace "gc-3659"
  Sep 23 13:31:22.123: INFO: Deleting pod "simpletest.rc-4hx8z" in namespace "gc-3659"
  Sep 23 13:31:22.134: INFO: Deleting pod "simpletest.rc-4l8qh" in namespace "gc-3659"
  Sep 23 13:31:22.145: INFO: Deleting pod "simpletest.rc-4r97h" in namespace "gc-3659"
  Sep 23 13:31:22.158: INFO: Deleting pod "simpletest.rc-592db" in namespace "gc-3659"
  Sep 23 13:31:22.174: INFO: Deleting pod "simpletest.rc-5czt7" in namespace "gc-3659"
  Sep 23 13:31:22.186: INFO: Deleting pod "simpletest.rc-5jpfz" in namespace "gc-3659"
  Sep 23 13:31:22.201: INFO: Deleting pod "simpletest.rc-5qcn6" in namespace "gc-3659"
  Sep 23 13:31:22.219: INFO: Deleting pod "simpletest.rc-65zfc" in namespace "gc-3659"
  Sep 23 13:31:22.232: INFO: Deleting pod "simpletest.rc-6dqfd" in namespace "gc-3659"
  Sep 23 13:31:22.247: INFO: Deleting pod "simpletest.rc-6fn77" in namespace "gc-3659"
  Sep 23 13:31:22.259: INFO: Deleting pod "simpletest.rc-6h82t" in namespace "gc-3659"
  Sep 23 13:31:22.274: INFO: Deleting pod "simpletest.rc-6wbwr" in namespace "gc-3659"
  Sep 23 13:31:22.288: INFO: Deleting pod "simpletest.rc-7657m" in namespace "gc-3659"
  Sep 23 13:31:22.301: INFO: Deleting pod "simpletest.rc-7mfxf" in namespace "gc-3659"
  Sep 23 13:31:22.315: INFO: Deleting pod "simpletest.rc-7n48r" in namespace "gc-3659"
  Sep 23 13:31:22.330: INFO: Deleting pod "simpletest.rc-7r9cj" in namespace "gc-3659"
  Sep 23 13:31:22.343: INFO: Deleting pod "simpletest.rc-8qh8m" in namespace "gc-3659"
  Sep 23 13:31:22.354: INFO: Deleting pod "simpletest.rc-8vgqb" in namespace "gc-3659"
  Sep 23 13:31:22.368: INFO: Deleting pod "simpletest.rc-92pn4" in namespace "gc-3659"
  Sep 23 13:31:22.383: INFO: Deleting pod "simpletest.rc-9xxzv" in namespace "gc-3659"
  Sep 23 13:31:22.403: INFO: Deleting pod "simpletest.rc-b2dst" in namespace "gc-3659"
  Sep 23 13:31:22.419: INFO: Deleting pod "simpletest.rc-bgmj2" in namespace "gc-3659"
  Sep 23 13:31:22.432: INFO: Deleting pod "simpletest.rc-bhmfw" in namespace "gc-3659"
  Sep 23 13:31:22.452: INFO: Deleting pod "simpletest.rc-bpd97" in namespace "gc-3659"
  Sep 23 13:31:22.464: INFO: Deleting pod "simpletest.rc-bpjlf" in namespace "gc-3659"
  Sep 23 13:31:22.479: INFO: Deleting pod "simpletest.rc-bzct6" in namespace "gc-3659"
  Sep 23 13:31:22.495: INFO: Deleting pod "simpletest.rc-c2jjs" in namespace "gc-3659"
  Sep 23 13:31:22.510: INFO: Deleting pod "simpletest.rc-c4v22" in namespace "gc-3659"
  Sep 23 13:31:22.527: INFO: Deleting pod "simpletest.rc-chhlg" in namespace "gc-3659"
  Sep 23 13:31:22.541: INFO: Deleting pod "simpletest.rc-d8lrf" in namespace "gc-3659"
  Sep 23 13:31:22.555: INFO: Deleting pod "simpletest.rc-dbsbs" in namespace "gc-3659"
  Sep 23 13:31:22.568: INFO: Deleting pod "simpletest.rc-djfqs" in namespace "gc-3659"
  Sep 23 13:31:22.585: INFO: Deleting pod "simpletest.rc-dmrcx" in namespace "gc-3659"
  Sep 23 13:31:22.597: INFO: Deleting pod "simpletest.rc-dmv6l" in namespace "gc-3659"
  Sep 23 13:31:22.611: INFO: Deleting pod "simpletest.rc-f8v88" in namespace "gc-3659"
  Sep 23 13:31:22.625: INFO: Deleting pod "simpletest.rc-f9lqc" in namespace "gc-3659"
  Sep 23 13:31:22.638: INFO: Deleting pod "simpletest.rc-fbnt5" in namespace "gc-3659"
  Sep 23 13:31:22.658: INFO: Deleting pod "simpletest.rc-fhkck" in namespace "gc-3659"
  Sep 23 13:31:22.671: INFO: Deleting pod "simpletest.rc-fmlhx" in namespace "gc-3659"
  Sep 23 13:31:22.687: INFO: Deleting pod "simpletest.rc-fr8zd" in namespace "gc-3659"
  Sep 23 13:31:22.702: INFO: Deleting pod "simpletest.rc-fsf7j" in namespace "gc-3659"
  Sep 23 13:31:22.716: INFO: Deleting pod "simpletest.rc-g2gmb" in namespace "gc-3659"
  Sep 23 13:31:22.729: INFO: Deleting pod "simpletest.rc-g2tdz" in namespace "gc-3659"
  Sep 23 13:31:22.746: INFO: Deleting pod "simpletest.rc-g7kqv" in namespace "gc-3659"
  Sep 23 13:31:22.760: INFO: Deleting pod "simpletest.rc-gltgl" in namespace "gc-3659"
  Sep 23 13:31:22.781: INFO: Deleting pod "simpletest.rc-gq87f" in namespace "gc-3659"
  Sep 23 13:31:22.796: INFO: Deleting pod "simpletest.rc-gxh2d" in namespace "gc-3659"
  Sep 23 13:31:22.810: INFO: Deleting pod "simpletest.rc-h95fp" in namespace "gc-3659"
  Sep 23 13:31:22.830: INFO: Deleting pod "simpletest.rc-h9mgc" in namespace "gc-3659"
  Sep 23 13:31:22.848: INFO: Deleting pod "simpletest.rc-hbk96" in namespace "gc-3659"
  Sep 23 13:31:22.860: INFO: Deleting pod "simpletest.rc-hjcvq" in namespace "gc-3659"
  Sep 23 13:31:22.872: INFO: Deleting pod "simpletest.rc-hlhhv" in namespace "gc-3659"
  Sep 23 13:31:22.892: INFO: Deleting pod "simpletest.rc-hrsdz" in namespace "gc-3659"
  Sep 23 13:31:22.907: INFO: Deleting pod "simpletest.rc-j588t" in namespace "gc-3659"
  Sep 23 13:31:22.920: INFO: Deleting pod "simpletest.rc-j6ckr" in namespace "gc-3659"
  Sep 23 13:31:22.935: INFO: Deleting pod "simpletest.rc-kcmd6" in namespace "gc-3659"
  Sep 23 13:31:22.947: INFO: Deleting pod "simpletest.rc-kdlvp" in namespace "gc-3659"
  Sep 23 13:31:22.975: INFO: Deleting pod "simpletest.rc-kpwqj" in namespace "gc-3659"
  Sep 23 13:31:23.002: INFO: Deleting pod "simpletest.rc-kzggq" in namespace "gc-3659"
  Sep 23 13:31:23.016: INFO: Deleting pod "simpletest.rc-ldcwh" in namespace "gc-3659"
  Sep 23 13:31:23.029: INFO: Deleting pod "simpletest.rc-llpqh" in namespace "gc-3659"
  Sep 23 13:31:23.046: INFO: Deleting pod "simpletest.rc-lr8hf" in namespace "gc-3659"
  Sep 23 13:31:23.059: INFO: Deleting pod "simpletest.rc-lvf8l" in namespace "gc-3659"
  Sep 23 13:31:23.075: INFO: Deleting pod "simpletest.rc-m45hn" in namespace "gc-3659"
  Sep 23 13:31:23.098: INFO: Deleting pod "simpletest.rc-m9z6k" in namespace "gc-3659"
  Sep 23 13:31:23.153: INFO: Deleting pod "simpletest.rc-mhbvg" in namespace "gc-3659"
  Sep 23 13:31:23.197: INFO: Deleting pod "simpletest.rc-mqc9z" in namespace "gc-3659"
  Sep 23 13:31:23.253: INFO: Deleting pod "simpletest.rc-mthv8" in namespace "gc-3659"
  Sep 23 13:31:23.302: INFO: Deleting pod "simpletest.rc-n4548" in namespace "gc-3659"
  Sep 23 13:31:23.351: INFO: Deleting pod "simpletest.rc-n9cpb" in namespace "gc-3659"
  Sep 23 13:31:23.403: INFO: Deleting pod "simpletest.rc-nb66v" in namespace "gc-3659"
  Sep 23 13:31:23.467: INFO: Deleting pod "simpletest.rc-nbzbh" in namespace "gc-3659"
  Sep 23 13:31:23.507: INFO: Deleting pod "simpletest.rc-ngvjf" in namespace "gc-3659"
  Sep 23 13:31:23.555: INFO: Deleting pod "simpletest.rc-nnf9x" in namespace "gc-3659"
  Sep 23 13:31:23.603: INFO: Deleting pod "simpletest.rc-pjghx" in namespace "gc-3659"
  Sep 23 13:31:23.652: INFO: Deleting pod "simpletest.rc-ql4bv" in namespace "gc-3659"
  Sep 23 13:31:23.701: INFO: Deleting pod "simpletest.rc-qlvpb" in namespace "gc-3659"
  Sep 23 13:31:23.754: INFO: Deleting pod "simpletest.rc-qmk4f" in namespace "gc-3659"
  Sep 23 13:31:23.801: INFO: Deleting pod "simpletest.rc-qv7qq" in namespace "gc-3659"
  Sep 23 13:31:23.849: INFO: Deleting pod "simpletest.rc-r2m55" in namespace "gc-3659"
  Sep 23 13:31:23.905: INFO: Deleting pod "simpletest.rc-r59w6" in namespace "gc-3659"
  Sep 23 13:31:23.956: INFO: Deleting pod "simpletest.rc-rnwf9" in namespace "gc-3659"
  Sep 23 13:31:24.012: INFO: Deleting pod "simpletest.rc-rt2sw" in namespace "gc-3659"
  Sep 23 13:31:24.050: INFO: Deleting pod "simpletest.rc-t9wgv" in namespace "gc-3659"
  Sep 23 13:31:24.112: INFO: Deleting pod "simpletest.rc-tgrbc" in namespace "gc-3659"
  Sep 23 13:31:24.163: INFO: Deleting pod "simpletest.rc-tm56m" in namespace "gc-3659"
  Sep 23 13:31:24.206: INFO: Deleting pod "simpletest.rc-tzjdd" in namespace "gc-3659"
  Sep 23 13:31:24.252: INFO: Deleting pod "simpletest.rc-v4pk9" in namespace "gc-3659"
  Sep 23 13:31:24.303: INFO: Deleting pod "simpletest.rc-vjkrw" in namespace "gc-3659"
  Sep 23 13:31:24.358: INFO: Deleting pod "simpletest.rc-vp9rs" in namespace "gc-3659"
  Sep 23 13:31:24.402: INFO: Deleting pod "simpletest.rc-vrlzd" in namespace "gc-3659"
  Sep 23 13:31:24.454: INFO: Deleting pod "simpletest.rc-vzjdl" in namespace "gc-3659"
  Sep 23 13:31:24.503: INFO: Deleting pod "simpletest.rc-wvgk8" in namespace "gc-3659"
  Sep 23 13:31:24.555: INFO: Deleting pod "simpletest.rc-x99s4" in namespace "gc-3659"
  Sep 23 13:31:24.598: INFO: Deleting pod "simpletest.rc-zbp4g" in namespace "gc-3659"
  Sep 23 13:31:24.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3659" for this suite. @ 09/23/23 13:31:24.694
• [43.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/23/23 13:31:24.756
  Sep 23 13:31:24.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename conformance-tests @ 09/23/23 13:31:24.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:31:24.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:31:24.788
  STEP: Getting node addresses @ 09/23/23 13:31:24.794
  Sep 23 13:31:24.794: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep 23 13:31:24.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7772" for this suite. @ 09/23/23 13:31:24.818
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/23/23 13:31:24.833
  Sep 23 13:31:24.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:31:24.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:31:24.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:31:24.862
  STEP: Creating the pod @ 09/23/23 13:31:24.865
  Sep 23 13:31:27.419: INFO: Successfully updated pod "labelsupdate3abfba49-07b6-4e37-8c40-d28014b6d5ba"
  Sep 23 13:31:29.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8552" for this suite. @ 09/23/23 13:31:29.44
• [4.614 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/23/23 13:31:29.447
  Sep 23 13:31:29.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 13:31:29.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:31:29.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:31:29.467
  STEP: creating the pod @ 09/23/23 13:31:29.47
  STEP: waiting for pod running @ 09/23/23 13:31:29.48
  STEP: creating a file in subpath @ 09/23/23 13:31:31.491
  Sep 23 13:31:31.496: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4699 PodName:var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:31:31.496: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:31:31.496: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:31:31.496: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4699/pods/var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/23/23 13:31:31.585
  Sep 23 13:31:31.589: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4699 PodName:var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:31:31.589: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:31:31.590: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:31:31.590: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4699/pods/var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/23/23 13:31:31.672
  Sep 23 13:31:32.186: INFO: Successfully updated pod "var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f"
  STEP: waiting for annotated pod running @ 09/23/23 13:31:32.186
  STEP: deleting the pod gracefully @ 09/23/23 13:31:32.189
  Sep 23 13:31:32.189: INFO: Deleting pod "var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f" in namespace "var-expansion-4699"
  Sep 23 13:31:32.202: INFO: Wait up to 5m0s for pod "var-expansion-5498f015-eb09-4d76-a0aa-0b223499e73f" to be fully deleted
  Sep 23 13:32:04.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4699" for this suite. @ 09/23/23 13:32:04.291
• [34.850 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/23/23 13:32:04.298
  Sep 23 13:32:04.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/23/23 13:32:04.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:04.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:04.315
  STEP: Creating 50 configmaps @ 09/23/23 13:32:04.318
  STEP: Creating RC which spawns configmap-volume pods @ 09/23/23 13:32:04.553
  Sep 23 13:32:04.658: INFO: Pod name wrapped-volume-race-660ad0bb-65f9-472a-a272-540d6d2713b3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/23/23 13:32:04.658
  STEP: Creating RC which spawns configmap-volume pods @ 09/23/23 13:32:08.732
  Sep 23 13:32:08.749: INFO: Pod name wrapped-volume-race-6648766b-dc08-44ef-834a-b7429648fbc3: Found 0 pods out of 5
  Sep 23 13:32:13.757: INFO: Pod name wrapped-volume-race-6648766b-dc08-44ef-834a-b7429648fbc3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/23/23 13:32:13.757
  STEP: Creating RC which spawns configmap-volume pods @ 09/23/23 13:32:13.781
  Sep 23 13:32:13.795: INFO: Pod name wrapped-volume-race-89568f70-6e69-48b1-a9b4-8d124db2b033: Found 0 pods out of 5
  Sep 23 13:32:18.802: INFO: Pod name wrapped-volume-race-89568f70-6e69-48b1-a9b4-8d124db2b033: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/23/23 13:32:18.802
  Sep 23 13:32:18.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-89568f70-6e69-48b1-a9b4-8d124db2b033 in namespace emptydir-wrapper-7442, will wait for the garbage collector to delete the pods @ 09/23/23 13:32:18.825
  Sep 23 13:32:18.886: INFO: Deleting ReplicationController wrapped-volume-race-89568f70-6e69-48b1-a9b4-8d124db2b033 took: 8.219856ms
  Sep 23 13:32:18.987: INFO: Terminating ReplicationController wrapped-volume-race-89568f70-6e69-48b1-a9b4-8d124db2b033 pods took: 100.816498ms
  STEP: deleting ReplicationController wrapped-volume-race-6648766b-dc08-44ef-834a-b7429648fbc3 in namespace emptydir-wrapper-7442, will wait for the garbage collector to delete the pods @ 09/23/23 13:32:20.188
  Sep 23 13:32:20.251: INFO: Deleting ReplicationController wrapped-volume-race-6648766b-dc08-44ef-834a-b7429648fbc3 took: 8.261631ms
  Sep 23 13:32:20.352: INFO: Terminating ReplicationController wrapped-volume-race-6648766b-dc08-44ef-834a-b7429648fbc3 pods took: 100.472423ms
  STEP: deleting ReplicationController wrapped-volume-race-660ad0bb-65f9-472a-a272-540d6d2713b3 in namespace emptydir-wrapper-7442, will wait for the garbage collector to delete the pods @ 09/23/23 13:32:21.953
  Sep 23 13:32:22.015: INFO: Deleting ReplicationController wrapped-volume-race-660ad0bb-65f9-472a-a272-540d6d2713b3 took: 8.682056ms
  Sep 23 13:32:22.116: INFO: Terminating ReplicationController wrapped-volume-race-660ad0bb-65f9-472a-a272-540d6d2713b3 pods took: 100.28338ms
  STEP: Cleaning up the configMaps @ 09/23/23 13:32:23.816
  STEP: Destroying namespace "emptydir-wrapper-7442" for this suite. @ 09/23/23 13:32:24.134
• [19.842 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/23/23 13:32:24.141
  Sep 23 13:32:24.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename gc @ 09/23/23 13:32:24.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:24.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:24.157
  STEP: create the rc @ 09/23/23 13:32:24.163
  W0923 13:32:24.167614      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/23/23 13:32:30.173
  STEP: wait for the rc to be deleted @ 09/23/23 13:32:30.179
  Sep 23 13:32:31.200: INFO: 80 pods remaining
  Sep 23 13:32:31.200: INFO: 80 pods has nil DeletionTimestamp
  Sep 23 13:32:31.200: INFO: 
  Sep 23 13:32:32.190: INFO: 71 pods remaining
  Sep 23 13:32:32.190: INFO: 71 pods has nil DeletionTimestamp
  Sep 23 13:32:32.190: INFO: 
  Sep 23 13:32:33.216: INFO: 60 pods remaining
  Sep 23 13:32:33.216: INFO: 60 pods has nil DeletionTimestamp
  Sep 23 13:32:33.216: INFO: 
  Sep 23 13:32:34.190: INFO: 40 pods remaining
  Sep 23 13:32:34.191: INFO: 40 pods has nil DeletionTimestamp
  Sep 23 13:32:34.191: INFO: 
  Sep 23 13:32:35.189: INFO: 31 pods remaining
  Sep 23 13:32:35.189: INFO: 30 pods has nil DeletionTimestamp
  Sep 23 13:32:35.189: INFO: 
  Sep 23 13:32:36.188: INFO: 20 pods remaining
  Sep 23 13:32:36.188: INFO: 20 pods has nil DeletionTimestamp
  Sep 23 13:32:36.188: INFO: 
  STEP: Gathering metrics @ 09/23/23 13:32:37.186
  W0923 13:32:37.192052      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 23 13:32:37.192: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 23 13:32:37.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1498" for this suite. @ 09/23/23 13:32:37.198
• [13.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/23/23 13:32:37.208
  Sep 23 13:32:37.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:32:37.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:37.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:37.228
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1055 @ 09/23/23 13:32:37.23
  STEP: changing the ExternalName service to type=ClusterIP @ 09/23/23 13:32:37.239
  STEP: creating replication controller externalname-service in namespace services-1055 @ 09/23/23 13:32:37.256
  I0923 13:32:37.265064      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1055, replica count: 2
  I0923 13:32:40.317827      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 13:32:40.317: INFO: Creating new exec pod
  Sep 23 13:32:43.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-1055 exec execpoddb55k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 23 13:32:43.506: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 23 13:32:43.506: INFO: stdout: "externalname-service-x9gpq"
  Sep 23 13:32:43.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-1055 exec execpoddb55k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.239 80'
  Sep 23 13:32:43.696: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.239 80\nConnection to 10.152.183.239 80 port [tcp/http] succeeded!\n"
  Sep 23 13:32:43.696: INFO: stdout: "externalname-service-77pbc"
  Sep 23 13:32:43.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:32:43.700: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-1055" for this suite. @ 09/23/23 13:32:43.72
• [6.522 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/23/23 13:32:43.73
  Sep 23 13:32:43.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename secrets @ 09/23/23 13:32:43.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:43.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:43.747
  STEP: Creating secret with name secret-test-2587a478-1d0e-47db-b20d-10f7247e3ed1 @ 09/23/23 13:32:43.75
  STEP: Creating a pod to test consume secrets @ 09/23/23 13:32:43.759
  STEP: Saw pod success @ 09/23/23 13:32:47.78
  Sep 23 13:32:47.784: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-secrets-9633a2a7-4490-49c5-9fd7-3e1f946b2f71 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 13:32:47.805
  Sep 23 13:32:47.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4604" for this suite. @ 09/23/23 13:32:47.832
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/23/23 13:32:47.843
  Sep 23 13:32:47.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 13:32:47.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:47.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:47.862
  STEP: Creating configMap that has name configmap-test-emptyKey-77cbf2d9-41fe-413c-8a26-f90da2e2caf2 @ 09/23/23 13:32:47.865
  Sep 23 13:32:47.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2551" for this suite. @ 09/23/23 13:32:47.874
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/23/23 13:32:47.882
  Sep 23 13:32:47.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename runtimeclass @ 09/23/23 13:32:47.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:47.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:47.899
  Sep 23 13:32:49.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2999" for this suite. @ 09/23/23 13:32:49.931
• [2.056 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/23/23 13:32:49.939
  Sep 23 13:32:49.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 13:32:49.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:32:49.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:32:49.954
  Sep 23 13:32:49.964: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Sep 23 13:32:54.970: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/23/23 13:32:54.97
  Sep 23 13:32:54.970: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Sep 23 13:32:56.975: INFO: Creating deployment "test-rollover-deployment"
  Sep 23 13:32:56.984: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Sep 23 13:32:58.992: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep 23 13:32:58.999: INFO: Ensure that both replica sets have 1 created replica
  Sep 23 13:32:59.005: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep 23 13:32:59.016: INFO: Updating deployment test-rollover-deployment
  Sep 23 13:32:59.016: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Sep 23 13:33:01.024: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep 23 13:33:01.031: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep 23 13:33:01.038: INFO: all replica sets need to contain the pod-template-hash label
  Sep 23 13:33:01.038: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:33:03.047: INFO: all replica sets need to contain the pod-template-hash label
  Sep 23 13:33:03.047: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:33:05.046: INFO: all replica sets need to contain the pod-template-hash label
  Sep 23 13:33:05.046: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:33:07.047: INFO: all replica sets need to contain the pod-template-hash label
  Sep 23 13:33:07.047: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:33:09.047: INFO: all replica sets need to contain the pod-template-hash label
  Sep 23 13:33:09.047: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 23, 13, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 23, 13, 32, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 23 13:33:11.046: INFO: 
  Sep 23 13:33:11.046: INFO: Ensure that both old replica sets have no replicas
  Sep 23 13:33:11.056: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1655",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f951e95c-b69c-45af-a972-e9d1cc174228",
      ResourceVersion: (string) (len=5) "39242",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072776,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072777,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 13:33:11.062: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1655",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09b3d591-f277-4588-abb7-4353e5d8459b",
      ResourceVersion: (string) (len=5) "39232",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072779,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f951e95c-b69c-45af-a972-e9d1cc174228",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 35 31 65 39  35 63 2d 62 36 39 63 2d  |\"f951e95c-b69c-|
              00000120  34 35 61 66 2d 61 39 37  32 2d 65 39 64 31 63 63  |45af-a972-e9d1cc|
              00000130  31 37 34 32 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |174228\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:33:11.063: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep 23 13:33:11.063: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1655",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50354733-44f0-4484-b5fc-1a2976e95045",
      ResourceVersion: (string) (len=5) "39241",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f951e95c-b69c-45af-a972-e9d1cc174228",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 39 35 31 65 39 35 63  2d 62 36 39 63 2d 34 35  |f951e95c-b69c-45|
              000000c0  61 66 2d 61 39 37 32 2d  65 39 64 31 63 63 31 37  |af-a972-e9d1cc17|
              000000d0  34 32 32 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4228\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:33:11.064: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1655",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb8e6a62-e5ff-4e91-9d68-0dbbc8b79089",
      ResourceVersion: (string) (len=5) "39188",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072776,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f951e95c-b69c-45af-a972-e9d1cc174228",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 35 31 65 39  35 63 2d 62 36 39 63 2d  |\"f951e95c-b69c-|
              00000120  34 35 61 66 2d 61 39 37  32 2d 65 39 64 31 63 63  |45af-a972-e9d1cc|
              00000130  31 37 34 32 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |174228\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:33:11.069: INFO: Pod "test-rollover-deployment-5d484bf7f9-dr62p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-dr62p",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-1655",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72ca4c4b-dafa-418b-b3c7-3f5f8dc12232",
      ResourceVersion: (string) (len=5) "39207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072779,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "09b3d591-f277-4588-abb7-4353e5d8459b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  62 33 64 35 39 31 2d 66  |d\":\"09b3d591-f|
              00000090  32 37 37 2d 34 35 38 38  2d 61 62 62 37 2d 34 33  |277-4588-abb7-43|
              000000a0  35 33 65 35 64 38 34 35  39 62 5c 22 7d 22 3a 7b  |53e5d8459b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  38 38 2e 32 30 38 5c 22  |192.168.88.208\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h95r7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h95r7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072780,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072779,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.84.196",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "192.168.88.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.88.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072779,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831072779,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://257254aab0a27694fd1110413a9cfe2f9c20c2cffaaee1135f7d8f031326ab77",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:33:11.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1655" for this suite. @ 09/23/23 13:33:11.075
• [21.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/23/23 13:33:11.082
  Sep 23 13:33:11.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 13:33:11.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:11.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:11.1
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/23/23 13:33:11.102
  Sep 23 13:33:11.109: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7039  d5299041-99d9-45e0-b868-020477a4f2eb 39252 0 2023-09-23 13:33:11 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-23 13:33:11 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zxdbr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zxdbr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/23/23 13:33:13.124
  Sep 23 13:33:13.124: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7039 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:33:13.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:33:13.125: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:33:13.125: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7039/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/23/23 13:33:13.22
  Sep 23 13:33:13.220: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7039 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:33:13.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:33:13.221: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:33:13.221: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7039/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:33:13.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:33:13.333: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-7039" for this suite. @ 09/23/23 13:33:13.345
• [2.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/23/23 13:33:13.353
  Sep 23 13:33:13.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename tables @ 09/23/23 13:33:13.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:13.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:13.368
  Sep 23 13:33:13.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5223" for this suite. @ 09/23/23 13:33:13.378
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/23/23 13:33:13.385
  Sep 23 13:33:13.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 13:33:13.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:13.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:13.399
  STEP: validating api versions @ 09/23/23 13:33:13.402
  Sep 23 13:33:13.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-5600 api-versions'
  Sep 23 13:33:13.454: INFO: stderr: ""
  Sep 23 13:33:13.454: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Sep 23 13:33:13.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5600" for this suite. @ 09/23/23 13:33:13.459
• [0.082 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/23/23 13:33:13.467
  Sep 23 13:33:13.467: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename statefulset @ 09/23/23 13:33:13.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:13.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:13.485
  STEP: Creating service test in namespace statefulset-2674 @ 09/23/23 13:33:13.487
  STEP: Creating statefulset ss in namespace statefulset-2674 @ 09/23/23 13:33:13.492
  Sep 23 13:33:13.505: INFO: Found 0 stateful pods, waiting for 1
  Sep 23 13:33:23.509: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/23/23 13:33:23.515
  STEP: updating a scale subresource @ 09/23/23 13:33:23.519
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/23/23 13:33:23.525
  STEP: Patch a scale subresource @ 09/23/23 13:33:23.528
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/23/23 13:33:23.536
  Sep 23 13:33:23.541: INFO: Deleting all statefulset in ns statefulset-2674
  Sep 23 13:33:23.547: INFO: Scaling statefulset ss to 0
  Sep 23 13:33:33.567: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 23 13:33:33.570: INFO: Deleting statefulset ss
  Sep 23 13:33:33.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2674" for this suite. @ 09/23/23 13:33:33.588
• [20.128 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/23/23 13:33:33.596
  Sep 23 13:33:33.596: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:33:33.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:33.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:33.612
  STEP: Setting up server cert @ 09/23/23 13:33:33.634
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:33:33.959
  STEP: Deploying the webhook pod @ 09/23/23 13:33:33.966
  STEP: Wait for the deployment to be ready @ 09/23/23 13:33:33.978
  Sep 23 13:33:33.984: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/23/23 13:33:35.997
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:33:36.009
  Sep 23 13:33:37.010: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 23 13:33:37.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9803-crds.webhook.example.com via the AdmissionRegistration API @ 09/23/23 13:33:37.528
  STEP: Creating a custom resource while v1 is storage version @ 09/23/23 13:33:37.543
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/23/23 13:33:39.577
  STEP: Patching the custom resource while v2 is storage version @ 09/23/23 13:33:39.593
  Sep 23 13:33:39.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6821" for this suite. @ 09/23/23 13:33:40.192
  STEP: Destroying namespace "webhook-markers-6826" for this suite. @ 09/23/23 13:33:40.202
• [6.613 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/23/23 13:33:40.209
  Sep 23 13:33:40.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename svcaccounts @ 09/23/23 13:33:40.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:40.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:40.224
  STEP: creating a ServiceAccount @ 09/23/23 13:33:40.227
  STEP: watching for the ServiceAccount to be added @ 09/23/23 13:33:40.238
  STEP: patching the ServiceAccount @ 09/23/23 13:33:40.244
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/23/23 13:33:40.26
  STEP: deleting the ServiceAccount @ 09/23/23 13:33:40.263
  Sep 23 13:33:40.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2797" for this suite. @ 09/23/23 13:33:40.281
• [0.078 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/23/23 13:33:40.288
  Sep 23 13:33:40.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:33:40.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:40.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:40.305
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/23/23 13:33:40.307
  STEP: Saw pod success @ 09/23/23 13:33:44.334
  Sep 23 13:33:44.337: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-5102c8c6-a8e1-4a09-bc2b-6b8b69ee5daf container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:33:44.356
  Sep 23 13:33:44.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4279" for this suite. @ 09/23/23 13:33:44.378
• [4.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/23/23 13:33:44.386
  Sep 23 13:33:44.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pod-network-test @ 09/23/23 13:33:44.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:33:44.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:33:44.406
  STEP: Performing setup for networking test in namespace pod-network-test-6692 @ 09/23/23 13:33:44.408
  STEP: creating a selector @ 09/23/23 13:33:44.408
  STEP: Creating the service pods in kubernetes @ 09/23/23 13:33:44.408
  Sep 23 13:33:44.408: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/23/23 13:34:06.508
  Sep 23 13:34:08.541: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep 23 13:34:08.541: INFO: Going to poll 192.168.20.100 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep 23 13:34:08.544: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.20.100 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:34:08.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:34:08.545: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:34:08.545: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.20.100+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:34:09.631: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 23 13:34:09.631: INFO: Going to poll 192.168.55.97 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep 23 13:34:09.636: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.55.97 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:34:09.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:34:09.637: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:34:09.637: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.55.97+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:34:10.711: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 23 13:34:10.711: INFO: Going to poll 192.168.88.236 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep 23 13:34:10.714: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.88.236 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6692 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 23 13:34:10.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  Sep 23 13:34:10.715: INFO: ExecWithOptions: Clientset creation
  Sep 23 13:34:10.715: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6692/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.88.236+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 23 13:34:11.814: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 23 13:34:11.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6692" for this suite. @ 09/23/23 13:34:11.819
• [27.441 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/23/23 13:34:11.828
  Sep 23 13:34:11.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 13:34:11.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:11.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:11.844
  STEP: Creating configMap with name cm-test-opt-del-c064a719-f10d-404a-93eb-b0848af19a8c @ 09/23/23 13:34:11.849
  STEP: Creating configMap with name cm-test-opt-upd-1dc18698-81d1-45bf-b45b-871ae713ec47 @ 09/23/23 13:34:11.854
  STEP: Creating the pod @ 09/23/23 13:34:11.857
  STEP: Deleting configmap cm-test-opt-del-c064a719-f10d-404a-93eb-b0848af19a8c @ 09/23/23 13:34:13.9
  STEP: Updating configmap cm-test-opt-upd-1dc18698-81d1-45bf-b45b-871ae713ec47 @ 09/23/23 13:34:13.907
  STEP: Creating configMap with name cm-test-opt-create-da9613dc-1fda-4be7-9cc2-c2b680e501ac @ 09/23/23 13:34:13.911
  STEP: waiting to observe update in volume @ 09/23/23 13:34:13.916
  Sep 23 13:34:15.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2408" for this suite. @ 09/23/23 13:34:15.949
• [4.128 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/23/23 13:34:15.956
  Sep 23 13:34:15.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename disruption @ 09/23/23 13:34:15.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:15.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:15.972
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:34:15.979
  STEP: Updating PodDisruptionBudget status @ 09/23/23 13:34:17.987
  STEP: Waiting for all pods to be running @ 09/23/23 13:34:17.994
  Sep 23 13:34:18.000: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 09/23/23 13:34:20.005
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:34:20.016
  STEP: Patching PodDisruptionBudget status @ 09/23/23 13:34:20.023
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:34:20.032
  Sep 23 13:34:20.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7179" for this suite. @ 09/23/23 13:34:20.04
• [4.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/23/23 13:34:20.049
  Sep 23 13:34:20.049: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:34:20.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:20.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:20.064
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:34:20.066
  STEP: Saw pod success @ 09/23/23 13:34:24.088
  Sep 23 13:34:24.093: INFO: Trying to get logs from node ip-172-31-84-196 pod downwardapi-volume-285c3cf8-c460-4ba7-8a77-774ff8af9afc container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:34:24.107
  Sep 23 13:34:24.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6299" for this suite. @ 09/23/23 13:34:24.125
• [4.083 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/23/23 13:34:24.132
  Sep 23 13:34:24.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:34:24.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:24.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:24.148
  STEP: Creating configMap with name projected-configmap-test-volume-map-255eb4d9-bf8e-41b4-a452-6e0d38d0a017 @ 09/23/23 13:34:24.15
  STEP: Creating a pod to test consume configMaps @ 09/23/23 13:34:24.156
  STEP: Saw pod success @ 09/23/23 13:34:28.181
  Sep 23 13:34:28.184: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-projected-configmaps-7b64c0fd-9de5-4a46-8b90-5da774f8d559 container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:34:28.191
  Sep 23 13:34:28.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9114" for this suite. @ 09/23/23 13:34:28.213
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/23/23 13:34:28.22
  Sep 23 13:34:28.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-webhook @ 09/23/23 13:34:28.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:28.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:28.236
  STEP: Setting up server cert @ 09/23/23 13:34:28.238
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/23/23 13:34:28.399
  STEP: Deploying the custom resource conversion webhook pod @ 09/23/23 13:34:28.406
  STEP: Wait for the deployment to be ready @ 09/23/23 13:34:28.419
  Sep 23 13:34:28.426: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 13:34:30.437
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:34:30.448
  Sep 23 13:34:31.449: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 23 13:34:31.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Creating a v1 custom resource @ 09/23/23 13:34:34.014
  STEP: v2 custom resource should be converted @ 09/23/23 13:34:34.019
  Sep 23 13:34:34.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4553" for this suite. @ 09/23/23 13:34:34.584
• [6.372 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/23/23 13:34:34.593
  Sep 23 13:34:34.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename events @ 09/23/23 13:34:34.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:34.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:34.609
  STEP: creating a test event @ 09/23/23 13:34:34.612
  STEP: listing events in all namespaces @ 09/23/23 13:34:34.619
  STEP: listing events in test namespace @ 09/23/23 13:34:34.623
  STEP: listing events with field selection filtering on source @ 09/23/23 13:34:34.626
  STEP: listing events with field selection filtering on reportingController @ 09/23/23 13:34:34.63
  STEP: getting the test event @ 09/23/23 13:34:34.633
  STEP: patching the test event @ 09/23/23 13:34:34.637
  STEP: getting the test event @ 09/23/23 13:34:34.645
  STEP: updating the test event @ 09/23/23 13:34:34.648
  STEP: getting the test event @ 09/23/23 13:34:34.655
  STEP: deleting the test event @ 09/23/23 13:34:34.658
  STEP: listing events in all namespaces @ 09/23/23 13:34:34.666
  STEP: listing events in test namespace @ 09/23/23 13:34:34.67
  Sep 23 13:34:34.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2758" for this suite. @ 09/23/23 13:34:34.676
• [0.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/23/23 13:34:34.683
  Sep 23 13:34:34.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:34:34.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:34.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:34.699
  STEP: creating pod @ 09/23/23 13:34:34.703
  Sep 23 13:34:36.726: INFO: Pod pod-hostip-e574ef74-eed9-4fc4-9dca-9d03932db73b has hostIP: 172.31.77.156
  Sep 23 13:34:36.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1634" for this suite. @ 09/23/23 13:34:36.731
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/23/23 13:34:36.741
  Sep 23 13:34:36.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:34:36.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:36.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:36.758
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/23/23 13:34:36.76
  STEP: Saw pod success @ 09/23/23 13:34:40.782
  Sep 23 13:34:40.786: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-a21d6710-a778-4b37-bc2e-aae175161c0d container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:34:40.793
  Sep 23 13:34:40.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6814" for this suite. @ 09/23/23 13:34:40.81
• [4.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/23/23 13:34:40.817
  Sep 23 13:34:40.817: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename certificates @ 09/23/23 13:34:40.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:40.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:40.836
  STEP: getting /apis @ 09/23/23 13:34:41.337
  STEP: getting /apis/certificates.k8s.io @ 09/23/23 13:34:41.341
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/23/23 13:34:41.342
  STEP: creating @ 09/23/23 13:34:41.343
  STEP: getting @ 09/23/23 13:34:41.359
  STEP: listing @ 09/23/23 13:34:41.362
  STEP: watching @ 09/23/23 13:34:41.365
  Sep 23 13:34:41.365: INFO: starting watch
  STEP: patching @ 09/23/23 13:34:41.366
  STEP: updating @ 09/23/23 13:34:41.374
  Sep 23 13:34:41.378: INFO: waiting for watch events with expected annotations
  Sep 23 13:34:41.378: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/23/23 13:34:41.378
  STEP: patching /approval @ 09/23/23 13:34:41.384
  STEP: updating /approval @ 09/23/23 13:34:41.391
  STEP: getting /status @ 09/23/23 13:34:41.397
  STEP: patching /status @ 09/23/23 13:34:41.4
  STEP: updating /status @ 09/23/23 13:34:41.407
  STEP: deleting @ 09/23/23 13:34:41.414
  STEP: deleting a collection @ 09/23/23 13:34:41.427
  Sep 23 13:34:41.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6109" for this suite. @ 09/23/23 13:34:41.446
• [0.637 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/23/23 13:34:41.454
  Sep 23 13:34:41.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename dns @ 09/23/23 13:34:41.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:41.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:41.468
  STEP: Creating a test headless service @ 09/23/23 13:34:41.471
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9999.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9999.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9999.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9999.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_udp@PTR;check="$$(dig +tcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_tcp@PTR;sleep 1; done
   @ 09/23/23 13:34:41.486
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9999.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9999.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9999.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9999.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9999.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_udp@PTR;check="$$(dig +tcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_tcp@PTR;sleep 1; done
   @ 09/23/23 13:34:41.486
  STEP: creating a pod to probe DNS @ 09/23/23 13:34:41.486
  STEP: submitting the pod to kubernetes @ 09/23/23 13:34:41.486
  STEP: retrieving the pod @ 09/23/23 13:34:43.513
  STEP: looking for the results for each expected name from probers @ 09/23/23 13:34:43.516
  Sep 23 13:34:43.521: INFO: Unable to read wheezy_udp@dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.526: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.530: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.533: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.553: INFO: Unable to read jessie_udp@dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.557: INFO: Unable to read jessie_tcp@dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.561: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.565: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local from pod dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9: the server could not find the requested resource (get pods dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9)
  Sep 23 13:34:43.580: INFO: Lookups using dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9 failed for: [wheezy_udp@dns-test-service.dns-9999.svc.cluster.local wheezy_tcp@dns-test-service.dns-9999.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local jessie_udp@dns-test-service.dns-9999.svc.cluster.local jessie_tcp@dns-test-service.dns-9999.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9999.svc.cluster.local]

  Sep 23 13:34:43.588: INFO: Pod client logs for webserver: 
  Sep 23 13:34:43.594: INFO: Pod client logs for querier: 
  Sep 23 13:34:43.600: INFO: Pod client logs for jessie-querier: 
  Sep 23 13:34:48.663: INFO: DNS probes using dns-9999/dns-test-8935155b-f424-47dc-8402-e3a7ace75fe9 succeeded

  Sep 23 13:34:48.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:34:48.668
  STEP: deleting the test service @ 09/23/23 13:34:48.68
  STEP: deleting the test headless service @ 09/23/23 13:34:48.703
  STEP: Destroying namespace "dns-9999" for this suite. @ 09/23/23 13:34:48.717
• [7.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/23/23 13:34:48.724
  Sep 23 13:34:48.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename container-probe @ 09/23/23 13:34:48.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:34:48.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:34:48.747
  STEP: Creating pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734 @ 09/23/23 13:34:48.75
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/23/23 13:34:50.767
  Sep 23 13:34:50.770: INFO: Initial restart count of pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f is 0
  Sep 23 13:34:50.774: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:34:52.778: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:34:54.782: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:34:56.788: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:34:58.792: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:00.797: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:02.802: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:04.808: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:06.812: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:08.816: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:10.821: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:12.825: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:14.829: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:16.835: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:18.840: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:20.845: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:22.850: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:24.854: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:26.858: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:28.864: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:30.868: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:32.874: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:34.880: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:36.885: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:38.892: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:40.898: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:42.904: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:44.908: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:46.914: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:48.919: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:50.923: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:52.928: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:54.933: INFO: Get pod test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f in namespace container-probe-4734
  Sep 23 13:35:54.933: INFO: Restart count of pod container-probe-4734/test-grpc-c9714f33-9b3b-48cc-bf1d-bc1d76d11b4f is now 1 (1m4.162623407s elapsed)
  Sep 23 13:35:54.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/23/23 13:35:54.937
  STEP: Destroying namespace "container-probe-4734" for this suite. @ 09/23/23 13:35:54.952
• [66.234 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/23/23 13:35:54.959
  Sep 23 13:35:54.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubectl @ 09/23/23 13:35:54.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:35:54.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:35:54.982
  Sep 23 13:35:54.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=kubectl-3825 version'
  Sep 23 13:35:55.042: INFO: stderr: ""
  Sep 23 13:35:55.042: INFO: stdout: "Client Version: v1.28.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.2\n"
  Sep 23 13:35:55.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3825" for this suite. @ 09/23/23 13:35:55.047
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/23/23 13:35:55.055
  Sep 23 13:35:55.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 13:35:55.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:35:55.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:35:55.074
  STEP: Creating a pod to test substitution in container's command @ 09/23/23 13:35:55.077
  STEP: Saw pod success @ 09/23/23 13:35:59.101
  Sep 23 13:35:59.105: INFO: Trying to get logs from node ip-172-31-77-156 pod var-expansion-05b4d0bc-58d1-46cf-8f55-83ffb37a56b8 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:35:59.118
  Sep 23 13:35:59.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7723" for this suite. @ 09/23/23 13:35:59.14
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/23/23 13:35:59.148
  Sep 23 13:35:59.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/23/23 13:35:59.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:35:59.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:35:59.163
  STEP: mirroring a new custom Endpoint @ 09/23/23 13:35:59.176
  Sep 23 13:35:59.185: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/23/23 13:36:01.191
  Sep 23 13:36:01.200: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 09/23/23 13:36:03.206
  Sep 23 13:36:03.215: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Sep 23 13:36:05.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5119" for this suite. @ 09/23/23 13:36:05.223
• [6.085 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/23/23 13:36:05.233
  Sep 23 13:36:05.233: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename endpointslice @ 09/23/23 13:36:05.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:05.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:05.249
  Sep 23 13:36:07.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2627" for this suite. @ 09/23/23 13:36:07.316
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/23/23 13:36:07.324
  Sep 23 13:36:07.324: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:36:07.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:07.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:07.339
  STEP: Create set of pods @ 09/23/23 13:36:07.341
  Sep 23 13:36:07.350: INFO: created test-pod-1
  Sep 23 13:36:07.357: INFO: created test-pod-2
  Sep 23 13:36:07.362: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/23/23 13:36:07.362
  STEP: waiting for all pods to be deleted @ 09/23/23 13:36:09.407
  Sep 23 13:36:09.413: INFO: Pod quantity 3 is different from expected quantity 0
  Sep 23 13:36:10.417: INFO: Pod quantity 3 is different from expected quantity 0
  Sep 23 13:36:11.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2900" for this suite. @ 09/23/23 13:36:11.421
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/23/23 13:36:11.43
  Sep 23 13:36:11.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:36:11.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:11.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:11.45
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4261 @ 09/23/23 13:36:11.453
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/23/23 13:36:11.464
  STEP: creating service externalsvc in namespace services-4261 @ 09/23/23 13:36:11.464
  STEP: creating replication controller externalsvc in namespace services-4261 @ 09/23/23 13:36:11.476
  I0923 13:36:11.483500      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4261, replica count: 2
  I0923 13:36:14.534234      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/23/23 13:36:14.538
  Sep 23 13:36:14.551: INFO: Creating new exec pod
  Sep 23 13:36:16.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-4261 exec execpodh7947 -- /bin/sh -x -c nslookup clusterip-service.services-4261.svc.cluster.local'
  Sep 23 13:36:16.745: INFO: stderr: "+ nslookup clusterip-service.services-4261.svc.cluster.local\n"
  Sep 23 13:36:16.745: INFO: stdout: "Server:\t\t10.152.183.72\nAddress:\t10.152.183.72#53\n\nclusterip-service.services-4261.svc.cluster.local\tcanonical name = externalsvc.services-4261.svc.cluster.local.\nName:\texternalsvc.services-4261.svc.cluster.local\nAddress: 10.152.183.54\n\n"
  Sep 23 13:36:16.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-4261, will wait for the garbage collector to delete the pods @ 09/23/23 13:36:16.75
  Sep 23 13:36:16.812: INFO: Deleting ReplicationController externalsvc took: 8.405163ms
  Sep 23 13:36:16.913: INFO: Terminating ReplicationController externalsvc pods took: 100.247393ms
  Sep 23 13:36:19.930: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-4261" for this suite. @ 09/23/23 13:36:19.943
• [8.519 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/23/23 13:36:19.949
  Sep 23 13:36:19.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 13:36:19.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:19.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:19.966
  STEP: Creating a ResourceQuota @ 09/23/23 13:36:19.969
  STEP: Getting a ResourceQuota @ 09/23/23 13:36:19.973
  STEP: Updating a ResourceQuota @ 09/23/23 13:36:19.976
  STEP: Verifying a ResourceQuota was modified @ 09/23/23 13:36:19.983
  STEP: Deleting a ResourceQuota @ 09/23/23 13:36:19.988
  STEP: Verifying the deleted ResourceQuota @ 09/23/23 13:36:19.994
  Sep 23 13:36:19.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-294" for this suite. @ 09/23/23 13:36:20
• [0.057 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/23/23 13:36:20.007
  Sep 23 13:36:20.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:36:20.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:20.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:20.021
  STEP: Setting up server cert @ 09/23/23 13:36:20.042
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:36:20.623
  STEP: Deploying the webhook pod @ 09/23/23 13:36:20.63
  STEP: Wait for the deployment to be ready @ 09/23/23 13:36:20.641
  Sep 23 13:36:20.649: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/23/23 13:36:22.662
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:36:22.674
  Sep 23 13:36:23.675: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/23/23 13:36:23.682
  STEP: create a pod @ 09/23/23 13:36:23.696
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/23/23 13:36:25.713
  Sep 23 13:36:25.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=webhook-4317 attach --namespace=webhook-4317 to-be-attached-pod -i -c=container1'
  Sep 23 13:36:25.782: INFO: rc: 1
  Sep 23 13:36:25.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4317" for this suite. @ 09/23/23 13:36:25.832
  STEP: Destroying namespace "webhook-markers-5484" for this suite. @ 09/23/23 13:36:25.839
• [5.838 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/23/23 13:36:25.846
  Sep 23 13:36:25.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename replication-controller @ 09/23/23 13:36:25.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:25.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:25.863
  STEP: creating a ReplicationController @ 09/23/23 13:36:25.87
  STEP: waiting for RC to be added @ 09/23/23 13:36:25.875
  STEP: waiting for available Replicas @ 09/23/23 13:36:25.876
  STEP: patching ReplicationController @ 09/23/23 13:36:26.856
  STEP: waiting for RC to be modified @ 09/23/23 13:36:26.864
  STEP: patching ReplicationController status @ 09/23/23 13:36:26.864
  STEP: waiting for RC to be modified @ 09/23/23 13:36:26.869
  STEP: waiting for available Replicas @ 09/23/23 13:36:26.87
  STEP: fetching ReplicationController status @ 09/23/23 13:36:26.876
  STEP: patching ReplicationController scale @ 09/23/23 13:36:26.88
  STEP: waiting for RC to be modified @ 09/23/23 13:36:26.885
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/23/23 13:36:26.886
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/23/23 13:36:28.532
  STEP: updating ReplicationController status @ 09/23/23 13:36:28.536
  STEP: waiting for RC to be modified @ 09/23/23 13:36:28.541
  STEP: listing all ReplicationControllers @ 09/23/23 13:36:28.546
  STEP: checking that ReplicationController has expected values @ 09/23/23 13:36:28.549
  STEP: deleting ReplicationControllers by collection @ 09/23/23 13:36:28.549
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/23/23 13:36:28.558
  Sep 23 13:36:28.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0923 13:36:28.589100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3459" for this suite. @ 09/23/23 13:36:28.593
• [2.753 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/23/23 13:36:28.6
  Sep 23 13:36:28.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 13:36:28.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:28.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:28.618
  Sep 23 13:36:28.620: INFO: Creating deployment "test-recreate-deployment"
  Sep 23 13:36:28.626: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep 23 13:36:28.636: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0923 13:36:29.589962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:30.590028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:36:30.644: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep 23 13:36:30.647: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep 23 13:36:30.657: INFO: Updating deployment test-recreate-deployment
  Sep 23 13:36:30.657: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep 23 13:36:30.733: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0758b17a-bf35-4df6-a137-d200ecab92fa",
      ResourceVersion: (string) (len=5) "41023",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 13:36:30.738: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f356b19e-7366-4522-979f-02d4a6acb21d",
      ResourceVersion: (string) (len=5) "41021",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0758b17a-bf35-4df6-a137-d200ecab92fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 37 35 38 62 31  37 61 2d 62 66 33 35 2d  |\"0758b17a-bf35-|
              00000120  34 64 66 36 2d 61 31 33  37 2d 64 32 30 30 65 63  |4df6-a137-d200ec|
              00000130  61 62 39 32 66 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ab92fa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:36:30.740: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep 23 13:36:30.740: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c00b4fc-0fd0-45d2-af40-ff7ed7baf93f",
      ResourceVersion: (string) (len=5) "41012",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0758b17a-bf35-4df6-a137-d200ecab92fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 37 35 38 62 31  37 61 2d 62 66 33 35 2d  |\"0758b17a-bf35-|
              00000120  34 64 66 36 2d 61 31 33  37 2d 64 32 30 30 65 63  |4df6-a137-d200ec|
              00000130  61 62 39 32 66 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ab92fa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:36:30.745: INFO: Pod "test-recreate-deployment-76fb77d45-z2szc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-z2szc",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-782",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22ca65a8-c266-46ef-90a9-aa14737dac39",
      ResourceVersion: (string) (len=5) "41024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "f356b19e-7366-4522-979f-02d4a6acb21d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 33  35 36 62 31 39 65 2d 37  |d\":\"f356b19e-7|
              00000090  33 36 36 2d 34 35 32 32  2d 39 37 39 66 2d 30 32  |366-4522-979f-02|
              000000a0  64 34 61 36 61 63 62 32  31 64 5c 22 7d 22 3a 7b  |d4a6acb21d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gtnf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gtnf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831072990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831072990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:36:30.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-782" for this suite. @ 09/23/23 13:36:30.751
• [2.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/23/23 13:36:30.759
  Sep 23 13:36:30.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:36:30.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:30.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:30.776
  STEP: Setting up server cert @ 09/23/23 13:36:30.801
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:36:31.221
  STEP: Deploying the webhook pod @ 09/23/23 13:36:31.226
  STEP: Wait for the deployment to be ready @ 09/23/23 13:36:31.239
  Sep 23 13:36:31.248: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 13:36:31.590998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:32.591566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/23 13:36:33.26
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:36:33.271
  E0923 13:36:33.592013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:36:34.271: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/23/23 13:36:34.279
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/23 13:36:34.279
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/23/23 13:36:34.293
  E0923 13:36:34.592314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/23/23 13:36:35.304
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/23 13:36:35.304
  E0923 13:36:35.593338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/23/23 13:36:36.332
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/23 13:36:36.332
  E0923 13:36:36.594074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:37.594240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:38.595282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:39.595448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:40.595609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/23/23 13:36:41.367
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/23/23 13:36:41.367
  E0923 13:36:41.596312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:42.597294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:43.597626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:44.597812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:45.597977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:36:46.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3129" for this suite. @ 09/23/23 13:36:46.461
  STEP: Destroying namespace "webhook-markers-7408" for this suite. @ 09/23/23 13:36:46.467
• [15.715 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/23/23 13:36:46.474
  Sep 23 13:36:46.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 13:36:46.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:36:46.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:36:46.492
  STEP: Creating a ResourceQuota with best effort scope @ 09/23/23 13:36:46.494
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/23 13:36:46.498
  E0923 13:36:46.598792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:47.598847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/23/23 13:36:48.502
  STEP: Ensuring ResourceQuota status is calculated @ 09/23/23 13:36:48.507
  E0923 13:36:48.599912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:49.599996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/23/23 13:36:50.511
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/23/23 13:36:50.525
  E0923 13:36:50.600402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:51.600673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/23/23 13:36:52.529
  E0923 13:36:52.600861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:53.601657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/23/23 13:36:54.534
  STEP: Ensuring resource quota status released the pod usage @ 09/23/23 13:36:54.549
  E0923 13:36:54.602635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:55.602795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/23/23 13:36:56.553
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/23/23 13:36:56.562
  E0923 13:36:56.603695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:57.603809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/23/23 13:36:58.567
  E0923 13:36:58.603987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:36:59.604663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/23/23 13:37:00.572
  STEP: Ensuring resource quota status released the pod usage @ 09/23/23 13:37:00.585
  E0923 13:37:00.605516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:01.605665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:37:02.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1097" for this suite. @ 09/23/23 13:37:02.593
• [16.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/23/23 13:37:02.601
  Sep 23 13:37:02.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename disruption @ 09/23/23 13:37:02.602
  E0923 13:37:02.606014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:37:02.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:37:02.618
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/23/23 13:37:02.62
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:37:02.624
  E0923 13:37:03.606745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:04.606894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/23/23 13:37:04.637
  STEP: Waiting for all pods to be running @ 09/23/23 13:37:04.637
  Sep 23 13:37:04.641: INFO: pods: 0 < 3
  E0923 13:37:05.607609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:06.607709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/23/23 13:37:06.646
  STEP: Updating the pdb to allow a pod to be evicted @ 09/23/23 13:37:06.657
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:37:06.665
  E0923 13:37:07.608097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:08.608317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/23/23 13:37:08.673
  STEP: Waiting for all pods to be running @ 09/23/23 13:37:08.673
  STEP: Waiting for the pdb to observed all healthy pods @ 09/23/23 13:37:08.676
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/23/23 13:37:08.703
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:37:08.722
  E0923 13:37:09.608830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:10.609168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/23/23 13:37:10.732
  STEP: locating a running pod @ 09/23/23 13:37:10.736
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/23/23 13:37:10.746
  STEP: Waiting for the pdb to be deleted @ 09/23/23 13:37:10.752
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/23/23 13:37:10.755
  STEP: Waiting for all pods to be running @ 09/23/23 13:37:10.755
  Sep 23 13:37:10.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6853" for this suite. @ 09/23/23 13:37:10.782
• [8.193 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/23/23 13:37:10.794
  Sep 23 13:37:10.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename cronjob @ 09/23/23 13:37:10.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:37:10.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:37:10.81
  STEP: Creating a ForbidConcurrent cronjob @ 09/23/23 13:37:10.813
  STEP: Ensuring a job is scheduled @ 09/23/23 13:37:10.817
  E0923 13:37:11.609539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:12.610142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:13.610706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:14.611560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:15.612556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:16.612703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:17.612797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:18.613198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:19.613469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:20.613627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:21.614326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:22.614424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:23.615393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:24.615594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:25.616379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:26.616492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:27.616660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:28.617230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:29.617478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:30.617622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:31.618527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:32.618669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:33.619661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:34.619762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:35.619851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:36.620671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:37.621429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:38.621829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:39.622541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:40.622717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:41.622743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:42.622890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:43.623776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:44.624668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:45.624871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:46.624967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:47.625064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:48.625215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:49.625957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:50.626047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:51.626333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:52.626667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:53.626884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:54.627038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:55.627591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:56.627686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:57.628655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:58.629107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:37:59.629222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:00.629388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/23/23 13:38:00.821
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/23/23 13:38:00.824
  STEP: Ensuring no more jobs are scheduled @ 09/23/23 13:38:00.827
  E0923 13:38:01.629713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:02.629802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:03.630801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:04.630873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:05.631887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:06.632659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:07.633436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:08.633826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:09.634211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:10.634376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:11.635414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:12.635576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:13.635593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:14.635946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:15.636853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:16.637166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:17.637388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:18.638290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:19.638986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:20.639837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:21.640552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:22.640636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:23.640712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:24.640881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:25.641268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:26.641708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:27.642638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:28.642736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:29.643772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:30.644661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:31.644791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:32.644931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:33.645008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:34.645149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:35.646206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:36.646350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:37.646447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:38.646796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:39.647738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:40.647934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:41.648644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:42.648791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:43.649110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:44.649424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:45.649549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:46.649714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:47.650732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:48.650770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:49.651325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:50.651470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:51.651581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:52.651608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:53.651997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:54.652672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:55.653326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:56.653412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:57.653985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:58.654221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:38:59.654370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:00.654523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:01.655289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:02.655444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:03.656139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:04.656649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:05.656695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:06.657142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:07.658070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:08.659133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:09.660093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:10.660766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:11.661142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:12.661224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:13.661975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:14.662339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:15.662514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:16.662671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:17.662749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:18.662842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:19.663389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:20.664325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:21.664386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:22.664519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:23.664523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:24.664710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:25.665210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:26.665615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:27.665968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:28.666250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:29.666503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:30.666655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:31.667587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:32.668653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:33.668695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:34.668853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:35.669919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:36.670069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:37.670365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:38.670524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:39.670943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:40.671092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:41.671590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:42.671688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:43.672659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:44.672815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:45.673663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:46.674095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:47.674190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:48.674282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:49.675351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:50.675450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:51.675554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:52.676126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:53.676653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:54.676743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:55.677697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:56.677798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:57.677895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:58.678289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:39:59.678312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:00.678466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:01.678973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:02.679588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:03.680662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:04.680814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:05.681502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:06.681653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:07.682702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:08.682797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:09.682855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:10.682947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:11.683591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:12.683682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:13.684556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:14.684712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:15.684771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:16.684931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:17.685453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:18.685499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:19.686250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:20.686398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:21.687018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:22.687104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:23.687945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:24.688656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:25.689520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:26.689608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:27.690234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:28.690282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:29.690377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:30.690541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:31.691573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:32.691675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:33.692654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:34.692802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:35.693410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:36.693557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:37.693610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:38.693698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:39.693817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:40.693968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:41.694833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:42.694933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:43.695088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:44.695191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:45.695655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:46.695727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:47.696657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:48.697071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:49.697930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:50.698072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:51.698171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:52.698327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:53.699311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:54.699458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:55.699585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:56.699730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:57.699826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:58.700240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:40:59.701117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:00.701264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:01.701555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:02.701662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:03.702307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:04.702448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:05.702547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:06.702703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:07.703578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:08.703604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:09.704656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:10.704753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:11.705532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:12.705109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:13.706093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:14.706263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:15.707144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:16.707249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:17.707580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:18.708642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:19.708896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:20.709895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:21.710687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:22.710834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:23.711873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:24.712020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:25.712648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:26.712799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:27.713444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:28.713819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:29.714660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:30.714811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:31.715147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:32.715500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:33.716125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:34.716259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:35.716658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:36.716747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:37.716906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:38.717302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:39.717945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:40.718093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:41.718922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:42.719013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:43.719778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:44.720653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:45.720747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:46.720845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:47.721870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:48.722253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:49.722468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:50.722616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:51.723406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:52.724009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:53.724967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:54.725120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:55.725838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:56.726323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:57.727197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:58.727286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:41:59.727588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:00.728680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:01.729734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:02.729878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:03.730749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:04.730912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:05.731253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:06.731409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:07.731597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:08.732654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:09.733700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:10.733851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:11.733909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:12.734069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:13.734785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:14.734928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:15.735628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:16.736658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:17.736990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:18.737322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:19.737414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:20.737574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:21.737611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:22.737762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:23.738583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:24.738675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:25.739560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:26.739595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:27.740657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:28.741038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:29.741136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:30.742148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:31.742231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:32.742416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:33.742602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:34.742762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:35.743165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:36.743317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:37.743591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:38.743990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:39.744769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:40.744925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:41.745005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:42.745161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:43.745718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:44.745867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:45.745953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:46.746055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:47.746953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:48.747293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:49.747586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:50.748658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:51.749549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:52.749873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:53.750630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:54.750726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:55.751422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:56.751588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:57.752651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:58.753032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:42:59.753097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:00.753190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/23/23 13:43:00.836
  Sep 23 13:43:00.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8199" for this suite. @ 09/23/23 13:43:00.847
• [350.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/23/23 13:43:00.855
  Sep 23 13:43:00.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename subpath @ 09/23/23 13:43:00.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:00.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:00.873
  STEP: Setting up data @ 09/23/23 13:43:00.875
  STEP: Creating pod pod-subpath-test-secret-np76 @ 09/23/23 13:43:00.886
  STEP: Creating a pod to test atomic-volume-subpath @ 09/23/23 13:43:00.886
  E0923 13:43:01.753304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:02.753561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:03.754220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:04.754842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:05.755225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:06.755352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:07.755607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:08.755754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:09.756676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:10.756987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:11.757291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:12.757203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:13.757377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:14.757496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:15.757791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:16.757932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:17.758756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:18.758844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:19.759906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:20.760713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:21.760796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:22.760959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:23.761718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:24.761894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:43:24.958
  Sep 23 13:43:24.962: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-subpath-test-secret-np76 container test-container-subpath-secret-np76: <nil>
  STEP: delete the pod @ 09/23/23 13:43:24.982
  STEP: Deleting pod pod-subpath-test-secret-np76 @ 09/23/23 13:43:24.999
  Sep 23 13:43:24.999: INFO: Deleting pod "pod-subpath-test-secret-np76" in namespace "subpath-9033"
  Sep 23 13:43:25.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9033" for this suite. @ 09/23/23 13:43:25.006
• [24.158 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/23/23 13:43:25.013
  Sep 23 13:43:25.013: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:43:25.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:25.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:25.032
  STEP: Creating a pod to test downward API volume plugin @ 09/23/23 13:43:25.035
  E0923 13:43:25.762278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:26.762553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:27.763390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:28.764437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:43:29.059
  Sep 23 13:43:29.062: INFO: Trying to get logs from node ip-172-31-77-156 pod downwardapi-volume-a8b9fa95-4994-4bf0-8b12-ba5530b6d663 container client-container: <nil>
  STEP: delete the pod @ 09/23/23 13:43:29.07
  Sep 23 13:43:29.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1105" for this suite. @ 09/23/23 13:43:29.09
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/23/23 13:43:29.098
  Sep 23 13:43:29.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 13:43:29.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:29.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:29.112
  STEP: Creating a pod to test env composition @ 09/23/23 13:43:29.114
  E0923 13:43:29.765409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:30.765732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:31.766511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:32.766675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:43:33.136
  Sep 23 13:43:33.140: INFO: Trying to get logs from node ip-172-31-77-156 pod var-expansion-10da8498-662a-4531-90ef-68f35f80ef34 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:43:33.148
  Sep 23 13:43:33.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7292" for this suite. @ 09/23/23 13:43:33.17
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/23/23 13:43:33.178
  Sep 23 13:43:33.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename services @ 09/23/23 13:43:33.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:33.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:33.193
  STEP: creating service in namespace services-3490 @ 09/23/23 13:43:33.195
  STEP: creating service affinity-clusterip in namespace services-3490 @ 09/23/23 13:43:33.195
  STEP: creating replication controller affinity-clusterip in namespace services-3490 @ 09/23/23 13:43:33.206
  I0923 13:43:33.211584      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-3490, replica count: 3
  E0923 13:43:33.767578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:34.767946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:35.768681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0923 13:43:36.262268      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 23 13:43:36.269: INFO: Creating new exec pod
  E0923 13:43:36.768905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:37.769050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:38.769646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:43:39.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-3490 exec execpod-affinity5mth4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep 23 13:43:39.461: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep 23 13:43:39.461: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:43:39.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-3490 exec execpod-affinity5mth4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.225 80'
  Sep 23 13:43:39.605: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.225 80\nConnection to 10.152.183.225 80 port [tcp/http] succeeded!\n"
  Sep 23 13:43:39.605: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 23 13:43:39.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=services-3490 exec execpod-affinity5mth4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.225:80/ ; done'
  E0923 13:43:39.770150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:43:39.809: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.225:80/\n"
  Sep 23 13:43:39.809: INFO: stdout: "\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8\naffinity-clusterip-fnsp8"
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Received response from host: affinity-clusterip-fnsp8
  Sep 23 13:43:39.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:43:39.813: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3490, will wait for the garbage collector to delete the pods @ 09/23/23 13:43:39.827
  Sep 23 13:43:39.890: INFO: Deleting ReplicationController affinity-clusterip took: 6.729891ms
  Sep 23 13:43:39.991: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.725072ms
  E0923 13:43:40.770410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:41.771446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:42.771999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3490" for this suite. @ 09/23/23 13:43:43.31
• [10.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/23/23 13:43:43.318
  Sep 23 13:43:43.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename disruption @ 09/23/23 13:43:43.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:43.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:43.336
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:43:43.343
  E0923 13:43:43.772572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:44.772778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/23/23 13:43:45.378
  Sep 23 13:43:45.389: INFO: running pods: 0 < 3
  E0923 13:43:45.772989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:46.773161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:43:47.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4736" for this suite. @ 09/23/23 13:43:47.402
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/23/23 13:43:47.41
  Sep 23 13:43:47.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:43:47.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:47.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:47.428
  STEP: Create a pod @ 09/23/23 13:43:47.431
  E0923 13:43:47.773253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:48.773401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/23/23 13:43:49.447
  Sep 23 13:43:49.454: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep 23 13:43:49.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5815" for this suite. @ 09/23/23 13:43:49.458
• [2.054 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/23/23 13:43:49.464
  Sep 23 13:43:49.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename deployment @ 09/23/23 13:43:49.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:49.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:49.488
  Sep 23 13:43:49.491: INFO: Creating simple deployment test-new-deployment
  Sep 23 13:43:49.503: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0923 13:43:49.773964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:50.774892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/23/23 13:43:51.519
  STEP: updating a scale subresource @ 09/23/23 13:43:51.523
  STEP: verifying the deployment Spec.Replicas was modified @ 09/23/23 13:43:51.528
  STEP: Patch a scale subresource @ 09/23/23 13:43:51.531
  Sep 23 13:43:51.554: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5187",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0dc6d76a-b2d2-4087-8719-7be21f4ea3a2",
      ResourceVersion: (string) (len=5) "42645",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831073429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 23 13:43:51.564: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5187",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe24e60b-2b46-47b2-9239-b68e4d34c5f7",
      ResourceVersion: (string) (len=5) "42649",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831073429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "0dc6d76a-b2d2-4087-8719-7be21f4ea3a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 64 63 36 64 37  36 61 2d 62 32 64 32 2d  |\"0dc6d76a-b2d2-|
              00000120  34 30 38 37 2d 38 37 31  39 2d 37 62 65 32 31 66  |4087-8719-7be21f|
              00000130  34 65 61 33 61 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4ea3a2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 23 13:43:51.570: INFO: Pod "test-new-deployment-557759b7c7-pncgp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-pncgp",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5187",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e266fc6-4545-4714-b51e-0c3d4c528453",
      ResourceVersion: (string) (len=5) "42650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831073431,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fe24e60b-2b46-47b2-9239-b68e4d34c5f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  32 34 65 36 30 62 2d 32  |d\":\"fe24e60b-2|
              00000090  62 34 36 2d 34 37 62 32  2d 39 32 33 39 2d 62 36  |b46-47b2-9239-b6|
              000000a0  38 65 34 64 33 34 63 35  66 37 5c 22 7d 22 3a 7b  |8e4d34c5f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zhqhc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zhqhc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-84-196",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:43:51.572: INFO: Pod "test-new-deployment-557759b7c7-tcgxb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-tcgxb",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5187",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba6b9efc-519f-4912-86b4-6860759e07e8",
      ResourceVersion: (string) (len=5) "42639",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831073429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fe24e60b-2b46-47b2-9239-b68e4d34c5f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  32 34 65 36 30 62 2d 32  |d\":\"fe24e60b-2|
              00000090  62 34 36 2d 34 37 62 32  2d 39 32 33 39 2d 62 36  |b46-47b2-9239-b6|
              000000a0  38 65 34 64 33 34 63 35  66 37 5c 22 7d 22 3a 7b  |8e4d34c5f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  35 35 2e 37 35 5c 22 7d  |192.168.55.75\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhwjb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhwjb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-77-156",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831073429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.77.156",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "192.168.55.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.55.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831073429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831073430,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0a5242846d565a400498676576c0956bbf3f97e42ac57b05591dde0b7f542873",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 23 13:43:51.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5187" for this suite. @ 09/23/23 13:43:51.581
• [2.126 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/23/23 13:43:51.591
  Sep 23 13:43:51.591: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename limitrange @ 09/23/23 13:43:51.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:51.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:51.608
  STEP: Creating LimitRange "e2e-limitrange-qx4hg" in namespace "limitrange-6043" @ 09/23/23 13:43:51.612
  STEP: Creating another limitRange in another namespace @ 09/23/23 13:43:51.621
  Sep 23 13:43:51.634: INFO: Namespace "e2e-limitrange-qx4hg-5843" created
  Sep 23 13:43:51.634: INFO: Creating LimitRange "e2e-limitrange-qx4hg" in namespace "e2e-limitrange-qx4hg-5843"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qx4hg" @ 09/23/23 13:43:51.638
  Sep 23 13:43:51.641: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qx4hg" in "limitrange-6043" namespace @ 09/23/23 13:43:51.641
  Sep 23 13:43:51.649: INFO: LimitRange "e2e-limitrange-qx4hg" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qx4hg" by Collection with labelSelector: "e2e-limitrange-qx4hg=patched" @ 09/23/23 13:43:51.649
  STEP: Confirm that the limitRange "e2e-limitrange-qx4hg" has been deleted @ 09/23/23 13:43:51.657
  Sep 23 13:43:51.657: INFO: Requesting list of LimitRange to confirm quantity
  Sep 23 13:43:51.660: INFO: Found 0 LimitRange with label "e2e-limitrange-qx4hg=patched"
  Sep 23 13:43:51.660: INFO: LimitRange "e2e-limitrange-qx4hg" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qx4hg" @ 09/23/23 13:43:51.66
  Sep 23 13:43:51.662: INFO: Found 1 limitRange
  Sep 23 13:43:51.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6043" for this suite. @ 09/23/23 13:43:51.667
  STEP: Destroying namespace "e2e-limitrange-qx4hg-5843" for this suite. @ 09/23/23 13:43:51.674
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/23/23 13:43:51.681
  Sep 23 13:43:51.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 13:43:51.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:43:51.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:43:51.696
  STEP: creating the pod with failed condition @ 09/23/23 13:43:51.698
  E0923 13:43:51.775702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:52.776681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:53.776986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:54.777101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:55.777955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:56.778100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:57.778746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:58.779111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:43:59.779718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:00.780674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:01.781078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:02.781245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:03.781424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:04.781603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:05.781652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:06.781807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:07.782751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:08.783165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:09.784048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:10.784210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:11.785056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:12.785224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:13.785731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:14.785824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:15.786501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:16.786607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:17.787577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:18.788687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:19.789317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:20.789480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:21.789786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:22.789927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:23.790923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:24.791082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:25.791662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:26.791804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:27.792078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:28.792401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:29.792659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:30.793235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:31.793374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:32.794395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:33.794426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:34.795004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:35.795169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:36.795592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:37.795612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:38.796475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:39.796616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:40.797432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:41.797527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:42.798464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:43.798773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:44.798947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:45.799092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:46.799594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:47.799677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:48.800665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:49.800821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:50.801685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:51.801837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:52.802922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:53.803787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:54.804666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:55.804823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:56.804914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:57.805083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:58.805104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:44:59.805264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:00.805942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:01.806105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:02.806494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:03.806778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:04.807316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:05.807916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:06.808662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:07.808840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:08.809090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:09.809253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:10.809998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:11.810271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:12.810293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:13.810384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:14.810463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:15.810608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:16.811530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:17.811597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:18.812663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:19.812776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:20.812873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:21.813026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:22.813085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:23.813368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:24.813451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:25.813546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:26.813704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:27.813851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:28.814768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:29.814854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:30.814906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:31.815046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:32.815582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:33.816663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:34.817010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:35.817157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:36.817277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:37.817426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:38.818371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:39.818544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:40.818733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:41.818873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:42.819737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:43.820694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:44.820842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:45.820991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:46.821727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:47.821884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:48.822000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:49.822150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:50.822167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/23/23 13:45:51.707
  E0923 13:45:51.822808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:45:52.220: INFO: Successfully updated pod "var-expansion-df936172-b69a-4285-96f0-fef681a712a1"
  STEP: waiting for pod running @ 09/23/23 13:45:52.22
  E0923 13:45:52.823303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:53.823589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/23/23 13:45:54.228
  Sep 23 13:45:54.228: INFO: Deleting pod "var-expansion-df936172-b69a-4285-96f0-fef681a712a1" in namespace "var-expansion-3126"
  Sep 23 13:45:54.236: INFO: Wait up to 5m0s for pod "var-expansion-df936172-b69a-4285-96f0-fef681a712a1" to be fully deleted
  E0923 13:45:54.824287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:55.824685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:56.824839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:57.825429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:58.826508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:45:59.826672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:00.827685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:01.827863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:02.828666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:03.828877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:04.829182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:05.829356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:06.830236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:07.830725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:08.830968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:09.831049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:10.831941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:11.832725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:12.833703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:13.833902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:14.833977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:15.834081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:16.834247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:17.834416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:18.834513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:19.835550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:20.836177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:21.836661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:22.837360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:23.837665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:24.838610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:25.838950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:26.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3126" for this suite. @ 09/23/23 13:46:26.318
• [154.646 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/23/23 13:46:26.327
  Sep 23 13:46:26.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:46:26.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:26.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:26.353
  STEP: Creating the pod @ 09/23/23 13:46:26.356
  E0923 13:46:26.839886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:27.840678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:28.841014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:28.906: INFO: Successfully updated pod "labelsupdate810dba16-5d3b-4cd8-abc7-bc5b1540559a"
  E0923 13:46:29.842023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:30.843018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:30.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1060" for this suite. @ 09/23/23 13:46:30.925
• [4.604 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/23/23 13:46:30.932
  Sep 23 13:46:30.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename pods @ 09/23/23 13:46:30.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:30.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:30.947
  STEP: creating the pod @ 09/23/23 13:46:30.95
  STEP: submitting the pod to kubernetes @ 09/23/23 13:46:30.95
  STEP: verifying QOS class is set on the pod @ 09/23/23 13:46:30.957
  Sep 23 13:46:30.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6499" for this suite. @ 09/23/23 13:46:30.969
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/23/23 13:46:30.977
  Sep 23 13:46:30.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename downward-api @ 09/23/23 13:46:30.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:30.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:30.996
  STEP: Creating a pod to test downward api env vars @ 09/23/23 13:46:30.998
  E0923 13:46:31.843564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:32.843611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:33.844671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:34.844849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:46:35.019
  Sep 23 13:46:35.023: INFO: Trying to get logs from node ip-172-31-77-156 pod downward-api-afbe3670-61e6-499f-8897-db4d1c7199d0 container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:46:35.031
  Sep 23 13:46:35.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3368" for this suite. @ 09/23/23 13:46:35.051
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/23/23 13:46:35.061
  Sep 23 13:46:35.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename configmap @ 09/23/23 13:46:35.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:35.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:35.076
  STEP: Creating configMap with name configmap-test-volume-1a8407b9-ca96-4eaf-9278-d9b7e8a8141d @ 09/23/23 13:46:35.079
  STEP: Creating a pod to test consume configMaps @ 09/23/23 13:46:35.084
  E0923 13:46:35.845454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:36.845539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:37.846112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:38.846472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:46:39.106
  Sep 23 13:46:39.110: INFO: Trying to get logs from node ip-172-31-77-156 pod pod-configmaps-313a0f75-60b1-4a69-ac3c-8fc286633e1e container agnhost-container: <nil>
  STEP: delete the pod @ 09/23/23 13:46:39.117
  Sep 23 13:46:39.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2984" for this suite. @ 09/23/23 13:46:39.138
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/23/23 13:46:39.145
  Sep 23 13:46:39.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename kubelet-test @ 09/23/23 13:46:39.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:39.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:39.162
  E0923 13:46:39.846965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:40.847150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:41.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-526" for this suite. @ 09/23/23 13:46:41.201
• [2.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/23/23 13:46:41.208
  Sep 23 13:46:41.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/23/23 13:46:41.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:41.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:41.225
  STEP: creating @ 09/23/23 13:46:41.228
  STEP: getting @ 09/23/23 13:46:41.246
  STEP: listing in namespace @ 09/23/23 13:46:41.25
  STEP: patching @ 09/23/23 13:46:41.253
  STEP: deleting @ 09/23/23 13:46:41.259
  Sep 23 13:46:41.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7596" for this suite. @ 09/23/23 13:46:41.279
• [0.079 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/23/23 13:46:41.288
  Sep 23 13:46:41.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename projected @ 09/23/23 13:46:41.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:41.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:41.302
  STEP: Creating configMap with name configmap-projected-all-test-volume-cf9192b1-6779-4ecf-9a76-7886b8bd8092 @ 09/23/23 13:46:41.307
  STEP: Creating secret with name secret-projected-all-test-volume-158f9716-f72e-4966-9aa4-c9b7c80a964f @ 09/23/23 13:46:41.311
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/23/23 13:46:41.317
  E0923 13:46:41.848121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:42.848368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:43.848523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:44.848686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:46:45.34
  Sep 23 13:46:45.344: INFO: Trying to get logs from node ip-172-31-77-156 pod projected-volume-6c0e8e9a-563f-4ae6-801e-29c692e0cb5b container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/23/23 13:46:45.351
  Sep 23 13:46:45.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3717" for this suite. @ 09/23/23 13:46:45.369
• [4.089 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/23/23 13:46:45.378
  Sep 23 13:46:45.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename disruption @ 09/23/23 13:46:45.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:45.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:45.392
  STEP: Creating a kubernetes client @ 09/23/23 13:46:45.395
  Sep 23 13:46:45.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename disruption-2 @ 09/23/23 13:46:45.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:45.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:45.41
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:46:45.417
  E0923 13:46:45.849604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:46.849869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:46:47.434
  E0923 13:46:47.850677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:48.851077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/23/23 13:46:49.444
  E0923 13:46:49.851440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:50.851600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/23/23 13:46:51.453
  STEP: listing a collection of PDBs in namespace disruption-3066 @ 09/23/23 13:46:51.456
  STEP: deleting a collection of PDBs @ 09/23/23 13:46:51.46
  STEP: Waiting for the PDB collection to be deleted @ 09/23/23 13:46:51.474
  Sep 23 13:46:51.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 23 13:46:51.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1537" for this suite. @ 09/23/23 13:46:51.485
  STEP: Destroying namespace "disruption-3066" for this suite. @ 09/23/23 13:46:51.491
• [6.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/23/23 13:46:51.498
  Sep 23 13:46:51.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename containers @ 09/23/23 13:46:51.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:51.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:51.515
  E0923 13:46:51.852356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:52.852554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:53.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5733" for this suite. @ 09/23/23 13:46:53.557
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/23/23 13:46:53.565
  Sep 23 13:46:53.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename cronjob @ 09/23/23 13:46:53.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:53.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:53.581
  STEP: Creating a cronjob @ 09/23/23 13:46:53.583
  STEP: creating @ 09/23/23 13:46:53.583
  STEP: getting @ 09/23/23 13:46:53.591
  STEP: listing @ 09/23/23 13:46:53.593
  STEP: watching @ 09/23/23 13:46:53.597
  Sep 23 13:46:53.598: INFO: starting watch
  STEP: cluster-wide listing @ 09/23/23 13:46:53.598
  STEP: cluster-wide watching @ 09/23/23 13:46:53.602
  Sep 23 13:46:53.602: INFO: starting watch
  STEP: patching @ 09/23/23 13:46:53.603
  STEP: updating @ 09/23/23 13:46:53.608
  Sep 23 13:46:53.616: INFO: waiting for watch events with expected annotations
  Sep 23 13:46:53.616: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/23/23 13:46:53.616
  STEP: updating /status @ 09/23/23 13:46:53.621
  STEP: get /status @ 09/23/23 13:46:53.629
  STEP: deleting @ 09/23/23 13:46:53.632
  STEP: deleting a collection @ 09/23/23 13:46:53.651
  Sep 23 13:46:53.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7574" for this suite. @ 09/23/23 13:46:53.666
• [0.113 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/23/23 13:46:53.677
  Sep 23 13:46:53.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:46:53.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:53.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:53.694
  STEP: Setting up server cert @ 09/23/23 13:46:53.717
  E0923 13:46:53.853462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:46:54.004
  STEP: Deploying the webhook pod @ 09/23/23 13:46:54.012
  STEP: Wait for the deployment to be ready @ 09/23/23 13:46:54.024
  Sep 23 13:46:54.033: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 13:46:54.854305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:46:55.854604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/23 13:46:56.044
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:46:56.057
  E0923 13:46:56.855669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:57.058: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/23/23 13:46:57.065
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/23 13:46:57.079
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/23/23 13:46:57.087
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/23 13:46:57.099
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/23/23 13:46:57.112
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/23/23 13:46:57.118
  Sep 23 13:46:57.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4066" for this suite. @ 09/23/23 13:46:57.177
  STEP: Destroying namespace "webhook-markers-6897" for this suite. @ 09/23/23 13:46:57.184
• [3.515 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/23/23 13:46:57.193
  Sep 23 13:46:57.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 13:46:57.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:46:57.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:46:57.208
  Sep 23 13:46:57.212: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  E0923 13:46:57.856384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/23/23 13:46:58.558
  Sep 23 13:46:58.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-922 --namespace=crd-publish-openapi-922 create -f -'
  E0923 13:46:58.857348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:46:59.028: INFO: stderr: ""
  Sep 23 13:46:59.028: INFO: stdout: "e2e-test-crd-publish-openapi-2307-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 23 13:46:59.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-922 --namespace=crd-publish-openapi-922 delete e2e-test-crd-publish-openapi-2307-crds test-cr'
  Sep 23 13:46:59.117: INFO: stderr: ""
  Sep 23 13:46:59.117: INFO: stdout: "e2e-test-crd-publish-openapi-2307-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep 23 13:46:59.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-922 --namespace=crd-publish-openapi-922 apply -f -'
  Sep 23 13:46:59.457: INFO: stderr: ""
  Sep 23 13:46:59.457: INFO: stdout: "e2e-test-crd-publish-openapi-2307-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 23 13:46:59.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-922 --namespace=crd-publish-openapi-922 delete e2e-test-crd-publish-openapi-2307-crds test-cr'
  Sep 23 13:46:59.519: INFO: stderr: ""
  Sep 23 13:46:59.519: INFO: stdout: "e2e-test-crd-publish-openapi-2307-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/23/23 13:46:59.519
  Sep 23 13:46:59.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2227618074 --namespace=crd-publish-openapi-922 explain e2e-test-crd-publish-openapi-2307-crds'
  Sep 23 13:46:59.640: INFO: stderr: ""
  Sep 23 13:46:59.640: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2307-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0923 13:46:59.857839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:00.858808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:47:00.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-922" for this suite. @ 09/23/23 13:47:00.933
• [3.748 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/23/23 13:47:00.942
  Sep 23 13:47:00.942: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/23/23 13:47:00.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:00.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:00.955
  STEP: set up a multi version CRD @ 09/23/23 13:47:00.958
  Sep 23 13:47:00.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  E0923 13:47:01.859299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:02.859424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:03.860352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/23/23 13:47:04.207
  STEP: check the new version name is served @ 09/23/23 13:47:04.221
  E0923 13:47:04.861334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/23/23 13:47:05.029
  STEP: check the other version is not changed @ 09/23/23 13:47:05.673
  E0923 13:47:05.861405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:06.862442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:07.863256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:47:08.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5809" for this suite. @ 09/23/23 13:47:08.282
• [7.347 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/23/23 13:47:08.289
  Sep 23 13:47:08.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename emptydir @ 09/23/23 13:47:08.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:08.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:08.307
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/23/23 13:47:08.309
  E0923 13:47:08.864203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:09.864671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:10.864781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:11.864875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:47:12.332
  Sep 23 13:47:12.335: INFO: Trying to get logs from node ip-172-31-84-196 pod pod-36ce1074-66bf-4ce8-860b-ce76cdb701eb container test-container: <nil>
  STEP: delete the pod @ 09/23/23 13:47:12.343
  Sep 23 13:47:12.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3865" for this suite. @ 09/23/23 13:47:12.364
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/23/23 13:47:12.373
  Sep 23 13:47:12.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename var-expansion @ 09/23/23 13:47:12.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:12.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:12.39
  STEP: Creating a pod to test substitution in volume subpath @ 09/23/23 13:47:12.393
  E0923 13:47:12.865668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:13.865871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:14.865951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:15.866040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/23/23 13:47:16.417
  Sep 23 13:47:16.420: INFO: Trying to get logs from node ip-172-31-77-156 pod var-expansion-f5129c34-44bc-4a98-9f55-a606740ea73a container dapi-container: <nil>
  STEP: delete the pod @ 09/23/23 13:47:16.427
  Sep 23 13:47:16.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9499" for this suite. @ 09/23/23 13:47:16.449
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/23/23 13:47:16.456
  Sep 23 13:47:16.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename resourcequota @ 09/23/23 13:47:16.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:16.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:16.472
  STEP: Counting existing ResourceQuota @ 09/23/23 13:47:16.475
  E0923 13:47:16.866265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:17.867124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:18.867559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:19.868313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:20.869198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/23/23 13:47:21.479
  STEP: Ensuring resource quota status is calculated @ 09/23/23 13:47:21.483
  E0923 13:47:21.869232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:22.869409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/23/23 13:47:23.489
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/23/23 13:47:23.504
  E0923 13:47:23.870344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:24.870510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/23/23 13:47:25.509
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/23/23 13:47:25.511
  STEP: Ensuring a pod cannot update its resource requirements @ 09/23/23 13:47:25.513
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/23/23 13:47:25.517
  E0923 13:47:25.871243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:26.871401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/23/23 13:47:27.521
  STEP: Ensuring resource quota status released the pod usage @ 09/23/23 13:47:27.541
  E0923 13:47:27.872448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:28.872842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:47:29.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1773" for this suite. @ 09/23/23 13:47:29.551
• [13.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/23/23 13:47:29.558
  Sep 23 13:47:29.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename webhook @ 09/23/23 13:47:29.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:29.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:29.575
  STEP: Setting up server cert @ 09/23/23 13:47:29.595
  E0923 13:47:29.872849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/23/23 13:47:29.979
  STEP: Deploying the webhook pod @ 09/23/23 13:47:29.987
  STEP: Wait for the deployment to be ready @ 09/23/23 13:47:30
  Sep 23 13:47:30.010: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0923 13:47:30.872958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:31.873043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/23/23 13:47:32.021
  STEP: Verifying the service has paired with the endpoint @ 09/23/23 13:47:32.031
  E0923 13:47:32.873127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:47:33.032: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/23/23 13:47:33.039
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/23/23 13:47:33.04
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/23/23 13:47:33.04
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/23/23 13:47:33.04
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/23/23 13:47:33.041
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/23/23 13:47:33.041
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/23/23 13:47:33.042
  Sep 23 13:47:33.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2052" for this suite. @ 09/23/23 13:47:33.092
  STEP: Destroying namespace "webhook-markers-4737" for this suite. @ 09/23/23 13:47:33.102
• [3.550 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/23/23 13:47:33.109
  Sep 23 13:47:33.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename field-validation @ 09/23/23 13:47:33.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:33.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:33.124
  Sep 23 13:47:33.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  W0923 13:47:33.128582      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005c88d00 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0923 13:47:33.873514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:34.873763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0923 13:47:35.671087      22 warnings.go:70] unknown field "alpha"
  W0923 13:47:35.671107      22 warnings.go:70] unknown field "beta"
  W0923 13:47:35.671115      22 warnings.go:70] unknown field "delta"
  W0923 13:47:35.671121      22 warnings.go:70] unknown field "epsilon"
  W0923 13:47:35.671128      22 warnings.go:70] unknown field "gamma"
  E0923 13:47:35.874741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 23 13:47:36.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7044" for this suite. @ 09/23/23 13:47:36.217
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/23/23 13:47:36.23
  Sep 23 13:47:36.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2227618074
  STEP: Building a namespace api object, basename watch @ 09/23/23 13:47:36.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/23/23 13:47:36.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/23/23 13:47:36.246
  STEP: creating a watch on configmaps with a certain label @ 09/23/23 13:47:36.249
  STEP: creating a new configmap @ 09/23/23 13:47:36.25
  STEP: modifying the configmap once @ 09/23/23 13:47:36.254
  STEP: changing the label value of the configmap @ 09/23/23 13:47:36.262
  STEP: Expecting to observe a delete notification for the watched object @ 09/23/23 13:47:36.27
  Sep 23 13:47:36.270: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5956  6669056a-a0c6-4307-b40b-9c467f909f1e 43920 0 2023-09-23 13:47:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-23 13:47:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:47:36.270: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5956  6669056a-a0c6-4307-b40b-9c467f909f1e 43921 0 2023-09-23 13:47:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-23 13:47:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:47:36.270: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5956  6669056a-a0c6-4307-b40b-9c467f909f1e 43922 0 2023-09-23 13:47:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-23 13:47:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/23/23 13:47:36.27
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/23/23 13:47:36.277
  E0923 13:47:36.874847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:37.874957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:38.875229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:39.876246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:40.876603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:41.876839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:42.876993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:43.877330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:44.877502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0923 13:47:45.877663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/23/23 13:47:46.278
  STEP: modifying the configmap a third time @ 09/23/23 13:47:46.289
  STEP: deleting the configmap @ 09/23/23 13:47:46.297
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/23/23 13:47:46.302
  Sep 23 13:47:46.302: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5956  6669056a-a0c6-4307-b40b-9c467f909f1e 43967 0 2023-09-23 13:47:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-23 13:47:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:47:46.302: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5956  6669056a-a0c6-4307-b40b-9c467f909f1e 43968 0 2023-09-23 13:47:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-23 13:47:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:47:46.302: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5956  6669056a-a0c6-4307-b40b-9c467f909f1e 43969 0 2023-09-23 13:47:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-23 13:47:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 23 13:47:46.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5956" for this suite. @ 09/23/23 13:47:46.308
• [10.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep 23 13:47:46.314: INFO: Running AfterSuite actions on node 1
  Sep 23 13:47:46.314: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.056 seconds]
------------------------------

Ran 380 of 7387 Specs in 5897.948 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h38m18.256056364s
Test Suite Passed
