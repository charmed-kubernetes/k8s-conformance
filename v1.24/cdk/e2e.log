I0820 11:50:27.119879      20 e2e.go:129] Starting e2e run "6d2f54b1-f4bc-4bbe-8bf3-489b1e04da0e" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1660996227 - Will randomize all specs
Will run 356 of 6971 specs

Aug 20 11:50:28.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 11:50:28.675: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Aug 20 11:50:28.688: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Aug 20 11:50:28.704: INFO: 4 / 4 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Aug 20 11:50:28.704: INFO: expected 4 pod replicas in namespace 'kube-system', 4 are Running and Ready.
Aug 20 11:50:28.704: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Aug 20 11:50:28.708: INFO: e2e test version: v1.24.4
Aug 20 11:50:28.709: INFO: kube-apiserver version: v1.24.4
Aug 20 11:50:28.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 11:50:28.714: INFO: Cluster IP family: ipv4
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:50:28.714: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
Aug 20 11:50:28.734: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
W0820 11:50:28.734325      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 20 11:50:28.743: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0820 11:50:28.746433      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0820 11:50:28.751600      20 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 20 11:50:28.757: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8728
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8728
Aug 20 11:50:28.890: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:50:30.897: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:50:32.896: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:50:34.897: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:50:36.900: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:50:38.896: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 20 11:50:38.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8728 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 20 11:50:39.171: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 20 11:50:39.171: INFO: stdout: "iptables"
Aug 20 11:50:39.171: INFO: proxyMode: iptables
Aug 20 11:50:39.185: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 20 11:50:39.188: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-8728
STEP: creating replication controller affinity-clusterip-timeout in namespace services-8728
I0820 11:50:39.207306      20 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-8728, replica count: 3
I0820 11:50:42.258406      20 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0820 11:50:45.258611      20 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 11:50:45.266: INFO: Creating new exec pod
Aug 20 11:50:48.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8728 exec execpod-affinitypjw2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Aug 20 11:50:48.400: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Aug 20 11:50:48.400: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 11:50:48.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8728 exec execpod-affinitypjw2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.11 80'
Aug 20 11:50:48.527: INFO: stderr: "+ nc -v -t -w 2 10.152.183.11 80\n+ echo hostName\nConnection to 10.152.183.11 80 port [tcp/http] succeeded!\n"
Aug 20 11:50:48.527: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 11:50:48.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8728 exec execpod-affinitypjw2s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.11:80/ ; done'
Aug 20 11:50:48.721: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n"
Aug 20 11:50:48.721: INFO: stdout: "\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2\naffinity-clusterip-timeout-bm8q2"
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Received response from host: affinity-clusterip-timeout-bm8q2
Aug 20 11:50:48.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8728 exec execpod-affinitypjw2s -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.11:80/'
Aug 20 11:50:48.835: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n"
Aug 20 11:50:48.835: INFO: stdout: "affinity-clusterip-timeout-bm8q2"
Aug 20 11:51:08.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8728 exec execpod-affinitypjw2s -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.11:80/'
Aug 20 11:51:08.962: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.11:80/\n"
Aug 20 11:51:08.962: INFO: stdout: "affinity-clusterip-timeout-cpqxs"
Aug 20 11:51:08.962: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-8728, will wait for the garbage collector to delete the pods
Aug 20 11:51:09.035: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 7.447261ms
Aug 20 11:51:09.135: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.105112ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 11:51:11.360: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8728" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:42.655 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":1,"skipped":12,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:51:11.370: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9327
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Aug 20 11:51:11.499: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-9327 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 11:51:11.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9327" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":2,"skipped":56,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:51:11.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-395
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 20 11:51:11.696: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:51:13.704: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 20 11:51:13.718: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 20 11:51:15.730: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 20 11:51:15.742: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 20 11:51:15.746: INFO: Pod pod-with-prestop-http-hook still exists
Aug 20 11:51:17.746: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 20 11:51:17.751: INFO: Pod pod-with-prestop-http-hook still exists
Aug 20 11:51:19.747: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 20 11:51:19.752: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 20 11:51:19.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-395" for this suite.

• [SLOW TEST:8.237 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":3,"skipped":92,"failed":0}
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:51:19.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4383
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4383
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug 20 11:51:19.929: INFO: Found 0 stateful pods, waiting for 3
Aug 20 11:51:29.937: INFO: Found 2 stateful pods, waiting for 3
Aug 20 11:51:39.937: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 11:51:39.937: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 11:51:39.937: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 11:51:39.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-4383 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 11:51:40.083: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 11:51:40.083: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 11:51:40.083: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 20 11:51:50.127: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Aug 20 11:52:00.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-4383 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 11:52:00.288: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 11:52:00.288: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 11:52:00.288: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 11:52:20.310: INFO: Waiting for StatefulSet statefulset-4383/ss2 to complete update
STEP: Rolling back to a previous revision
Aug 20 11:52:30.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-4383 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 11:52:30.456: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 11:52:30.456: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 11:52:30.456: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 11:52:40.492: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Aug 20 11:52:50.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-4383 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 11:52:50.652: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 11:52:50.652: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 11:52:50.652: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 11:53:00.676: INFO: Deleting all statefulset in ns statefulset-4383
Aug 20 11:53:00.680: INFO: Scaling statefulset ss2 to 0
Aug 20 11:53:10.699: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 11:53:10.703: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 11:53:10.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4383" for this suite.

• [SLOW TEST:110.945 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":4,"skipped":96,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:10.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 11:53:10.867: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf" in namespace "projected-9976" to be "Succeeded or Failed"
Aug 20 11:53:10.872: INFO: Pod "downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.681051ms
Aug 20 11:53:12.877: INFO: Pod "downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009504644s
Aug 20 11:53:14.884: INFO: Pod "downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016994877s
STEP: Saw pod success
Aug 20 11:53:14.884: INFO: Pod "downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf" satisfied condition "Succeeded or Failed"
Aug 20 11:53:14.888: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf container client-container: <nil>
STEP: delete the pod
Aug 20 11:53:14.920: INFO: Waiting for pod downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf to disappear
Aug 20 11:53:14.923: INFO: Pod downwardapi-volume-3c67c7b4-95f4-4070-8be4-c3349f104bcf no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 11:53:14.923: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9976" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":126,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:14.933: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 20 11:53:15.073: INFO: Waiting up to 5m0s for pod "pod-a819fcd6-cd32-4605-a437-cf7c575569cc" in namespace "emptydir-4214" to be "Succeeded or Failed"
Aug 20 11:53:15.078: INFO: Pod "pod-a819fcd6-cd32-4605-a437-cf7c575569cc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.060436ms
Aug 20 11:53:17.084: INFO: Pod "pod-a819fcd6-cd32-4605-a437-cf7c575569cc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011647992s
Aug 20 11:53:19.093: INFO: Pod "pod-a819fcd6-cd32-4605-a437-cf7c575569cc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01976037s
STEP: Saw pod success
Aug 20 11:53:19.093: INFO: Pod "pod-a819fcd6-cd32-4605-a437-cf7c575569cc" satisfied condition "Succeeded or Failed"
Aug 20 11:53:19.096: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-a819fcd6-cd32-4605-a437-cf7c575569cc container test-container: <nil>
STEP: delete the pod
Aug 20 11:53:19.115: INFO: Waiting for pod pod-a819fcd6-cd32-4605-a437-cf7c575569cc to disappear
Aug 20 11:53:19.119: INFO: Pod pod-a819fcd6-cd32-4605-a437-cf7c575569cc no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 11:53:19.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4214" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":6,"skipped":142,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:19.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7529
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Aug 20 11:53:19.263: INFO: created test-event-1
Aug 20 11:53:19.267: INFO: created test-event-2
Aug 20 11:53:19.271: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Aug 20 11:53:19.275: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Aug 20 11:53:19.299: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug 20 11:53:19.303: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7529" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":7,"skipped":159,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:19.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-5942
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 20 11:53:24.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-5942" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":8,"skipped":161,"failed":0}
S
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:24.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-844
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 11:53:24.271: INFO: Waiting up to 5m0s for pod "downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967" in namespace "downward-api-844" to be "Succeeded or Failed"
Aug 20 11:53:24.277: INFO: Pod "downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967": Phase="Pending", Reason="", readiness=false. Elapsed: 5.789392ms
Aug 20 11:53:26.283: INFO: Pod "downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011793331s
Aug 20 11:53:28.288: INFO: Pod "downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017424605s
STEP: Saw pod success
Aug 20 11:53:28.288: INFO: Pod "downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967" satisfied condition "Succeeded or Failed"
Aug 20 11:53:28.292: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967 container client-container: <nil>
STEP: delete the pod
Aug 20 11:53:28.309: INFO: Waiting for pod downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967 to disappear
Aug 20 11:53:28.313: INFO: Pod downwardapi-volume-0d79d50a-26ec-4d96-82be-c908eb8b6967 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 11:53:28.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-844" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":9,"skipped":162,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:28.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1322
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Aug 20 11:53:28.456: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2780 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:53:28.456: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2780 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Aug 20 11:53:28.465: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2781 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:53:28.465: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2781 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Aug 20 11:53:28.473: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2782 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:53:28.473: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2782 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Aug 20 11:53:28.479: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2783 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:53:28.479: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1322  232664a2-2bed-4ab4-980c-a22e8f28e978 2783 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Aug 20 11:53:28.484: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1322  33b25807-c720-451f-a6d7-38fbe27329c2 2784 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:53:28.484: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1322  33b25807-c720-451f-a6d7-38fbe27329c2 2784 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Aug 20 11:53:38.493: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1322  33b25807-c720-451f-a6d7-38fbe27329c2 2848 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:53:38.493: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1322  33b25807-c720-451f-a6d7-38fbe27329c2 2848 0 2022-08-20 11:53:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-20 11:53:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 20 11:53:48.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1322" for this suite.

• [SLOW TEST:20.183 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":10,"skipped":170,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:53:48.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-8510
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Aug 20 11:53:48.635: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 20 11:54:48.653: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 11:54:48.657: INFO: Starting informer...
STEP: Starting pod...
Aug 20 11:54:48.872: INFO: Pod is running on ip-172-31-39-75. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Aug 20 11:54:48.886: INFO: Pod wasn't evicted. Proceeding
Aug 20 11:54:48.886: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Aug 20 11:56:03.906: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Aug 20 11:56:03.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-8510" for this suite.

• [SLOW TEST:135.414 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":11,"skipped":219,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:56:03.920: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8209
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 20 11:56:14.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8209" for this suite.

• [SLOW TEST:10.159 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":12,"skipped":243,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:56:14.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-2296/configmap-test-f6f58f0e-c23a-4589-b399-431ab95b7035
STEP: Creating a pod to test consume configMaps
Aug 20 11:56:14.222: INFO: Waiting up to 5m0s for pod "pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29" in namespace "configmap-2296" to be "Succeeded or Failed"
Aug 20 11:56:14.228: INFO: Pod "pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29": Phase="Pending", Reason="", readiness=false. Elapsed: 5.492206ms
Aug 20 11:56:16.236: INFO: Pod "pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013406554s
Aug 20 11:56:18.243: INFO: Pod "pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02038164s
STEP: Saw pod success
Aug 20 11:56:18.243: INFO: Pod "pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29" satisfied condition "Succeeded or Failed"
Aug 20 11:56:18.247: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29 container env-test: <nil>
STEP: delete the pod
Aug 20 11:56:18.269: INFO: Waiting for pod pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29 to disappear
Aug 20 11:56:18.273: INFO: Pod pod-configmaps-be46020d-23d2-419d-b2da-7cd7b5a35b29 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 11:56:18.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2296" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":13,"skipped":268,"failed":0}
S
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:56:18.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4813
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Aug 20 11:56:18.447: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4813  3ca08372-709b-4e5e-9b42-332a81eaa666 3338 0 2022-08-20 11:56:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-20 11:56:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 11:56:18.447: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4813  3ca08372-709b-4e5e-9b42-332a81eaa666 3339 0 2022-08-20 11:56:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-20 11:56:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 20 11:56:18.447: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4813" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":14,"skipped":269,"failed":0}

------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:56:18.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9785
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-9785
STEP: creating replication controller nodeport-test in namespace services-9785
I0820 11:56:18.606909      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-9785, replica count: 2
Aug 20 11:56:21.657: INFO: Creating new exec pod
I0820 11:56:21.657747      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 11:56:24.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9785 exec execpoddtnnt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 20 11:56:24.810: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 20 11:56:24.810: INFO: stdout: "nodeport-test-dx6b4"
Aug 20 11:56:24.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9785 exec execpoddtnnt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.31 80'
Aug 20 11:56:24.930: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.31 80\nConnection to 10.152.183.31 80 port [tcp/http] succeeded!\n"
Aug 20 11:56:24.930: INFO: stdout: "nodeport-test-4q94q"
Aug 20 11:56:24.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9785 exec execpoddtnnt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.25 30838'
Aug 20 11:56:25.048: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.25 30838\nConnection to 172.31.90.25 30838 port [tcp/*] succeeded!\n"
Aug 20 11:56:25.048: INFO: stdout: "nodeport-test-4q94q"
Aug 20 11:56:25.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9785 exec execpoddtnnt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.71.246 30838'
Aug 20 11:56:25.166: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.71.246 30838\nConnection to 172.31.71.246 30838 port [tcp/*] succeeded!\n"
Aug 20 11:56:25.166: INFO: stdout: "nodeport-test-dx6b4"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 11:56:25.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9785" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.721 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":15,"skipped":269,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:56:25.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4044
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4044
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 11:56:25.327: INFO: Found 0 stateful pods, waiting for 1
Aug 20 11:56:35.333: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Aug 20 11:56:35.359: INFO: Found 1 stateful pods, waiting for 2
Aug 20 11:56:45.364: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 11:56:45.364: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 11:56:45.386: INFO: Deleting all statefulset in ns statefulset-4044
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 11:56:45.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4044" for this suite.

• [SLOW TEST:20.231 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":16,"skipped":308,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:56:45.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1627
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-1fd82979-5e10-4604-8776-6ad9673c9555 in namespace container-probe-1627
Aug 20 11:56:47.555: INFO: Started pod busybox-1fd82979-5e10-4604-8776-6ad9673c9555 in namespace container-probe-1627
STEP: checking the pod's current state and verifying that restartCount is present
Aug 20 11:56:47.559: INFO: Initial restart count of pod busybox-1fd82979-5e10-4604-8776-6ad9673c9555 is 0
Aug 20 11:57:37.714: INFO: Restart count of pod container-probe-1627/busybox-1fd82979-5e10-4604-8776-6ad9673c9555 is now 1 (50.154575673s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 11:57:37.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1627" for this suite.

• [SLOW TEST:52.330 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":17,"skipped":329,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:57:37.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1079
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 20 11:57:37.880: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 20 11:58:37.902: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug 20 11:58:37.929: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 20 11:58:37.936: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 20 11:58:37.952: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 20 11:58:37.958: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 20 11:58:37.973: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 20 11:58:37.983: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 20 11:58:54.083: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1079" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:76.391 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":18,"skipped":340,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:58:54.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8829
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-71213d08-4e5d-4057-9b68-6ac013f5d42f
STEP: Creating a pod to test consume configMaps
Aug 20 11:58:54.274: INFO: Waiting up to 5m0s for pod "pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a" in namespace "configmap-8829" to be "Succeeded or Failed"
Aug 20 11:58:54.279: INFO: Pod "pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.273541ms
Aug 20 11:58:56.285: INFO: Pod "pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010609208s
Aug 20 11:58:58.293: INFO: Pod "pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018859713s
STEP: Saw pod success
Aug 20 11:58:58.293: INFO: Pod "pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a" satisfied condition "Succeeded or Failed"
Aug 20 11:58:58.297: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a container configmap-volume-test: <nil>
STEP: delete the pod
Aug 20 11:58:58.329: INFO: Waiting for pod pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a to disappear
Aug 20 11:58:58.332: INFO: Pod pod-configmaps-db8aeaa9-dcfb-4bfb-ae4f-6d56ee80318a no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 11:58:58.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8829" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":19,"skipped":352,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 11:58:58.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-780
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-780
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-780
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-780
Aug 20 11:58:58.489: INFO: Found 0 stateful pods, waiting for 1
Aug 20 11:59:08.496: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Aug 20 11:59:08.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 11:59:08.627: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 11:59:08.627: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 11:59:08.627: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 11:59:08.631: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 20 11:59:18.639: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 11:59:18.639: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 11:59:18.656: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999848s
Aug 20 11:59:19.662: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996292604s
Aug 20 11:59:20.668: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990581492s
Aug 20 11:59:21.675: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984202308s
Aug 20 11:59:22.682: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.976823731s
Aug 20 11:59:23.688: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.971046094s
Aug 20 11:59:24.693: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.964859073s
Aug 20 11:59:25.700: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.959323576s
Aug 20 11:59:26.705: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.952691278s
Aug 20 11:59:27.710: INFO: Verifying statefulset ss doesn't scale past 1 for another 947.661308ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-780
Aug 20 11:59:28.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 11:59:28.840: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 11:59:28.840: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 11:59:28.840: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 11:59:28.844: INFO: Found 1 stateful pods, waiting for 3
Aug 20 11:59:38.851: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 11:59:38.851: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 11:59:38.851: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Aug 20 11:59:38.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 11:59:38.984: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 11:59:38.984: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 11:59:38.984: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 11:59:38.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 11:59:39.127: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 11:59:39.127: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 11:59:39.127: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 11:59:39.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 11:59:39.272: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 11:59:39.272: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 11:59:39.272: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 11:59:39.272: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 11:59:39.276: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug 20 11:59:49.290: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 11:59:49.290: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 11:59:49.290: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 11:59:49.303: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999828s
Aug 20 11:59:50.310: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99576287s
Aug 20 11:59:51.316: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.98931197s
Aug 20 11:59:52.322: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98242908s
Aug 20 11:59:53.328: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976753537s
Aug 20 11:59:54.334: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970968512s
Aug 20 11:59:55.344: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.96524877s
Aug 20 11:59:56.351: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.954714364s
Aug 20 11:59:57.359: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.946928576s
Aug 20 11:59:58.366: INFO: Verifying statefulset ss doesn't scale past 3 for another 940.294655ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-780
Aug 20 11:59:59.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 11:59:59.484: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 11:59:59.484: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 11:59:59.484: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 11:59:59.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 11:59:59.604: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 11:59:59.604: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 11:59:59.604: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 11:59:59.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-780 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 11:59:59.729: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 11:59:59.729: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 11:59:59.729: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 11:59:59.729: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 12:00:09.747: INFO: Deleting all statefulset in ns statefulset-780
Aug 20 12:00:09.751: INFO: Scaling statefulset ss to 0
Aug 20 12:00:09.762: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:00:09.766: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 12:00:09.782: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-780" for this suite.

• [SLOW TEST:71.450 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":20,"skipped":367,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:09.793: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6882
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-0eb520cc-69bb-4695-ac60-202b21105cba
STEP: Creating a pod to test consume configMaps
Aug 20 12:00:09.932: INFO: Waiting up to 5m0s for pod "pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39" in namespace "configmap-6882" to be "Succeeded or Failed"
Aug 20 12:00:09.936: INFO: Pod "pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39": Phase="Pending", Reason="", readiness=false. Elapsed: 3.256018ms
Aug 20 12:00:11.941: INFO: Pod "pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008638513s
Aug 20 12:00:13.949: INFO: Pod "pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016069388s
STEP: Saw pod success
Aug 20 12:00:13.949: INFO: Pod "pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39" satisfied condition "Succeeded or Failed"
Aug 20 12:00:13.952: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:00:13.970: INFO: Waiting for pod pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39 to disappear
Aug 20 12:00:13.973: INFO: Pod pod-configmaps-f062600a-12b5-427a-a7b2-ed923ca19b39 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:00:13.973: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6882" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":21,"skipped":378,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:13.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8108
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:00:14.129: INFO: The status of Pod busybox-scheduling-4cd84b83-c94f-45ff-b06a-4e87b3afdc1d is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:00:16.137: INFO: The status of Pod busybox-scheduling-4cd84b83-c94f-45ff-b06a-4e87b3afdc1d is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 20 12:00:16.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8108" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":22,"skipped":427,"failed":0}
SSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:16.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-7845
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:00:16.288: INFO: Creating pod...
Aug 20 12:00:18.304: INFO: Creating service...
Aug 20 12:00:18.315: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/DELETE
Aug 20 12:00:18.322: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 20 12:00:18.322: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/GET
Aug 20 12:00:18.327: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 20 12:00:18.327: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/HEAD
Aug 20 12:00:18.331: INFO: http.Client request:HEAD | StatusCode:200
Aug 20 12:00:18.331: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/OPTIONS
Aug 20 12:00:18.336: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 20 12:00:18.336: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/PATCH
Aug 20 12:00:18.340: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 20 12:00:18.340: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/POST
Aug 20 12:00:18.345: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 20 12:00:18.345: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/pods/agnhost/proxy/some/path/with/PUT
Aug 20 12:00:18.349: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 20 12:00:18.349: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/DELETE
Aug 20 12:00:18.356: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 20 12:00:18.356: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/GET
Aug 20 12:00:18.362: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 20 12:00:18.362: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/HEAD
Aug 20 12:00:18.368: INFO: http.Client request:HEAD | StatusCode:200
Aug 20 12:00:18.368: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/OPTIONS
Aug 20 12:00:18.374: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 20 12:00:18.374: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/PATCH
Aug 20 12:00:18.381: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 20 12:00:18.381: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/POST
Aug 20 12:00:18.386: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 20 12:00:18.386: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7845/services/test-service/proxy/some/path/with/PUT
Aug 20 12:00:18.392: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 20 12:00:18.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-7845" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":23,"skipped":430,"failed":0}
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:18.404: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1304
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:00:18.747: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:00:21.772: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Aug 20 12:00:23.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=webhook-1304 attach --namespace=webhook-1304 to-be-attached-pod -i -c=container1'
Aug 20 12:00:23.875: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:00:23.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1304" for this suite.
STEP: Destroying namespace "webhook-1304-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.535 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":24,"skipped":431,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:23.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2007
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Aug 20 12:00:24.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:00:26.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:00:34.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2007" for this suite.

• [SLOW TEST:10.567 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":25,"skipped":449,"failed":0}
SSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:34.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7304
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-57f94bba-1b18-4581-b138-6782a2fac7af
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:00:34.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7304" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":26,"skipped":453,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:34.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8462
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:00:34.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 20 12:00:36.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-8462 --namespace=crd-publish-openapi-8462 create -f -'
Aug 20 12:00:37.466: INFO: stderr: ""
Aug 20 12:00:37.466: INFO: stdout: "e2e-test-crd-publish-openapi-6043-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 20 12:00:37.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-8462 --namespace=crd-publish-openapi-8462 delete e2e-test-crd-publish-openapi-6043-crds test-cr'
Aug 20 12:00:37.537: INFO: stderr: ""
Aug 20 12:00:37.537: INFO: stdout: "e2e-test-crd-publish-openapi-6043-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Aug 20 12:00:37.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-8462 --namespace=crd-publish-openapi-8462 apply -f -'
Aug 20 12:00:37.736: INFO: stderr: ""
Aug 20 12:00:37.736: INFO: stdout: "e2e-test-crd-publish-openapi-6043-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 20 12:00:37.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-8462 --namespace=crd-publish-openapi-8462 delete e2e-test-crd-publish-openapi-6043-crds test-cr'
Aug 20 12:00:37.786: INFO: stderr: ""
Aug 20 12:00:37.786: INFO: stdout: "e2e-test-crd-publish-openapi-6043-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 20 12:00:37.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-8462 explain e2e-test-crd-publish-openapi-6043-crds'
Aug 20 12:00:38.228: INFO: stderr: ""
Aug 20 12:00:38.228: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6043-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:00:40.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8462" for this suite.

• [SLOW TEST:5.566 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":27,"skipped":460,"failed":0}
S
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:00:40.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3731
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 20 12:06:00.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3731" for this suite.

• [SLOW TEST:320.182 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":28,"skipped":461,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:00.393: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:06:13.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5910" for this suite.

• [SLOW TEST:13.278 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":29,"skipped":462,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:13.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4172
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:06:13.809: INFO: Waiting up to 5m0s for pod "downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee" in namespace "projected-4172" to be "Succeeded or Failed"
Aug 20 12:06:13.813: INFO: Pod "downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee": Phase="Pending", Reason="", readiness=false. Elapsed: 4.510304ms
Aug 20 12:06:15.822: INFO: Pod "downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012983187s
Aug 20 12:06:17.826: INFO: Pod "downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017370138s
STEP: Saw pod success
Aug 20 12:06:17.826: INFO: Pod "downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee" satisfied condition "Succeeded or Failed"
Aug 20 12:06:17.830: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee container client-container: <nil>
STEP: delete the pod
Aug 20 12:06:17.860: INFO: Waiting for pod downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee to disappear
Aug 20 12:06:17.863: INFO: Pod downwardapi-volume-59bc9fcb-b5d2-4a33-b197-91103deab3ee no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:06:17.863: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4172" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":30,"skipped":467,"failed":0}
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:17.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-7993
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 20 12:06:18.025: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:06:20.034: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 20 12:06:20.049: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:06:22.057: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 20 12:06:22.070: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 20 12:06:22.074: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 20 12:06:24.075: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 20 12:06:24.080: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 20 12:06:24.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-7993" for this suite.

• [SLOW TEST:6.224 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":31,"skipped":470,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:24.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9489
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 20 12:06:24.259: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:24.259: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:24.262: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:06:24.262: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 12:06:25.267: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:25.267: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:25.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 20 12:06:25.272: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 12:06:26.269: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:26.269: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:26.273: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 12:06:26.273: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Aug 20 12:06:26.292: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:26.292: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:26.296: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 20 12:06:26.296: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:06:27.303: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:27.303: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:27.307: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 20 12:06:27.307: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:06:28.304: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:28.304: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:28.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 20 12:06:28.308: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:06:29.302: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:29.302: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:29.306: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 20 12:06:29.306: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:06:30.304: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:30.304: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:06:30.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 12:06:30.308: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9489, will wait for the garbage collector to delete the pods
Aug 20 12:06:30.373: INFO: Deleting DaemonSet.extensions daemon-set took: 7.853015ms
Aug 20 12:06:30.474: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.692965ms
Aug 20 12:06:32.879: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:06:32.879: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 20 12:06:32.883: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5856"},"items":null}

Aug 20 12:06:32.887: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5856"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:06:32.901: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9489" for this suite.

• [SLOW TEST:8.812 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":32,"skipped":485,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:32.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 20 12:06:37.080: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 20 12:06:37.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8532" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":33,"skipped":515,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:37.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-5548
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:06:37.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: creating replication controller svc-latency-rc in namespace svc-latency-5548
I0820 12:06:37.240853      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5548, replica count: 1
I0820 12:06:38.292589      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0820 12:06:39.293332      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 12:06:39.406: INFO: Created: latency-svc-4rr4d
Aug 20 12:06:39.413: INFO: Got endpoints: latency-svc-4rr4d [19.117647ms]
Aug 20 12:06:39.425: INFO: Created: latency-svc-crw8h
Aug 20 12:06:39.431: INFO: Got endpoints: latency-svc-crw8h [17.753311ms]
Aug 20 12:06:39.432: INFO: Created: latency-svc-vtxgx
Aug 20 12:06:39.436: INFO: Got endpoints: latency-svc-vtxgx [22.451271ms]
Aug 20 12:06:39.439: INFO: Created: latency-svc-2ndvw
Aug 20 12:06:39.444: INFO: Got endpoints: latency-svc-2ndvw [30.672168ms]
Aug 20 12:06:39.447: INFO: Created: latency-svc-9pkrn
Aug 20 12:06:39.452: INFO: Got endpoints: latency-svc-9pkrn [37.985726ms]
Aug 20 12:06:39.452: INFO: Created: latency-svc-x4mjq
Aug 20 12:06:39.457: INFO: Got endpoints: latency-svc-x4mjq [43.554953ms]
Aug 20 12:06:39.464: INFO: Created: latency-svc-29wzw
Aug 20 12:06:39.469: INFO: Got endpoints: latency-svc-29wzw [55.813601ms]
Aug 20 12:06:39.472: INFO: Created: latency-svc-w5vfc
Aug 20 12:06:39.477: INFO: Got endpoints: latency-svc-w5vfc [63.402154ms]
Aug 20 12:06:39.480: INFO: Created: latency-svc-lwjqq
Aug 20 12:06:39.485: INFO: Created: latency-svc-5rdnh
Aug 20 12:06:39.488: INFO: Got endpoints: latency-svc-lwjqq [74.411965ms]
Aug 20 12:06:39.490: INFO: Got endpoints: latency-svc-5rdnh [75.852607ms]
Aug 20 12:06:39.494: INFO: Created: latency-svc-7954w
Aug 20 12:06:39.501: INFO: Got endpoints: latency-svc-7954w [87.549807ms]
Aug 20 12:06:39.502: INFO: Created: latency-svc-b275w
Aug 20 12:06:39.508: INFO: Got endpoints: latency-svc-b275w [94.239715ms]
Aug 20 12:06:39.509: INFO: Created: latency-svc-hdsvm
Aug 20 12:06:39.516: INFO: Got endpoints: latency-svc-hdsvm [101.869806ms]
Aug 20 12:06:39.521: INFO: Created: latency-svc-bg5c9
Aug 20 12:06:39.527: INFO: Got endpoints: latency-svc-bg5c9 [112.845818ms]
Aug 20 12:06:39.530: INFO: Created: latency-svc-wmkq6
Aug 20 12:06:39.536: INFO: Created: latency-svc-9mvlg
Aug 20 12:06:39.537: INFO: Got endpoints: latency-svc-wmkq6 [122.592819ms]
Aug 20 12:06:39.543: INFO: Got endpoints: latency-svc-9mvlg [129.169295ms]
Aug 20 12:06:39.547: INFO: Created: latency-svc-jchkc
Aug 20 12:06:39.551: INFO: Got endpoints: latency-svc-jchkc [120.553946ms]
Aug 20 12:06:39.554: INFO: Created: latency-svc-49k5g
Aug 20 12:06:39.559: INFO: Created: latency-svc-j9v7j
Aug 20 12:06:39.560: INFO: Got endpoints: latency-svc-49k5g [124.350777ms]
Aug 20 12:06:39.565: INFO: Got endpoints: latency-svc-j9v7j [120.910526ms]
Aug 20 12:06:39.567: INFO: Created: latency-svc-xwq8b
Aug 20 12:06:39.571: INFO: Got endpoints: latency-svc-xwq8b [119.173243ms]
Aug 20 12:06:39.574: INFO: Created: latency-svc-dwc2v
Aug 20 12:06:39.578: INFO: Created: latency-svc-6sl5r
Aug 20 12:06:39.579: INFO: Got endpoints: latency-svc-dwc2v [122.202477ms]
Aug 20 12:06:39.584: INFO: Got endpoints: latency-svc-6sl5r [114.590288ms]
Aug 20 12:06:39.587: INFO: Created: latency-svc-gdbgg
Aug 20 12:06:39.591: INFO: Got endpoints: latency-svc-gdbgg [113.806626ms]
Aug 20 12:06:39.594: INFO: Created: latency-svc-dvcgk
Aug 20 12:06:39.600: INFO: Created: latency-svc-d4ps8
Aug 20 12:06:39.600: INFO: Got endpoints: latency-svc-dvcgk [112.051455ms]
Aug 20 12:06:39.604: INFO: Got endpoints: latency-svc-d4ps8 [113.931283ms]
Aug 20 12:06:39.607: INFO: Created: latency-svc-x4rvj
Aug 20 12:06:39.611: INFO: Got endpoints: latency-svc-x4rvj [109.576905ms]
Aug 20 12:06:39.614: INFO: Created: latency-svc-phjpf
Aug 20 12:06:39.619: INFO: Got endpoints: latency-svc-phjpf [111.25647ms]
Aug 20 12:06:39.620: INFO: Created: latency-svc-5tb22
Aug 20 12:06:39.626: INFO: Created: latency-svc-vtb5r
Aug 20 12:06:39.627: INFO: Got endpoints: latency-svc-5tb22 [111.21715ms]
Aug 20 12:06:39.631: INFO: Got endpoints: latency-svc-vtb5r [104.463389ms]
Aug 20 12:06:39.636: INFO: Created: latency-svc-mj7c4
Aug 20 12:06:39.640: INFO: Got endpoints: latency-svc-mj7c4 [103.485983ms]
Aug 20 12:06:39.643: INFO: Created: latency-svc-nvkpk
Aug 20 12:06:39.648: INFO: Got endpoints: latency-svc-nvkpk [104.752083ms]
Aug 20 12:06:39.650: INFO: Created: latency-svc-m5tj8
Aug 20 12:06:39.656: INFO: Got endpoints: latency-svc-m5tj8 [104.18637ms]
Aug 20 12:06:39.657: INFO: Created: latency-svc-wdjf5
Aug 20 12:06:39.664: INFO: Got endpoints: latency-svc-wdjf5 [103.621713ms]
Aug 20 12:06:39.664: INFO: Created: latency-svc-h7js8
Aug 20 12:06:39.669: INFO: Got endpoints: latency-svc-h7js8 [104.218412ms]
Aug 20 12:06:39.674: INFO: Created: latency-svc-hrjs7
Aug 20 12:06:39.679: INFO: Created: latency-svc-qpkpx
Aug 20 12:06:39.680: INFO: Got endpoints: latency-svc-hrjs7 [109.342536ms]
Aug 20 12:06:39.687: INFO: Created: latency-svc-bckpq
Aug 20 12:06:39.693: INFO: Created: latency-svc-9bm7s
Aug 20 12:06:39.698: INFO: Created: latency-svc-dk4wx
Aug 20 12:06:39.704: INFO: Created: latency-svc-hzxqm
Aug 20 12:06:39.710: INFO: Created: latency-svc-pntz7
Aug 20 12:06:39.712: INFO: Got endpoints: latency-svc-qpkpx [132.185412ms]
Aug 20 12:06:39.716: INFO: Created: latency-svc-jfkxj
Aug 20 12:06:39.721: INFO: Created: latency-svc-sd7bg
Aug 20 12:06:39.727: INFO: Created: latency-svc-b8jmm
Aug 20 12:06:39.735: INFO: Created: latency-svc-87smp
Aug 20 12:06:39.740: INFO: Created: latency-svc-hsdhc
Aug 20 12:06:39.747: INFO: Created: latency-svc-djk5c
Aug 20 12:06:39.752: INFO: Created: latency-svc-sjs8s
Aug 20 12:06:39.758: INFO: Created: latency-svc-hcsh5
Aug 20 12:06:39.762: INFO: Got endpoints: latency-svc-bckpq [178.268017ms]
Aug 20 12:06:39.765: INFO: Created: latency-svc-xvhfv
Aug 20 12:06:39.770: INFO: Created: latency-svc-nk24d
Aug 20 12:06:39.777: INFO: Created: latency-svc-q56k5
Aug 20 12:06:39.812: INFO: Got endpoints: latency-svc-9bm7s [220.652638ms]
Aug 20 12:06:39.822: INFO: Created: latency-svc-xltqh
Aug 20 12:06:39.862: INFO: Got endpoints: latency-svc-dk4wx [261.407158ms]
Aug 20 12:06:39.873: INFO: Created: latency-svc-9g62f
Aug 20 12:06:39.912: INFO: Got endpoints: latency-svc-hzxqm [308.413087ms]
Aug 20 12:06:39.923: INFO: Created: latency-svc-xp5zb
Aug 20 12:06:39.965: INFO: Got endpoints: latency-svc-pntz7 [353.952194ms]
Aug 20 12:06:39.976: INFO: Created: latency-svc-bd7cv
Aug 20 12:06:40.011: INFO: Got endpoints: latency-svc-jfkxj [392.008845ms]
Aug 20 12:06:40.021: INFO: Created: latency-svc-ptxs2
Aug 20 12:06:40.063: INFO: Got endpoints: latency-svc-sd7bg [436.216621ms]
Aug 20 12:06:40.074: INFO: Created: latency-svc-pwlmd
Aug 20 12:06:40.112: INFO: Got endpoints: latency-svc-b8jmm [480.74729ms]
Aug 20 12:06:40.122: INFO: Created: latency-svc-c9c8f
Aug 20 12:06:40.165: INFO: Got endpoints: latency-svc-87smp [524.666949ms]
Aug 20 12:06:40.174: INFO: Created: latency-svc-8hdb8
Aug 20 12:06:40.214: INFO: Got endpoints: latency-svc-hsdhc [565.87496ms]
Aug 20 12:06:40.224: INFO: Created: latency-svc-2ffwl
Aug 20 12:06:40.263: INFO: Got endpoints: latency-svc-djk5c [607.385603ms]
Aug 20 12:06:40.273: INFO: Created: latency-svc-dktmk
Aug 20 12:06:40.313: INFO: Got endpoints: latency-svc-sjs8s [649.262325ms]
Aug 20 12:06:40.323: INFO: Created: latency-svc-j2kfc
Aug 20 12:06:40.363: INFO: Got endpoints: latency-svc-hcsh5 [693.247356ms]
Aug 20 12:06:40.373: INFO: Created: latency-svc-hfwc8
Aug 20 12:06:40.414: INFO: Got endpoints: latency-svc-xvhfv [734.304223ms]
Aug 20 12:06:40.426: INFO: Created: latency-svc-zm24l
Aug 20 12:06:40.464: INFO: Got endpoints: latency-svc-nk24d [752.163302ms]
Aug 20 12:06:40.473: INFO: Created: latency-svc-wkj5t
Aug 20 12:06:40.512: INFO: Got endpoints: latency-svc-q56k5 [749.852657ms]
Aug 20 12:06:40.522: INFO: Created: latency-svc-r7bzs
Aug 20 12:06:40.563: INFO: Got endpoints: latency-svc-xltqh [750.979154ms]
Aug 20 12:06:40.573: INFO: Created: latency-svc-2lrfr
Aug 20 12:06:40.613: INFO: Got endpoints: latency-svc-9g62f [750.89323ms]
Aug 20 12:06:40.624: INFO: Created: latency-svc-8kxjd
Aug 20 12:06:40.663: INFO: Got endpoints: latency-svc-xp5zb [750.467867ms]
Aug 20 12:06:40.673: INFO: Created: latency-svc-6q85g
Aug 20 12:06:40.714: INFO: Got endpoints: latency-svc-bd7cv [748.669707ms]
Aug 20 12:06:40.724: INFO: Created: latency-svc-jm5fh
Aug 20 12:06:40.762: INFO: Got endpoints: latency-svc-ptxs2 [750.752956ms]
Aug 20 12:06:40.772: INFO: Created: latency-svc-xts92
Aug 20 12:06:40.813: INFO: Got endpoints: latency-svc-pwlmd [749.444466ms]
Aug 20 12:06:40.822: INFO: Created: latency-svc-7m7b9
Aug 20 12:06:40.861: INFO: Got endpoints: latency-svc-c9c8f [749.137222ms]
Aug 20 12:06:40.871: INFO: Created: latency-svc-prchs
Aug 20 12:06:40.912: INFO: Got endpoints: latency-svc-8hdb8 [746.921075ms]
Aug 20 12:06:40.921: INFO: Created: latency-svc-htqrq
Aug 20 12:06:40.961: INFO: Got endpoints: latency-svc-2ffwl [747.171572ms]
Aug 20 12:06:40.971: INFO: Created: latency-svc-gzj57
Aug 20 12:06:41.013: INFO: Got endpoints: latency-svc-dktmk [749.885372ms]
Aug 20 12:06:41.024: INFO: Created: latency-svc-k25gk
Aug 20 12:06:41.061: INFO: Got endpoints: latency-svc-j2kfc [747.940967ms]
Aug 20 12:06:41.070: INFO: Created: latency-svc-ffnvq
Aug 20 12:06:41.112: INFO: Got endpoints: latency-svc-hfwc8 [749.609368ms]
Aug 20 12:06:41.122: INFO: Created: latency-svc-kcz46
Aug 20 12:06:41.163: INFO: Got endpoints: latency-svc-zm24l [748.331912ms]
Aug 20 12:06:41.173: INFO: Created: latency-svc-l6xkt
Aug 20 12:06:41.213: INFO: Got endpoints: latency-svc-wkj5t [748.845944ms]
Aug 20 12:06:41.225: INFO: Created: latency-svc-zf4sh
Aug 20 12:06:41.261: INFO: Got endpoints: latency-svc-r7bzs [748.67974ms]
Aug 20 12:06:41.271: INFO: Created: latency-svc-nsbgh
Aug 20 12:06:41.316: INFO: Got endpoints: latency-svc-2lrfr [753.534778ms]
Aug 20 12:06:41.326: INFO: Created: latency-svc-wt92z
Aug 20 12:06:41.362: INFO: Got endpoints: latency-svc-8kxjd [749.797372ms]
Aug 20 12:06:41.372: INFO: Created: latency-svc-5c84v
Aug 20 12:06:41.413: INFO: Got endpoints: latency-svc-6q85g [750.616148ms]
Aug 20 12:06:41.424: INFO: Created: latency-svc-kh9r6
Aug 20 12:06:41.462: INFO: Got endpoints: latency-svc-jm5fh [748.617133ms]
Aug 20 12:06:41.475: INFO: Created: latency-svc-cz44l
Aug 20 12:06:41.512: INFO: Got endpoints: latency-svc-xts92 [749.388368ms]
Aug 20 12:06:41.521: INFO: Created: latency-svc-cn5k8
Aug 20 12:06:41.563: INFO: Got endpoints: latency-svc-7m7b9 [749.822201ms]
Aug 20 12:06:41.573: INFO: Created: latency-svc-rw96m
Aug 20 12:06:41.612: INFO: Got endpoints: latency-svc-prchs [751.139524ms]
Aug 20 12:06:41.622: INFO: Created: latency-svc-rz67p
Aug 20 12:06:41.662: INFO: Got endpoints: latency-svc-htqrq [750.064615ms]
Aug 20 12:06:41.671: INFO: Created: latency-svc-pqj8p
Aug 20 12:06:41.713: INFO: Got endpoints: latency-svc-gzj57 [751.635674ms]
Aug 20 12:06:41.723: INFO: Created: latency-svc-7dzjp
Aug 20 12:06:41.762: INFO: Got endpoints: latency-svc-k25gk [748.499772ms]
Aug 20 12:06:41.772: INFO: Created: latency-svc-vkbfs
Aug 20 12:06:41.812: INFO: Got endpoints: latency-svc-ffnvq [750.995035ms]
Aug 20 12:06:41.821: INFO: Created: latency-svc-hkpl6
Aug 20 12:06:41.863: INFO: Got endpoints: latency-svc-kcz46 [750.889598ms]
Aug 20 12:06:41.872: INFO: Created: latency-svc-wg4nv
Aug 20 12:06:41.913: INFO: Got endpoints: latency-svc-l6xkt [750.286308ms]
Aug 20 12:06:41.923: INFO: Created: latency-svc-2vdd5
Aug 20 12:06:41.961: INFO: Got endpoints: latency-svc-zf4sh [748.598682ms]
Aug 20 12:06:41.971: INFO: Created: latency-svc-pq59x
Aug 20 12:06:42.041: INFO: Got endpoints: latency-svc-nsbgh [780.346727ms]
Aug 20 12:06:42.051: INFO: Created: latency-svc-wv7jv
Aug 20 12:06:42.062: INFO: Got endpoints: latency-svc-wt92z [746.015117ms]
Aug 20 12:06:42.072: INFO: Created: latency-svc-dbh2j
Aug 20 12:06:42.115: INFO: Got endpoints: latency-svc-5c84v [752.438766ms]
Aug 20 12:06:42.128: INFO: Created: latency-svc-4nmf8
Aug 20 12:06:42.163: INFO: Got endpoints: latency-svc-kh9r6 [749.503084ms]
Aug 20 12:06:42.173: INFO: Created: latency-svc-v4bc2
Aug 20 12:06:42.212: INFO: Got endpoints: latency-svc-cz44l [749.800298ms]
Aug 20 12:06:42.223: INFO: Created: latency-svc-jl9jl
Aug 20 12:06:42.263: INFO: Got endpoints: latency-svc-cn5k8 [751.212541ms]
Aug 20 12:06:42.272: INFO: Created: latency-svc-5s2cz
Aug 20 12:06:42.312: INFO: Got endpoints: latency-svc-rw96m [749.337583ms]
Aug 20 12:06:42.322: INFO: Created: latency-svc-dl7b7
Aug 20 12:06:42.363: INFO: Got endpoints: latency-svc-rz67p [750.546379ms]
Aug 20 12:06:42.373: INFO: Created: latency-svc-v88j2
Aug 20 12:06:42.413: INFO: Got endpoints: latency-svc-pqj8p [750.94494ms]
Aug 20 12:06:42.424: INFO: Created: latency-svc-nkz9k
Aug 20 12:06:42.463: INFO: Got endpoints: latency-svc-7dzjp [750.312441ms]
Aug 20 12:06:42.473: INFO: Created: latency-svc-66fs8
Aug 20 12:06:42.511: INFO: Got endpoints: latency-svc-vkbfs [749.295581ms]
Aug 20 12:06:42.522: INFO: Created: latency-svc-jb9x5
Aug 20 12:06:42.563: INFO: Got endpoints: latency-svc-hkpl6 [750.528523ms]
Aug 20 12:06:42.573: INFO: Created: latency-svc-7hvds
Aug 20 12:06:42.613: INFO: Got endpoints: latency-svc-wg4nv [749.382375ms]
Aug 20 12:06:42.622: INFO: Created: latency-svc-n7fj5
Aug 20 12:06:42.662: INFO: Got endpoints: latency-svc-2vdd5 [749.127866ms]
Aug 20 12:06:42.673: INFO: Created: latency-svc-6v5x4
Aug 20 12:06:42.713: INFO: Got endpoints: latency-svc-pq59x [751.229868ms]
Aug 20 12:06:42.723: INFO: Created: latency-svc-nmsvs
Aug 20 12:06:42.761: INFO: Got endpoints: latency-svc-wv7jv [719.273239ms]
Aug 20 12:06:42.770: INFO: Created: latency-svc-jpnrr
Aug 20 12:06:42.812: INFO: Got endpoints: latency-svc-dbh2j [749.907535ms]
Aug 20 12:06:42.823: INFO: Created: latency-svc-kc7m6
Aug 20 12:06:42.863: INFO: Got endpoints: latency-svc-4nmf8 [748.466414ms]
Aug 20 12:06:42.874: INFO: Created: latency-svc-mthkd
Aug 20 12:06:42.913: INFO: Got endpoints: latency-svc-v4bc2 [749.763544ms]
Aug 20 12:06:42.922: INFO: Created: latency-svc-hv8k5
Aug 20 12:06:42.962: INFO: Got endpoints: latency-svc-jl9jl [749.305207ms]
Aug 20 12:06:42.973: INFO: Created: latency-svc-56s9q
Aug 20 12:06:43.013: INFO: Got endpoints: latency-svc-5s2cz [749.983136ms]
Aug 20 12:06:43.023: INFO: Created: latency-svc-ftxhd
Aug 20 12:06:43.062: INFO: Got endpoints: latency-svc-dl7b7 [749.845546ms]
Aug 20 12:06:43.071: INFO: Created: latency-svc-z62wp
Aug 20 12:06:43.112: INFO: Got endpoints: latency-svc-v88j2 [749.242716ms]
Aug 20 12:06:43.123: INFO: Created: latency-svc-wn298
Aug 20 12:06:43.164: INFO: Got endpoints: latency-svc-nkz9k [750.650615ms]
Aug 20 12:06:43.173: INFO: Created: latency-svc-gc9cr
Aug 20 12:06:43.212: INFO: Got endpoints: latency-svc-66fs8 [748.572718ms]
Aug 20 12:06:43.221: INFO: Created: latency-svc-w465b
Aug 20 12:06:43.262: INFO: Got endpoints: latency-svc-jb9x5 [750.859791ms]
Aug 20 12:06:43.273: INFO: Created: latency-svc-czzxm
Aug 20 12:06:43.312: INFO: Got endpoints: latency-svc-7hvds [749.481029ms]
Aug 20 12:06:43.323: INFO: Created: latency-svc-ljg6z
Aug 20 12:06:43.362: INFO: Got endpoints: latency-svc-n7fj5 [749.449605ms]
Aug 20 12:06:43.371: INFO: Created: latency-svc-z887c
Aug 20 12:06:43.414: INFO: Got endpoints: latency-svc-6v5x4 [751.641575ms]
Aug 20 12:06:43.425: INFO: Created: latency-svc-scbwj
Aug 20 12:06:43.465: INFO: Got endpoints: latency-svc-nmsvs [752.468324ms]
Aug 20 12:06:43.476: INFO: Created: latency-svc-2jss9
Aug 20 12:06:43.512: INFO: Got endpoints: latency-svc-jpnrr [750.791406ms]
Aug 20 12:06:43.522: INFO: Created: latency-svc-2l465
Aug 20 12:06:43.563: INFO: Got endpoints: latency-svc-kc7m6 [750.459473ms]
Aug 20 12:06:43.573: INFO: Created: latency-svc-7kjhk
Aug 20 12:06:43.613: INFO: Got endpoints: latency-svc-mthkd [749.535459ms]
Aug 20 12:06:43.623: INFO: Created: latency-svc-c6b67
Aug 20 12:06:43.663: INFO: Got endpoints: latency-svc-hv8k5 [750.300028ms]
Aug 20 12:06:43.672: INFO: Created: latency-svc-tthgv
Aug 20 12:06:43.713: INFO: Got endpoints: latency-svc-56s9q [751.140668ms]
Aug 20 12:06:43.723: INFO: Created: latency-svc-f557w
Aug 20 12:06:43.763: INFO: Got endpoints: latency-svc-ftxhd [749.541635ms]
Aug 20 12:06:43.774: INFO: Created: latency-svc-zg25k
Aug 20 12:06:43.812: INFO: Got endpoints: latency-svc-z62wp [750.34887ms]
Aug 20 12:06:43.822: INFO: Created: latency-svc-56gdr
Aug 20 12:06:43.862: INFO: Got endpoints: latency-svc-wn298 [749.891038ms]
Aug 20 12:06:43.872: INFO: Created: latency-svc-rq6vb
Aug 20 12:06:43.913: INFO: Got endpoints: latency-svc-gc9cr [749.471223ms]
Aug 20 12:06:43.923: INFO: Created: latency-svc-x9q72
Aug 20 12:06:43.961: INFO: Got endpoints: latency-svc-w465b [749.664521ms]
Aug 20 12:06:43.971: INFO: Created: latency-svc-bl5cd
Aug 20 12:06:44.013: INFO: Got endpoints: latency-svc-czzxm [751.131367ms]
Aug 20 12:06:44.024: INFO: Created: latency-svc-wtsjn
Aug 20 12:06:44.064: INFO: Got endpoints: latency-svc-ljg6z [751.377387ms]
Aug 20 12:06:44.074: INFO: Created: latency-svc-n7gnl
Aug 20 12:06:44.113: INFO: Got endpoints: latency-svc-z887c [751.229436ms]
Aug 20 12:06:44.124: INFO: Created: latency-svc-q7lh4
Aug 20 12:06:44.164: INFO: Got endpoints: latency-svc-scbwj [750.232834ms]
Aug 20 12:06:44.177: INFO: Created: latency-svc-zdkbt
Aug 20 12:06:44.212: INFO: Got endpoints: latency-svc-2jss9 [747.134278ms]
Aug 20 12:06:44.223: INFO: Created: latency-svc-mz27v
Aug 20 12:06:44.262: INFO: Got endpoints: latency-svc-2l465 [750.894285ms]
Aug 20 12:06:44.272: INFO: Created: latency-svc-l452q
Aug 20 12:06:44.313: INFO: Got endpoints: latency-svc-7kjhk [749.802152ms]
Aug 20 12:06:44.323: INFO: Created: latency-svc-98l68
Aug 20 12:06:44.367: INFO: Got endpoints: latency-svc-c6b67 [754.381673ms]
Aug 20 12:06:44.377: INFO: Created: latency-svc-xjzdk
Aug 20 12:06:44.412: INFO: Got endpoints: latency-svc-tthgv [749.444505ms]
Aug 20 12:06:44.422: INFO: Created: latency-svc-rv7fl
Aug 20 12:06:44.464: INFO: Got endpoints: latency-svc-f557w [750.982825ms]
Aug 20 12:06:44.475: INFO: Created: latency-svc-2hs7x
Aug 20 12:06:44.513: INFO: Got endpoints: latency-svc-zg25k [750.202714ms]
Aug 20 12:06:44.522: INFO: Created: latency-svc-tp2fh
Aug 20 12:06:44.563: INFO: Got endpoints: latency-svc-56gdr [750.302643ms]
Aug 20 12:06:44.571: INFO: Created: latency-svc-7hjqw
Aug 20 12:06:44.613: INFO: Got endpoints: latency-svc-rq6vb [750.59659ms]
Aug 20 12:06:44.625: INFO: Created: latency-svc-j2rdb
Aug 20 12:06:44.664: INFO: Got endpoints: latency-svc-x9q72 [750.807393ms]
Aug 20 12:06:44.678: INFO: Created: latency-svc-4dvz7
Aug 20 12:06:44.712: INFO: Got endpoints: latency-svc-bl5cd [750.87522ms]
Aug 20 12:06:44.721: INFO: Created: latency-svc-wlzv5
Aug 20 12:06:44.762: INFO: Got endpoints: latency-svc-wtsjn [749.168156ms]
Aug 20 12:06:44.773: INFO: Created: latency-svc-xjz4k
Aug 20 12:06:44.813: INFO: Got endpoints: latency-svc-n7gnl [749.07237ms]
Aug 20 12:06:44.823: INFO: Created: latency-svc-q77ms
Aug 20 12:06:44.861: INFO: Got endpoints: latency-svc-q7lh4 [747.853539ms]
Aug 20 12:06:44.870: INFO: Created: latency-svc-jbjfk
Aug 20 12:06:44.913: INFO: Got endpoints: latency-svc-zdkbt [748.131884ms]
Aug 20 12:06:44.923: INFO: Created: latency-svc-vtwhf
Aug 20 12:06:44.962: INFO: Got endpoints: latency-svc-mz27v [750.080928ms]
Aug 20 12:06:44.973: INFO: Created: latency-svc-clvfg
Aug 20 12:06:45.012: INFO: Got endpoints: latency-svc-l452q [749.958326ms]
Aug 20 12:06:45.021: INFO: Created: latency-svc-btxxm
Aug 20 12:06:45.063: INFO: Got endpoints: latency-svc-98l68 [750.422175ms]
Aug 20 12:06:45.073: INFO: Created: latency-svc-z2tm8
Aug 20 12:06:45.113: INFO: Got endpoints: latency-svc-xjzdk [746.051396ms]
Aug 20 12:06:45.125: INFO: Created: latency-svc-g67l6
Aug 20 12:06:45.161: INFO: Got endpoints: latency-svc-rv7fl [748.093144ms]
Aug 20 12:06:45.170: INFO: Created: latency-svc-86g79
Aug 20 12:06:45.213: INFO: Got endpoints: latency-svc-2hs7x [748.922087ms]
Aug 20 12:06:45.223: INFO: Created: latency-svc-cxs8t
Aug 20 12:06:45.263: INFO: Got endpoints: latency-svc-tp2fh [750.713814ms]
Aug 20 12:06:45.273: INFO: Created: latency-svc-q95fh
Aug 20 12:06:45.312: INFO: Got endpoints: latency-svc-7hjqw [749.804388ms]
Aug 20 12:06:45.321: INFO: Created: latency-svc-pcr4m
Aug 20 12:06:45.363: INFO: Got endpoints: latency-svc-j2rdb [750.172092ms]
Aug 20 12:06:45.375: INFO: Created: latency-svc-jtg7f
Aug 20 12:06:45.411: INFO: Got endpoints: latency-svc-4dvz7 [747.314593ms]
Aug 20 12:06:45.422: INFO: Created: latency-svc-vzdgt
Aug 20 12:06:45.463: INFO: Got endpoints: latency-svc-wlzv5 [751.169295ms]
Aug 20 12:06:45.473: INFO: Created: latency-svc-gp7gg
Aug 20 12:06:45.513: INFO: Got endpoints: latency-svc-xjz4k [750.658535ms]
Aug 20 12:06:45.523: INFO: Created: latency-svc-f8tw7
Aug 20 12:06:45.563: INFO: Got endpoints: latency-svc-q77ms [750.574247ms]
Aug 20 12:06:45.573: INFO: Created: latency-svc-72j6f
Aug 20 12:06:45.612: INFO: Got endpoints: latency-svc-jbjfk [750.598723ms]
Aug 20 12:06:45.622: INFO: Created: latency-svc-mqvj7
Aug 20 12:06:45.666: INFO: Got endpoints: latency-svc-vtwhf [753.34594ms]
Aug 20 12:06:45.676: INFO: Created: latency-svc-fnlr8
Aug 20 12:06:45.713: INFO: Got endpoints: latency-svc-clvfg [750.12215ms]
Aug 20 12:06:45.723: INFO: Created: latency-svc-pr287
Aug 20 12:06:45.762: INFO: Got endpoints: latency-svc-btxxm [749.983922ms]
Aug 20 12:06:45.772: INFO: Created: latency-svc-gdrld
Aug 20 12:06:45.813: INFO: Got endpoints: latency-svc-z2tm8 [749.580009ms]
Aug 20 12:06:45.823: INFO: Created: latency-svc-fmfnt
Aug 20 12:06:45.862: INFO: Got endpoints: latency-svc-g67l6 [748.299819ms]
Aug 20 12:06:45.872: INFO: Created: latency-svc-dgsc4
Aug 20 12:06:45.912: INFO: Got endpoints: latency-svc-86g79 [751.303642ms]
Aug 20 12:06:45.921: INFO: Created: latency-svc-v4m56
Aug 20 12:06:45.963: INFO: Got endpoints: latency-svc-cxs8t [750.462723ms]
Aug 20 12:06:45.973: INFO: Created: latency-svc-cp8jk
Aug 20 12:06:46.013: INFO: Got endpoints: latency-svc-q95fh [749.740091ms]
Aug 20 12:06:46.023: INFO: Created: latency-svc-f5ht6
Aug 20 12:06:46.062: INFO: Got endpoints: latency-svc-pcr4m [749.469077ms]
Aug 20 12:06:46.071: INFO: Created: latency-svc-djfzg
Aug 20 12:06:46.113: INFO: Got endpoints: latency-svc-jtg7f [750.349588ms]
Aug 20 12:06:46.125: INFO: Created: latency-svc-d9d6z
Aug 20 12:06:46.161: INFO: Got endpoints: latency-svc-vzdgt [749.977695ms]
Aug 20 12:06:46.172: INFO: Created: latency-svc-x2ggs
Aug 20 12:06:46.212: INFO: Got endpoints: latency-svc-gp7gg [748.517939ms]
Aug 20 12:06:46.221: INFO: Created: latency-svc-mbhdt
Aug 20 12:06:46.263: INFO: Got endpoints: latency-svc-f8tw7 [750.300497ms]
Aug 20 12:06:46.274: INFO: Created: latency-svc-mv9ct
Aug 20 12:06:46.314: INFO: Got endpoints: latency-svc-72j6f [750.607052ms]
Aug 20 12:06:46.324: INFO: Created: latency-svc-gfxtl
Aug 20 12:06:46.362: INFO: Got endpoints: latency-svc-mqvj7 [749.90568ms]
Aug 20 12:06:46.371: INFO: Created: latency-svc-jrktt
Aug 20 12:06:46.411: INFO: Got endpoints: latency-svc-fnlr8 [744.989399ms]
Aug 20 12:06:46.426: INFO: Created: latency-svc-pmgtz
Aug 20 12:06:46.463: INFO: Got endpoints: latency-svc-pr287 [750.774454ms]
Aug 20 12:06:46.474: INFO: Created: latency-svc-nnx58
Aug 20 12:06:46.513: INFO: Got endpoints: latency-svc-gdrld [750.732376ms]
Aug 20 12:06:46.522: INFO: Created: latency-svc-9g9tv
Aug 20 12:06:46.564: INFO: Got endpoints: latency-svc-fmfnt [750.902036ms]
Aug 20 12:06:46.575: INFO: Created: latency-svc-tfjdn
Aug 20 12:06:46.612: INFO: Got endpoints: latency-svc-dgsc4 [750.523384ms]
Aug 20 12:06:46.623: INFO: Created: latency-svc-cz27m
Aug 20 12:06:46.661: INFO: Got endpoints: latency-svc-v4m56 [749.124321ms]
Aug 20 12:06:46.671: INFO: Created: latency-svc-4w9z5
Aug 20 12:06:46.712: INFO: Got endpoints: latency-svc-cp8jk [748.860816ms]
Aug 20 12:06:46.722: INFO: Created: latency-svc-xdb2n
Aug 20 12:06:46.764: INFO: Got endpoints: latency-svc-f5ht6 [750.275968ms]
Aug 20 12:06:46.773: INFO: Created: latency-svc-w2qwz
Aug 20 12:06:46.812: INFO: Got endpoints: latency-svc-djfzg [750.436541ms]
Aug 20 12:06:46.822: INFO: Created: latency-svc-hbvb2
Aug 20 12:06:46.862: INFO: Got endpoints: latency-svc-d9d6z [748.610998ms]
Aug 20 12:06:46.873: INFO: Created: latency-svc-jhlb5
Aug 20 12:06:46.912: INFO: Got endpoints: latency-svc-x2ggs [750.928941ms]
Aug 20 12:06:46.922: INFO: Created: latency-svc-vq5ms
Aug 20 12:06:46.962: INFO: Got endpoints: latency-svc-mbhdt [750.252616ms]
Aug 20 12:06:46.971: INFO: Created: latency-svc-5ltj4
Aug 20 12:06:47.013: INFO: Got endpoints: latency-svc-mv9ct [749.470492ms]
Aug 20 12:06:47.027: INFO: Created: latency-svc-7s5kt
Aug 20 12:06:47.063: INFO: Got endpoints: latency-svc-gfxtl [749.447909ms]
Aug 20 12:06:47.073: INFO: Created: latency-svc-pwds4
Aug 20 12:06:47.113: INFO: Got endpoints: latency-svc-jrktt [751.091573ms]
Aug 20 12:06:47.123: INFO: Created: latency-svc-755t6
Aug 20 12:06:47.162: INFO: Got endpoints: latency-svc-pmgtz [750.584167ms]
Aug 20 12:06:47.172: INFO: Created: latency-svc-rmf9r
Aug 20 12:06:47.212: INFO: Got endpoints: latency-svc-nnx58 [748.633042ms]
Aug 20 12:06:47.222: INFO: Created: latency-svc-7g8rg
Aug 20 12:06:47.263: INFO: Got endpoints: latency-svc-9g9tv [749.666844ms]
Aug 20 12:06:47.312: INFO: Got endpoints: latency-svc-tfjdn [748.358443ms]
Aug 20 12:06:47.362: INFO: Got endpoints: latency-svc-cz27m [749.884332ms]
Aug 20 12:06:47.418: INFO: Got endpoints: latency-svc-4w9z5 [756.571663ms]
Aug 20 12:06:47.463: INFO: Got endpoints: latency-svc-xdb2n [751.025995ms]
Aug 20 12:06:47.512: INFO: Got endpoints: latency-svc-w2qwz [748.178644ms]
Aug 20 12:06:47.564: INFO: Got endpoints: latency-svc-hbvb2 [751.556986ms]
Aug 20 12:06:47.613: INFO: Got endpoints: latency-svc-jhlb5 [750.599391ms]
Aug 20 12:06:47.663: INFO: Got endpoints: latency-svc-vq5ms [750.685159ms]
Aug 20 12:06:47.711: INFO: Got endpoints: latency-svc-5ltj4 [748.648546ms]
Aug 20 12:06:47.763: INFO: Got endpoints: latency-svc-7s5kt [750.110945ms]
Aug 20 12:06:47.813: INFO: Got endpoints: latency-svc-pwds4 [749.266871ms]
Aug 20 12:06:47.861: INFO: Got endpoints: latency-svc-755t6 [747.829313ms]
Aug 20 12:06:47.912: INFO: Got endpoints: latency-svc-rmf9r [750.429473ms]
Aug 20 12:06:47.962: INFO: Got endpoints: latency-svc-7g8rg [749.732234ms]
Aug 20 12:06:47.962: INFO: Latencies: [17.753311ms 22.451271ms 30.672168ms 37.985726ms 43.554953ms 55.813601ms 63.402154ms 74.411965ms 75.852607ms 87.549807ms 94.239715ms 101.869806ms 103.485983ms 103.621713ms 104.18637ms 104.218412ms 104.463389ms 104.752083ms 109.342536ms 109.576905ms 111.21715ms 111.25647ms 112.051455ms 112.845818ms 113.806626ms 113.931283ms 114.590288ms 119.173243ms 120.553946ms 120.910526ms 122.202477ms 122.592819ms 124.350777ms 129.169295ms 132.185412ms 178.268017ms 220.652638ms 261.407158ms 308.413087ms 353.952194ms 392.008845ms 436.216621ms 480.74729ms 524.666949ms 565.87496ms 607.385603ms 649.262325ms 693.247356ms 719.273239ms 734.304223ms 744.989399ms 746.015117ms 746.051396ms 746.921075ms 747.134278ms 747.171572ms 747.314593ms 747.829313ms 747.853539ms 747.940967ms 748.093144ms 748.131884ms 748.178644ms 748.299819ms 748.331912ms 748.358443ms 748.466414ms 748.499772ms 748.517939ms 748.572718ms 748.598682ms 748.610998ms 748.617133ms 748.633042ms 748.648546ms 748.669707ms 748.67974ms 748.845944ms 748.860816ms 748.922087ms 749.07237ms 749.124321ms 749.127866ms 749.137222ms 749.168156ms 749.242716ms 749.266871ms 749.295581ms 749.305207ms 749.337583ms 749.382375ms 749.388368ms 749.444466ms 749.444505ms 749.447909ms 749.449605ms 749.469077ms 749.470492ms 749.471223ms 749.481029ms 749.503084ms 749.535459ms 749.541635ms 749.580009ms 749.609368ms 749.664521ms 749.666844ms 749.732234ms 749.740091ms 749.763544ms 749.797372ms 749.800298ms 749.802152ms 749.804388ms 749.822201ms 749.845546ms 749.852657ms 749.884332ms 749.885372ms 749.891038ms 749.90568ms 749.907535ms 749.958326ms 749.977695ms 749.983136ms 749.983922ms 750.064615ms 750.080928ms 750.110945ms 750.12215ms 750.172092ms 750.202714ms 750.232834ms 750.252616ms 750.275968ms 750.286308ms 750.300028ms 750.300497ms 750.302643ms 750.312441ms 750.34887ms 750.349588ms 750.422175ms 750.429473ms 750.436541ms 750.459473ms 750.462723ms 750.467867ms 750.523384ms 750.528523ms 750.546379ms 750.574247ms 750.584167ms 750.59659ms 750.598723ms 750.599391ms 750.607052ms 750.616148ms 750.650615ms 750.658535ms 750.685159ms 750.713814ms 750.732376ms 750.752956ms 750.774454ms 750.791406ms 750.807393ms 750.859791ms 750.87522ms 750.889598ms 750.89323ms 750.894285ms 750.902036ms 750.928941ms 750.94494ms 750.979154ms 750.982825ms 750.995035ms 751.025995ms 751.091573ms 751.131367ms 751.139524ms 751.140668ms 751.169295ms 751.212541ms 751.229436ms 751.229868ms 751.303642ms 751.377387ms 751.556986ms 751.635674ms 751.641575ms 752.163302ms 752.438766ms 752.468324ms 753.34594ms 753.534778ms 754.381673ms 756.571663ms 780.346727ms]
Aug 20 12:06:47.962: INFO: 50 %ile: 749.503084ms
Aug 20 12:06:47.962: INFO: 90 %ile: 751.131367ms
Aug 20 12:06:47.962: INFO: 99 %ile: 756.571663ms
Aug 20 12:06:47.962: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Aug 20 12:06:47.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-5548" for this suite.

• [SLOW TEST:10.870 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":34,"skipped":558,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:47.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5833
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:06:48.114: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5" in namespace "projected-5833" to be "Succeeded or Failed"
Aug 20 12:06:48.117: INFO: Pod "downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.689573ms
Aug 20 12:06:50.124: INFO: Pod "downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009800283s
Aug 20 12:06:52.132: INFO: Pod "downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01837458s
STEP: Saw pod success
Aug 20 12:06:52.132: INFO: Pod "downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5" satisfied condition "Succeeded or Failed"
Aug 20 12:06:52.136: INFO: Trying to get logs from node ip-172-31-71-246 pod downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5 container client-container: <nil>
STEP: delete the pod
Aug 20 12:06:52.170: INFO: Waiting for pod downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5 to disappear
Aug 20 12:06:52.174: INFO: Pod downwardapi-volume-4887070c-6071-4773-a372-13551e68a0b5 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:06:52.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5833" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":35,"skipped":589,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:06:52.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:06:52.687: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:06:55.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:06:56.711: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:06:57.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:06:58.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:06:59.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:07:00.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:07:01.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:07:02.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:07:03.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
Aug 20 12:07:04.710: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:07:04.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:07:07.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4749" for this suite.
STEP: Destroying namespace "webhook-4749-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.698 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":36,"skipped":623,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:07:07.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7543
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-7543/configmap-test-1ac521f4-e0e2-4b1f-a635-08c115a49d18
STEP: Creating a pod to test consume configMaps
Aug 20 12:07:08.032: INFO: Waiting up to 5m0s for pod "pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec" in namespace "configmap-7543" to be "Succeeded or Failed"
Aug 20 12:07:08.037: INFO: Pod "pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec": Phase="Pending", Reason="", readiness=false. Elapsed: 5.075613ms
Aug 20 12:07:10.043: INFO: Pod "pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011335718s
Aug 20 12:07:12.052: INFO: Pod "pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019887929s
STEP: Saw pod success
Aug 20 12:07:12.052: INFO: Pod "pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec" satisfied condition "Succeeded or Failed"
Aug 20 12:07:12.056: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec container env-test: <nil>
STEP: delete the pod
Aug 20 12:07:12.079: INFO: Waiting for pod pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec to disappear
Aug 20 12:07:12.084: INFO: Pod pod-configmaps-9449e055-a338-444f-b4a9-c6fdbc038fec no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:07:12.084: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7543" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":37,"skipped":639,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:07:12.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-1540
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-nsnf
STEP: Creating a pod to test atomic-volume-subpath
Aug 20 12:07:12.247: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-nsnf" in namespace "subpath-1540" to be "Succeeded or Failed"
Aug 20 12:07:12.251: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.037489ms
Aug 20 12:07:14.258: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 2.01067865s
Aug 20 12:07:16.266: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 4.018647221s
Aug 20 12:07:18.271: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 6.02332425s
Aug 20 12:07:20.279: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 8.031637329s
Aug 20 12:07:22.287: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 10.040010297s
Aug 20 12:07:24.294: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 12.04648037s
Aug 20 12:07:26.301: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 14.053900744s
Aug 20 12:07:28.308: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 16.060240265s
Aug 20 12:07:30.315: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 18.06765565s
Aug 20 12:07:32.324: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=true. Elapsed: 20.076572363s
Aug 20 12:07:34.330: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Running", Reason="", readiness=false. Elapsed: 22.082532255s
Aug 20 12:07:36.339: INFO: Pod "pod-subpath-test-configmap-nsnf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.091132307s
STEP: Saw pod success
Aug 20 12:07:36.339: INFO: Pod "pod-subpath-test-configmap-nsnf" satisfied condition "Succeeded or Failed"
Aug 20 12:07:36.343: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-subpath-test-configmap-nsnf container test-container-subpath-configmap-nsnf: <nil>
STEP: delete the pod
Aug 20 12:07:36.362: INFO: Waiting for pod pod-subpath-test-configmap-nsnf to disappear
Aug 20 12:07:36.366: INFO: Pod pod-subpath-test-configmap-nsnf no longer exists
STEP: Deleting pod pod-subpath-test-configmap-nsnf
Aug 20 12:07:36.366: INFO: Deleting pod "pod-subpath-test-configmap-nsnf" in namespace "subpath-1540"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 20 12:07:36.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-1540" for this suite.

• [SLOW TEST:24.283 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":38,"skipped":668,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:07:36.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6838
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 20 12:07:36.518: INFO: Waiting up to 5m0s for pod "pod-274d3c58-dbc2-4267-a09d-9f4fe206babc" in namespace "emptydir-6838" to be "Succeeded or Failed"
Aug 20 12:07:36.521: INFO: Pod "pod-274d3c58-dbc2-4267-a09d-9f4fe206babc": Phase="Pending", Reason="", readiness=false. Elapsed: 3.664652ms
Aug 20 12:07:38.527: INFO: Pod "pod-274d3c58-dbc2-4267-a09d-9f4fe206babc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00946911s
Aug 20 12:07:40.533: INFO: Pod "pod-274d3c58-dbc2-4267-a09d-9f4fe206babc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015108994s
STEP: Saw pod success
Aug 20 12:07:40.533: INFO: Pod "pod-274d3c58-dbc2-4267-a09d-9f4fe206babc" satisfied condition "Succeeded or Failed"
Aug 20 12:07:40.536: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-274d3c58-dbc2-4267-a09d-9f4fe206babc container test-container: <nil>
STEP: delete the pod
Aug 20 12:07:40.556: INFO: Waiting for pod pod-274d3c58-dbc2-4267-a09d-9f4fe206babc to disappear
Aug 20 12:07:40.559: INFO: Pod pod-274d3c58-dbc2-4267-a09d-9f4fe206babc no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:07:40.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6838" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":39,"skipped":688,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:07:40.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2708
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:07:51.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2708" for this suite.

• [SLOW TEST:11.194 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":40,"skipped":689,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:07:51.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9395
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-1d084f74-dc4c-4b1b-bde5-c9153af9121b
STEP: Creating a pod to test consume secrets
Aug 20 12:07:51.910: INFO: Waiting up to 5m0s for pod "pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647" in namespace "secrets-9395" to be "Succeeded or Failed"
Aug 20 12:07:51.916: INFO: Pod "pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647": Phase="Pending", Reason="", readiness=false. Elapsed: 5.743268ms
Aug 20 12:07:53.922: INFO: Pod "pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012152707s
Aug 20 12:07:55.929: INFO: Pod "pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019280735s
STEP: Saw pod success
Aug 20 12:07:55.929: INFO: Pod "pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647" satisfied condition "Succeeded or Failed"
Aug 20 12:07:55.933: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647 container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:07:55.953: INFO: Waiting for pod pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647 to disappear
Aug 20 12:07:55.957: INFO: Pod pod-secrets-1a3d4ec2-daf1-4a5f-b217-4c3ef05fa647 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:07:55.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9395" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":41,"skipped":725,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:07:55.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7354
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:07:56.106: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3" in namespace "downward-api-7354" to be "Succeeded or Failed"
Aug 20 12:07:56.112: INFO: Pod "downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.71592ms
Aug 20 12:07:58.120: INFO: Pod "downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013527049s
Aug 20 12:08:00.127: INFO: Pod "downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021099902s
STEP: Saw pod success
Aug 20 12:08:00.127: INFO: Pod "downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3" satisfied condition "Succeeded or Failed"
Aug 20 12:08:00.131: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3 container client-container: <nil>
STEP: delete the pod
Aug 20 12:08:00.153: INFO: Waiting for pod downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3 to disappear
Aug 20 12:08:00.156: INFO: Pod downwardapi-volume-bf91d36a-e370-40cf-9b4f-3761365158d3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:08:00.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7354" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":42,"skipped":774,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:00.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8459
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 20 12:08:10.311: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8459" for this suite.

• [SLOW TEST:10.154 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":43,"skipped":808,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:10.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-907
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-907 to expose endpoints map[]
Aug 20 12:08:10.479: INFO: successfully validated that service multi-endpoint-test in namespace services-907 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-907
Aug 20 12:08:10.493: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:08:12.499: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-907 to expose endpoints map[pod1:[100]]
Aug 20 12:08:12.514: INFO: successfully validated that service multi-endpoint-test in namespace services-907 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-907
Aug 20 12:08:12.524: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:08:14.530: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-907 to expose endpoints map[pod1:[100] pod2:[101]]
Aug 20 12:08:14.548: INFO: successfully validated that service multi-endpoint-test in namespace services-907 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Aug 20 12:08:14.548: INFO: Creating new exec pod
Aug 20 12:08:17.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-907 exec execpodf5rhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Aug 20 12:08:17.694: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Aug 20 12:08:17.694: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:17.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-907 exec execpodf5rhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.91 80'
Aug 20 12:08:17.813: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.91 80\nConnection to 10.152.183.91 80 port [tcp/http] succeeded!\n"
Aug 20 12:08:17.813: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:17.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-907 exec execpodf5rhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Aug 20 12:08:17.915: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Aug 20 12:08:17.915: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:17.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-907 exec execpodf5rhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.91 81'
Aug 20 12:08:18.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.91 81\nConnection to 10.152.183.91 81 port [tcp/*] succeeded!\n"
Aug 20 12:08:18.017: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-907
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-907 to expose endpoints map[pod2:[101]]
Aug 20 12:08:18.052: INFO: successfully validated that service multi-endpoint-test in namespace services-907 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-907
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-907 to expose endpoints map[]
Aug 20 12:08:18.077: INFO: successfully validated that service multi-endpoint-test in namespace services-907 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:08:18.095: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-907" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.782 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":44,"skipped":833,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:18.106: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1305
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 20 12:08:18.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-1305 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Aug 20 12:08:18.298: INFO: stderr: ""
Aug 20 12:08:18.298: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Aug 20 12:08:18.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-1305 delete pods e2e-test-httpd-pod'
Aug 20 12:08:20.386: INFO: stderr: ""
Aug 20 12:08:20.386: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:08:20.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1305" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":45,"skipped":847,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:20.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-4855
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 20 12:08:20.554: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 20 12:08:20.559: INFO: starting watch
STEP: patching
STEP: updating
Aug 20 12:08:20.574: INFO: waiting for watch events with expected annotations
Aug 20 12:08:20.574: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Aug 20 12:08:20.629: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-4855" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":46,"skipped":857,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:20.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:08:22.788: INFO: Deleting pod "var-expansion-4815154b-6e13-49a8-8981-0bae577068b3" in namespace "var-expansion-6826"
Aug 20 12:08:22.797: INFO: Wait up to 5m0s for pod "var-expansion-4815154b-6e13-49a8-8981-0bae577068b3" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 12:08:24.807: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6826" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":47,"skipped":866,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:24.819: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-8032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-9144
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-4415
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:08:38.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-8032" for this suite.
STEP: Destroying namespace "nsdeletetest-9144" for this suite.
Aug 20 12:08:38.244: INFO: Namespace nsdeletetest-9144 was already deleted
STEP: Destroying namespace "nsdeletetest-4415" for this suite.

• [SLOW TEST:13.432 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":48,"skipped":886,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:38.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-310
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 20 12:08:38.398: INFO: Waiting up to 5m0s for pod "downward-api-f751ece8-5491-4666-a459-1592337c8386" in namespace "downward-api-310" to be "Succeeded or Failed"
Aug 20 12:08:38.404: INFO: Pod "downward-api-f751ece8-5491-4666-a459-1592337c8386": Phase="Pending", Reason="", readiness=false. Elapsed: 5.762547ms
Aug 20 12:08:40.408: INFO: Pod "downward-api-f751ece8-5491-4666-a459-1592337c8386": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010403525s
Aug 20 12:08:42.417: INFO: Pod "downward-api-f751ece8-5491-4666-a459-1592337c8386": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019166563s
STEP: Saw pod success
Aug 20 12:08:42.417: INFO: Pod "downward-api-f751ece8-5491-4666-a459-1592337c8386" satisfied condition "Succeeded or Failed"
Aug 20 12:08:42.421: INFO: Trying to get logs from node ip-172-31-39-75 pod downward-api-f751ece8-5491-4666-a459-1592337c8386 container dapi-container: <nil>
STEP: delete the pod
Aug 20 12:08:42.442: INFO: Waiting for pod downward-api-f751ece8-5491-4666-a459-1592337c8386 to disappear
Aug 20 12:08:42.445: INFO: Pod downward-api-f751ece8-5491-4666-a459-1592337c8386 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 20 12:08:42.445: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-310" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":49,"skipped":922,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:42.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3325
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-3325
STEP: creating service affinity-nodeport in namespace services-3325
STEP: creating replication controller affinity-nodeport in namespace services-3325
I0820 12:08:42.619775      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-3325, replica count: 3
I0820 12:08:45.671531      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 12:08:45.687: INFO: Creating new exec pod
Aug 20 12:08:48.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3325 exec execpod-affinitypctkk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Aug 20 12:08:48.856: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Aug 20 12:08:48.856: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:48.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3325 exec execpod-affinitypctkk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.70 80'
Aug 20 12:08:48.970: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.70 80\nConnection to 10.152.183.70 80 port [tcp/http] succeeded!\n"
Aug 20 12:08:48.970: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:48.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3325 exec execpod-affinitypctkk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.75 32431'
Aug 20 12:08:49.066: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.75 32431\nConnection to 172.31.39.75 32431 port [tcp/*] succeeded!\n"
Aug 20 12:08:49.066: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:49.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3325 exec execpod-affinitypctkk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.71.246 32431'
Aug 20 12:08:49.170: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 172.31.71.246 32431\nConnection to 172.31.71.246 32431 port [tcp/*] succeeded!\n"
Aug 20 12:08:49.170: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:08:49.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3325 exec execpod-affinitypctkk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.39.75:32431/ ; done'
Aug 20 12:08:49.359: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32431/\n"
Aug 20 12:08:49.359: INFO: stdout: "\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9\naffinity-nodeport-9j9p9"
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Received response from host: affinity-nodeport-9j9p9
Aug 20 12:08:49.359: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-3325, will wait for the garbage collector to delete the pods
Aug 20 12:08:49.436: INFO: Deleting ReplicationController affinity-nodeport took: 7.153323ms
Aug 20 12:08:49.537: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.134587ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:08:51.461: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3325" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.016 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":50,"skipped":958,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:51.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7073
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Aug 20 12:08:51.609: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:08:53.616: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 20 12:08:54.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7073" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":51,"skipped":986,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:08:54.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3123
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
W0820 12:09:04.817048      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 20 12:09:04.817: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 12:09:04.817: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3123" for this suite.

• [SLOW TEST:10.185 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":52,"skipped":1017,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:09:04.832: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-3c0fd60a-7c09-4cbf-b198-fd7430a6d221
STEP: Creating a pod to test consume configMaps
Aug 20 12:09:04.990: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323" in namespace "projected-4348" to be "Succeeded or Failed"
Aug 20 12:09:04.993: INFO: Pod "pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323": Phase="Pending", Reason="", readiness=false. Elapsed: 3.247703ms
Aug 20 12:09:07.001: INFO: Pod "pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010967257s
Aug 20 12:09:09.008: INFO: Pod "pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018056172s
STEP: Saw pod success
Aug 20 12:09:09.008: INFO: Pod "pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323" satisfied condition "Succeeded or Failed"
Aug 20 12:09:09.011: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:09:09.032: INFO: Waiting for pod pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323 to disappear
Aug 20 12:09:09.035: INFO: Pod pod-projected-configmaps-cfc95e20-3cb8-442e-82c9-0dfe85e1c323 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:09:09.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4348" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":53,"skipped":1031,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:09:09.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug 20 12:09:09.175: INFO: namespace kubectl-4720
Aug 20 12:09:09.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4720 create -f -'
Aug 20 12:09:09.751: INFO: stderr: ""
Aug 20 12:09:09.751: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 20 12:09:10.757: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 12:09:10.757: INFO: Found 0 / 1
Aug 20 12:09:11.758: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 12:09:11.758: INFO: Found 1 / 1
Aug 20 12:09:11.758: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 20 12:09:11.762: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 12:09:11.762: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 20 12:09:11.762: INFO: wait on agnhost-primary startup in kubectl-4720 
Aug 20 12:09:11.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4720 logs agnhost-primary-6qf5b agnhost-primary'
Aug 20 12:09:11.815: INFO: stderr: ""
Aug 20 12:09:11.815: INFO: stdout: "Paused\n"
STEP: exposing RC
Aug 20 12:09:11.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4720 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Aug 20 12:09:11.875: INFO: stderr: ""
Aug 20 12:09:11.875: INFO: stdout: "service/rm2 exposed\n"
Aug 20 12:09:11.880: INFO: Service rm2 in namespace kubectl-4720 found.
STEP: exposing service
Aug 20 12:09:13.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4720 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Aug 20 12:09:13.952: INFO: stderr: ""
Aug 20 12:09:13.952: INFO: stdout: "service/rm3 exposed\n"
Aug 20 12:09:13.955: INFO: Service rm3 in namespace kubectl-4720 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:09:15.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4720" for this suite.

• [SLOW TEST:6.930 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":54,"skipped":1035,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:09:15.976: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8427
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-c37f8c14-2edf-4519-a46e-89cab7a3a450
STEP: Creating a pod to test consume configMaps
Aug 20 12:09:16.120: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd" in namespace "projected-8427" to be "Succeeded or Failed"
Aug 20 12:09:16.125: INFO: Pod "pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd": Phase="Pending", Reason="", readiness=false. Elapsed: 4.745589ms
Aug 20 12:09:18.129: INFO: Pod "pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009182126s
Aug 20 12:09:20.136: INFO: Pod "pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016006116s
STEP: Saw pod success
Aug 20 12:09:20.136: INFO: Pod "pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd" satisfied condition "Succeeded or Failed"
Aug 20 12:09:20.140: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:09:20.165: INFO: Waiting for pod pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd to disappear
Aug 20 12:09:20.168: INFO: Pod pod-projected-configmaps-118d1542-1de7-4367-bbfd-ec73d83124dd no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:09:20.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8427" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":55,"skipped":1072,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:09:20.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5412
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Aug 20 12:09:20.304: INFO: Creating e2e-svc-a-sxlsl
Aug 20 12:09:20.314: INFO: Creating e2e-svc-b-5qwcl
Aug 20 12:09:20.325: INFO: Creating e2e-svc-c-2h5k2
STEP: deleting service collection
Aug 20 12:09:20.369: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:09:20.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5412" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":56,"skipped":1082,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:09:20.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-9318
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 20 12:09:23.539: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 20 12:09:23.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-9318" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":57,"skipped":1102,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:09:23.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 20 12:11:01.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3512" for this suite.

• [SLOW TEST:98.177 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":58,"skipped":1132,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:11:01.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-4583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Aug 20 12:11:01.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-4583" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":59,"skipped":1137,"failed":0}

------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:11:01.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:11:02.030: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Aug 20 12:11:02.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:02.040: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Aug 20 12:11:02.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:02.058: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:11:03.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:03.065: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:11:04.064: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 20 12:11:04.064: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Aug 20 12:11:04.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 20 12:11:04.083: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Aug 20 12:11:05.089: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:05.089: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Aug 20 12:11:05.101: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:05.101: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:11:06.108: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:06.108: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:11:07.106: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:07.106: INFO: Node ip-172-31-90-25 is running 0 daemon pod, expected 1
Aug 20 12:11:08.107: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 20 12:11:08.107: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2025, will wait for the garbage collector to delete the pods
Aug 20 12:11:08.175: INFO: Deleting DaemonSet.extensions daemon-set took: 7.284495ms
Aug 20 12:11:08.275: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.293878ms
Aug 20 12:11:10.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:11:10.283: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 20 12:11:10.286: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9623"},"items":null}

Aug 20 12:11:10.290: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9623"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:11:10.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2025" for this suite.

• [SLOW TEST:8.437 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":60,"skipped":1137,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:11:10.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6464
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Aug 20 12:13:10.989: INFO: Successfully updated pod "var-expansion-eca8f455-2fd5-4619-aea5-93e39339e648"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Aug 20 12:13:13.001: INFO: Deleting pod "var-expansion-eca8f455-2fd5-4619-aea5-93e39339e648" in namespace "var-expansion-6464"
Aug 20 12:13:13.036: INFO: Wait up to 5m0s for pod "var-expansion-eca8f455-2fd5-4619-aea5-93e39339e648" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 12:13:45.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6464" for this suite.

• [SLOW TEST:154.737 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":61,"skipped":1147,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:13:45.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9372
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:14:13.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9372" for this suite.

• [SLOW TEST:28.202 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":62,"skipped":1153,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:13.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5703
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-43a046b3-15d3-47df-95de-10a4808041a3
STEP: Creating a pod to test consume secrets
Aug 20 12:14:13.406: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043" in namespace "projected-5703" to be "Succeeded or Failed"
Aug 20 12:14:13.412: INFO: Pod "pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043": Phase="Pending", Reason="", readiness=false. Elapsed: 5.74406ms
Aug 20 12:14:15.421: INFO: Pod "pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01442843s
Aug 20 12:14:17.428: INFO: Pod "pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021845579s
STEP: Saw pod success
Aug 20 12:14:17.428: INFO: Pod "pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043" satisfied condition "Succeeded or Failed"
Aug 20 12:14:17.432: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:14:17.463: INFO: Waiting for pod pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043 to disappear
Aug 20 12:14:17.467: INFO: Pod pod-projected-secrets-78edf562-5734-41b5-96dc-0be447ded043 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:14:17.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5703" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":63,"skipped":1158,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:17.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4005
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:14:17.926: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:14:20.954: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:14:21.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4005" for this suite.
STEP: Destroying namespace "webhook-4005-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":64,"skipped":1173,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:21.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8924
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-b4c88d46-b616-4059-a3a1-e8b371dc85d3
STEP: Creating a pod to test consume secrets
Aug 20 12:14:21.304: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010" in namespace "projected-8924" to be "Succeeded or Failed"
Aug 20 12:14:21.309: INFO: Pod "pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010": Phase="Pending", Reason="", readiness=false. Elapsed: 5.146295ms
Aug 20 12:14:23.315: INFO: Pod "pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011193107s
Aug 20 12:14:25.323: INFO: Pod "pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01905972s
STEP: Saw pod success
Aug 20 12:14:25.323: INFO: Pod "pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010" satisfied condition "Succeeded or Failed"
Aug 20 12:14:25.326: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:14:25.347: INFO: Waiting for pod pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010 to disappear
Aug 20 12:14:25.351: INFO: Pod pod-projected-secrets-31801f78-48eb-4f1d-a541-2c98780ec010 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:14:25.351: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8924" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":65,"skipped":1203,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:25.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-6417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug 20 12:14:25.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-6417" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":66,"skipped":1216,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:25.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4571
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:14:25.709: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-6fa89059-b2b1-496a-838a-180df7178f13" in namespace "security-context-test-4571" to be "Succeeded or Failed"
Aug 20 12:14:25.713: INFO: Pod "busybox-privileged-false-6fa89059-b2b1-496a-838a-180df7178f13": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015321ms
Aug 20 12:14:27.719: INFO: Pod "busybox-privileged-false-6fa89059-b2b1-496a-838a-180df7178f13": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009928857s
Aug 20 12:14:29.727: INFO: Pod "busybox-privileged-false-6fa89059-b2b1-496a-838a-180df7178f13": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018516606s
Aug 20 12:14:29.727: INFO: Pod "busybox-privileged-false-6fa89059-b2b1-496a-838a-180df7178f13" satisfied condition "Succeeded or Failed"
Aug 20 12:14:29.734: INFO: Got logs for pod "busybox-privileged-false-6fa89059-b2b1-496a-838a-180df7178f13": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 20 12:14:29.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4571" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1225,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:29.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2871
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-8xwn
STEP: Creating a pod to test atomic-volume-subpath
Aug 20 12:14:29.893: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-8xwn" in namespace "subpath-2871" to be "Succeeded or Failed"
Aug 20 12:14:29.896: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Pending", Reason="", readiness=false. Elapsed: 3.737218ms
Aug 20 12:14:31.903: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 2.010891526s
Aug 20 12:14:33.909: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 4.016392673s
Aug 20 12:14:35.914: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 6.021893667s
Aug 20 12:14:37.920: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 8.02725506s
Aug 20 12:14:39.924: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 10.031476243s
Aug 20 12:14:41.932: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 12.03934295s
Aug 20 12:14:43.938: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 14.045191473s
Aug 20 12:14:45.944: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 16.050965573s
Aug 20 12:14:47.949: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 18.05688281s
Aug 20 12:14:49.956: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=true. Elapsed: 20.063215969s
Aug 20 12:14:51.963: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Running", Reason="", readiness=false. Elapsed: 22.070159504s
Aug 20 12:14:53.968: INFO: Pod "pod-subpath-test-projected-8xwn": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.075316013s
STEP: Saw pod success
Aug 20 12:14:53.968: INFO: Pod "pod-subpath-test-projected-8xwn" satisfied condition "Succeeded or Failed"
Aug 20 12:14:53.972: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-subpath-test-projected-8xwn container test-container-subpath-projected-8xwn: <nil>
STEP: delete the pod
Aug 20 12:14:53.991: INFO: Waiting for pod pod-subpath-test-projected-8xwn to disappear
Aug 20 12:14:53.995: INFO: Pod pod-subpath-test-projected-8xwn no longer exists
STEP: Deleting pod pod-subpath-test-projected-8xwn
Aug 20 12:14:53.995: INFO: Deleting pod "pod-subpath-test-projected-8xwn" in namespace "subpath-2871"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 20 12:14:53.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2871" for this suite.

• [SLOW TEST:24.263 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":68,"skipped":1310,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:54.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-5541
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 20 12:14:56.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-5541" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":69,"skipped":1320,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:14:56.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7768
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:15:12.422: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7768" for this suite.

• [SLOW TEST:16.261 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":70,"skipped":1321,"failed":0}
SSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:15:12.434: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-2465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Aug 20 12:15:12.583: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:15:14.591: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.71.246 on the node which pod1 resides and expect scheduled
Aug 20 12:15:14.603: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:15:16.610: INFO: The status of Pod pod2 is Running (Ready = false)
Aug 20 12:15:18.607: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.71.246 but use UDP protocol on the node which pod2 resides
Aug 20 12:15:18.618: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:15:20.625: INFO: The status of Pod pod3 is Running (Ready = true)
Aug 20 12:15:20.638: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:15:22.646: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Aug 20 12:15:22.650: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.71.246 http://127.0.0.1:54323/hostname] Namespace:hostport-2465 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:15:22.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:15:22.651: INFO: ExecWithOptions: Clientset creation
Aug 20 12:15:22.651: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2465/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.71.246+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.71.246, port: 54323
Aug 20 12:15:22.750: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.71.246:54323/hostname] Namespace:hostport-2465 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:15:22.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:15:22.750: INFO: ExecWithOptions: Clientset creation
Aug 20 12:15:22.750: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2465/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.71.246%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.71.246, port: 54323 UDP
Aug 20 12:15:22.837: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 172.31.71.246 54323] Namespace:hostport-2465 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:15:22.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:15:22.838: INFO: ExecWithOptions: Clientset creation
Aug 20 12:15:22.838: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2465/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+172.31.71.246+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Aug 20 12:15:27.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-2465" for this suite.

• [SLOW TEST:15.460 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":71,"skipped":1327,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:15:27.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9085
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 20 12:15:28.036: INFO: The status of Pod annotationupdate5a494cfb-4196-46e3-b6fe-dcfd475be54d is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:15:30.041: INFO: The status of Pod annotationupdate5a494cfb-4196-46e3-b6fe-dcfd475be54d is Running (Ready = true)
Aug 20 12:15:30.565: INFO: Successfully updated pod "annotationupdate5a494cfb-4196-46e3-b6fe-dcfd475be54d"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:15:32.580: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9085" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":72,"skipped":1336,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:15:32.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-2630
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 20 12:15:32.740: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 20 12:16:32.762: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug 20 12:16:32.782: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 20 12:16:32.788: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 20 12:16:32.801: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 20 12:16:32.808: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 20 12:16:32.821: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 20 12:16:32.826: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:16:38.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2630" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:66.357 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":73,"skipped":1348,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:16:38.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 20 12:16:39.090: INFO: Waiting up to 5m0s for pod "pod-700a3d9b-ea04-4ffb-882a-699d781052ab" in namespace "emptydir-6965" to be "Succeeded or Failed"
Aug 20 12:16:39.095: INFO: Pod "pod-700a3d9b-ea04-4ffb-882a-699d781052ab": Phase="Pending", Reason="", readiness=false. Elapsed: 4.763539ms
Aug 20 12:16:41.100: INFO: Pod "pod-700a3d9b-ea04-4ffb-882a-699d781052ab": Phase="Running", Reason="", readiness=false. Elapsed: 2.010391688s
Aug 20 12:16:43.108: INFO: Pod "pod-700a3d9b-ea04-4ffb-882a-699d781052ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018195071s
STEP: Saw pod success
Aug 20 12:16:43.108: INFO: Pod "pod-700a3d9b-ea04-4ffb-882a-699d781052ab" satisfied condition "Succeeded or Failed"
Aug 20 12:16:43.112: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-700a3d9b-ea04-4ffb-882a-699d781052ab container test-container: <nil>
STEP: delete the pod
Aug 20 12:16:43.132: INFO: Waiting for pod pod-700a3d9b-ea04-4ffb-882a-699d781052ab to disappear
Aug 20 12:16:43.135: INFO: Pod pod-700a3d9b-ea04-4ffb-882a-699d781052ab no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:16:43.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6965" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":74,"skipped":1382,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:16:43.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2104
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-47871057-0bd5-4bfa-8e1f-4fde18fab10e
STEP: Creating a pod to test consume secrets
Aug 20 12:16:43.287: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac" in namespace "projected-2104" to be "Succeeded or Failed"
Aug 20 12:16:43.292: INFO: Pod "pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac": Phase="Pending", Reason="", readiness=false. Elapsed: 5.454705ms
Aug 20 12:16:45.299: INFO: Pod "pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012649018s
Aug 20 12:16:47.306: INFO: Pod "pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019090703s
STEP: Saw pod success
Aug 20 12:16:47.306: INFO: Pod "pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac" satisfied condition "Succeeded or Failed"
Aug 20 12:16:47.309: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:16:47.330: INFO: Waiting for pod pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac to disappear
Aug 20 12:16:47.333: INFO: Pod pod-projected-secrets-284064b2-9cc9-4799-965d-3057751b8bac no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:16:47.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2104" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":75,"skipped":1392,"failed":0}
SS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:16:47.346: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1658
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Aug 20 12:16:57.991: INFO: 71 pods remaining
Aug 20 12:16:57.991: INFO: 71 pods has nil DeletionTimestamp
Aug 20 12:16:57.991: INFO: 
STEP: Gathering metrics
Aug 20 12:17:02.993: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0820 12:17:02.993606      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 20 12:17:02.993: INFO: Deleting pod "simpletest-rc-to-be-deleted-24hsj" in namespace "gc-1658"
Aug 20 12:17:03.006: INFO: Deleting pod "simpletest-rc-to-be-deleted-25mgf" in namespace "gc-1658"
Aug 20 12:17:03.016: INFO: Deleting pod "simpletest-rc-to-be-deleted-27p5t" in namespace "gc-1658"
Aug 20 12:17:03.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-2859f" in namespace "gc-1658"
Aug 20 12:17:03.044: INFO: Deleting pod "simpletest-rc-to-be-deleted-2h4bp" in namespace "gc-1658"
Aug 20 12:17:03.058: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vnbd" in namespace "gc-1658"
Aug 20 12:17:03.070: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wd94" in namespace "gc-1658"
Aug 20 12:17:03.082: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h9gp" in namespace "gc-1658"
Aug 20 12:17:03.094: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pkvl" in namespace "gc-1658"
Aug 20 12:17:03.108: INFO: Deleting pod "simpletest-rc-to-be-deleted-584f2" in namespace "gc-1658"
Aug 20 12:17:03.122: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bwm8" in namespace "gc-1658"
Aug 20 12:17:03.134: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g7jj" in namespace "gc-1658"
Aug 20 12:17:03.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g8nt" in namespace "gc-1658"
Aug 20 12:17:03.160: INFO: Deleting pod "simpletest-rc-to-be-deleted-5h7kl" in namespace "gc-1658"
Aug 20 12:17:03.172: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mszl" in namespace "gc-1658"
Aug 20 12:17:03.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vdtl" in namespace "gc-1658"
Aug 20 12:17:03.196: INFO: Deleting pod "simpletest-rc-to-be-deleted-6fw55" in namespace "gc-1658"
Aug 20 12:17:03.208: INFO: Deleting pod "simpletest-rc-to-be-deleted-6g45l" in namespace "gc-1658"
Aug 20 12:17:03.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jl7j" in namespace "gc-1658"
Aug 20 12:17:03.231: INFO: Deleting pod "simpletest-rc-to-be-deleted-6w9s7" in namespace "gc-1658"
Aug 20 12:17:03.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-7b4lf" in namespace "gc-1658"
Aug 20 12:17:03.261: INFO: Deleting pod "simpletest-rc-to-be-deleted-7l54n" in namespace "gc-1658"
Aug 20 12:17:03.276: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mnxr" in namespace "gc-1658"
Aug 20 12:17:03.286: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ndpk" in namespace "gc-1658"
Aug 20 12:17:03.300: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vptl" in namespace "gc-1658"
Aug 20 12:17:03.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-84nvw" in namespace "gc-1658"
Aug 20 12:17:03.324: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g6bd" in namespace "gc-1658"
Aug 20 12:17:03.334: INFO: Deleting pod "simpletest-rc-to-be-deleted-8hzhp" in namespace "gc-1658"
Aug 20 12:17:03.344: INFO: Deleting pod "simpletest-rc-to-be-deleted-92n87" in namespace "gc-1658"
Aug 20 12:17:03.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hbxg" in namespace "gc-1658"
Aug 20 12:17:03.371: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rlbv" in namespace "gc-1658"
Aug 20 12:17:03.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9tth" in namespace "gc-1658"
Aug 20 12:17:03.398: INFO: Deleting pod "simpletest-rc-to-be-deleted-bd2xs" in namespace "gc-1658"
Aug 20 12:17:03.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdzcl" in namespace "gc-1658"
Aug 20 12:17:03.424: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpjjr" in namespace "gc-1658"
Aug 20 12:17:03.436: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2pgm" in namespace "gc-1658"
Aug 20 12:17:03.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7mxv" in namespace "gc-1658"
Aug 20 12:17:03.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdpbv" in namespace "gc-1658"
Aug 20 12:17:03.474: INFO: Deleting pod "simpletest-rc-to-be-deleted-ck24g" in namespace "gc-1658"
Aug 20 12:17:03.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5r54" in namespace "gc-1658"
Aug 20 12:17:03.570: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg7c6" in namespace "gc-1658"
Aug 20 12:17:03.590: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqkbb" in namespace "gc-1658"
Aug 20 12:17:03.604: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxzxd" in namespace "gc-1658"
Aug 20 12:17:03.616: INFO: Deleting pod "simpletest-rc-to-be-deleted-fnk6w" in namespace "gc-1658"
Aug 20 12:17:03.626: INFO: Deleting pod "simpletest-rc-to-be-deleted-glk7d" in namespace "gc-1658"
Aug 20 12:17:03.635: INFO: Deleting pod "simpletest-rc-to-be-deleted-h258k" in namespace "gc-1658"
Aug 20 12:17:03.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnzzx" in namespace "gc-1658"
Aug 20 12:17:03.661: INFO: Deleting pod "simpletest-rc-to-be-deleted-hphh8" in namespace "gc-1658"
Aug 20 12:17:03.675: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrrqx" in namespace "gc-1658"
Aug 20 12:17:03.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2wpk" in namespace "gc-1658"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 12:17:03.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1658" for this suite.

• [SLOW TEST:16.460 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":76,"skipped":1394,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:03.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-29
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Aug 20 12:17:05.972: INFO: running pods: 0 < 1
Aug 20 12:17:07.979: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 20 12:17:10.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-29" for this suite.

• [SLOW TEST:6.291 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":77,"skipped":1403,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:10.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2145
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:17:26.282: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2145" for this suite.

• [SLOW TEST:16.197 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":78,"skipped":1405,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:26.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3344
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 20 12:17:26.429: INFO: Waiting up to 5m0s for pod "pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8" in namespace "emptydir-3344" to be "Succeeded or Failed"
Aug 20 12:17:26.432: INFO: Pod "pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.485925ms
Aug 20 12:17:28.439: INFO: Pod "pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8": Phase="Running", Reason="", readiness=false. Elapsed: 2.00996108s
Aug 20 12:17:30.445: INFO: Pod "pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016153306s
STEP: Saw pod success
Aug 20 12:17:30.445: INFO: Pod "pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8" satisfied condition "Succeeded or Failed"
Aug 20 12:17:30.449: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8 container test-container: <nil>
STEP: delete the pod
Aug 20 12:17:30.467: INFO: Waiting for pod pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8 to disappear
Aug 20 12:17:30.470: INFO: Pod pod-3aa8ff9d-55ec-4248-9b17-a9dbf55c81b8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:17:30.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3344" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":79,"skipped":1435,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:30.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4758
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Aug 20 12:17:30.619: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 20 12:17:35.625: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 20 12:17:35.648: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4758" for this suite.

• [SLOW TEST:5.178 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":80,"skipped":1459,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:35.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5987
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-911
STEP: Creating secret with name secret-test-cba26eab-e16d-469b-8778-423206e1da8e
STEP: Creating a pod to test consume secrets
Aug 20 12:17:35.931: INFO: Waiting up to 5m0s for pod "pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600" in namespace "secrets-5987" to be "Succeeded or Failed"
Aug 20 12:17:35.936: INFO: Pod "pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600": Phase="Pending", Reason="", readiness=false. Elapsed: 4.523351ms
Aug 20 12:17:37.942: INFO: Pod "pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011125878s
Aug 20 12:17:39.950: INFO: Pod "pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019216806s
STEP: Saw pod success
Aug 20 12:17:39.950: INFO: Pod "pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600" satisfied condition "Succeeded or Failed"
Aug 20 12:17:39.954: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600 container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:17:39.974: INFO: Waiting for pod pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600 to disappear
Aug 20 12:17:39.980: INFO: Pod pod-secrets-7941c423-aacb-4f9d-ba45-9173e1325600 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:17:39.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5987" for this suite.
STEP: Destroying namespace "secret-namespace-911" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1467,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:39.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9890
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:17:40.138: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771" in namespace "downward-api-9890" to be "Succeeded or Failed"
Aug 20 12:17:40.141: INFO: Pod "downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771": Phase="Pending", Reason="", readiness=false. Elapsed: 3.469061ms
Aug 20 12:17:42.148: INFO: Pod "downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009922344s
Aug 20 12:17:44.154: INFO: Pod "downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016165635s
STEP: Saw pod success
Aug 20 12:17:44.154: INFO: Pod "downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771" satisfied condition "Succeeded or Failed"
Aug 20 12:17:44.158: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771 container client-container: <nil>
STEP: delete the pod
Aug 20 12:17:44.179: INFO: Waiting for pod downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771 to disappear
Aug 20 12:17:44.182: INFO: Pod downwardapi-volume-c2496e0a-d49a-4875-932a-8338c830b771 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:17:44.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9890" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1486,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:17:44.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 12:18:44.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4409" for this suite.

• [SLOW TEST:60.157 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1560,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:18:44.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-8913
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-xrbf
STEP: Creating a pod to test atomic-volume-subpath
Aug 20 12:18:44.501: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-xrbf" in namespace "subpath-8913" to be "Succeeded or Failed"
Aug 20 12:18:44.504: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Pending", Reason="", readiness=false. Elapsed: 3.748347ms
Aug 20 12:18:46.510: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 2.009551917s
Aug 20 12:18:48.518: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 4.017402916s
Aug 20 12:18:50.524: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 6.02366994s
Aug 20 12:18:52.533: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 8.032448702s
Aug 20 12:18:54.538: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 10.037376991s
Aug 20 12:18:56.543: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 12.042244526s
Aug 20 12:18:58.555: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 14.054708773s
Aug 20 12:19:00.565: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 16.064358091s
Aug 20 12:19:02.573: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 18.072371495s
Aug 20 12:19:04.579: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=true. Elapsed: 20.078144905s
Aug 20 12:19:06.585: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Running", Reason="", readiness=false. Elapsed: 22.083878978s
Aug 20 12:19:08.593: INFO: Pod "pod-subpath-test-secret-xrbf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.092338896s
STEP: Saw pod success
Aug 20 12:19:08.593: INFO: Pod "pod-subpath-test-secret-xrbf" satisfied condition "Succeeded or Failed"
Aug 20 12:19:08.597: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-subpath-test-secret-xrbf container test-container-subpath-secret-xrbf: <nil>
STEP: delete the pod
Aug 20 12:19:08.633: INFO: Waiting for pod pod-subpath-test-secret-xrbf to disappear
Aug 20 12:19:08.637: INFO: Pod pod-subpath-test-secret-xrbf no longer exists
STEP: Deleting pod pod-subpath-test-secret-xrbf
Aug 20 12:19:08.637: INFO: Deleting pod "pod-subpath-test-secret-xrbf" in namespace "subpath-8913"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 20 12:19:08.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-8913" for this suite.

• [SLOW TEST:24.302 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":84,"skipped":1593,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:19:08.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-8861
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-c9jm
STEP: Creating a pod to test atomic-volume-subpath
Aug 20 12:19:08.802: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-c9jm" in namespace "subpath-8861" to be "Succeeded or Failed"
Aug 20 12:19:08.806: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Pending", Reason="", readiness=false. Elapsed: 3.561635ms
Aug 20 12:19:10.812: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 2.009695136s
Aug 20 12:19:12.819: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 4.016475164s
Aug 20 12:19:14.827: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 6.024810094s
Aug 20 12:19:16.833: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 8.030815469s
Aug 20 12:19:18.842: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 10.039392201s
Aug 20 12:19:20.849: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 12.046629808s
Aug 20 12:19:22.856: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 14.05399234s
Aug 20 12:19:24.864: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 16.061891075s
Aug 20 12:19:26.871: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 18.068140596s
Aug 20 12:19:28.878: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=true. Elapsed: 20.07562879s
Aug 20 12:19:30.887: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Running", Reason="", readiness=false. Elapsed: 22.084516872s
Aug 20 12:19:32.892: INFO: Pod "pod-subpath-test-downwardapi-c9jm": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.089297727s
STEP: Saw pod success
Aug 20 12:19:32.892: INFO: Pod "pod-subpath-test-downwardapi-c9jm" satisfied condition "Succeeded or Failed"
Aug 20 12:19:32.896: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-subpath-test-downwardapi-c9jm container test-container-subpath-downwardapi-c9jm: <nil>
STEP: delete the pod
Aug 20 12:19:32.925: INFO: Waiting for pod pod-subpath-test-downwardapi-c9jm to disappear
Aug 20 12:19:32.929: INFO: Pod pod-subpath-test-downwardapi-c9jm no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-c9jm
Aug 20 12:19:32.929: INFO: Deleting pod "pod-subpath-test-downwardapi-c9jm" in namespace "subpath-8861"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 20 12:19:32.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-8861" for this suite.

• [SLOW TEST:24.291 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":85,"skipped":1601,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:19:32.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6563
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Aug 20 12:19:33.093: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.093: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.104: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.104: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.114: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.114: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.143: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:33.143: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 20 12:19:34.422: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 20 12:19:34.422: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 20 12:19:34.642: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Aug 20 12:19:34.660: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 0
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.661: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.664: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.664: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.687: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.687: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:34.737: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:34.737: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:34.745: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:34.745: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:36.434: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:36.434: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:36.452: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
STEP: listing Deployments
Aug 20 12:19:36.459: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Aug 20 12:19:36.469: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Aug 20 12:19:36.475: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:36.479: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:36.493: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:36.506: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:36.514: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:36.524: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:37.431: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:37.445: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:37.452: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:37.466: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:37.472: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 20 12:19:38.682: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 1
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:38.716: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:38.717: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:38.717: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:38.717: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 2
Aug 20 12:19:38.717: INFO: observed Deployment test-deployment in namespace deployment-6563 with ReadyReplicas 3
STEP: deleting the Deployment
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
Aug 20 12:19:38.727: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 12:19:38.731: INFO: Log out all the ReplicaSets if there is no deployment created
Aug 20 12:19:38.735: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-6563  ffc75faa-a143-4ba4-895b-202b252fb27f 13878 3 2022-08-20 12:19:33 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 4e8b52fd-0c79-4451-9e84-4e24356d4c65 0xc001380617 0xc001380618}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:19:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e8b52fd-0c79-4451-9e84-4e24356d4c65\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:19:36 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0013806a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 20 12:19:38.739: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-6563  d67811c7-b177-40a1-a6fb-9bb4e0d3face 13981 2 2022-08-20 12:19:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 4e8b52fd-0c79-4451-9e84-4e24356d4c65 0xc001380707 0xc001380708}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:19:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e8b52fd-0c79-4451-9e84-4e24356d4c65\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:19:37 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001380790 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Aug 20 12:19:38.744: INFO: pod: "test-deployment-74c6dd549b-2vfgc":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-2vfgc test-deployment-74c6dd549b- deployment-6563  01841744-f69f-4aeb-a46b-8ffb5dd1f90f 13980 0 2022-08-20 12:19:37 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b d67811c7-b177-40a1-a6fb-9bb4e0d3face 0xc003ce0457 0xc003ce0458}] []  [{kube-controller-manager Update v1 2022-08-20 12:19:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d67811c7-b177-40a1-a6fb-9bb4e0d3face\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:19:38 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ghn45,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ghn45,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:38 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:37 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.71.246,PodIP:192.168.124.68,StartTime:2022-08-20 12:19:37 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:19:38 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://17ae1860d8ba6e5c8816071985338a8a6a64f9de402214dbecbbae3d394a2e52,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.124.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 20 12:19:38.744: INFO: pod: "test-deployment-74c6dd549b-4c72q":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-4c72q test-deployment-74c6dd549b- deployment-6563  3a258075-758b-4447-8617-d0d6aa6aa37a 13923 0 2022-08-20 12:19:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b d67811c7-b177-40a1-a6fb-9bb4e0d3face 0xc003ce0647 0xc003ce0648}] []  [{kube-controller-manager Update v1 2022-08-20 12:19:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d67811c7-b177-40a1-a6fb-9bb4e0d3face\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:19:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6856r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6856r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.50,StartTime:2022-08-20 12:19:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:19:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://274c809dbec1c42cfe8e3d7822535c01123f47e163fe7c4f8df397d5717e3328,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.50,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 20 12:19:38.744: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-6563  d6932586-f429-4add-98b5-4b7cb897e041 13989 4 2022-08-20 12:19:34 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 4e8b52fd-0c79-4451-9e84-4e24356d4c65 0xc0013807f7 0xc0013807f8}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:19:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e8b52fd-0c79-4451-9e84-4e24356d4c65\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:19:38 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001380880 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 20 12:19:38.748: INFO: pod: "test-deployment-84b949bdfc-7g7dv":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-7g7dv test-deployment-84b949bdfc- deployment-6563  f037d5a5-5750-4b2e-b0d4-48fc6bfbbd4c 13985 0 2022-08-20 12:19:34 +0000 UTC 2022-08-20 12:19:39 +0000 UTC 0xc003bce7b8 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc d6932586-f429-4add-98b5-4b7cb897e041 0xc003bce957 0xc003bce958}] []  [{kube-controller-manager Update v1 2022-08-20 12:19:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d6932586-f429-4add-98b5-4b7cb897e041\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:19:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.48\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lqx9b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lqx9b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:19:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.48,StartTime:2022-08-20 12:19:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:19:35 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://df619b5c2cb58e414a1eab1894f9c73d42839e3a99bc0bd2a890779a268cf1df,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.48,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 12:19:38.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6563" for this suite.

• [SLOW TEST:5.821 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":86,"skipped":1631,"failed":0}
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:19:38.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6127
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-31198e45-f50a-44d0-96a2-7d3718ce1b8f
STEP: Creating configMap with name cm-test-opt-upd-a2e46b9e-1f0e-4daa-8e09-efbf76adacf2
STEP: Creating the pod
Aug 20 12:19:38.917: INFO: The status of Pod pod-projected-configmaps-81c29794-0a85-49ea-9476-d520e9f954f1 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:19:40.924: INFO: The status of Pod pod-projected-configmaps-81c29794-0a85-49ea-9476-d520e9f954f1 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:19:42.923: INFO: The status of Pod pod-projected-configmaps-81c29794-0a85-49ea-9476-d520e9f954f1 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-31198e45-f50a-44d0-96a2-7d3718ce1b8f
STEP: Updating configmap cm-test-opt-upd-a2e46b9e-1f0e-4daa-8e09-efbf76adacf2
STEP: Creating configMap with name cm-test-opt-create-9f241dff-6f23-47c3-bbf9-8ce199114e11
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:20:55.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6127" for this suite.

• [SLOW TEST:76.604 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":87,"skipped":1631,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:20:55.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-226
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-226
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-226
I0820 12:20:55.537694      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-226, replica count: 2
Aug 20 12:20:58.588: INFO: Creating new exec pod
I0820 12:20:58.588436      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 12:21:01.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-226 exec execpodl98v2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 20 12:21:01.742: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 20 12:21:01.742: INFO: stdout: "externalname-service-dmgt6"
Aug 20 12:21:01.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-226 exec execpodl98v2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
Aug 20 12:21:01.864: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
Aug 20 12:21:01.864: INFO: stdout: ""
Aug 20 12:21:02.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-226 exec execpodl98v2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
Aug 20 12:21:02.985: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
Aug 20 12:21:02.985: INFO: stdout: "externalname-service-kh57z"
Aug 20 12:21:02.985: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:21:03.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-226" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.649 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":88,"skipped":1649,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:03.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3608
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Aug 20 12:21:03.161: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 20 12:21:08.167: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Aug 20 12:21:08.171: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Aug 20 12:21:08.181: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Aug 20 12:21:08.182: INFO: Observed &ReplicaSet event: ADDED
Aug 20 12:21:08.182: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.183: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.183: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.183: INFO: Found replicaset test-rs in namespace replicaset-3608 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 20 12:21:08.183: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Aug 20 12:21:08.183: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 20 12:21:08.188: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Aug 20 12:21:08.191: INFO: Observed &ReplicaSet event: ADDED
Aug 20 12:21:08.191: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.191: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.191: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.191: INFO: Observed replicaset test-rs in namespace replicaset-3608 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 20 12:21:08.191: INFO: Observed &ReplicaSet event: MODIFIED
Aug 20 12:21:08.191: INFO: Found replicaset test-rs in namespace replicaset-3608 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Aug 20 12:21:08.191: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 20 12:21:08.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3608" for this suite.

• [SLOW TEST:5.185 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":89,"skipped":1669,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:08.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6504
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:21:08.333: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Aug 20 12:21:10.375: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 20 12:21:11.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6504" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":90,"skipped":1690,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:11.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-3009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-7231
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-5497
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:21:17.805: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-3009" for this suite.
STEP: Destroying namespace "nsdeletetest-7231" for this suite.
Aug 20 12:21:17.819: INFO: Namespace nsdeletetest-7231 was already deleted
STEP: Destroying namespace "nsdeletetest-5497" for this suite.

• [SLOW TEST:6.430 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":91,"skipped":1702,"failed":0}
SS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:17.826: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 20 12:21:17.962: INFO: Waiting up to 5m0s for pod "pod-75a44712-f30e-41d2-969d-630e0290fd5f" in namespace "emptydir-8417" to be "Succeeded or Failed"
Aug 20 12:21:17.968: INFO: Pod "pod-75a44712-f30e-41d2-969d-630e0290fd5f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022558ms
Aug 20 12:21:19.975: INFO: Pod "pod-75a44712-f30e-41d2-969d-630e0290fd5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012965166s
Aug 20 12:21:21.983: INFO: Pod "pod-75a44712-f30e-41d2-969d-630e0290fd5f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021749299s
STEP: Saw pod success
Aug 20 12:21:21.983: INFO: Pod "pod-75a44712-f30e-41d2-969d-630e0290fd5f" satisfied condition "Succeeded or Failed"
Aug 20 12:21:21.987: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-75a44712-f30e-41d2-969d-630e0290fd5f container test-container: <nil>
STEP: delete the pod
Aug 20 12:21:22.009: INFO: Waiting for pod pod-75a44712-f30e-41d2-969d-630e0290fd5f to disappear
Aug 20 12:21:22.012: INFO: Pod pod-75a44712-f30e-41d2-969d-630e0290fd5f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:21:22.012: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8417" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1704,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:22.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-745
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-2bc3851a-b221-4805-bc41-e3d307169103
STEP: Creating a pod to test consume configMaps
Aug 20 12:21:22.170: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306" in namespace "projected-745" to be "Succeeded or Failed"
Aug 20 12:21:22.173: INFO: Pod "pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306": Phase="Pending", Reason="", readiness=false. Elapsed: 3.323171ms
Aug 20 12:21:24.179: INFO: Pod "pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008880806s
Aug 20 12:21:26.192: INFO: Pod "pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022407883s
STEP: Saw pod success
Aug 20 12:21:26.192: INFO: Pod "pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306" satisfied condition "Succeeded or Failed"
Aug 20 12:21:26.196: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:21:26.290: INFO: Waiting for pod pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306 to disappear
Aug 20 12:21:26.294: INFO: Pod pod-projected-configmaps-f486bb01-dd56-4875-bf28-801125729306 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:21:26.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-745" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":93,"skipped":1741,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:26.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-1871
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Aug 20 12:21:26.457: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Aug 20 12:21:26.483: INFO: waiting for watch events with expected annotations in namespace
Aug 20 12:21:26.483: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Aug 20 12:21:26.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-1871" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":94,"skipped":1781,"failed":0}

------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:26.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-427
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Aug 20 12:21:26.659: INFO: Waiting up to 5m0s for pod "test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5" in namespace "svcaccounts-427" to be "Succeeded or Failed"
Aug 20 12:21:26.664: INFO: Pod "test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.002074ms
Aug 20 12:21:28.671: INFO: Pod "test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012056888s
Aug 20 12:21:30.677: INFO: Pod "test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018691088s
STEP: Saw pod success
Aug 20 12:21:30.677: INFO: Pod "test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5" satisfied condition "Succeeded or Failed"
Aug 20 12:21:30.681: INFO: Trying to get logs from node ip-172-31-39-75 pod test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:21:30.698: INFO: Waiting for pod test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5 to disappear
Aug 20 12:21:30.702: INFO: Pod test-pod-989a6320-6b98-4cd3-a1a1-0197146910f5 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 20 12:21:30.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-427" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":95,"skipped":1781,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:30.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-2233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:21:30.841: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:21:33.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-2233" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":96,"skipped":1788,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:33.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3179
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:21:34.114: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49" in namespace "downward-api-3179" to be "Succeeded or Failed"
Aug 20 12:21:34.117: INFO: Pod "downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49": Phase="Pending", Reason="", readiness=false. Elapsed: 3.472247ms
Aug 20 12:21:36.125: INFO: Pod "downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011686806s
Aug 20 12:21:38.129: INFO: Pod "downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015600457s
STEP: Saw pod success
Aug 20 12:21:38.129: INFO: Pod "downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49" satisfied condition "Succeeded or Failed"
Aug 20 12:21:38.133: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49 container client-container: <nil>
STEP: delete the pod
Aug 20 12:21:38.152: INFO: Waiting for pod downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49 to disappear
Aug 20 12:21:38.156: INFO: Pod downwardapi-volume-8905eb33-8278-4069-90dc-723b7dfefc49 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:21:38.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3179" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":97,"skipped":1800,"failed":0}
SS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:21:38.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9791
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 20 12:26:38.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9791" for this suite.

• [SLOW TEST:300.166 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":98,"skipped":1802,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:38.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-9624
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Aug 20 12:26:38.474: INFO: Pod name pod-release: Found 0 pods out of 1
Aug 20 12:26:43.479: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 20 12:26:44.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-9624" for this suite.

• [SLOW TEST:6.177 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":99,"skipped":1854,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:44.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3879
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Aug 20 12:26:44.647: INFO: Waiting up to 5m0s for pod "pod-ec655aa5-ac0c-4195-adc6-26d0465c642f" in namespace "emptydir-3879" to be "Succeeded or Failed"
Aug 20 12:26:44.650: INFO: Pod "pod-ec655aa5-ac0c-4195-adc6-26d0465c642f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.517479ms
Aug 20 12:26:46.656: INFO: Pod "pod-ec655aa5-ac0c-4195-adc6-26d0465c642f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008972848s
Aug 20 12:26:48.660: INFO: Pod "pod-ec655aa5-ac0c-4195-adc6-26d0465c642f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013107158s
STEP: Saw pod success
Aug 20 12:26:48.660: INFO: Pod "pod-ec655aa5-ac0c-4195-adc6-26d0465c642f" satisfied condition "Succeeded or Failed"
Aug 20 12:26:48.663: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-ec655aa5-ac0c-4195-adc6-26d0465c642f container test-container: <nil>
STEP: delete the pod
Aug 20 12:26:48.709: INFO: Waiting for pod pod-ec655aa5-ac0c-4195-adc6-26d0465c642f to disappear
Aug 20 12:26:48.713: INFO: Pod pod-ec655aa5-ac0c-4195-adc6-26d0465c642f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:26:48.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3879" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":100,"skipped":1863,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:48.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:26:49.042: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2534" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":101,"skipped":1872,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:49.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 20 12:26:49.201: INFO: Waiting up to 5m0s for pod "downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107" in namespace "downward-api-8266" to be "Succeeded or Failed"
Aug 20 12:26:49.206: INFO: Pod "downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107": Phase="Pending", Reason="", readiness=false. Elapsed: 5.102701ms
Aug 20 12:26:51.213: INFO: Pod "downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012433528s
Aug 20 12:26:53.219: INFO: Pod "downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018485132s
STEP: Saw pod success
Aug 20 12:26:53.219: INFO: Pod "downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107" satisfied condition "Succeeded or Failed"
Aug 20 12:26:53.223: INFO: Trying to get logs from node ip-172-31-71-246 pod downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107 container dapi-container: <nil>
STEP: delete the pod
Aug 20 12:26:53.241: INFO: Waiting for pod downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107 to disappear
Aug 20 12:26:53.244: INFO: Pod downward-api-8db7410b-9409-4a1b-aee4-b3a5352ca107 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 20 12:26:53.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8266" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":102,"skipped":1939,"failed":0}
SS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:53.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-469
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 20 12:26:53.394: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 20 12:26:53.399: INFO: starting watch
STEP: patching
STEP: updating
Aug 20 12:26:53.415: INFO: waiting for watch events with expected annotations
Aug 20 12:26:53.415: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 20 12:26:53.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-469" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":103,"skipped":1941,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:53.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9303
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:26:53.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9303" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":104,"skipped":1943,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:53.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4778
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Aug 20 12:26:53.786: INFO: created test-pod-1
Aug 20 12:26:53.792: INFO: created test-pod-2
Aug 20 12:26:53.800: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Aug 20 12:26:53.800: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-4778' to be running and ready
Aug 20 12:26:53.813: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 20 12:26:53.813: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 20 12:26:53.813: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 20 12:26:53.813: INFO: 0 / 3 pods in namespace 'pods-4778' are running and ready (0 seconds elapsed)
Aug 20 12:26:53.813: INFO: expected 0 pod replicas in namespace 'pods-4778', 0 are Running and Ready.
Aug 20 12:26:53.813: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 20 12:26:53.813: INFO: test-pod-1  ip-172-31-39-75   Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:26:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:26:53 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:26:53 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:26:53 +0000 UTC  }]
Aug 20 12:26:53.813: INFO: test-pod-2  ip-172-31-39-75   Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:26:53 +0000 UTC  }]
Aug 20 12:26:53.813: INFO: test-pod-3  ip-172-31-71-246  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:26:53 +0000 UTC  }]
Aug 20 12:26:53.813: INFO: 
Aug 20 12:26:55.828: INFO: 3 / 3 pods in namespace 'pods-4778' are running and ready (2 seconds elapsed)
Aug 20 12:26:55.828: INFO: expected 0 pod replicas in namespace 'pods-4778', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Aug 20 12:26:55.850: INFO: Pod quantity 3 is different from expected quantity 0
Aug 20 12:26:56.857: INFO: Pod quantity 3 is different from expected quantity 0
Aug 20 12:26:57.856: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:26:58.856: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4778" for this suite.

• [SLOW TEST:5.213 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":105,"skipped":1961,"failed":0}
SSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:58.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-7137
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 20 12:26:59.724: INFO: starting watch
STEP: patching
STEP: updating
Aug 20 12:26:59.736: INFO: waiting for watch events with expected annotations
Aug 20 12:26:59.736: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:26:59.795: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-7137" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":106,"skipped":1970,"failed":0}
SSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:26:59.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-2935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Aug 20 12:26:59.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-2935" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":107,"skipped":1977,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:27:00.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-2596/secret-test-e6611964-d639-44a5-a7c9-54ff3a368fea
STEP: Creating a pod to test consume secrets
Aug 20 12:27:00.145: INFO: Waiting up to 5m0s for pod "pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c" in namespace "secrets-2596" to be "Succeeded or Failed"
Aug 20 12:27:00.150: INFO: Pod "pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.169531ms
Aug 20 12:27:02.160: INFO: Pod "pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01501245s
Aug 20 12:27:04.164: INFO: Pod "pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019747534s
STEP: Saw pod success
Aug 20 12:27:04.164: INFO: Pod "pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c" satisfied condition "Succeeded or Failed"
Aug 20 12:27:04.168: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c container env-test: <nil>
STEP: delete the pod
Aug 20 12:27:04.195: INFO: Waiting for pod pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c to disappear
Aug 20 12:27:04.198: INFO: Pod pod-configmaps-693fc8e4-f6ba-4e8e-a69a-c5034815615c no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:27:04.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2596" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":108,"skipped":1990,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:27:04.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug 20 12:27:04.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 create -f -'
Aug 20 12:27:04.559: INFO: stderr: ""
Aug 20 12:27:04.559: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 20 12:27:04.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:27:04.606: INFO: stderr: ""
Aug 20 12:27:04.606: INFO: stdout: "update-demo-nautilus-dzn7r update-demo-nautilus-mxt9c "
Aug 20 12:27:04.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods update-demo-nautilus-dzn7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:27:04.650: INFO: stderr: ""
Aug 20 12:27:04.650: INFO: stdout: ""
Aug 20 12:27:04.650: INFO: update-demo-nautilus-dzn7r is created but not running
Aug 20 12:27:09.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:27:09.701: INFO: stderr: ""
Aug 20 12:27:09.701: INFO: stdout: "update-demo-nautilus-dzn7r update-demo-nautilus-mxt9c "
Aug 20 12:27:09.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods update-demo-nautilus-dzn7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:27:09.745: INFO: stderr: ""
Aug 20 12:27:09.745: INFO: stdout: ""
Aug 20 12:27:09.745: INFO: update-demo-nautilus-dzn7r is created but not running
Aug 20 12:27:14.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:27:14.796: INFO: stderr: ""
Aug 20 12:27:14.796: INFO: stdout: "update-demo-nautilus-dzn7r update-demo-nautilus-mxt9c "
Aug 20 12:27:14.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods update-demo-nautilus-dzn7r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:27:14.842: INFO: stderr: ""
Aug 20 12:27:14.842: INFO: stdout: "true"
Aug 20 12:27:14.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods update-demo-nautilus-dzn7r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:27:14.886: INFO: stderr: ""
Aug 20 12:27:14.886: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:27:14.886: INFO: validating pod update-demo-nautilus-dzn7r
Aug 20 12:27:14.893: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:27:14.893: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:27:14.893: INFO: update-demo-nautilus-dzn7r is verified up and running
Aug 20 12:27:14.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods update-demo-nautilus-mxt9c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:27:14.937: INFO: stderr: ""
Aug 20 12:27:14.937: INFO: stdout: "true"
Aug 20 12:27:14.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods update-demo-nautilus-mxt9c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:27:14.982: INFO: stderr: ""
Aug 20 12:27:14.982: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:27:14.982: INFO: validating pod update-demo-nautilus-mxt9c
Aug 20 12:27:14.988: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:27:14.988: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:27:14.988: INFO: update-demo-nautilus-mxt9c is verified up and running
STEP: using delete to clean up resources
Aug 20 12:27:14.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 delete --grace-period=0 --force -f -'
Aug 20 12:27:15.038: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 12:27:15.038: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 20 12:27:15.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get rc,svc -l name=update-demo --no-headers'
Aug 20 12:27:15.089: INFO: stderr: "No resources found in kubectl-7 namespace.\n"
Aug 20 12:27:15.089: INFO: stdout: ""
Aug 20 12:27:15.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-7 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 20 12:27:15.142: INFO: stderr: ""
Aug 20 12:27:15.142: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:27:15.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7" for this suite.

• [SLOW TEST:10.946 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":109,"skipped":2046,"failed":0}
S
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:27:15.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-2478
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-2478
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 20 12:27:15.282: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 20 12:27:15.317: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:27:17.322: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:27:19.324: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:27:21.325: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:27:23.322: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:27:25.325: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:27:27.324: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 20 12:27:27.332: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 20 12:27:29.338: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 20 12:27:31.341: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 20 12:27:33.337: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 20 12:27:35.337: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 20 12:27:37.337: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 20 12:27:37.344: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 20 12:27:39.385: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 20 12:27:39.385: INFO: Going to poll 192.168.45.63 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 20 12:27:39.388: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.45.63:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2478 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:27:39.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:27:39.389: INFO: ExecWithOptions: Clientset creation
Aug 20 12:27:39.389: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2478/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.45.63%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:27:39.479: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 20 12:27:39.479: INFO: Going to poll 192.168.124.77 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 20 12:27:39.483: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.124.77:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2478 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:27:39.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:27:39.483: INFO: ExecWithOptions: Clientset creation
Aug 20 12:27:39.483: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2478/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.124.77%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:27:39.569: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 20 12:27:39.569: INFO: Going to poll 192.168.18.55 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 20 12:27:39.573: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.18.55:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2478 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:27:39.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:27:39.574: INFO: ExecWithOptions: Clientset creation
Aug 20 12:27:39.574: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2478/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.18.55%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:27:39.658: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 20 12:27:39.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-2478" for this suite.

• [SLOW TEST:24.514 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":110,"skipped":2047,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:27:39.669: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-6034
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Aug 20 12:27:39.800: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 20 12:28:39.818: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:28:39.821: INFO: Starting informer...
STEP: Starting pods...
Aug 20 12:28:40.043: INFO: Pod1 is running on ip-172-31-39-75. Tainting Node
Aug 20 12:28:42.269: INFO: Pod2 is running on ip-172-31-39-75. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Aug 20 12:28:48.193: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Aug 20 12:29:08.220: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:29:08.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-6034" for this suite.

• [SLOW TEST:88.576 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":111,"skipped":2077,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:08.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2074
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug 20 12:29:08.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 create -f -'
Aug 20 12:29:08.641: INFO: stderr: ""
Aug 20 12:29:08.641: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 20 12:29:08.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:29:08.687: INFO: stderr: ""
Aug 20 12:29:08.687: INFO: stdout: "update-demo-nautilus-cjrg5 update-demo-nautilus-rkcqc "
Aug 20 12:29:08.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-cjrg5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:29:08.736: INFO: stderr: ""
Aug 20 12:29:08.736: INFO: stdout: ""
Aug 20 12:29:08.736: INFO: update-demo-nautilus-cjrg5 is created but not running
Aug 20 12:29:13.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:29:13.785: INFO: stderr: ""
Aug 20 12:29:13.785: INFO: stdout: "update-demo-nautilus-cjrg5 update-demo-nautilus-rkcqc "
Aug 20 12:29:13.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-cjrg5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:29:13.827: INFO: stderr: ""
Aug 20 12:29:13.827: INFO: stdout: "true"
Aug 20 12:29:13.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-cjrg5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:29:13.876: INFO: stderr: ""
Aug 20 12:29:13.876: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:29:13.876: INFO: validating pod update-demo-nautilus-cjrg5
Aug 20 12:29:13.881: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:29:13.881: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:29:13.881: INFO: update-demo-nautilus-cjrg5 is verified up and running
Aug 20 12:29:13.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-rkcqc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:29:13.926: INFO: stderr: ""
Aug 20 12:29:13.926: INFO: stdout: "true"
Aug 20 12:29:13.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-rkcqc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:29:13.970: INFO: stderr: ""
Aug 20 12:29:13.970: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:29:13.970: INFO: validating pod update-demo-nautilus-rkcqc
Aug 20 12:29:13.976: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:29:13.977: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:29:13.977: INFO: update-demo-nautilus-rkcqc is verified up and running
STEP: scaling down the replication controller
Aug 20 12:29:13.977: INFO: scanned /root for discovery docs: <nil>
Aug 20 12:29:13.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Aug 20 12:29:15.043: INFO: stderr: ""
Aug 20 12:29:15.043: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 20 12:29:15.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:29:15.090: INFO: stderr: ""
Aug 20 12:29:15.090: INFO: stdout: "update-demo-nautilus-cjrg5 update-demo-nautilus-rkcqc "
STEP: Replicas for name=update-demo: expected=1 actual=2
Aug 20 12:29:20.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:29:20.138: INFO: stderr: ""
Aug 20 12:29:20.138: INFO: stdout: "update-demo-nautilus-rkcqc "
Aug 20 12:29:20.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-rkcqc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:29:20.184: INFO: stderr: ""
Aug 20 12:29:20.184: INFO: stdout: "true"
Aug 20 12:29:20.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-rkcqc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:29:20.230: INFO: stderr: ""
Aug 20 12:29:20.230: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:29:20.230: INFO: validating pod update-demo-nautilus-rkcqc
Aug 20 12:29:20.235: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:29:20.235: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:29:20.235: INFO: update-demo-nautilus-rkcqc is verified up and running
STEP: scaling up the replication controller
Aug 20 12:29:20.236: INFO: scanned /root for discovery docs: <nil>
Aug 20 12:29:20.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Aug 20 12:29:21.297: INFO: stderr: ""
Aug 20 12:29:21.297: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 20 12:29:21.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 20 12:29:21.344: INFO: stderr: ""
Aug 20 12:29:21.344: INFO: stdout: "update-demo-nautilus-rkcqc update-demo-nautilus-ws6fz "
Aug 20 12:29:21.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-rkcqc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:29:21.391: INFO: stderr: ""
Aug 20 12:29:21.391: INFO: stdout: "true"
Aug 20 12:29:21.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-rkcqc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:29:21.436: INFO: stderr: ""
Aug 20 12:29:21.436: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:29:21.436: INFO: validating pod update-demo-nautilus-rkcqc
Aug 20 12:29:21.440: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:29:21.440: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:29:21.440: INFO: update-demo-nautilus-rkcqc is verified up and running
Aug 20 12:29:21.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-ws6fz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 20 12:29:21.486: INFO: stderr: ""
Aug 20 12:29:21.486: INFO: stdout: "true"
Aug 20 12:29:21.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods update-demo-nautilus-ws6fz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 20 12:29:21.530: INFO: stderr: ""
Aug 20 12:29:21.530: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 20 12:29:21.530: INFO: validating pod update-demo-nautilus-ws6fz
Aug 20 12:29:21.534: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 20 12:29:21.534: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 20 12:29:21.534: INFO: update-demo-nautilus-ws6fz is verified up and running
STEP: using delete to clean up resources
Aug 20 12:29:21.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 delete --grace-period=0 --force -f -'
Aug 20 12:29:21.588: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 12:29:21.588: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 20 12:29:21.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get rc,svc -l name=update-demo --no-headers'
Aug 20 12:29:21.646: INFO: stderr: "No resources found in kubectl-2074 namespace.\n"
Aug 20 12:29:21.646: INFO: stdout: ""
Aug 20 12:29:21.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2074 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 20 12:29:21.697: INFO: stderr: ""
Aug 20 12:29:21.697: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:29:21.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2074" for this suite.

• [SLOW TEST:13.462 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":112,"skipped":2107,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:21.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2374
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:29:32.890: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2374" for this suite.

• [SLOW TEST:11.194 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":113,"skipped":2197,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:32.903: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-c69a11b5-52ad-422b-ab71-7c0f44bd7a73
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:29:33.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1867" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":114,"skipped":2229,"failed":0}
SSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:33.049: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3475
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:29:33.187: INFO: Waiting up to 5m0s for pod "downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b" in namespace "downward-api-3475" to be "Succeeded or Failed"
Aug 20 12:29:33.192: INFO: Pod "downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.969215ms
Aug 20 12:29:35.196: INFO: Pod "downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009606527s
Aug 20 12:29:37.203: INFO: Pod "downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016625948s
STEP: Saw pod success
Aug 20 12:29:37.203: INFO: Pod "downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b" satisfied condition "Succeeded or Failed"
Aug 20 12:29:37.207: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b container client-container: <nil>
STEP: delete the pod
Aug 20 12:29:37.232: INFO: Waiting for pod downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b to disappear
Aug 20 12:29:37.235: INFO: Pod downwardapi-volume-618e27ba-6913-4b89-9a7a-e4d6f3919b6b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:29:37.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3475" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":115,"skipped":2233,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:37.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2760
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 20 12:29:40.411: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 20 12:29:40.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2760" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":116,"skipped":2290,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:40.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 20 12:29:44.613: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 20 12:29:44.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5698" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":117,"skipped":2301,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:44.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 20 12:29:44.798: INFO: The status of Pod annotationupdate888e2187-974b-41e2-bcd6-ca7b485318d3 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:29:46.806: INFO: The status of Pod annotationupdate888e2187-974b-41e2-bcd6-ca7b485318d3 is Running (Ready = true)
Aug 20 12:29:47.330: INFO: Successfully updated pod "annotationupdate888e2187-974b-41e2-bcd6-ca7b485318d3"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:29:51.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6296" for this suite.

• [SLOW TEST:6.725 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":118,"skipped":2327,"failed":0}
S
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:51.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9453
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-a19ff871-5808-4933-b833-b0c166ec5655
STEP: Creating a pod to test consume configMaps
Aug 20 12:29:51.515: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba" in namespace "projected-9453" to be "Succeeded or Failed"
Aug 20 12:29:51.518: INFO: Pod "pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba": Phase="Pending", Reason="", readiness=false. Elapsed: 3.169185ms
Aug 20 12:29:53.524: INFO: Pod "pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009145668s
Aug 20 12:29:55.534: INFO: Pod "pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018418556s
STEP: Saw pod success
Aug 20 12:29:55.534: INFO: Pod "pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba" satisfied condition "Succeeded or Failed"
Aug 20 12:29:55.538: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:29:55.559: INFO: Waiting for pod pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba to disappear
Aug 20 12:29:55.562: INFO: Pod pod-projected-configmaps-c311986b-88e8-46d3-ac98-8c5f1935c2ba no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:29:55.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9453" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":119,"skipped":2328,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:55.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-659
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:29:55.712: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6" in namespace "projected-659" to be "Succeeded or Failed"
Aug 20 12:29:55.715: INFO: Pod "downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.875597ms
Aug 20 12:29:57.720: INFO: Pod "downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008422149s
Aug 20 12:29:59.726: INFO: Pod "downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014845175s
STEP: Saw pod success
Aug 20 12:29:59.726: INFO: Pod "downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6" satisfied condition "Succeeded or Failed"
Aug 20 12:29:59.732: INFO: Trying to get logs from node ip-172-31-71-246 pod downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6 container client-container: <nil>
STEP: delete the pod
Aug 20 12:29:59.761: INFO: Waiting for pod downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6 to disappear
Aug 20 12:29:59.765: INFO: Pod downwardapi-volume-a039cc33-4b49-4d0f-9a53-4a2e695c62f6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:29:59.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-659" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":120,"skipped":2333,"failed":0}

------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:29:59.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-2974
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 20 12:29:59.907: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 20 12:30:04.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-2974" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":121,"skipped":2333,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:04.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2537
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:30:04.822: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:30:07.846: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:30:19.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2537" for this suite.
STEP: Destroying namespace "webhook-2537-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.693 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":122,"skipped":2335,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:20.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8599
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:30:20.465: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:30:23.492: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:30:23.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8599" for this suite.
STEP: Destroying namespace "webhook-8599-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":123,"skipped":2392,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:23.614: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-3033
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Aug 20 12:30:23.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Aug 20 12:30:24.141: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Aug 20 12:30:26.187: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:30:28.193: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:30:30.194: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:30:32.195: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:30:34.193: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:30:36.194: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 30, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:30:38.515: INFO: Waited 316.48879ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Aug 20 12:30:38.567: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Aug 20 12:30:39.008: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-3033" for this suite.

• [SLOW TEST:15.498 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":124,"skipped":2425,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:39.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-6423
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Aug 20 12:30:39.272: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Aug 20 12:30:39.294: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 20 12:30:39.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-6423" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":125,"skipped":2451,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:39.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-5535
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:30:39.484: INFO: The status of Pod pod-secrets-a94b7d55-fe5a-4e90-abe7-0c25afa35c2a is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:30:41.490: INFO: The status of Pod pod-secrets-a94b7d55-fe5a-4e90-abe7-0c25afa35c2a is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug 20 12:30:41.521: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-5535" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":126,"skipped":2502,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:41.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5579
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug 20 12:30:41.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:30:54.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5579" for this suite.

• [SLOW TEST:12.509 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":127,"skipped":2507,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:54.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4549
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:30:54.477: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:30:57.499: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:30:57.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4549" for this suite.
STEP: Destroying namespace "webhook-4549-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":128,"skipped":2555,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:30:57.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Aug 20 12:30:59.722: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6501 PodName:var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:30:59.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:30:59.723: INFO: ExecWithOptions: Clientset creation
Aug 20 12:30:59.723: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6501/pods/var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Aug 20 12:30:59.806: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6501 PodName:var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:30:59.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:30:59.807: INFO: ExecWithOptions: Clientset creation
Aug 20 12:30:59.807: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6501/pods/var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Aug 20 12:31:00.400: INFO: Successfully updated pod "var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Aug 20 12:31:00.403: INFO: Deleting pod "var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b" in namespace "var-expansion-6501"
Aug 20 12:31:00.409: INFO: Wait up to 5m0s for pod "var-expansion-e4243f34-97c9-49d9-a0a9-1d234024b59b" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 12:31:34.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6501" for this suite.

• [SLOW TEST:36.851 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":129,"skipped":2565,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:31:34.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2225
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Aug 20 12:31:34.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2225 create -f -'
Aug 20 12:31:35.026: INFO: stderr: ""
Aug 20 12:31:35.026: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Aug 20 12:31:35.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2225 diff -f -'
Aug 20 12:31:35.161: INFO: rc: 1
Aug 20 12:31:35.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-2225 delete -f -'
Aug 20 12:31:35.212: INFO: stderr: ""
Aug 20 12:31:35.212: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:31:35.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2225" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":130,"skipped":2570,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:31:35.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-3866
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 20 12:31:35.350: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 20 12:31:35.356: INFO: Waiting for terminating namespaces to be deleted...
Aug 20 12:31:35.359: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-39-75 before test
Aug 20 12:31:35.363: INFO: nginx-ingress-controller-kubernetes-worker-m6xxn from ingress-nginx-kubernetes-worker started at 2022-08-20 12:29:08 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.363: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 12:31:35.363: INFO: httpd-deployment-595d88489-v75s4 from kubectl-2225 started at 2022-08-20 12:31:35 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.363: INFO: 	Container httpd ready: false, restart count 0
Aug 20 12:31:35.363: INFO: sonobuoy from sonobuoy started at 2022-08-20 11:50:09 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.363: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 20 12:31:35.363: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-7v72s from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:31:35.363: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:31:35.363: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 12:31:35.363: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-71-246 before test
Aug 20 12:31:35.367: INFO: nginx-ingress-controller-kubernetes-worker-5ttn2 from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:22 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.367: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 12:31:35.367: INFO: sonobuoy-e2e-job-17b0c7b96371488a from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:31:35.367: INFO: 	Container e2e ready: true, restart count 0
Aug 20 12:31:35.367: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:31:35.367: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-lrmrk from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:31:35.367: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:31:35.367: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 12:31:35.367: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-90-25 before test
Aug 20 12:31:35.372: INFO: default-http-backend-kubernetes-worker-6c59687bf6-5hggx from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 20 12:31:35.372: INFO: nginx-ingress-controller-kubernetes-worker-5jxfd from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 12:31:35.372: INFO: calico-kube-controllers-6fc5ff4dbc-hmtvb from kube-system started at 2022-08-20 11:47:08 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 20 12:31:35.372: INFO: coredns-86c98bfcdb-ql6b4 from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container coredns ready: true, restart count 0
Aug 20 12:31:35.372: INFO: kube-state-metrics-5cdbfd47b4-8s9rt from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 20 12:31:35.372: INFO: metrics-server-v0.5.2-6bfd958b56-tgs28 from kube-system started at 2022-08-20 11:47:08 +0000 UTC (2 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container metrics-server ready: true, restart count 0
Aug 20 12:31:35.372: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 20 12:31:35.372: INFO: dashboard-metrics-scraper-8669b59d4f-tw6l4 from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 20 12:31:35.372: INFO: kubernetes-dashboard-585fc6bc87-6h7cf from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 20 12:31:35.372: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-8tk2v from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:31:35.372: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:31:35.372: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.170d0d835af12d82], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:31:36.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-3866" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":131,"skipped":2585,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:31:36.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8822
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:31:36.787: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:31:39.808: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:31:39.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5266-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:31:42.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8822" for this suite.
STEP: Destroying namespace "webhook-8822-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.547 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":132,"skipped":2597,"failed":0}
SSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:31:42.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-8323
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:31:43.082: INFO: Creating pod...
Aug 20 12:31:45.098: INFO: Creating service...
Aug 20 12:31:45.109: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=DELETE
Aug 20 12:31:45.114: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 20 12:31:45.114: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=OPTIONS
Aug 20 12:31:45.119: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 20 12:31:45.119: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=PATCH
Aug 20 12:31:45.122: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 20 12:31:45.122: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=POST
Aug 20 12:31:45.126: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 20 12:31:45.126: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=PUT
Aug 20 12:31:45.129: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 20 12:31:45.129: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=DELETE
Aug 20 12:31:45.134: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 20 12:31:45.134: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=OPTIONS
Aug 20 12:31:45.139: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 20 12:31:45.139: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=PATCH
Aug 20 12:31:45.144: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 20 12:31:45.144: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=POST
Aug 20 12:31:45.149: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 20 12:31:45.149: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=PUT
Aug 20 12:31:45.154: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 20 12:31:45.154: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=GET
Aug 20 12:31:45.156: INFO: http.Client request:GET StatusCode:301
Aug 20 12:31:45.156: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=GET
Aug 20 12:31:45.160: INFO: http.Client request:GET StatusCode:301
Aug 20 12:31:45.161: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/pods/agnhost/proxy?method=HEAD
Aug 20 12:31:45.163: INFO: http.Client request:HEAD StatusCode:301
Aug 20 12:31:45.163: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8323/services/e2e-proxy-test-service/proxy?method=HEAD
Aug 20 12:31:45.167: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 20 12:31:45.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-8323" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":133,"skipped":2601,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:31:45.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-7914
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 89.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.89_udp@PTR;check="$$(dig +tcp +noall +answer +search 89.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.89_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7914.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7914.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7914.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7914.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 89.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.89_udp@PTR;check="$$(dig +tcp +noall +answer +search 89.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.89_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:31:55.344: INFO: Unable to read wheezy_udp@dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.347: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.350: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.354: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.369: INFO: Unable to read jessie_udp@dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.372: INFO: Unable to read jessie_tcp@dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.375: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.378: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local from pod dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497: the server could not find the requested resource (get pods dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497)
Aug 20 12:31:55.390: INFO: Lookups using dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497 failed for: [wheezy_udp@dns-test-service.dns-7914.svc.cluster.local wheezy_tcp@dns-test-service.dns-7914.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local jessie_udp@dns-test-service.dns-7914.svc.cluster.local jessie_tcp@dns-test-service.dns-7914.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7914.svc.cluster.local]

Aug 20 12:32:00.446: INFO: DNS probes using dns-7914/dns-test-0f4252e0-3463-444c-bf3a-f7abe1fee497 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 12:32:00.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-7914" for this suite.

• [SLOW TEST:15.328 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":134,"skipped":2624,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:00.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-2012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Aug 20 12:32:00.641: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:32:02.650: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Aug 20 12:32:02.663: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:32:04.667: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Aug 20 12:32:04.670: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:04.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:04.670: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:04.670: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 20 12:32:04.745: INFO: Exec stderr: ""
Aug 20 12:32:04.745: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:04.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:04.746: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:04.746: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 20 12:32:04.838: INFO: Exec stderr: ""
Aug 20 12:32:04.838: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:04.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:04.838: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:04.838: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 20 12:32:04.873: INFO: Exec stderr: ""
Aug 20 12:32:04.873: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:04.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:04.874: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:04.874: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 20 12:32:04.932: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Aug 20 12:32:04.932: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:04.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:04.933: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:04.933: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug 20 12:32:05.011: INFO: Exec stderr: ""
Aug 20 12:32:05.011: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:05.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:05.012: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:05.012: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug 20 12:32:05.070: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Aug 20 12:32:05.070: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:05.070: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:05.070: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:05.070: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 20 12:32:05.139: INFO: Exec stderr: ""
Aug 20 12:32:05.139: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:05.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:05.139: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:05.139: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 20 12:32:05.174: INFO: Exec stderr: ""
Aug 20 12:32:05.174: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:05.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:05.175: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:05.175: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 20 12:32:05.242: INFO: Exec stderr: ""
Aug 20 12:32:05.242: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2012 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:32:05.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:32:05.243: INFO: ExecWithOptions: Clientset creation
Aug 20 12:32:05.243: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2012/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 20 12:32:05.314: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Aug 20 12:32:05.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-2012" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":135,"skipped":2662,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:05.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:32:06.076: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:32:09.098: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Aug 20 12:32:09.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:32:09.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8392" for this suite.
STEP: Destroying namespace "webhook-8392-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":136,"skipped":2682,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:09.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-6997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:32:09.617: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:32:12.638: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:32:12.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:32:15.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6997" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.672 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":137,"skipped":2704,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:15.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-4769
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Aug 20 12:32:15.974: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Aug 20 12:32:15.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-4769" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":138,"skipped":2752,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:15.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7806
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7806
STEP: creating service affinity-clusterip-transition in namespace services-7806
STEP: creating replication controller affinity-clusterip-transition in namespace services-7806
I0820 12:32:16.126206      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7806, replica count: 3
I0820 12:32:19.177312      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 12:32:19.187: INFO: Creating new exec pod
Aug 20 12:32:22.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-7806 exec execpod-affinityd4gxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Aug 20 12:32:22.342: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Aug 20 12:32:22.343: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:32:22.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-7806 exec execpod-affinityd4gxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.202 80'
Aug 20 12:32:22.466: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.202 80\nConnection to 10.152.183.202 80 port [tcp/http] succeeded!\n"
Aug 20 12:32:22.466: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 12:32:22.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-7806 exec execpod-affinityd4gxt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.202:80/ ; done'
Aug 20 12:32:22.676: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n"
Aug 20 12:32:22.676: INFO: stdout: "\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-cm4wv\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-mbh4l\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-mbh4l\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-cm4wv\naffinity-clusterip-transition-cm4wv\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-cm4wv\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-cm4wv"
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-cm4wv
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-mbh4l
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-mbh4l
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-cm4wv
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-cm4wv
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-cm4wv
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.676: INFO: Received response from host: affinity-clusterip-transition-cm4wv
Aug 20 12:32:22.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-7806 exec execpod-affinityd4gxt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.202:80/ ; done'
Aug 20 12:32:22.889: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.202:80/\n"
Aug 20 12:32:22.889: INFO: stdout: "\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p\naffinity-clusterip-transition-x2w7p"
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Received response from host: affinity-clusterip-transition-x2w7p
Aug 20 12:32:22.889: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7806, will wait for the garbage collector to delete the pods
Aug 20 12:32:23.026: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.612083ms
Aug 20 12:32:23.127: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.812641ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:32:24.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7806" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.864 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":139,"skipped":2783,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:24.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7393
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:32:25.390: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:32:28.414: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:32:28.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7393" for this suite.
STEP: Destroying namespace "webhook-7393-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":140,"skipped":2785,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:28.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:32:29.092: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:32:32.114: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:32:32.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7893" for this suite.
STEP: Destroying namespace "webhook-7893-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":141,"skipped":2807,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:32.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-3769
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 20 12:32:32.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-3769" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":142,"skipped":2817,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:32.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8322
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Aug 20 12:32:32.458: INFO: Found Service test-service-dwwxs in namespace services-8322 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Aug 20 12:32:32.458: INFO: Service test-service-dwwxs created
STEP: Getting /status
Aug 20 12:32:32.461: INFO: Service test-service-dwwxs has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Aug 20 12:32:32.466: INFO: observed Service test-service-dwwxs in namespace services-8322 with annotations: map[] & LoadBalancer: {[]}
Aug 20 12:32:32.466: INFO: Found Service test-service-dwwxs in namespace services-8322 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Aug 20 12:32:32.466: INFO: Service test-service-dwwxs has service status patched
STEP: updating the ServiceStatus
Aug 20 12:32:32.473: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Aug 20 12:32:32.474: INFO: Observed Service test-service-dwwxs in namespace services-8322 with annotations: map[] & Conditions: {[]}
Aug 20 12:32:32.474: INFO: Observed event: &Service{ObjectMeta:{test-service-dwwxs  services-8322  a098f4a9-d7ef-448e-9082-3646d6bf51fd 18372 0 2022-08-20 12:32:32 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-08-20 12:32:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-08-20 12:32:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.114,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.114],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Aug 20 12:32:32.474: INFO: Found Service test-service-dwwxs in namespace services-8322 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 20 12:32:32.474: INFO: Service test-service-dwwxs has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Aug 20 12:32:32.483: INFO: observed Service test-service-dwwxs in namespace services-8322 with labels: map[test-service-static:true]
Aug 20 12:32:32.483: INFO: observed Service test-service-dwwxs in namespace services-8322 with labels: map[test-service-static:true]
Aug 20 12:32:32.483: INFO: observed Service test-service-dwwxs in namespace services-8322 with labels: map[test-service-static:true]
Aug 20 12:32:32.483: INFO: Found Service test-service-dwwxs in namespace services-8322 with labels: map[test-service:patched test-service-static:true]
Aug 20 12:32:32.483: INFO: Service test-service-dwwxs patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Aug 20 12:32:32.497: INFO: Observed event: ADDED
Aug 20 12:32:32.497: INFO: Observed event: MODIFIED
Aug 20 12:32:32.497: INFO: Observed event: MODIFIED
Aug 20 12:32:32.497: INFO: Observed event: MODIFIED
Aug 20 12:32:32.497: INFO: Found Service test-service-dwwxs in namespace services-8322 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Aug 20 12:32:32.497: INFO: Service test-service-dwwxs deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:32:32.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8322" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":143,"skipped":2841,"failed":0}
SSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:32.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9318
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 20 12:32:32.647: INFO: The status of Pod pod-update-c42ca8b3-d502-4d9d-92ee-85b3b08ea0f2 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:32:34.652: INFO: The status of Pod pod-update-c42ca8b3-d502-4d9d-92ee-85b3b08ea0f2 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 20 12:32:35.170: INFO: Successfully updated pod "pod-update-c42ca8b3-d502-4d9d-92ee-85b3b08ea0f2"
STEP: verifying the updated pod is in kubernetes
Aug 20 12:32:35.175: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:32:35.175: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9318" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2844,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:35.184: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-70
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:32:51.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-70" for this suite.

• [SLOW TEST:16.247 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":145,"skipped":2874,"failed":0}
SSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:51.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6586
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 20 12:32:51.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6586" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":146,"skipped":2877,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:51.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3301
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:32:51.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:32:52.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3301" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":147,"skipped":2929,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:52.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7083
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:32:52.393: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 20 12:32:52.407: INFO: The status of Pod pod-exec-websocket-66e020f5-c812-49cc-a9fb-bc44ce4c8c2a is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:32:54.411: INFO: The status of Pod pod-exec-websocket-66e020f5-c812-49cc-a9fb-bc44ce4c8c2a is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:32:54.495: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7083" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":148,"skipped":2934,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:32:54.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-653
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Aug 20 12:33:00.672: INFO: 80 pods remaining
Aug 20 12:33:00.672: INFO: 80 pods has nil DeletionTimestamp
Aug 20 12:33:00.672: INFO: 
Aug 20 12:33:01.669: INFO: 71 pods remaining
Aug 20 12:33:01.669: INFO: 71 pods has nil DeletionTimestamp
Aug 20 12:33:01.669: INFO: 
Aug 20 12:33:02.671: INFO: 60 pods remaining
Aug 20 12:33:02.671: INFO: 60 pods has nil DeletionTimestamp
Aug 20 12:33:02.671: INFO: 
Aug 20 12:33:03.667: INFO: 40 pods remaining
Aug 20 12:33:03.667: INFO: 40 pods has nil DeletionTimestamp
Aug 20 12:33:03.667: INFO: 
Aug 20 12:33:04.667: INFO: 31 pods remaining
Aug 20 12:33:04.667: INFO: 31 pods has nil DeletionTimestamp
Aug 20 12:33:04.667: INFO: 
Aug 20 12:33:05.671: INFO: 20 pods remaining
Aug 20 12:33:05.671: INFO: 20 pods has nil DeletionTimestamp
Aug 20 12:33:05.671: INFO: 
STEP: Gathering metrics
W0820 12:33:06.668142      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 20 12:33:06.668: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 12:33:06.668: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-653" for this suite.

• [SLOW TEST:12.174 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":149,"skipped":2973,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:06.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-218
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 20 12:33:06.821: INFO: Waiting up to 5m0s for pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4" in namespace "emptydir-218" to be "Succeeded or Failed"
Aug 20 12:33:06.824: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.501657ms
Aug 20 12:33:08.830: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008807019s
Aug 20 12:33:10.837: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015345865s
Aug 20 12:33:12.845: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4": Phase="Pending", Reason="", readiness=false. Elapsed: 6.023239929s
Aug 20 12:33:14.849: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4": Phase="Pending", Reason="", readiness=false. Elapsed: 8.027886638s
Aug 20 12:33:16.856: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.035092866s
STEP: Saw pod success
Aug 20 12:33:16.856: INFO: Pod "pod-b884232f-7e24-42ad-af25-76fd355f85c4" satisfied condition "Succeeded or Failed"
Aug 20 12:33:16.859: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-b884232f-7e24-42ad-af25-76fd355f85c4 container test-container: <nil>
STEP: delete the pod
Aug 20 12:33:16.885: INFO: Waiting for pod pod-b884232f-7e24-42ad-af25-76fd355f85c4 to disappear
Aug 20 12:33:16.888: INFO: Pod pod-b884232f-7e24-42ad-af25-76fd355f85c4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:33:16.888: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-218" for this suite.

• [SLOW TEST:10.217 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":150,"skipped":2978,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:16.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2678
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Aug 20 12:33:17.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Aug 20 12:33:25.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:33:27.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:33:35.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2678" for this suite.

• [SLOW TEST:19.072 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":151,"skipped":3006,"failed":0}
S
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:35.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7566
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:33:36.103: INFO: Got root ca configmap in namespace "svcaccounts-7566"
Aug 20 12:33:36.109: INFO: Deleted root ca configmap in namespace "svcaccounts-7566"
STEP: waiting for a new root ca configmap created
Aug 20 12:33:36.615: INFO: Recreated root ca configmap in namespace "svcaccounts-7566"
Aug 20 12:33:36.620: INFO: Updated root ca configmap in namespace "svcaccounts-7566"
STEP: waiting for the root ca configmap reconciled
Aug 20 12:33:37.125: INFO: Reconciled root ca configmap in namespace "svcaccounts-7566"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 20 12:33:37.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7566" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":152,"skipped":3007,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:37.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8788
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:33:37.281: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-a5665b92-541d-4da7-9219-2d4b65d212a4" in namespace "security-context-test-8788" to be "Succeeded or Failed"
Aug 20 12:33:37.284: INFO: Pod "alpine-nnp-false-a5665b92-541d-4da7-9219-2d4b65d212a4": Phase="Pending", Reason="", readiness=false. Elapsed: 3.150826ms
Aug 20 12:33:39.292: INFO: Pod "alpine-nnp-false-a5665b92-541d-4da7-9219-2d4b65d212a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01042035s
Aug 20 12:33:41.299: INFO: Pod "alpine-nnp-false-a5665b92-541d-4da7-9219-2d4b65d212a4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017958604s
Aug 20 12:33:43.305: INFO: Pod "alpine-nnp-false-a5665b92-541d-4da7-9219-2d4b65d212a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023535461s
Aug 20 12:33:43.305: INFO: Pod "alpine-nnp-false-a5665b92-541d-4da7-9219-2d4b65d212a4" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 20 12:33:43.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8788" for this suite.

• [SLOW TEST:6.282 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":153,"skipped":3016,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:43.419: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-6979
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-6979
STEP: creating replication controller externalsvc in namespace services-6979
I0820 12:33:43.583539      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6979, replica count: 2
I0820 12:33:46.634422      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Aug 20 12:33:46.663: INFO: Creating new exec pod
Aug 20 12:33:48.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-6979 exec execpodhxc2j -- /bin/sh -x -c nslookup nodeport-service.services-6979.svc.cluster.local'
Aug 20 12:33:48.832: INFO: stderr: "+ nslookup nodeport-service.services-6979.svc.cluster.local\n"
Aug 20 12:33:48.832: INFO: stdout: "Server:\t\t10.152.183.233\nAddress:\t10.152.183.233#53\n\nnodeport-service.services-6979.svc.cluster.local\tcanonical name = externalsvc.services-6979.svc.cluster.local.\nName:\texternalsvc.services-6979.svc.cluster.local\nAddress: 10.152.183.96\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6979, will wait for the garbage collector to delete the pods
Aug 20 12:33:48.893: INFO: Deleting ReplicationController externalsvc took: 6.411931ms
Aug 20 12:33:48.994: INFO: Terminating ReplicationController externalsvc pods took: 100.868725ms
Aug 20 12:33:51.214: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:33:51.230: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6979" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.824 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":154,"skipped":3037,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:51.244: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7292
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:33:51.369: INFO: Creating simple deployment test-new-deployment
Aug 20 12:33:51.382: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 12:33:53.458: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-7292  71a84184-1ae2-4809-9d20-75a55d16e237 20705 3 2022-08-20 12:33:51 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-08-20 12:33:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050b2ca8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-08-20 12:33:52 +0000 UTC,LastTransitionTime:2022-08-20 12:33:51 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-20 12:33:53 +0000 UTC,LastTransitionTime:2022-08-20 12:33:53 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 20 12:33:53.461: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-7292  48775780-2a9d-4544-b985-5aba8d17cda5 20704 3 2022-08-20 12:33:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 71a84184-1ae2-4809-9d20-75a55d16e237 0xc0050b30f7 0xc0050b30f8}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:33:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"71a84184-1ae2-4809-9d20-75a55d16e237\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:33:52 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050b3188 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:33:53.475: INFO: Pod "test-new-deployment-55df494869-jvdwk" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-jvdwk test-new-deployment-55df494869- deployment-7292  56a67ec9-cef0-4d49-b1a6-5bd775ed83cf 20694 0 2022-08-20 12:33:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 48775780-2a9d-4544-b985-5aba8d17cda5 0xc005050ac7 0xc005050ac8}] []  [{kube-controller-manager Update v1 2022-08-20 12:33:51 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"48775780-2a9d-4544-b985-5aba8d17cda5\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:33:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.61\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-spwds,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-spwds,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:33:51 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:33:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:33:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:33:51 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.61,StartTime:2022-08-20 12:33:51 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:33:52 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://26b5f11d60f3711003046e3b398418fc4b9a8c7766a4bc86f34ecfa7bc0020cd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.61,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:33:53.475: INFO: Pod "test-new-deployment-55df494869-wtxzz" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-wtxzz test-new-deployment-55df494869- deployment-7292  e06efc9e-2eca-48eb-949d-437aacfb25d6 20707 0 2022-08-20 12:33:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 48775780-2a9d-4544-b985-5aba8d17cda5 0xc005050d17 0xc005050d18}] []  [{kube-controller-manager Update v1 2022-08-20 12:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"48775780-2a9d-4544-b985-5aba8d17cda5\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zvzhd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zvzhd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:33:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 12:33:53.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7292" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":155,"skipped":3057,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:53.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1209
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-f85c8b35-2c0b-473f-86ff-93b4509e3cae
STEP: Creating secret with name s-test-opt-upd-78c691a8-5188-4b04-a04a-d8e98f114ec8
STEP: Creating the pod
Aug 20 12:33:53.651: INFO: The status of Pod pod-projected-secrets-81425c2a-95b3-45c3-a455-b98de34bbe75 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:33:55.657: INFO: The status of Pod pod-projected-secrets-81425c2a-95b3-45c3-a455-b98de34bbe75 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-f85c8b35-2c0b-473f-86ff-93b4509e3cae
STEP: Updating secret s-test-opt-upd-78c691a8-5188-4b04-a04a-d8e98f114ec8
STEP: Creating secret with name s-test-opt-create-f14024a1-fe8d-4cb3-bde9-03a0c18072a3
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:33:57.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1209" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":156,"skipped":3072,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:33:57.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:34:07.913: INFO: DNS probes using dns-6237/dns-test-a104ebb5-f09f-42b2-97e3-e3ca009ae286 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 12:34:07.937: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6237" for this suite.

• [SLOW TEST:10.203 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":157,"skipped":3104,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:34:07.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6709
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-ab8dabe1-6252-4a7b-8dea-8356bdca6876
STEP: Creating a pod to test consume secrets
Aug 20 12:34:08.089: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866" in namespace "projected-6709" to be "Succeeded or Failed"
Aug 20 12:34:08.093: INFO: Pod "pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866": Phase="Pending", Reason="", readiness=false. Elapsed: 4.840542ms
Aug 20 12:34:10.098: INFO: Pod "pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009826617s
Aug 20 12:34:12.106: INFO: Pod "pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017885895s
STEP: Saw pod success
Aug 20 12:34:12.106: INFO: Pod "pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866" satisfied condition "Succeeded or Failed"
Aug 20 12:34:12.110: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:34:12.130: INFO: Waiting for pod pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866 to disappear
Aug 20 12:34:12.133: INFO: Pod pod-projected-secrets-70399a7a-59b5-4b24-b33b-67b8c002e866 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:34:12.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6709" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":158,"skipped":3109,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:34:12.144: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5946
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 20 12:34:15.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5946" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":159,"skipped":3160,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:34:15.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:34:15.291: INFO: Pod name rollover-pod: Found 0 pods out of 1
Aug 20 12:34:20.295: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 20 12:34:20.295: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Aug 20 12:34:22.301: INFO: Creating deployment "test-rollover-deployment"
Aug 20 12:34:22.312: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Aug 20 12:34:24.320: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Aug 20 12:34:24.327: INFO: Ensure that both replica sets have 1 created replica
Aug 20 12:34:24.334: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Aug 20 12:34:24.344: INFO: Updating deployment test-rollover-deployment
Aug 20 12:34:24.344: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Aug 20 12:34:26.353: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Aug 20 12:34:26.360: INFO: Make sure deployment "test-rollover-deployment" is complete
Aug 20 12:34:26.368: INFO: all replica sets need to contain the pod-template-hash label
Aug 20 12:34:26.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:34:28.377: INFO: all replica sets need to contain the pod-template-hash label
Aug 20 12:34:28.377: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:34:30.377: INFO: all replica sets need to contain the pod-template-hash label
Aug 20 12:34:30.377: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:34:32.379: INFO: all replica sets need to contain the pod-template-hash label
Aug 20 12:34:32.379: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:34:34.376: INFO: all replica sets need to contain the pod-template-hash label
Aug 20 12:34:34.376: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 12, 34, 25, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 12, 34, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 20 12:34:36.375: INFO: 
Aug 20 12:34:36.375: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 12:34:36.385: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-1417  c7a7c299-7564-4ec4-ad94-7da97bb62d6f 21237 2 2022-08-20 12:34:22 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-20 12:34:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:34:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002fe2d58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-20 12:34:22 +0000 UTC,LastTransitionTime:2022-08-20 12:34:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-08-20 12:34:36 +0000 UTC,LastTransitionTime:2022-08-20 12:34:22 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 20 12:34:36.389: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-1417  f7eacca9-3040-4660-8d1f-6f395c729995 21227 2 2022-08-20 12:34:24 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment c7a7c299-7564-4ec4-ad94-7da97bb62d6f 0xc002fe31e7 0xc002fe31e8}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:34:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c7a7c299-7564-4ec4-ad94-7da97bb62d6f\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:34:35 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002fe3298 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:34:36.389: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Aug 20 12:34:36.389: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-1417  33355113-e527-4ffb-ad7c-4a6810f340e6 21236 2 2022-08-20 12:34:15 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment c7a7c299-7564-4ec4-ad94-7da97bb62d6f 0xc002fe30b7 0xc002fe30b8}] []  [{e2e.test Update apps/v1 2022-08-20 12:34:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:34:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c7a7c299-7564-4ec4-ad94-7da97bb62d6f\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:34:36 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc002fe3178 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:34:36.389: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-1417  728010a4-670f-427a-b056-576b053e3533 21179 2 2022-08-20 12:34:22 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment c7a7c299-7564-4ec4-ad94-7da97bb62d6f 0xc002fe3300 0xc002fe3301}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:34:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c7a7c299-7564-4ec4-ad94-7da97bb62d6f\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:34:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002fe33b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:34:36.393: INFO: Pod "test-rollover-deployment-779c67f4f8-zcqmr" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-zcqmr test-rollover-deployment-779c67f4f8- deployment-1417  1aac0a38-8356-4c19-94b3-9a337f6388c1 21200 0 2022-08-20 12:34:24 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 f7eacca9-3040-4660-8d1f-6f395c729995 0xc0038f87e7 0xc0038f87e8}] []  [{kube-controller-manager Update v1 2022-08-20 12:34:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7eacca9-3040-4660-8d1f-6f395c729995\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:34:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.2\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-msnsn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-msnsn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:34:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:34:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:34:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:34:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.2,StartTime:2022-08-20 12:34:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:34:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://85aba781950cb911c593f6378b6dc6ac042f53674deddc3d7a6802bcd0ee5242,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.2,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 12:34:36.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1417" for this suite.

• [SLOW TEST:21.249 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":160,"skipped":3186,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:34:36.404: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-3691
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:34:36.530: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Creating first CR 
Aug 20 12:34:39.083: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-20T12:34:39Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-20T12:34:39Z]] name:name1 resourceVersion:21257 uid:e036c7d1-52e9-4225-8bb3-49d7db55d68e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Aug 20 12:34:49.093: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-20T12:34:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-20T12:34:49Z]] name:name2 resourceVersion:21316 uid:15789a48-9fee-40b1-90c8-7c13b6c569e7] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Aug 20 12:34:59.101: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-20T12:34:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-20T12:34:59Z]] name:name1 resourceVersion:21336 uid:e036c7d1-52e9-4225-8bb3-49d7db55d68e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Aug 20 12:35:09.111: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-20T12:34:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-20T12:35:09Z]] name:name2 resourceVersion:21354 uid:15789a48-9fee-40b1-90c8-7c13b6c569e7] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Aug 20 12:35:19.125: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-20T12:34:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-20T12:34:59Z]] name:name1 resourceVersion:21373 uid:e036c7d1-52e9-4225-8bb3-49d7db55d68e] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Aug 20 12:35:29.135: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-20T12:34:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-20T12:35:09Z]] name:name2 resourceVersion:21393 uid:15789a48-9fee-40b1-90c8-7c13b6c569e7] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:35:39.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-3691" for this suite.

• [SLOW TEST:63.258 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":161,"skipped":3252,"failed":0}
SSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:35:39.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4118
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-e74dc6e3-a545-49e3-8139-83de71db03da
STEP: Creating a pod to test consume configMaps
Aug 20 12:35:39.812: INFO: Waiting up to 5m0s for pod "pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b" in namespace "configmap-4118" to be "Succeeded or Failed"
Aug 20 12:35:39.817: INFO: Pod "pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.907757ms
Aug 20 12:35:41.822: INFO: Pod "pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010218486s
Aug 20 12:35:43.827: INFO: Pod "pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01523113s
STEP: Saw pod success
Aug 20 12:35:43.827: INFO: Pod "pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b" satisfied condition "Succeeded or Failed"
Aug 20 12:35:43.830: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:35:43.851: INFO: Waiting for pod pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b to disappear
Aug 20 12:35:43.855: INFO: Pod pod-configmaps-050d6c8f-30e1-4b3b-89a7-9692d1d9755b no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:35:43.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4118" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":162,"skipped":3259,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:35:43.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4349
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:35:43.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-7338
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-4349
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Aug 20 12:35:50.201: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-7338" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 20 12:35:50.211: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4349" for this suite.

• [SLOW TEST:6.356 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":163,"skipped":3288,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:35:50.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:35:50.360: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4" in namespace "projected-6168" to be "Succeeded or Failed"
Aug 20 12:35:50.366: INFO: Pod "downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.498494ms
Aug 20 12:35:52.371: INFO: Pod "downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011082563s
Aug 20 12:35:54.379: INFO: Pod "downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018927883s
STEP: Saw pod success
Aug 20 12:35:54.379: INFO: Pod "downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4" satisfied condition "Succeeded or Failed"
Aug 20 12:35:54.383: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4 container client-container: <nil>
STEP: delete the pod
Aug 20 12:35:54.403: INFO: Waiting for pod downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4 to disappear
Aug 20 12:35:54.407: INFO: Pod downwardapi-volume-bb28da30-53af-41e7-8061-64b4a002b8f4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:35:54.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6168" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":3304,"failed":0}
SSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:35:54.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7096
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-6a06fe9b-077a-4222-9968-cd6f8a426356
STEP: Creating a pod to test consume configMaps
Aug 20 12:35:54.559: INFO: Waiting up to 5m0s for pod "pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff" in namespace "configmap-7096" to be "Succeeded or Failed"
Aug 20 12:35:54.563: INFO: Pod "pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff": Phase="Pending", Reason="", readiness=false. Elapsed: 4.108239ms
Aug 20 12:35:56.570: INFO: Pod "pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010825622s
Aug 20 12:35:58.575: INFO: Pod "pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016118839s
STEP: Saw pod success
Aug 20 12:35:58.575: INFO: Pod "pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff" satisfied condition "Succeeded or Failed"
Aug 20 12:35:58.579: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:35:58.599: INFO: Waiting for pod pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff to disappear
Aug 20 12:35:58.602: INFO: Pod pod-configmaps-11e124d1-b325-46b2-bfda-fdd40a63c3ff no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:35:58.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7096" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":165,"skipped":3311,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:35:58.614: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3714
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:35:58.764: INFO: The status of Pod server-envvars-5f4b5f6b-4a45-47e4-bf43-5bc28ef34405 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:36:00.770: INFO: The status of Pod server-envvars-5f4b5f6b-4a45-47e4-bf43-5bc28ef34405 is Running (Ready = true)
Aug 20 12:36:00.793: INFO: Waiting up to 5m0s for pod "client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9" in namespace "pods-3714" to be "Succeeded or Failed"
Aug 20 12:36:00.799: INFO: Pod "client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.070631ms
Aug 20 12:36:02.807: INFO: Pod "client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013834005s
Aug 20 12:36:04.813: INFO: Pod "client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019903035s
STEP: Saw pod success
Aug 20 12:36:04.813: INFO: Pod "client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9" satisfied condition "Succeeded or Failed"
Aug 20 12:36:04.816: INFO: Trying to get logs from node ip-172-31-71-246 pod client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9 container env3cont: <nil>
STEP: delete the pod
Aug 20 12:36:04.843: INFO: Waiting for pod client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9 to disappear
Aug 20 12:36:04.846: INFO: Pod client-envvars-e75a10ac-097c-4bc9-87ef-c09e7c7590c9 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:36:04.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3714" for this suite.

• [SLOW TEST:6.243 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":166,"skipped":3371,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:36:04.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-5110
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 20 12:36:05.002: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 20 12:37:05.023: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:05.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-9677
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:37:05.173: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Aug 20 12:37:05.179: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Aug 20 12:37:05.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-9677" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:37:05.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-5110" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.414 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":167,"skipped":3449,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:05.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4685
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:37:05.404: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 20 12:37:05.418: INFO: The status of Pod pod-logs-websocket-d88282da-48e6-44b9-a65e-bbd829c31098 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:37:07.426: INFO: The status of Pod pod-logs-websocket-d88282da-48e6-44b9-a65e-bbd829c31098 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:37:07.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4685" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":168,"skipped":3458,"failed":0}
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:07.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-1441
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 20 12:37:07.602: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:37:09.610: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 20 12:37:09.629: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:37:11.635: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 20 12:37:11.653: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 20 12:37:11.657: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 20 12:37:13.658: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 20 12:37:13.663: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 20 12:37:15.659: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 20 12:37:15.664: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 20 12:37:15.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-1441" for this suite.

• [SLOW TEST:8.221 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":169,"skipped":3462,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:15.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6079
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Aug 20 12:37:15.806: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-6079 proxy --unix-socket=/tmp/kubectl-proxy-unix2400352319/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:37:15.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6079" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":170,"skipped":3538,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:15.849: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9541
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Aug 20 12:37:15.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:37:17.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:37:26.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9541" for this suite.

• [SLOW TEST:10.568 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":171,"skipped":3554,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:26.417: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6407
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6407.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6407.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6407.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6407.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:37:28.576: INFO: DNS probes using dns-test-618e0599-daff-4691-a5e0-64ad49716cfb succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6407.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6407.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6407.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6407.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:37:30.620: INFO: File wheezy_udp@dns-test-service-3.dns-6407.svc.cluster.local from pod  dns-6407/dns-test-4cd3f46d-61e9-4e25-a244-48efe949d886 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 20 12:37:30.624: INFO: File jessie_udp@dns-test-service-3.dns-6407.svc.cluster.local from pod  dns-6407/dns-test-4cd3f46d-61e9-4e25-a244-48efe949d886 contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 20 12:37:30.624: INFO: Lookups using dns-6407/dns-test-4cd3f46d-61e9-4e25-a244-48efe949d886 failed for: [wheezy_udp@dns-test-service-3.dns-6407.svc.cluster.local jessie_udp@dns-test-service-3.dns-6407.svc.cluster.local]

Aug 20 12:37:35.634: INFO: DNS probes using dns-test-4cd3f46d-61e9-4e25-a244-48efe949d886 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6407.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6407.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6407.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6407.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:37:37.690: INFO: DNS probes using dns-test-b45718cf-da05-4f16-b746-9036849e3610 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 12:37:37.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6407" for this suite.

• [SLOW TEST:11.303 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":172,"skipped":3582,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:37.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-706
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:37:37.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:37:38.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-706" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":173,"skipped":3594,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:38.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-6227
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Aug 20 12:37:39.016: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:37:41.022: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Aug 20 12:37:42.044: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 20 12:37:43.062: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-6227" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":174,"skipped":3606,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:43.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-525
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:37:43.750: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:37:46.772: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:37:46.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-525" for this suite.
STEP: Destroying namespace "webhook-525-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":175,"skipped":3628,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:46.883: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-828
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Aug 20 12:37:47.016: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Aug 20 12:37:47.022: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 20 12:37:47.022: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Aug 20 12:37:47.030: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 20 12:37:47.030: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Aug 20 12:37:47.038: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Aug 20 12:37:47.039: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Aug 20 12:37:54.081: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Aug 20 12:37:54.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-828" for this suite.

• [SLOW TEST:7.216 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":176,"skipped":3663,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:54.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-529
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-585a158e-6c58-45b3-a0dd-b9d11662bf44
STEP: Creating the pod
Aug 20 12:37:54.241: INFO: The status of Pod pod-projected-configmaps-00c07da1-20db-4c88-a4db-fdf035558b14 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:37:56.249: INFO: The status of Pod pod-projected-configmaps-00c07da1-20db-4c88-a4db-fdf035558b14 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-585a158e-6c58-45b3-a0dd-b9d11662bf44
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:37:58.278: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-529" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":177,"skipped":3681,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:37:58.292: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7913
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:37:58.429: INFO: Waiting up to 5m0s for pod "downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4" in namespace "projected-7913" to be "Succeeded or Failed"
Aug 20 12:37:58.431: INFO: Pod "downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.301035ms
Aug 20 12:38:00.437: INFO: Pod "downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008082563s
Aug 20 12:38:02.444: INFO: Pod "downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015692554s
STEP: Saw pod success
Aug 20 12:38:02.444: INFO: Pod "downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4" satisfied condition "Succeeded or Failed"
Aug 20 12:38:02.447: INFO: Trying to get logs from node ip-172-31-71-246 pod downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4 container client-container: <nil>
STEP: delete the pod
Aug 20 12:38:02.468: INFO: Waiting for pod downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4 to disappear
Aug 20 12:38:02.470: INFO: Pod downwardapi-volume-673f300b-ac3d-43e0-9daa-1b010b3123d4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:38:02.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7913" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":178,"skipped":3688,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:38:02.479: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5585
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Aug 20 12:38:02.624: INFO: observed Pod pod-test in namespace pods-5585 in phase Pending with labels: map[test-pod-static:true] & conditions []
Aug 20 12:38:02.628: INFO: observed Pod pod-test in namespace pods-5585 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC  }]
Aug 20 12:38:02.651: INFO: observed Pod pod-test in namespace pods-5585 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC  }]
Aug 20 12:38:04.396: INFO: Found Pod pod-test in namespace pods-5585 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:04 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:04 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:38:02 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Aug 20 12:38:04.431: INFO: observed event type MODIFIED
Aug 20 12:38:06.394: INFO: observed event type MODIFIED
Aug 20 12:38:07.396: INFO: observed event type MODIFIED
Aug 20 12:38:07.407: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:38:07.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5585" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":179,"skipped":3713,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:38:07.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7791
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:38:07.554: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Aug 20 12:38:07.560: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 20 12:38:12.568: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 20 12:38:12.568: INFO: Creating deployment "test-rolling-update-deployment"
Aug 20 12:38:12.574: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Aug 20 12:38:12.580: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Aug 20 12:38:14.588: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Aug 20 12:38:14.591: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 12:38:14.599: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-7791  5e0c0c3b-03f5-4602-a3eb-2fd547d7d466 22637 1 2022-08-20 12:38:12 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-08-20 12:38:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:38:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fa5558 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-20 12:38:12 +0000 UTC,LastTransitionTime:2022-08-20 12:38:12 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-08-20 12:38:14 +0000 UTC,LastTransitionTime:2022-08-20 12:38:12 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 20 12:38:14.602: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-7791  e607f797-809f-416f-82e0-94e45b3da537 22625 1 2022-08-20 12:38:12 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 5e0c0c3b-03f5-4602-a3eb-2fd547d7d466 0xc003fa5a27 0xc003fa5a28}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:38:12 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5e0c0c3b-03f5-4602-a3eb-2fd547d7d466\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:38:14 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003fa5ad8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:38:14.602: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Aug 20 12:38:14.602: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-7791  63bd3af1-8e25-44a3-a17b-03ece4f7a1e2 22636 2 2022-08-20 12:38:07 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 5e0c0c3b-03f5-4602-a3eb-2fd547d7d466 0xc003fa58f7 0xc003fa58f8}] []  [{e2e.test Update apps/v1 2022-08-20 12:38:07 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:38:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5e0c0c3b-03f5-4602-a3eb-2fd547d7d466\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:38:14 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003fa59b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:38:14.605: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-gx45z" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-gx45z test-rolling-update-deployment-67c8f74c6c- deployment-7791  7f1e6aa4-4eae-48b8-9367-528d5153b9e8 22624 0 2022-08-20 12:38:12 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c e607f797-809f-416f-82e0-94e45b3da537 0xc003fa5fb7 0xc003fa5fb8}] []  [{kube-controller-manager Update v1 2022-08-20 12:38:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e607f797-809f-416f-82e0-94e45b3da537\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:38:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4jszx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4jszx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:38:12 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:38:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:38:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:38:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.17,StartTime:2022-08-20 12:38:12 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:38:13 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://ceb49bc6ea7da576653367694ea0669e1a93bf71d729ac7cafe6fe0ee6d6b505,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.17,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 12:38:14.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7791" for this suite.

• [SLOW TEST:7.187 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":180,"skipped":3743,"failed":0}
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:38:14.615: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:38:14.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 create -f -'
Aug 20 12:38:15.395: INFO: stderr: ""
Aug 20 12:38:15.395: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Aug 20 12:38:15.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 create -f -'
Aug 20 12:38:15.934: INFO: stderr: ""
Aug 20 12:38:15.934: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 20 12:38:16.939: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 12:38:16.939: INFO: Found 1 / 1
Aug 20 12:38:16.939: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 20 12:38:16.943: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 12:38:16.943: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 20 12:38:16.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 describe pod agnhost-primary-c9wl5'
Aug 20 12:38:17.002: INFO: stderr: ""
Aug 20 12:38:17.002: INFO: stdout: "Name:         agnhost-primary-c9wl5\nNamespace:    kubectl-5105\nPriority:     0\nNode:         ip-172-31-71-246/172.31.71.246\nStart Time:   Sat, 20 Aug 2022 12:38:15 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           192.168.124.120\nIPs:\n  IP:           192.168.124.120\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://b59f269342ab42f70600a80f6381e660a22416f47514811ee14fd2bc1f345252\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 20 Aug 2022 12:38:16 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-dvxxw (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-dvxxw:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5105/agnhost-primary-c9wl5 to ip-172-31-71-246\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Aug 20 12:38:17.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 describe rc agnhost-primary'
Aug 20 12:38:17.063: INFO: stderr: ""
Aug 20 12:38:17.063: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5105\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-c9wl5\n"
Aug 20 12:38:17.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 describe service agnhost-primary'
Aug 20 12:38:17.120: INFO: stderr: ""
Aug 20 12:38:17.120: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5105\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.108\nIPs:               10.152.183.108\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.124.120:6379\nSession Affinity:  None\nEvents:            <none>\n"
Aug 20 12:38:17.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 describe node ip-172-31-3-42'
Aug 20 12:38:17.193: INFO: stderr: ""
Aug 20 12:38:17.193: INFO: stdout: "Name:               ip-172-31-3-42\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-3-42\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 20 Aug 2022 11:45:52 +0000\nTaints:             juju.is/kubernetes-control-plane=true:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-3-42\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 20 Aug 2022 12:38:13 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Sat, 20 Aug 2022 12:36:30 +0000   Sat, 20 Aug 2022 11:45:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 20 Aug 2022 12:36:30 +0000   Sat, 20 Aug 2022 11:45:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 20 Aug 2022 12:36:30 +0000   Sat, 20 Aug 2022 11:45:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 20 Aug 2022 12:36:30 +0000   Sat, 20 Aug 2022 11:46:02 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.3.42\n  Hostname:    ip-172-31-3-42\nCapacity:\n  cpu:                4\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7837204Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7734804Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec299c41d841146d31acf0ef1bd132a4\n  System UUID:                ec299c41-d841-146d-31ac-f0ef1bd132a4\n  Boot ID:                    c45fee7d-f6ba-4529-bf4e-264e3a85cb29\n  Kernel Version:             5.15.0-1017-aws\n  OS Image:                   Ubuntu 20.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.9\n  Kubelet Version:            v1.24.4\n  Kube-Proxy Version:         v1.24.4\nNon-terminated Pods:          (1 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-4cn6d    0 (0%)        0 (0%)      0 (0%)           0 (0%)         48m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:\n  Type    Reason          Age   From             Message\n  ----    ------          ----  ----             -------\n  Normal  Starting        50m   kube-proxy       \n  Normal  RegisteredNode  52m   node-controller  Node ip-172-31-3-42 event: Registered Node ip-172-31-3-42 in Controller\n  Normal  RegisteredNode  49m   node-controller  Node ip-172-31-3-42 event: Registered Node ip-172-31-3-42 in Controller\n"
Aug 20 12:38:17.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5105 describe namespace kubectl-5105'
Aug 20 12:38:17.244: INFO: stderr: ""
Aug 20 12:38:17.244: INFO: stdout: "Name:         kubectl-5105\nLabels:       e2e-framework=kubectl\n              e2e-run=6d2f54b1-f4bc-4bbe-8bf3-489b1e04da0e\n              kubernetes.io/metadata.name=kubectl-5105\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:38:17.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5105" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":181,"skipped":3751,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:38:17.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4095
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-d5cf797c-efef-421f-8f77-1f4d57a408d6 in namespace container-probe-4095
Aug 20 12:38:19.399: INFO: Started pod busybox-d5cf797c-efef-421f-8f77-1f4d57a408d6 in namespace container-probe-4095
STEP: checking the pod's current state and verifying that restartCount is present
Aug 20 12:38:19.402: INFO: Initial restart count of pod busybox-d5cf797c-efef-421f-8f77-1f4d57a408d6 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 12:42:20.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4095" for this suite.

• [SLOW TEST:242.976 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":182,"skipped":3776,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:42:20.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:42:20.371: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:42:22.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:24.376: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:26.377: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:28.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:30.377: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:32.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:34.376: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:36.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:38.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:40.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = false)
Aug 20 12:42:42.378: INFO: The status of Pod test-webserver-ef5913d0-2947-4621-861b-7b3b0e68144d is Running (Ready = true)
Aug 20 12:42:42.381: INFO: Container started at 2022-08-20 12:42:21 +0000 UTC, pod became ready at 2022-08-20 12:42:40 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 12:42:42.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2670" for this suite.

• [SLOW TEST:22.159 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":183,"skipped":3791,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:42:42.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9549
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:42:42.517: INFO: Creating deployment "webserver-deployment"
Aug 20 12:42:42.523: INFO: Waiting for observed generation 1
Aug 20 12:42:44.530: INFO: Waiting for all required pods to come up
Aug 20 12:42:44.533: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Aug 20 12:42:46.544: INFO: Waiting for deployment "webserver-deployment" to complete
Aug 20 12:42:46.549: INFO: Updating deployment "webserver-deployment" with a non-existent image
Aug 20 12:42:46.560: INFO: Updating deployment webserver-deployment
Aug 20 12:42:46.560: INFO: Waiting for observed generation 2
Aug 20 12:42:48.569: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Aug 20 12:42:48.572: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Aug 20 12:42:48.575: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 20 12:42:48.583: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Aug 20 12:42:48.583: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Aug 20 12:42:48.585: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 20 12:42:48.590: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Aug 20 12:42:48.590: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Aug 20 12:42:48.598: INFO: Updating deployment webserver-deployment
Aug 20 12:42:48.598: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Aug 20 12:42:48.605: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Aug 20 12:42:48.608: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 12:42:48.615: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-9549  75d477cc-d5cb-4aa1-8276-b0ba08cffad6 23551 3 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514b7c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-20 12:42:43 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-08-20 12:42:46 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Aug 20 12:42:48.619: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-9549  c2ebfa6d-8df9-4479-8fca-800f50a17e30 23554 3 2022-08-20 12:42:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 75d477cc-d5cb-4aa1-8276-b0ba08cffad6 0xc00514bcd7 0xc00514bcd8}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75d477cc-d5cb-4aa1-8276-b0ba08cffad6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514bd88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:42:48.619: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Aug 20 12:42:48.619: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-9549  383c2532-8bf1-474b-a07f-5c436aa30d48 23552 3 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 75d477cc-d5cb-4aa1-8276-b0ba08cffad6 0xc00514bbe7 0xc00514bbe8}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75d477cc-d5cb-4aa1-8276-b0ba08cffad6\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00514bc78 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:42:48.624: INFO: Pod "webserver-deployment-55df494869-6phfv" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6phfv webserver-deployment-55df494869- deployment-9549  98a3552f-3034-4b25-857b-d1b4df36fbfb 23401 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469e277 0xc00469e278}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.18.47\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ffft5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ffft5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-90-25,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.90.25,PodIP:192.168.18.47,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://b5ed2c3c3fe87a49fd0135b7e10824f81d2c71559b1a777a4dcf89114149d289,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.18.47,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.624: INFO: Pod "webserver-deployment-55df494869-6xsxj" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6xsxj webserver-deployment-55df494869- deployment-9549  9992033d-264c-469e-8be9-18784c801eea 23559 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469e467 0xc00469e468}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qnsd4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qnsd4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.625: INFO: Pod "webserver-deployment-55df494869-72k6c" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-72k6c webserver-deployment-55df494869- deployment-9549  8b192d6c-cf90-4902-a29e-a0d3e0dad668 23422 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469e5a7 0xc00469e5a8}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z8d5v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z8d5v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.71.246,PodIP:192.168.124.127,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://5418c80ac0f1e8ae3350f9fd829299f3c9fc9408de2ebb45fd2d9a8f9a483a76,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.124.127,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.625: INFO: Pod "webserver-deployment-55df494869-8k7s7" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8k7s7 webserver-deployment-55df494869- deployment-9549  8da3213f-f5c9-4448-95ee-85a8892fbc16 23404 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469e7a7 0xc00469e7a8}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.38\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-58nl8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-58nl8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.38,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://78368d19f45b8eda9395b0ca8f5e2f46989536eeb1536d65ed9dd262865615a2,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.38,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.625: INFO: Pod "webserver-deployment-55df494869-jjz8j" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jjz8j webserver-deployment-55df494869- deployment-9549  ad0e716a-47be-44da-8399-c57169276c03 23425 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469e997 0xc00469e998}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.108\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7jtlw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7jtlw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.71.246,PodIP:192.168.124.108,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9a1b75ea1534041562bc04fab8ff00200c4cf3a1eff105f7d4dd335a857593d3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.124.108,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.625: INFO: Pod "webserver-deployment-55df494869-n66ff" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-n66ff webserver-deployment-55df494869- deployment-9549  cd6d6564-fc7c-408c-8545-aa9125f5140c 23393 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469eb87 0xc00469eb88}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.18.46\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m9dn8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m9dn8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-90-25,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.90.25,PodIP:192.168.18.46,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://12baa5cc47a8272deeb0bbfb23904bc4606a77cf7df011e5aaa8f426bf67a2d4,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.18.46,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.625: INFO: Pod "webserver-deployment-55df494869-nkdtn" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nkdtn webserver-deployment-55df494869- deployment-9549  e314c273-ee50-4e92-bc1e-ab4a6b5bbf30 23400 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469ed77 0xc00469ed78}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sjk5b,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sjk5b,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.16,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://d07a26887223b564ea140355f2c5c69b5bf946b043af4f84c21ccca50e7d32ca,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.16,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.625: INFO: Pod "webserver-deployment-55df494869-nwhdt" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nwhdt webserver-deployment-55df494869- deployment-9549  51ce6db3-fbbc-41a2-9e34-570e27ff7ab5 23390 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469ef67 0xc00469ef68}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.18.27\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4thld,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4thld,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-90-25,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.90.25,PodIP:192.168.18.27,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://44a138dbb914a2803a5bf47620e7736df6eadf8aa3588d6cea51f3f7cbfb493d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.18.27,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-55df494869-s6shr" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-s6shr webserver-deployment-55df494869- deployment-9549  9da45d3e-a14f-4a8d-b70f-a3b311aa7a54 23556 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469f157 0xc00469f158}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w96s8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w96s8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-55df494869-vcbdz" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vcbdz webserver-deployment-55df494869- deployment-9549  e4afce4c-11d2-4b23-84ac-85690e9abce4 23412 0 2022-08-20 12:42:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 383c2532-8bf1-474b-a07f-5c436aa30d48 0xc00469f2c0 0xc00469f2c1}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"383c2532-8bf1-474b-a07f-5c436aa30d48\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.95\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-sf5fb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-sf5fb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.71.246,PodIP:192.168.124.95,StartTime:2022-08-20 12:42:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 12:42:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://da25ff95d56c83e6d3739f904eaf8d5219ea5ede721746ee4a40313b9fd83845,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.124.95,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-57ccb67bb8-842f6" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-842f6 webserver-deployment-57ccb67bb8- deployment-9549  f8a6b132-81de-42b8-a31e-0438d0ecae07 23557 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 c2ebfa6d-8df9-4479-8fca-800f50a17e30 0xc00469f4b7 0xc00469f4b8}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2ebfa6d-8df9-4479-8fca-800f50a17e30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mqt6f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mqt6f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-57ccb67bb8-cbsjl" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-cbsjl webserver-deployment-57ccb67bb8- deployment-9549  76424b1a-ec34-4f68-b97f-aaa1b505f28b 23545 0 2022-08-20 12:42:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 c2ebfa6d-8df9-4479-8fca-800f50a17e30 0xc00469f607 0xc00469f608}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2ebfa6d-8df9-4479-8fca-800f50a17e30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h6pvf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h6pvf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.71.246,PodIP:192.168.124.67,StartTime:2022-08-20 12:42:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.124.67,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-57ccb67bb8-dpflw" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-dpflw webserver-deployment-57ccb67bb8- deployment-9549  e6072cc8-d03d-4d3f-9ba0-84b4b9ccacbe 23529 0 2022-08-20 12:42:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 c2ebfa6d-8df9-4479-8fca-800f50a17e30 0xc00469f827 0xc00469f828}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2ebfa6d-8df9-4479-8fca-800f50a17e30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.18.31\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7x885,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7x885,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-90-25,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.90.25,PodIP:192.168.18.31,StartTime:2022-08-20 12:42:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.18.31,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-57ccb67bb8-fjxmp" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-fjxmp webserver-deployment-57ccb67bb8- deployment-9549  963031bb-2a59-46e2-8ce1-aafe9475120e 23539 0 2022-08-20 12:42:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 c2ebfa6d-8df9-4479-8fca-800f50a17e30 0xc00469fa47 0xc00469fa48}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2ebfa6d-8df9-4479-8fca-800f50a17e30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.14\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dcgd6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dcgd6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.14,StartTime:2022-08-20 12:42:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.14,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.626: INFO: Pod "webserver-deployment-57ccb67bb8-p2hn5" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-p2hn5 webserver-deployment-57ccb67bb8- deployment-9549  64a4ce72-f4e5-4329-8319-32a48465b4ee 23541 0 2022-08-20 12:42:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 c2ebfa6d-8df9-4479-8fca-800f50a17e30 0xc00469fc67 0xc00469fc68}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2ebfa6d-8df9-4479-8fca-800f50a17e30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.66\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bf9cp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bf9cp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-71-246,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.71.246,PodIP:192.168.124.66,StartTime:2022-08-20 12:42:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.124.66,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:42:48.627: INFO: Pod "webserver-deployment-57ccb67bb8-x6vgx" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-x6vgx webserver-deployment-57ccb67bb8- deployment-9549  556599e2-40d7-4d3b-941b-adb4d011bd81 23537 0 2022-08-20 12:42:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 c2ebfa6d-8df9-4479-8fca-800f50a17e30 0xc00469fe87 0xc00469fe88}] []  [{kube-controller-manager Update v1 2022-08-20 12:42:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2ebfa6d-8df9-4479-8fca-800f50a17e30\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:42:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.19\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qjlkd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qjlkd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:42:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.19,StartTime:2022-08-20 12:42:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.19,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 12:42:48.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9549" for this suite.

• [SLOW TEST:6.260 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":184,"skipped":3802,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:42:48.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6397
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Aug 20 12:42:48.850: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6397  64c8dc5e-0bb4-4117-a1c6-4ed474db60b7 23629 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 12:42:48.850: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6397  64c8dc5e-0bb4-4117-a1c6-4ed474db60b7 23630 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Aug 20 12:42:48.864: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6397  64c8dc5e-0bb4-4117-a1c6-4ed474db60b7 23631 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 12:42:48.865: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6397  64c8dc5e-0bb4-4117-a1c6-4ed474db60b7 23632 0 2022-08-20 12:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-20 12:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 20 12:42:48.865: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6397" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":185,"skipped":3859,"failed":0}
SSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:42:48.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4491.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4491.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4491.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4491.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:42:57.037: INFO: DNS probes using dns-4491/dns-test-f5a11a9f-9b83-436c-95af-ec0ae459f954 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 12:42:57.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4491" for this suite.

• [SLOW TEST:8.182 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":186,"skipped":3862,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:42:57.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6981
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 20 12:42:57.189: INFO: Waiting up to 5m0s for pod "pod-59db30f2-286b-414b-8ab2-c1f975943cac" in namespace "emptydir-6981" to be "Succeeded or Failed"
Aug 20 12:42:57.192: INFO: Pod "pod-59db30f2-286b-414b-8ab2-c1f975943cac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.601106ms
Aug 20 12:42:59.198: INFO: Pod "pod-59db30f2-286b-414b-8ab2-c1f975943cac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008896277s
Aug 20 12:43:01.205: INFO: Pod "pod-59db30f2-286b-414b-8ab2-c1f975943cac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015422094s
STEP: Saw pod success
Aug 20 12:43:01.205: INFO: Pod "pod-59db30f2-286b-414b-8ab2-c1f975943cac" satisfied condition "Succeeded or Failed"
Aug 20 12:43:01.208: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-59db30f2-286b-414b-8ab2-c1f975943cac container test-container: <nil>
STEP: delete the pod
Aug 20 12:43:01.239: INFO: Waiting for pod pod-59db30f2-286b-414b-8ab2-c1f975943cac to disappear
Aug 20 12:43:01.241: INFO: Pod pod-59db30f2-286b-414b-8ab2-c1f975943cac no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:43:01.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6981" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":187,"skipped":3870,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:01.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6994
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:43:01.852: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:43:04.872: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:43:04.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6994" for this suite.
STEP: Destroying namespace "webhook-6994-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":188,"skipped":3883,"failed":0}
SSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:04.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3699
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Aug 20 12:43:07.123: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3699 pod-service-account-2f5cdde5-20ea-4864-a636-114911c3a1a6 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Aug 20 12:43:07.249: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3699 pod-service-account-2f5cdde5-20ea-4864-a636-114911c3a1a6 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Aug 20 12:43:07.369: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3699 pod-service-account-2f5cdde5-20ea-4864-a636-114911c3a1a6 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Aug 20 12:43:07.471: INFO: Got root ca configmap in namespace "svcaccounts-3699"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 20 12:43:07.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3699" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":189,"skipped":3889,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:07.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Aug 20 12:43:07.614: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:43:12.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7804" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":190,"skipped":3902,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:12.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:43:12.663: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:43:15.684: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:43:25.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6559" for this suite.
STEP: Destroying namespace "webhook-6559-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.705 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":191,"skipped":3925,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:25.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3614
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:43:25.960: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f4440931-2159-4720-8433-deadd7627481" in namespace "downward-api-3614" to be "Succeeded or Failed"
Aug 20 12:43:25.962: INFO: Pod "downwardapi-volume-f4440931-2159-4720-8433-deadd7627481": Phase="Pending", Reason="", readiness=false. Elapsed: 2.637705ms
Aug 20 12:43:27.972: INFO: Pod "downwardapi-volume-f4440931-2159-4720-8433-deadd7627481": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012007817s
Aug 20 12:43:29.977: INFO: Pod "downwardapi-volume-f4440931-2159-4720-8433-deadd7627481": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016818395s
STEP: Saw pod success
Aug 20 12:43:29.977: INFO: Pod "downwardapi-volume-f4440931-2159-4720-8433-deadd7627481" satisfied condition "Succeeded or Failed"
Aug 20 12:43:29.980: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-f4440931-2159-4720-8433-deadd7627481 container client-container: <nil>
STEP: delete the pod
Aug 20 12:43:29.995: INFO: Waiting for pod downwardapi-volume-f4440931-2159-4720-8433-deadd7627481 to disappear
Aug 20 12:43:29.998: INFO: Pod downwardapi-volume-f4440931-2159-4720-8433-deadd7627481 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:43:29.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3614" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3932,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:30.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2256
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Aug 20 12:43:30.141: INFO: Waiting up to 5m0s for pod "var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4" in namespace "var-expansion-2256" to be "Succeeded or Failed"
Aug 20 12:43:30.143: INFO: Pod "var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.463319ms
Aug 20 12:43:32.151: INFO: Pod "var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010014862s
Aug 20 12:43:34.157: INFO: Pod "var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016019161s
STEP: Saw pod success
Aug 20 12:43:34.157: INFO: Pod "var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4" satisfied condition "Succeeded or Failed"
Aug 20 12:43:34.160: INFO: Trying to get logs from node ip-172-31-39-75 pod var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4 container dapi-container: <nil>
STEP: delete the pod
Aug 20 12:43:34.177: INFO: Waiting for pod var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4 to disappear
Aug 20 12:43:34.179: INFO: Pod var-expansion-bfccc0e6-bdb0-4d19-a7d0-b4095ed900a4 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 12:43:34.179: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2256" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":193,"skipped":3958,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:34.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 20 12:43:34.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3392 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 20 12:43:34.365: INFO: stderr: ""
Aug 20 12:43:34.365: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Aug 20 12:43:39.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3392 get pod e2e-test-httpd-pod -o json'
Aug 20 12:43:39.461: INFO: stderr: ""
Aug 20 12:43:39.461: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-08-20T12:43:34Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3392\",\n        \"resourceVersion\": \"24369\",\n        \"uid\": \"9e656da5-7dc5-417e-89a7-a75a3935b497\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-hbqm4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-39-75\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-hbqm4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-20T12:43:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-20T12:43:35Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-20T12:43:35Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-20T12:43:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://fc7b6dc1f63fa57e7be06f74d03a8eb8e39f42e1f7abaf1383c4af99db3d4687\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-08-20T12:43:35Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.39.75\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.45.23\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.45.23\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-08-20T12:43:34Z\"\n    }\n}\n"
STEP: replace the image in the pod
Aug 20 12:43:39.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3392 replace -f -'
Aug 20 12:43:39.599: INFO: stderr: ""
Aug 20 12:43:39.599: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Aug 20 12:43:39.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3392 delete pods e2e-test-httpd-pod'
Aug 20 12:43:40.921: INFO: stderr: ""
Aug 20 12:43:40.921: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:43:40.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3392" for this suite.

• [SLOW TEST:6.744 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":194,"skipped":3964,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:40.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4004
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Aug 20 12:43:43.081: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 20 12:43:49.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4004" for this suite.

• [SLOW TEST:8.274 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":195,"skipped":3973,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:49.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 20 12:43:49.394: INFO: The status of Pod pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:43:51.400: INFO: The status of Pod pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 20 12:43:51.918: INFO: Successfully updated pod "pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d"
Aug 20 12:43:51.918: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d" in namespace "pods-7146" to be "terminated due to deadline exceeded"
Aug 20 12:43:51.921: INFO: Pod "pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d": Phase="Running", Reason="", readiness=true. Elapsed: 2.726081ms
Aug 20 12:43:53.928: INFO: Pod "pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d": Phase="Running", Reason="", readiness=true. Elapsed: 2.009833382s
Aug 20 12:43:55.933: INFO: Pod "pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.014736897s
Aug 20 12:43:55.933: INFO: Pod "pod-update-activedeadlineseconds-31274781-2c6d-4163-a36b-281e2eb66d2d" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 12:43:55.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7146" for this suite.

• [SLOW TEST:6.737 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":196,"skipped":3979,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:55.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6986
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Aug 20 12:43:56.768: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 12:43:56.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
W0820 12:43:56.768111      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
STEP: Destroying namespace "gc-6986" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":197,"skipped":4013,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:43:56.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5267
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 20 12:43:56.913: INFO: Waiting up to 5m0s for pod "pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead" in namespace "emptydir-5267" to be "Succeeded or Failed"
Aug 20 12:43:56.916: INFO: Pod "pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead": Phase="Pending", Reason="", readiness=false. Elapsed: 2.783008ms
Aug 20 12:43:58.923: INFO: Pod "pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010464112s
Aug 20 12:44:00.929: INFO: Pod "pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01589332s
STEP: Saw pod success
Aug 20 12:44:00.929: INFO: Pod "pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead" satisfied condition "Succeeded or Failed"
Aug 20 12:44:00.932: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead container test-container: <nil>
STEP: delete the pod
Aug 20 12:44:00.947: INFO: Waiting for pod pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead to disappear
Aug 20 12:44:00.949: INFO: Pod pod-0b04359a-7d6e-4c05-af5b-cf72822d8ead no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:44:00.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5267" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":198,"skipped":4024,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:44:00.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6649
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-b0e3b321-a70d-4676-b165-19b569dad04b
STEP: Creating a pod to test consume secrets
Aug 20 12:44:01.097: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c" in namespace "projected-6649" to be "Succeeded or Failed"
Aug 20 12:44:01.100: INFO: Pod "pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.438332ms
Aug 20 12:44:03.106: INFO: Pod "pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c": Phase="Running", Reason="", readiness=false. Elapsed: 2.00928571s
Aug 20 12:44:05.113: INFO: Pod "pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015579132s
STEP: Saw pod success
Aug 20 12:44:05.113: INFO: Pod "pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c" satisfied condition "Succeeded or Failed"
Aug 20 12:44:05.115: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:44:05.133: INFO: Waiting for pod pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c to disappear
Aug 20 12:44:05.135: INFO: Pod pod-projected-secrets-619f0e12-adc3-48d1-8ac1-476d8994bd6c no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:44:05.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6649" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":199,"skipped":4041,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:44:05.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2922
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-2922
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-2922
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2922
Aug 20 12:44:05.289: INFO: Found 0 stateful pods, waiting for 1
Aug 20 12:44:15.296: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Aug 20 12:44:15.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 12:44:15.425: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 12:44:15.425: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 12:44:15.425: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 12:44:15.428: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 20 12:44:25.437: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 12:44:25.437: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:44:25.451: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
Aug 20 12:44:25.451: INFO: ss-0  ip-172-31-39-75  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:05 +0000 UTC  }]
Aug 20 12:44:25.451: INFO: 
Aug 20 12:44:25.451: INFO: StatefulSet ss has not reached scale 3, at 1
Aug 20 12:44:26.456: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996811365s
Aug 20 12:44:27.462: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991554072s
Aug 20 12:44:28.467: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.985946455s
Aug 20 12:44:29.473: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979774319s
Aug 20 12:44:30.478: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974860101s
Aug 20 12:44:31.485: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.968344134s
Aug 20 12:44:32.492: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.961627098s
Aug 20 12:44:33.497: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.955744245s
Aug 20 12:44:34.502: INFO: Verifying statefulset ss doesn't scale past 3 for another 950.246065ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2922
Aug 20 12:44:35.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 12:44:35.653: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 20 12:44:35.653: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 12:44:35.653: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 12:44:35.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 12:44:35.789: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 20 12:44:35.789: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 12:44:35.789: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 12:44:35.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 20 12:44:35.914: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 20 12:44:35.914: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 20 12:44:35.914: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 20 12:44:35.918: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Aug 20 12:44:45.929: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 12:44:45.929: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 12:44:45.929: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Aug 20 12:44:45.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 12:44:46.057: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 12:44:46.057: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 12:44:46.057: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 12:44:46.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 12:44:46.174: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 12:44:46.174: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 12:44:46.174: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 12:44:46.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=statefulset-2922 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 20 12:44:46.302: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 20 12:44:46.302: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 20 12:44:46.302: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 20 12:44:46.302: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:44:46.305: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug 20 12:44:56.317: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 12:44:56.317: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 12:44:56.317: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 20 12:44:56.328: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Aug 20 12:44:56.328: INFO: ss-0  ip-172-31-39-75   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:05 +0000 UTC  }]
Aug 20 12:44:56.328: INFO: ss-1  ip-172-31-71-246  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:25 +0000 UTC  }]
Aug 20 12:44:56.328: INFO: ss-2  ip-172-31-90-25   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-20 12:44:25 +0000 UTC  }]
Aug 20 12:44:56.328: INFO: 
Aug 20 12:44:56.328: INFO: StatefulSet ss has not reached scale 0, at 3
Aug 20 12:44:57.333: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.997067486s
Aug 20 12:44:58.339: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991435921s
Aug 20 12:44:59.343: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.984908212s
Aug 20 12:45:00.350: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.980904123s
Aug 20 12:45:01.355: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.974964441s
Aug 20 12:45:02.360: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.970235499s
Aug 20 12:45:03.366: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.964772363s
Aug 20 12:45:04.369: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.959277856s
Aug 20 12:45:05.375: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.563444ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2922
Aug 20 12:45:06.379: INFO: Scaling statefulset ss to 0
Aug 20 12:45:06.391: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 12:45:06.394: INFO: Deleting all statefulset in ns statefulset-2922
Aug 20 12:45:06.397: INFO: Scaling statefulset ss to 0
Aug 20 12:45:06.406: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:45:06.408: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 12:45:06.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2922" for this suite.

• [SLOW TEST:61.288 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":200,"skipped":4062,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:45:06.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6193
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
W0820 12:45:46.689660      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 20 12:45:46.689: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Aug 20 12:45:46.689: INFO: Deleting pod "simpletest.rc-2kxfc" in namespace "gc-6193"
Aug 20 12:45:46.701: INFO: Deleting pod "simpletest.rc-2sjlg" in namespace "gc-6193"
Aug 20 12:45:46.711: INFO: Deleting pod "simpletest.rc-4msmp" in namespace "gc-6193"
Aug 20 12:45:46.722: INFO: Deleting pod "simpletest.rc-4wxpj" in namespace "gc-6193"
Aug 20 12:45:46.734: INFO: Deleting pod "simpletest.rc-57hfw" in namespace "gc-6193"
Aug 20 12:45:46.744: INFO: Deleting pod "simpletest.rc-5dq7f" in namespace "gc-6193"
Aug 20 12:45:46.753: INFO: Deleting pod "simpletest.rc-5h7zx" in namespace "gc-6193"
Aug 20 12:45:46.763: INFO: Deleting pod "simpletest.rc-5vlkc" in namespace "gc-6193"
Aug 20 12:45:46.771: INFO: Deleting pod "simpletest.rc-6j5cg" in namespace "gc-6193"
Aug 20 12:45:46.781: INFO: Deleting pod "simpletest.rc-7287w" in namespace "gc-6193"
Aug 20 12:45:46.791: INFO: Deleting pod "simpletest.rc-76h4x" in namespace "gc-6193"
Aug 20 12:45:46.856: INFO: Deleting pod "simpletest.rc-7nksv" in namespace "gc-6193"
Aug 20 12:45:46.868: INFO: Deleting pod "simpletest.rc-7srld" in namespace "gc-6193"
Aug 20 12:45:46.878: INFO: Deleting pod "simpletest.rc-7vd7k" in namespace "gc-6193"
Aug 20 12:45:46.887: INFO: Deleting pod "simpletest.rc-89ppp" in namespace "gc-6193"
Aug 20 12:45:46.897: INFO: Deleting pod "simpletest.rc-8m7c7" in namespace "gc-6193"
Aug 20 12:45:46.906: INFO: Deleting pod "simpletest.rc-8sz5r" in namespace "gc-6193"
Aug 20 12:45:46.915: INFO: Deleting pod "simpletest.rc-98z4w" in namespace "gc-6193"
Aug 20 12:45:46.923: INFO: Deleting pod "simpletest.rc-9cc8t" in namespace "gc-6193"
Aug 20 12:45:46.933: INFO: Deleting pod "simpletest.rc-9czpf" in namespace "gc-6193"
Aug 20 12:45:46.941: INFO: Deleting pod "simpletest.rc-9ffm5" in namespace "gc-6193"
Aug 20 12:45:46.951: INFO: Deleting pod "simpletest.rc-9fh9b" in namespace "gc-6193"
Aug 20 12:45:46.959: INFO: Deleting pod "simpletest.rc-9j9xq" in namespace "gc-6193"
Aug 20 12:45:46.966: INFO: Deleting pod "simpletest.rc-9zx4l" in namespace "gc-6193"
Aug 20 12:45:46.976: INFO: Deleting pod "simpletest.rc-b4svg" in namespace "gc-6193"
Aug 20 12:45:46.990: INFO: Deleting pod "simpletest.rc-c95r7" in namespace "gc-6193"
Aug 20 12:45:46.999: INFO: Deleting pod "simpletest.rc-csbqf" in namespace "gc-6193"
Aug 20 12:45:47.008: INFO: Deleting pod "simpletest.rc-d8nl9" in namespace "gc-6193"
Aug 20 12:45:47.019: INFO: Deleting pod "simpletest.rc-dj8ks" in namespace "gc-6193"
Aug 20 12:45:47.028: INFO: Deleting pod "simpletest.rc-dn5xm" in namespace "gc-6193"
Aug 20 12:45:47.040: INFO: Deleting pod "simpletest.rc-dt9zv" in namespace "gc-6193"
Aug 20 12:45:47.049: INFO: Deleting pod "simpletest.rc-dzskb" in namespace "gc-6193"
Aug 20 12:45:47.056: INFO: Deleting pod "simpletest.rc-f2v5w" in namespace "gc-6193"
Aug 20 12:45:47.065: INFO: Deleting pod "simpletest.rc-f4mnh" in namespace "gc-6193"
Aug 20 12:45:47.076: INFO: Deleting pod "simpletest.rc-fk7pd" in namespace "gc-6193"
Aug 20 12:45:47.088: INFO: Deleting pod "simpletest.rc-fnpbs" in namespace "gc-6193"
Aug 20 12:45:47.097: INFO: Deleting pod "simpletest.rc-ftjzz" in namespace "gc-6193"
Aug 20 12:45:47.107: INFO: Deleting pod "simpletest.rc-fzrbg" in namespace "gc-6193"
Aug 20 12:45:47.115: INFO: Deleting pod "simpletest.rc-g2prw" in namespace "gc-6193"
Aug 20 12:45:47.124: INFO: Deleting pod "simpletest.rc-gbld4" in namespace "gc-6193"
Aug 20 12:45:47.133: INFO: Deleting pod "simpletest.rc-gcrrk" in namespace "gc-6193"
Aug 20 12:45:47.142: INFO: Deleting pod "simpletest.rc-gkqr2" in namespace "gc-6193"
Aug 20 12:45:47.151: INFO: Deleting pod "simpletest.rc-gz94g" in namespace "gc-6193"
Aug 20 12:45:47.159: INFO: Deleting pod "simpletest.rc-hvfct" in namespace "gc-6193"
Aug 20 12:45:47.169: INFO: Deleting pod "simpletest.rc-hwcnz" in namespace "gc-6193"
Aug 20 12:45:47.179: INFO: Deleting pod "simpletest.rc-j7hzd" in namespace "gc-6193"
Aug 20 12:45:47.188: INFO: Deleting pod "simpletest.rc-j8vrt" in namespace "gc-6193"
Aug 20 12:45:47.197: INFO: Deleting pod "simpletest.rc-jcjnq" in namespace "gc-6193"
Aug 20 12:45:47.207: INFO: Deleting pod "simpletest.rc-jsv9s" in namespace "gc-6193"
Aug 20 12:45:47.215: INFO: Deleting pod "simpletest.rc-jzgfp" in namespace "gc-6193"
Aug 20 12:45:47.224: INFO: Deleting pod "simpletest.rc-k4f4m" in namespace "gc-6193"
Aug 20 12:45:47.233: INFO: Deleting pod "simpletest.rc-k69x6" in namespace "gc-6193"
Aug 20 12:45:47.240: INFO: Deleting pod "simpletest.rc-ks2jb" in namespace "gc-6193"
Aug 20 12:45:47.251: INFO: Deleting pod "simpletest.rc-l7xcz" in namespace "gc-6193"
Aug 20 12:45:47.259: INFO: Deleting pod "simpletest.rc-lb49m" in namespace "gc-6193"
Aug 20 12:45:47.276: INFO: Deleting pod "simpletest.rc-lbtm4" in namespace "gc-6193"
Aug 20 12:45:47.286: INFO: Deleting pod "simpletest.rc-lwdqj" in namespace "gc-6193"
Aug 20 12:45:47.294: INFO: Deleting pod "simpletest.rc-m592m" in namespace "gc-6193"
Aug 20 12:45:47.305: INFO: Deleting pod "simpletest.rc-mdsg7" in namespace "gc-6193"
Aug 20 12:45:47.314: INFO: Deleting pod "simpletest.rc-mvqzd" in namespace "gc-6193"
Aug 20 12:45:47.326: INFO: Deleting pod "simpletest.rc-mw6t7" in namespace "gc-6193"
Aug 20 12:45:47.335: INFO: Deleting pod "simpletest.rc-mwlch" in namespace "gc-6193"
Aug 20 12:45:47.385: INFO: Deleting pod "simpletest.rc-mxh87" in namespace "gc-6193"
Aug 20 12:45:47.439: INFO: Deleting pod "simpletest.rc-ngm92" in namespace "gc-6193"
Aug 20 12:45:47.487: INFO: Deleting pod "simpletest.rc-nqftn" in namespace "gc-6193"
Aug 20 12:45:47.533: INFO: Deleting pod "simpletest.rc-nxdnr" in namespace "gc-6193"
Aug 20 12:45:47.585: INFO: Deleting pod "simpletest.rc-p6khr" in namespace "gc-6193"
Aug 20 12:45:47.636: INFO: Deleting pod "simpletest.rc-pq7gh" in namespace "gc-6193"
Aug 20 12:45:47.686: INFO: Deleting pod "simpletest.rc-ptfxv" in namespace "gc-6193"
Aug 20 12:45:47.739: INFO: Deleting pod "simpletest.rc-q5wvx" in namespace "gc-6193"
Aug 20 12:45:47.786: INFO: Deleting pod "simpletest.rc-qlbd9" in namespace "gc-6193"
Aug 20 12:45:47.834: INFO: Deleting pod "simpletest.rc-qpllq" in namespace "gc-6193"
Aug 20 12:45:47.891: INFO: Deleting pod "simpletest.rc-r2x4g" in namespace "gc-6193"
Aug 20 12:45:47.939: INFO: Deleting pod "simpletest.rc-rchr9" in namespace "gc-6193"
Aug 20 12:45:48.000: INFO: Deleting pod "simpletest.rc-sbd4w" in namespace "gc-6193"
Aug 20 12:45:48.047: INFO: Deleting pod "simpletest.rc-scdcc" in namespace "gc-6193"
Aug 20 12:45:48.105: INFO: Deleting pod "simpletest.rc-skp77" in namespace "gc-6193"
Aug 20 12:45:48.151: INFO: Deleting pod "simpletest.rc-szhln" in namespace "gc-6193"
Aug 20 12:45:48.184: INFO: Deleting pod "simpletest.rc-t52gs" in namespace "gc-6193"
Aug 20 12:45:48.242: INFO: Deleting pod "simpletest.rc-tjckg" in namespace "gc-6193"
Aug 20 12:45:48.291: INFO: Deleting pod "simpletest.rc-tnmgr" in namespace "gc-6193"
Aug 20 12:45:48.350: INFO: Deleting pod "simpletest.rc-v9zg2" in namespace "gc-6193"
Aug 20 12:45:48.385: INFO: Deleting pod "simpletest.rc-vf266" in namespace "gc-6193"
Aug 20 12:45:48.435: INFO: Deleting pod "simpletest.rc-vfgqc" in namespace "gc-6193"
Aug 20 12:45:48.485: INFO: Deleting pod "simpletest.rc-vp948" in namespace "gc-6193"
Aug 20 12:45:48.534: INFO: Deleting pod "simpletest.rc-vr4gp" in namespace "gc-6193"
Aug 20 12:45:48.595: INFO: Deleting pod "simpletest.rc-vw94w" in namespace "gc-6193"
Aug 20 12:45:48.637: INFO: Deleting pod "simpletest.rc-w6c7x" in namespace "gc-6193"
Aug 20 12:45:48.804: INFO: Deleting pod "simpletest.rc-wcd4l" in namespace "gc-6193"
Aug 20 12:45:48.861: INFO: Deleting pod "simpletest.rc-wknj9" in namespace "gc-6193"
Aug 20 12:45:48.944: INFO: Deleting pod "simpletest.rc-wz555" in namespace "gc-6193"
Aug 20 12:45:49.002: INFO: Deleting pod "simpletest.rc-x96gs" in namespace "gc-6193"
Aug 20 12:45:49.483: INFO: Deleting pod "simpletest.rc-x9phd" in namespace "gc-6193"
Aug 20 12:45:49.605: INFO: Deleting pod "simpletest.rc-xfdgt" in namespace "gc-6193"
Aug 20 12:45:49.729: INFO: Deleting pod "simpletest.rc-xx6m6" in namespace "gc-6193"
Aug 20 12:45:49.738: INFO: Deleting pod "simpletest.rc-z8trn" in namespace "gc-6193"
Aug 20 12:45:49.749: INFO: Deleting pod "simpletest.rc-z9k2g" in namespace "gc-6193"
Aug 20 12:45:49.763: INFO: Deleting pod "simpletest.rc-zgljp" in namespace "gc-6193"
Aug 20 12:45:49.783: INFO: Deleting pod "simpletest.rc-zkb9g" in namespace "gc-6193"
Aug 20 12:45:49.793: INFO: Deleting pod "simpletest.rc-zlldj" in namespace "gc-6193"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 12:45:49.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6193" for this suite.

• [SLOW TEST:43.380 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":201,"skipped":4071,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:45:49.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-5987
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Aug 20 12:45:49.951: INFO: Major version: 1
STEP: Confirm minor version
Aug 20 12:45:49.951: INFO: cleanMinorVersion: 24
Aug 20 12:45:49.951: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Aug 20 12:45:49.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-5987" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":202,"skipped":4138,"failed":0}
SSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:45:49.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-8054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 20 12:47:02.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-8054" for this suite.

• [SLOW TEST:72.155 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":203,"skipped":4141,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:47:02.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5358
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Aug 20 12:47:02.263: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5358  2da9d400-3109-4c53-a3b3-a0ea8e3b37ac 27679 0 2022-08-20 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-20 12:47:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 12:47:02.263: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5358  2da9d400-3109-4c53-a3b3-a0ea8e3b37ac 27680 0 2022-08-20 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-20 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 12:47:02.263: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5358  2da9d400-3109-4c53-a3b3-a0ea8e3b37ac 27681 0 2022-08-20 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-20 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Aug 20 12:47:12.299: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5358  2da9d400-3109-4c53-a3b3-a0ea8e3b37ac 27718 0 2022-08-20 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-20 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 12:47:12.299: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5358  2da9d400-3109-4c53-a3b3-a0ea8e3b37ac 27719 0 2022-08-20 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-20 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 20 12:47:12.299: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5358  2da9d400-3109-4c53-a3b3-a0ea8e3b37ac 27720 0 2022-08-20 12:47:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-20 12:47:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 20 12:47:12.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5358" for this suite.

• [SLOW TEST:10.188 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":204,"skipped":4149,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:47:12.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8715
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0
Aug 20 12:47:12.441: INFO: Pod name my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0: Found 0 pods out of 1
Aug 20 12:47:17.448: INFO: Pod name my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0: Found 1 pods out of 1
Aug 20 12:47:17.448: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0" are running
Aug 20 12:47:17.450: INFO: Pod "my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0-8qptz" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:47:12 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:47:13 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:47:13 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:47:12 +0000 UTC Reason: Message:}])
Aug 20 12:47:17.450: INFO: Trying to dial the pod
Aug 20 12:47:22.466: INFO: Controller my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0: Got expected result from replica 1 [my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0-8qptz]: "my-hostname-basic-92ca5da5-4b34-452d-b03c-89f9b2e33ec0-8qptz", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 20 12:47:22.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8715" for this suite.

• [SLOW TEST:10.168 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":205,"skipped":4173,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:47:22.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4061
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:47:22.617: INFO: created pod
Aug 20 12:47:22.617: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4061" to be "Succeeded or Failed"
Aug 20 12:47:22.619: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.508072ms
Aug 20 12:47:24.624: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007314235s
Aug 20 12:47:26.631: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014013484s
STEP: Saw pod success
Aug 20 12:47:26.631: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Aug 20 12:47:56.631: INFO: polling logs
Aug 20 12:47:56.643: INFO: Pod logs: 
I0820 12:47:23.375256       1 log.go:195] OK: Got token
I0820 12:47:23.375279       1 log.go:195] validating with in-cluster discovery
I0820 12:47:23.375552       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0820 12:47:23.375577       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4061:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1661000242, NotBefore:1660999642, IssuedAt:1660999642, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4061", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6948967f-f640-415f-a434-68c511c76312"}}}
I0820 12:47:23.385504       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0820 12:47:23.390274       1 log.go:195] OK: Validated signature on JWT
I0820 12:47:23.390339       1 log.go:195] OK: Got valid claims from token!
I0820 12:47:23.390362       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4061:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1661000242, NotBefore:1660999642, IssuedAt:1660999642, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4061", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6948967f-f640-415f-a434-68c511c76312"}}}

Aug 20 12:47:56.643: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 20 12:47:56.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4061" for this suite.

• [SLOW TEST:34.187 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":206,"skipped":4195,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:47:56.663: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3727
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:47:56.798: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8" in namespace "projected-3727" to be "Succeeded or Failed"
Aug 20 12:47:56.801: INFO: Pod "downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.318912ms
Aug 20 12:47:58.808: INFO: Pod "downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009489938s
Aug 20 12:48:00.814: INFO: Pod "downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015941933s
STEP: Saw pod success
Aug 20 12:48:00.814: INFO: Pod "downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8" satisfied condition "Succeeded or Failed"
Aug 20 12:48:00.818: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8 container client-container: <nil>
STEP: delete the pod
Aug 20 12:48:00.835: INFO: Waiting for pod downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8 to disappear
Aug 20 12:48:00.837: INFO: Pod downwardapi-volume-ccab8e96-3ab5-440b-a055-9fc2ee6283c8 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:48:00.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3727" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":207,"skipped":4204,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:00.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-8612d5e3-ea6c-481d-8813-cd8ddfd4321c
STEP: Creating secret with name secret-projected-all-test-volume-fde38c7c-c8d3-4a5b-afb7-f2085c3437c0
STEP: Creating a pod to test Check all projections for projected volume plugin
Aug 20 12:48:00.990: INFO: Waiting up to 5m0s for pod "projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31" in namespace "projected-6965" to be "Succeeded or Failed"
Aug 20 12:48:00.993: INFO: Pod "projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31": Phase="Pending", Reason="", readiness=false. Elapsed: 2.624626ms
Aug 20 12:48:03.001: INFO: Pod "projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010457829s
Aug 20 12:48:05.007: INFO: Pod "projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016319537s
STEP: Saw pod success
Aug 20 12:48:05.007: INFO: Pod "projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31" satisfied condition "Succeeded or Failed"
Aug 20 12:48:05.010: INFO: Trying to get logs from node ip-172-31-39-75 pod projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31 container projected-all-volume-test: <nil>
STEP: delete the pod
Aug 20 12:48:05.031: INFO: Waiting for pod projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31 to disappear
Aug 20 12:48:05.034: INFO: Pod projected-volume-3c2c6890-d450-484e-ab0d-89e292c78f31 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Aug 20 12:48:05.034: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6965" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":208,"skipped":4210,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:05.044: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Aug 20 12:48:05.235: INFO: Waiting up to 5m0s for pod "pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf" in namespace "emptydir-4343" to be "Succeeded or Failed"
Aug 20 12:48:05.237: INFO: Pod "pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.329314ms
Aug 20 12:48:07.242: INFO: Pod "pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007408568s
Aug 20 12:48:09.250: INFO: Pod "pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01498646s
STEP: Saw pod success
Aug 20 12:48:09.250: INFO: Pod "pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf" satisfied condition "Succeeded or Failed"
Aug 20 12:48:09.252: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf container test-container: <nil>
STEP: delete the pod
Aug 20 12:48:09.270: INFO: Waiting for pod pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf to disappear
Aug 20 12:48:09.272: INFO: Pod pod-fd6ba20c-c478-4945-a25b-f7d1cd92c2cf no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:48:09.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4343" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":209,"skipped":4258,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:09.281: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6124
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:48:09.418: INFO: Waiting up to 5m0s for pod "downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b" in namespace "downward-api-6124" to be "Succeeded or Failed"
Aug 20 12:48:09.421: INFO: Pod "downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.250063ms
Aug 20 12:48:11.427: INFO: Pod "downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009599617s
Aug 20 12:48:13.435: INFO: Pod "downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017508651s
STEP: Saw pod success
Aug 20 12:48:13.435: INFO: Pod "downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b" satisfied condition "Succeeded or Failed"
Aug 20 12:48:13.438: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b container client-container: <nil>
STEP: delete the pod
Aug 20 12:48:13.456: INFO: Waiting for pod downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b to disappear
Aug 20 12:48:13.459: INFO: Pod downwardapi-volume-80df3480-8024-4e56-9de5-969e8a35c97b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:48:13.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6124" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":210,"skipped":4272,"failed":0}
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:13.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-3162
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 20 12:48:17.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-3162" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":211,"skipped":4278,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:17.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7079
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:48:24.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7079" for this suite.

• [SLOW TEST:7.160 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":212,"skipped":4284,"failed":0}
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:24.795: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-6869
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-6869
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 20 12:48:24.924: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 20 12:48:24.973: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:48:26.978: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:48:28.980: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:48:30.980: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:48:32.982: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:48:34.978: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:48:36.978: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 20 12:48:36.983: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 20 12:48:36.989: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 20 12:48:39.021: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 20 12:48:39.021: INFO: Going to poll 192.168.45.12 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 20 12:48:39.024: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.45.12 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6869 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:48:39.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:48:39.024: INFO: ExecWithOptions: Clientset creation
Aug 20 12:48:39.024: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6869/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.45.12+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:48:40.101: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 20 12:48:40.101: INFO: Going to poll 192.168.124.107 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 20 12:48:40.106: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.124.107 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6869 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:48:40.106: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:48:40.106: INFO: ExecWithOptions: Clientset creation
Aug 20 12:48:40.107: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6869/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.124.107+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:48:41.204: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 20 12:48:41.204: INFO: Going to poll 192.168.18.13 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 20 12:48:41.209: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.18.13 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6869 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:48:41.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:48:41.209: INFO: ExecWithOptions: Clientset creation
Aug 20 12:48:41.209: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6869/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.18.13+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:48:42.300: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 20 12:48:42.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-6869" for this suite.

• [SLOW TEST:17.517 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":213,"skipped":4291,"failed":0}
S
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:42.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-6967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 20 12:48:42.463: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 20 12:48:42.467: INFO: starting watch
STEP: patching
STEP: updating
Aug 20 12:48:42.478: INFO: waiting for watch events with expected annotations
Aug 20 12:48:42.478: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 20 12:48:42.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-6967" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":214,"skipped":4292,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:42.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4772
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Aug 20 12:48:42.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4772 api-versions'
Aug 20 12:48:42.682: INFO: stderr: ""
Aug 20 12:48:42.682: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:48:42.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4772" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":215,"skipped":4316,"failed":0}
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:42.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3987
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 20 12:48:42.843: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:48:42.843: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:48:42.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:48:42.846: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 12:48:43.852: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:48:43.852: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:48:43.856: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:48:43.856: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 12:48:44.851: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:48:44.851: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 12:48:44.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 12:48:44.854: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Aug 20 12:48:44.860: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Aug 20 12:48:44.867: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Aug 20 12:48:44.868: INFO: Observed &DaemonSet event: ADDED
Aug 20 12:48:44.868: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.868: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.868: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.868: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.868: INFO: Found daemon set daemon-set in namespace daemonsets-3987 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 20 12:48:44.868: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Aug 20 12:48:44.876: INFO: Observed &DaemonSet event: ADDED
Aug 20 12:48:44.876: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.876: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.877: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.877: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.877: INFO: Observed daemon set daemon-set in namespace daemonsets-3987 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 20 12:48:44.877: INFO: Observed &DaemonSet event: MODIFIED
Aug 20 12:48:44.877: INFO: Found daemon set daemon-set in namespace daemonsets-3987 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Aug 20 12:48:44.877: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3987, will wait for the garbage collector to delete the pods
Aug 20 12:48:44.939: INFO: Deleting DaemonSet.extensions daemon-set took: 6.076873ms
Aug 20 12:48:45.039: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.119151ms
Aug 20 12:48:47.744: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 12:48:47.744: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 20 12:48:47.747: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28401"},"items":null}

Aug 20 12:48:47.749: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28401"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:48:47.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3987" for this suite.

• [SLOW TEST:5.080 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":216,"skipped":4322,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:47.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-3377
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:48:48.774: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:48:51.794: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:48:51.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:48:54.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-3377" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:7.163 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":217,"skipped":4378,"failed":0}
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:48:54.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-1292
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-tcgr
STEP: Creating a pod to test atomic-volume-subpath
Aug 20 12:48:55.082: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-tcgr" in namespace "subpath-1292" to be "Succeeded or Failed"
Aug 20 12:48:55.085: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Pending", Reason="", readiness=false. Elapsed: 2.513865ms
Aug 20 12:48:57.090: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 2.00773612s
Aug 20 12:48:59.100: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 4.018221696s
Aug 20 12:49:01.107: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 6.024931315s
Aug 20 12:49:03.115: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 8.032381703s
Aug 20 12:49:05.121: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 10.039025871s
Aug 20 12:49:07.126: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 12.043421284s
Aug 20 12:49:09.134: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 14.051847358s
Aug 20 12:49:11.142: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 16.059667378s
Aug 20 12:49:13.148: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 18.065932697s
Aug 20 12:49:15.154: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=true. Elapsed: 20.072132721s
Aug 20 12:49:17.159: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Running", Reason="", readiness=false. Elapsed: 22.076880225s
Aug 20 12:49:19.167: INFO: Pod "pod-subpath-test-configmap-tcgr": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.084560983s
STEP: Saw pod success
Aug 20 12:49:19.167: INFO: Pod "pod-subpath-test-configmap-tcgr" satisfied condition "Succeeded or Failed"
Aug 20 12:49:19.170: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-subpath-test-configmap-tcgr container test-container-subpath-configmap-tcgr: <nil>
STEP: delete the pod
Aug 20 12:49:19.186: INFO: Waiting for pod pod-subpath-test-configmap-tcgr to disappear
Aug 20 12:49:19.188: INFO: Pod pod-subpath-test-configmap-tcgr no longer exists
STEP: Deleting pod pod-subpath-test-configmap-tcgr
Aug 20 12:49:19.188: INFO: Deleting pod "pod-subpath-test-configmap-tcgr" in namespace "subpath-1292"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 20 12:49:19.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-1292" for this suite.

• [SLOW TEST:24.265 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":218,"skipped":4382,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:19.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9955
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Aug 20 12:49:19.336: INFO: Pod name sample-pod: Found 0 pods out of 3
Aug 20 12:49:24.340: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Aug 20 12:49:24.342: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 20 12:49:24.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9955" for this suite.

• [SLOW TEST:5.167 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":219,"skipped":4385,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:24.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5218
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:49:24.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-5218 version'
Aug 20 12:49:24.546: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Aug 20 12:49:24.546: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.4\", GitCommit:\"95ee5ab382d64cfe6c28967f36b53970b8374491\", GitTreeState:\"clean\", BuildDate:\"2022-08-17T18:54:23Z\", GoVersion:\"go1.18.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.4\", GitCommit:\"95ee5ab382d64cfe6c28967f36b53970b8374491\", GitTreeState:\"clean\", BuildDate:\"2022-08-18T02:10:23Z\", GoVersion:\"go1.18.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:49:24.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5218" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":220,"skipped":4415,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:24.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1723
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-6abcaad2-96ec-4af2-9bcf-51f772271e13
STEP: Creating a pod to test consume configMaps
Aug 20 12:49:24.698: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c" in namespace "projected-1723" to be "Succeeded or Failed"
Aug 20 12:49:24.701: INFO: Pod "pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.088096ms
Aug 20 12:49:26.709: INFO: Pod "pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010812963s
Aug 20 12:49:28.716: INFO: Pod "pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017759911s
STEP: Saw pod success
Aug 20 12:49:28.716: INFO: Pod "pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c" satisfied condition "Succeeded or Failed"
Aug 20 12:49:28.719: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:49:28.734: INFO: Waiting for pod pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c to disappear
Aug 20 12:49:28.737: INFO: Pod pod-projected-configmaps-c15fb9c4-d83b-40f7-994b-9b2beb92bd5c no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 12:49:28.737: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1723" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":221,"skipped":4433,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:28.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1653
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:49:28.873: INFO: Creating deployment "test-recreate-deployment"
Aug 20 12:49:28.878: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Aug 20 12:49:28.883: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Aug 20 12:49:30.892: INFO: Waiting deployment "test-recreate-deployment" to complete
Aug 20 12:49:30.895: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Aug 20 12:49:30.917: INFO: Updating deployment test-recreate-deployment
Aug 20 12:49:30.917: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 12:49:31.066: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-1653  5ea5f27a-030c-413a-8359-d9ba99ca57b0 28829 2 2022-08-20 12:49:28 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-20 12:49:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:49:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00212cd18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-20 12:49:31 +0000 UTC,LastTransitionTime:2022-08-20 12:49:31 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-08-20 12:49:31 +0000 UTC,LastTransitionTime:2022-08-20 12:49:28 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Aug 20 12:49:31.069: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-1653  f31f0974-182f-41e4-aec4-2b7cde39123e 28826 1 2022-08-20 12:49:31 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 5ea5f27a-030c-413a-8359-d9ba99ca57b0 0xc0043182a0 0xc0043182a1}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:49:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5ea5f27a-030c-413a-8359-d9ba99ca57b0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:49:31 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004318338 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:49:31.069: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Aug 20 12:49:31.069: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-1653  2b28d563-6e4c-4e56-9730-6ca04110accd 28818 2 2022-08-20 12:49:28 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 5ea5f27a-030c-413a-8359-d9ba99ca57b0 0xc004318187 0xc004318188}] []  [{kube-controller-manager Update apps/v1 2022-08-20 12:49:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5ea5f27a-030c-413a-8359-d9ba99ca57b0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 12:49:31 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004318238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 20 12:49:31.072: INFO: Pod "test-recreate-deployment-cd8586fc7-p8vgv" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-p8vgv test-recreate-deployment-cd8586fc7- deployment-1653  6ba4fc83-38a6-4327-bb93-405bf657b727 28830 0 2022-08-20 12:49:31 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 f31f0974-182f-41e4-aec4-2b7cde39123e 0xc004618da0 0xc004618da1}] []  [{kube-controller-manager Update v1 2022-08-20 12:49:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f31f0974-182f-41e4-aec4-2b7cde39123e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 12:49:31 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-56m6k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-56m6k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:49:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:49:31 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:49:31 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 12:49:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:,StartTime:2022-08-20 12:49:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 12:49:31.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1653" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":222,"skipped":4434,"failed":0}

------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:31.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6667
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-a57faf4d-f750-44d4-97d9-3c2e4867cdc5
STEP: Creating a pod to test consume secrets
Aug 20 12:49:31.219: INFO: Waiting up to 5m0s for pod "pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358" in namespace "secrets-6667" to be "Succeeded or Failed"
Aug 20 12:49:31.223: INFO: Pod "pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358": Phase="Pending", Reason="", readiness=false. Elapsed: 3.408705ms
Aug 20 12:49:33.230: INFO: Pod "pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010430318s
Aug 20 12:49:35.236: INFO: Pod "pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016960703s
STEP: Saw pod success
Aug 20 12:49:35.236: INFO: Pod "pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358" satisfied condition "Succeeded or Failed"
Aug 20 12:49:35.240: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358 container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:49:35.263: INFO: Waiting for pod pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358 to disappear
Aug 20 12:49:35.265: INFO: Pod pod-secrets-b884b5be-d62d-456b-a25a-77cf5b61d358 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:49:35.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6667" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":223,"skipped":4434,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:35.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2047
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 20 12:49:35.409: INFO: Waiting up to 5m0s for pod "downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a" in namespace "downward-api-2047" to be "Succeeded or Failed"
Aug 20 12:49:35.411: INFO: Pod "downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.675209ms
Aug 20 12:49:37.416: INFO: Pod "downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007137319s
Aug 20 12:49:39.420: INFO: Pod "downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.010752323s
STEP: Saw pod success
Aug 20 12:49:39.420: INFO: Pod "downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a" satisfied condition "Succeeded or Failed"
Aug 20 12:49:39.423: INFO: Trying to get logs from node ip-172-31-39-75 pod downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a container dapi-container: <nil>
STEP: delete the pod
Aug 20 12:49:39.440: INFO: Waiting for pod downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a to disappear
Aug 20 12:49:39.442: INFO: Pod downward-api-55c8e7b3-ed94-4a8a-a9aa-6578dc17a71a no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 20 12:49:39.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2047" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":224,"skipped":4485,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:39.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1030
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-449f7994-5cec-4d78-841d-37a1d2bb808e
STEP: Creating a pod to test consume secrets
Aug 20 12:49:39.589: INFO: Waiting up to 5m0s for pod "pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9" in namespace "secrets-1030" to be "Succeeded or Failed"
Aug 20 12:49:39.591: INFO: Pod "pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.687694ms
Aug 20 12:49:41.598: INFO: Pod "pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009579189s
Aug 20 12:49:43.606: INFO: Pod "pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017456757s
STEP: Saw pod success
Aug 20 12:49:43.606: INFO: Pod "pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9" satisfied condition "Succeeded or Failed"
Aug 20 12:49:43.609: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9 container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:49:43.626: INFO: Waiting for pod pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9 to disappear
Aug 20 12:49:43.637: INFO: Pod pod-secrets-b79e13a0-4cd7-4d03-b5d7-6f994ee872a9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:49:43.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1030" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4524,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:43.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8888
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-f4f2b981-8879-4d5b-9ffa-9acbad7fbbbf
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:49:45.813: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8888" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":226,"skipped":4526,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:45.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6220
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 20 12:49:45.961: INFO: The status of Pod labelsupdate0b49c01d-1b01-4db3-bff1-3f537e27a4e2 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:49:47.966: INFO: The status of Pod labelsupdate0b49c01d-1b01-4db3-bff1-3f537e27a4e2 is Running (Ready = true)
Aug 20 12:49:48.486: INFO: Successfully updated pod "labelsupdate0b49c01d-1b01-4db3-bff1-3f537e27a4e2"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 12:49:52.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6220" for this suite.

• [SLOW TEST:6.697 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":227,"skipped":4552,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:49:52.521: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5434
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 20 12:50:03.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5434" for this suite.

• [SLOW TEST:11.256 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":228,"skipped":4562,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:03.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:50:03.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3449" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":229,"skipped":4571,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:03.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-6405
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:50:04.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:50:10.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-6405" for this suite.

• [SLOW TEST:6.330 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":230,"skipped":4589,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:10.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-3fc93a0b-7e39-4cbc-be31-f19a99f3a0c4
STEP: Creating a pod to test consume configMaps
Aug 20 12:50:10.414: INFO: Waiting up to 5m0s for pod "pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239" in namespace "configmap-2101" to be "Succeeded or Failed"
Aug 20 12:50:10.420: INFO: Pod "pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239": Phase="Pending", Reason="", readiness=false. Elapsed: 5.374278ms
Aug 20 12:50:12.426: INFO: Pod "pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011627344s
Aug 20 12:50:14.430: INFO: Pod "pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015542218s
STEP: Saw pod success
Aug 20 12:50:14.430: INFO: Pod "pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239" satisfied condition "Succeeded or Failed"
Aug 20 12:50:14.432: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:50:14.452: INFO: Waiting for pod pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239 to disappear
Aug 20 12:50:14.454: INFO: Pod pod-configmaps-573d5752-097b-47a4-88fd-cdc87f553239 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 12:50:14.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2101" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":231,"skipped":4620,"failed":0}

------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:14.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-2269
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-0c1c6cb2-1e8d-4146-b20c-6cb0054d1313-8150
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:50:14.722: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-2269" for this suite.
STEP: Destroying namespace "nspatchtest-0c1c6cb2-1e8d-4146-b20c-6cb0054d1313-8150" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":232,"skipped":4620,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:14.737: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5134
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5134
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-5134
Aug 20 12:50:14.877: INFO: Found 0 stateful pods, waiting for 1
Aug 20 12:50:24.884: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 12:50:24.913: INFO: Deleting all statefulset in ns statefulset-5134
Aug 20 12:50:24.922: INFO: Scaling statefulset ss to 0
Aug 20 12:50:34.941: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:50:34.944: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 12:50:34.959: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5134" for this suite.

• [SLOW TEST:20.230 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":233,"skipped":4639,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:34.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8993
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8993.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8993.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8993.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8993.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8993.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 12:50:37.130: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.134: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.139: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.142: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.146: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.149: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.153: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.156: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8993.svc.cluster.local from pod dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7: the server could not find the requested resource (get pods dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7)
Aug 20 12:50:37.156: INFO: Lookups using dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8993.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8993.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8993.svc.cluster.local jessie_udp@dns-test-service-2.dns-8993.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8993.svc.cluster.local]

Aug 20 12:50:42.185: INFO: DNS probes using dns-8993/dns-test-9efee93d-16fd-4332-86f9-773ee49aa6d7 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 12:50:42.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8993" for this suite.

• [SLOW TEST:7.255 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":234,"skipped":4674,"failed":0}
SS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:42.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8975
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-f91716bf-c4c5-4b79-8844-251a9a55c531
STEP: Creating a pod to test consume secrets
Aug 20 12:50:42.357: INFO: Waiting up to 5m0s for pod "pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7" in namespace "secrets-8975" to be "Succeeded or Failed"
Aug 20 12:50:42.360: INFO: Pod "pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.502835ms
Aug 20 12:50:44.363: INFO: Pod "pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006061008s
Aug 20 12:50:46.370: INFO: Pod "pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012741672s
STEP: Saw pod success
Aug 20 12:50:46.370: INFO: Pod "pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7" satisfied condition "Succeeded or Failed"
Aug 20 12:50:46.373: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7 container secret-env-test: <nil>
STEP: delete the pod
Aug 20 12:50:46.405: INFO: Waiting for pod pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7 to disappear
Aug 20 12:50:46.408: INFO: Pod pod-secrets-11c73eca-ea60-49bb-b872-f612088beac7 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:50:46.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8975" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":235,"skipped":4676,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:46.421: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3303
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 20 12:50:46.565: INFO: Waiting up to 5m0s for pod "downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb" in namespace "downward-api-3303" to be "Succeeded or Failed"
Aug 20 12:50:46.567: INFO: Pod "downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.345307ms
Aug 20 12:50:48.575: INFO: Pod "downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009492039s
Aug 20 12:50:50.581: INFO: Pod "downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01542032s
STEP: Saw pod success
Aug 20 12:50:50.581: INFO: Pod "downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb" satisfied condition "Succeeded or Failed"
Aug 20 12:50:50.583: INFO: Trying to get logs from node ip-172-31-39-75 pod downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb container dapi-container: <nil>
STEP: delete the pod
Aug 20 12:50:50.602: INFO: Waiting for pod downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb to disappear
Aug 20 12:50:50.605: INFO: Pod downward-api-90ffe63f-3f28-4176-bd32-3c32e4b11afb no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 20 12:50:50.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3303" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":236,"skipped":4720,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:50.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-427
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-lfwm2 in namespace proxy-427
I0820 12:50:50.759656      20 runners.go:193] Created replication controller with name: proxy-service-lfwm2, namespace: proxy-427, replica count: 1
I0820 12:50:51.810190      20 runners.go:193] proxy-service-lfwm2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0820 12:50:52.810625      20 runners.go:193] proxy-service-lfwm2 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0820 12:50:53.810878      20 runners.go:193] proxy-service-lfwm2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 12:50:53.818: INFO: setup took 3.077119058s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Aug 20 12:50:53.823: INFO: (0) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 5.062554ms)
Aug 20 12:50:53.824: INFO: (0) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 5.142732ms)
Aug 20 12:50:53.824: INFO: (0) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.254633ms)
Aug 20 12:50:53.824: INFO: (0) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.507307ms)
Aug 20 12:50:53.824: INFO: (0) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 5.592173ms)
Aug 20 12:50:53.824: INFO: (0) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.93477ms)
Aug 20 12:50:53.825: INFO: (0) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 6.539997ms)
Aug 20 12:50:53.826: INFO: (0) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 7.803877ms)
Aug 20 12:50:53.826: INFO: (0) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 7.876214ms)
Aug 20 12:50:53.826: INFO: (0) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 7.992823ms)
Aug 20 12:50:53.826: INFO: (0) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 7.829989ms)
Aug 20 12:50:53.827: INFO: (0) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 8.619858ms)
Aug 20 12:50:53.827: INFO: (0) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 8.698375ms)
Aug 20 12:50:53.828: INFO: (0) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 9.328719ms)
Aug 20 12:50:53.828: INFO: (0) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 9.387351ms)
Aug 20 12:50:53.828: INFO: (0) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 9.888734ms)
Aug 20 12:50:53.832: INFO: (1) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 3.241865ms)
Aug 20 12:50:53.832: INFO: (1) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 3.43124ms)
Aug 20 12:50:53.832: INFO: (1) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 3.846836ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.970995ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.37163ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.430716ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.470176ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.584171ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.8439ms)
Aug 20 12:50:53.833: INFO: (1) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.845078ms)
Aug 20 12:50:53.834: INFO: (1) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.71077ms)
Aug 20 12:50:53.835: INFO: (1) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.747505ms)
Aug 20 12:50:53.835: INFO: (1) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.697335ms)
Aug 20 12:50:53.835: INFO: (1) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.329686ms)
Aug 20 12:50:53.835: INFO: (1) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.420629ms)
Aug 20 12:50:53.835: INFO: (1) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.411165ms)
Aug 20 12:50:53.839: INFO: (2) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 3.751168ms)
Aug 20 12:50:53.840: INFO: (2) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.98512ms)
Aug 20 12:50:53.840: INFO: (2) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.475224ms)
Aug 20 12:50:53.840: INFO: (2) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.226594ms)
Aug 20 12:50:53.840: INFO: (2) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.482809ms)
Aug 20 12:50:53.840: INFO: (2) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.390828ms)
Aug 20 12:50:53.841: INFO: (2) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.153317ms)
Aug 20 12:50:53.841: INFO: (2) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 5.08464ms)
Aug 20 12:50:53.841: INFO: (2) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 5.08736ms)
Aug 20 12:50:53.841: INFO: (2) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.170533ms)
Aug 20 12:50:53.841: INFO: (2) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 5.74962ms)
Aug 20 12:50:53.841: INFO: (2) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.79346ms)
Aug 20 12:50:53.842: INFO: (2) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.062711ms)
Aug 20 12:50:53.842: INFO: (2) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.072702ms)
Aug 20 12:50:53.842: INFO: (2) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.303666ms)
Aug 20 12:50:53.843: INFO: (2) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.823353ms)
Aug 20 12:50:53.846: INFO: (3) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 2.854883ms)
Aug 20 12:50:53.846: INFO: (3) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.436051ms)
Aug 20 12:50:53.847: INFO: (3) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 3.911539ms)
Aug 20 12:50:53.847: INFO: (3) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 3.872174ms)
Aug 20 12:50:53.847: INFO: (3) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.962684ms)
Aug 20 12:50:53.847: INFO: (3) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.427281ms)
Aug 20 12:50:53.847: INFO: (3) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.492949ms)
Aug 20 12:50:53.848: INFO: (3) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 4.712808ms)
Aug 20 12:50:53.848: INFO: (3) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.991912ms)
Aug 20 12:50:53.848: INFO: (3) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 5.284544ms)
Aug 20 12:50:53.848: INFO: (3) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.332163ms)
Aug 20 12:50:53.848: INFO: (3) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 5.354416ms)
Aug 20 12:50:53.849: INFO: (3) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.563903ms)
Aug 20 12:50:53.849: INFO: (3) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.961806ms)
Aug 20 12:50:53.850: INFO: (3) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 6.453162ms)
Aug 20 12:50:53.850: INFO: (3) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.699121ms)
Aug 20 12:50:53.853: INFO: (4) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 3.104097ms)
Aug 20 12:50:53.853: INFO: (4) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.358064ms)
Aug 20 12:50:53.854: INFO: (4) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.751139ms)
Aug 20 12:50:53.854: INFO: (4) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.114128ms)
Aug 20 12:50:53.854: INFO: (4) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.423499ms)
Aug 20 12:50:53.854: INFO: (4) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.400524ms)
Aug 20 12:50:53.855: INFO: (4) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.580194ms)
Aug 20 12:50:53.855: INFO: (4) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.024255ms)
Aug 20 12:50:53.855: INFO: (4) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.954121ms)
Aug 20 12:50:53.855: INFO: (4) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.312629ms)
Aug 20 12:50:53.855: INFO: (4) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.339902ms)
Aug 20 12:50:53.855: INFO: (4) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 5.327059ms)
Aug 20 12:50:53.856: INFO: (4) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.810432ms)
Aug 20 12:50:53.856: INFO: (4) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.037727ms)
Aug 20 12:50:53.856: INFO: (4) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.358129ms)
Aug 20 12:50:53.857: INFO: (4) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.709913ms)
Aug 20 12:50:53.860: INFO: (5) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 3.642953ms)
Aug 20 12:50:53.861: INFO: (5) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 3.860751ms)
Aug 20 12:50:53.861: INFO: (5) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.018778ms)
Aug 20 12:50:53.861: INFO: (5) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.196568ms)
Aug 20 12:50:53.861: INFO: (5) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.568055ms)
Aug 20 12:50:53.861: INFO: (5) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.813395ms)
Aug 20 12:50:53.862: INFO: (5) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.896712ms)
Aug 20 12:50:53.862: INFO: (5) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.871796ms)
Aug 20 12:50:53.862: INFO: (5) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.841009ms)
Aug 20 12:50:53.862: INFO: (5) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.035341ms)
Aug 20 12:50:53.862: INFO: (5) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.373607ms)
Aug 20 12:50:53.862: INFO: (5) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 5.364021ms)
Aug 20 12:50:53.863: INFO: (5) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.118143ms)
Aug 20 12:50:53.863: INFO: (5) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.106884ms)
Aug 20 12:50:53.863: INFO: (5) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.170427ms)
Aug 20 12:50:53.864: INFO: (5) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.904547ms)
Aug 20 12:50:53.867: INFO: (6) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 3.104345ms)
Aug 20 12:50:53.867: INFO: (6) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.244055ms)
Aug 20 12:50:53.868: INFO: (6) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.010955ms)
Aug 20 12:50:53.868: INFO: (6) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.077128ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.68759ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.700669ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.685445ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 4.795893ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.907022ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 5.083554ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 5.072511ms)
Aug 20 12:50:53.869: INFO: (6) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.358954ms)
Aug 20 12:50:53.870: INFO: (6) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.828696ms)
Aug 20 12:50:53.870: INFO: (6) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 6.20277ms)
Aug 20 12:50:53.871: INFO: (6) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.835492ms)
Aug 20 12:50:53.871: INFO: (6) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 7.045998ms)
Aug 20 12:50:53.874: INFO: (7) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 2.913047ms)
Aug 20 12:50:53.875: INFO: (7) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.696535ms)
Aug 20 12:50:53.875: INFO: (7) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.811855ms)
Aug 20 12:50:53.875: INFO: (7) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.020431ms)
Aug 20 12:50:53.876: INFO: (7) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 5.423477ms)
Aug 20 12:50:53.877: INFO: (7) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 5.544479ms)
Aug 20 12:50:53.877: INFO: (7) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.762381ms)
Aug 20 12:50:53.877: INFO: (7) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.600977ms)
Aug 20 12:50:53.877: INFO: (7) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 5.626284ms)
Aug 20 12:50:53.877: INFO: (7) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.852282ms)
Aug 20 12:50:53.877: INFO: (7) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 6.009353ms)
Aug 20 12:50:53.878: INFO: (7) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.72436ms)
Aug 20 12:50:53.878: INFO: (7) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 7.286157ms)
Aug 20 12:50:53.878: INFO: (7) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 7.283599ms)
Aug 20 12:50:53.878: INFO: (7) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 7.308915ms)
Aug 20 12:50:53.879: INFO: (7) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 8.36701ms)
Aug 20 12:50:53.883: INFO: (8) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.577542ms)
Aug 20 12:50:53.883: INFO: (8) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 3.748747ms)
Aug 20 12:50:53.883: INFO: (8) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.048018ms)
Aug 20 12:50:53.884: INFO: (8) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.35516ms)
Aug 20 12:50:53.884: INFO: (8) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.773788ms)
Aug 20 12:50:53.885: INFO: (8) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.939438ms)
Aug 20 12:50:53.885: INFO: (8) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.994262ms)
Aug 20 12:50:53.885: INFO: (8) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.311938ms)
Aug 20 12:50:53.885: INFO: (8) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 5.345447ms)
Aug 20 12:50:53.885: INFO: (8) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.394657ms)
Aug 20 12:50:53.885: INFO: (8) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.937692ms)
Aug 20 12:50:53.886: INFO: (8) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.258045ms)
Aug 20 12:50:53.886: INFO: (8) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.38907ms)
Aug 20 12:50:53.886: INFO: (8) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.385042ms)
Aug 20 12:50:53.886: INFO: (8) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.560467ms)
Aug 20 12:50:53.887: INFO: (8) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 7.448341ms)
Aug 20 12:50:53.890: INFO: (9) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 2.840938ms)
Aug 20 12:50:53.890: INFO: (9) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 3.206031ms)
Aug 20 12:50:53.892: INFO: (9) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.213693ms)
Aug 20 12:50:53.892: INFO: (9) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.258149ms)
Aug 20 12:50:53.892: INFO: (9) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.426644ms)
Aug 20 12:50:53.892: INFO: (9) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.86234ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.782209ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.753679ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 5.698821ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 5.840876ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 5.729847ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.847799ms)
Aug 20 12:50:53.893: INFO: (9) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.096031ms)
Aug 20 12:50:53.894: INFO: (9) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.274062ms)
Aug 20 12:50:53.894: INFO: (9) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.686947ms)
Aug 20 12:50:53.894: INFO: (9) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.635936ms)
Aug 20 12:50:53.897: INFO: (10) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 2.852315ms)
Aug 20 12:50:53.898: INFO: (10) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.0035ms)
Aug 20 12:50:53.898: INFO: (10) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 3.869375ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.594166ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.655091ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.629731ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.555782ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.61152ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.785588ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.873036ms)
Aug 20 12:50:53.899: INFO: (10) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.325263ms)
Aug 20 12:50:53.900: INFO: (10) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.871237ms)
Aug 20 12:50:53.900: INFO: (10) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.836639ms)
Aug 20 12:50:53.900: INFO: (10) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.365931ms)
Aug 20 12:50:53.901: INFO: (10) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.515078ms)
Aug 20 12:50:53.901: INFO: (10) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 7.085011ms)
Aug 20 12:50:53.904: INFO: (11) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.010686ms)
Aug 20 12:50:53.905: INFO: (11) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.397591ms)
Aug 20 12:50:53.905: INFO: (11) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.934042ms)
Aug 20 12:50:53.905: INFO: (11) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.819781ms)
Aug 20 12:50:53.906: INFO: (11) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.043086ms)
Aug 20 12:50:53.906: INFO: (11) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.441013ms)
Aug 20 12:50:53.906: INFO: (11) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.691527ms)
Aug 20 12:50:53.906: INFO: (11) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 5.159263ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.265279ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.444952ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 5.229814ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.339612ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.479701ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.666402ms)
Aug 20 12:50:53.907: INFO: (11) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.794962ms)
Aug 20 12:50:53.908: INFO: (11) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.509279ms)
Aug 20 12:50:53.911: INFO: (12) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.325315ms)
Aug 20 12:50:53.912: INFO: (12) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.464241ms)
Aug 20 12:50:53.912: INFO: (12) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 3.637584ms)
Aug 20 12:50:53.912: INFO: (12) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.116887ms)
Aug 20 12:50:53.913: INFO: (12) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.523686ms)
Aug 20 12:50:53.913: INFO: (12) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.495717ms)
Aug 20 12:50:53.913: INFO: (12) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.625698ms)
Aug 20 12:50:53.913: INFO: (12) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 4.911122ms)
Aug 20 12:50:53.913: INFO: (12) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.03307ms)
Aug 20 12:50:53.913: INFO: (12) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.236422ms)
Aug 20 12:50:53.914: INFO: (12) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 5.382031ms)
Aug 20 12:50:53.914: INFO: (12) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.537003ms)
Aug 20 12:50:53.914: INFO: (12) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.781037ms)
Aug 20 12:50:53.914: INFO: (12) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.961666ms)
Aug 20 12:50:53.914: INFO: (12) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 6.2389ms)
Aug 20 12:50:53.915: INFO: (12) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.919739ms)
Aug 20 12:50:53.918: INFO: (13) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 2.999315ms)
Aug 20 12:50:53.919: INFO: (13) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 3.693193ms)
Aug 20 12:50:53.919: INFO: (13) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.810141ms)
Aug 20 12:50:53.919: INFO: (13) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.731823ms)
Aug 20 12:50:53.919: INFO: (13) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 3.854581ms)
Aug 20 12:50:53.919: INFO: (13) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.164179ms)
Aug 20 12:50:53.920: INFO: (13) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.422254ms)
Aug 20 12:50:53.920: INFO: (13) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.772873ms)
Aug 20 12:50:53.920: INFO: (13) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.701411ms)
Aug 20 12:50:53.920: INFO: (13) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 5.006273ms)
Aug 20 12:50:53.920: INFO: (13) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.304399ms)
Aug 20 12:50:53.921: INFO: (13) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.56494ms)
Aug 20 12:50:53.921: INFO: (13) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.924069ms)
Aug 20 12:50:53.921: INFO: (13) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 6.23382ms)
Aug 20 12:50:53.922: INFO: (13) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.315158ms)
Aug 20 12:50:53.922: INFO: (13) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.573089ms)
Aug 20 12:50:53.925: INFO: (14) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.445061ms)
Aug 20 12:50:53.926: INFO: (14) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.782117ms)
Aug 20 12:50:53.926: INFO: (14) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.620238ms)
Aug 20 12:50:53.926: INFO: (14) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 3.916841ms)
Aug 20 12:50:53.926: INFO: (14) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.369734ms)
Aug 20 12:50:53.927: INFO: (14) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.68955ms)
Aug 20 12:50:53.927: INFO: (14) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 4.789102ms)
Aug 20 12:50:53.927: INFO: (14) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.651664ms)
Aug 20 12:50:53.927: INFO: (14) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.972664ms)
Aug 20 12:50:53.927: INFO: (14) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.41216ms)
Aug 20 12:50:53.927: INFO: (14) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 5.321262ms)
Aug 20 12:50:53.928: INFO: (14) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 5.721986ms)
Aug 20 12:50:53.928: INFO: (14) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.957207ms)
Aug 20 12:50:53.928: INFO: (14) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.067872ms)
Aug 20 12:50:53.928: INFO: (14) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.200044ms)
Aug 20 12:50:53.929: INFO: (14) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.438458ms)
Aug 20 12:50:53.932: INFO: (15) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 2.941025ms)
Aug 20 12:50:53.932: INFO: (15) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 3.104024ms)
Aug 20 12:50:53.932: INFO: (15) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.679464ms)
Aug 20 12:50:53.933: INFO: (15) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 3.908805ms)
Aug 20 12:50:53.933: INFO: (15) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.092748ms)
Aug 20 12:50:53.933: INFO: (15) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.200564ms)
Aug 20 12:50:53.933: INFO: (15) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 4.38984ms)
Aug 20 12:50:53.934: INFO: (15) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.812222ms)
Aug 20 12:50:53.934: INFO: (15) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.937424ms)
Aug 20 12:50:53.934: INFO: (15) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.054484ms)
Aug 20 12:50:53.934: INFO: (15) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 5.531056ms)
Aug 20 12:50:53.934: INFO: (15) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 5.376167ms)
Aug 20 12:50:53.934: INFO: (15) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.794543ms)
Aug 20 12:50:53.935: INFO: (15) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.798621ms)
Aug 20 12:50:53.935: INFO: (15) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.504535ms)
Aug 20 12:50:53.935: INFO: (15) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 6.641158ms)
Aug 20 12:50:53.938: INFO: (16) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 2.931281ms)
Aug 20 12:50:53.939: INFO: (16) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.77244ms)
Aug 20 12:50:53.940: INFO: (16) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.349831ms)
Aug 20 12:50:53.940: INFO: (16) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.499416ms)
Aug 20 12:50:53.940: INFO: (16) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.726849ms)
Aug 20 12:50:53.940: INFO: (16) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.801339ms)
Aug 20 12:50:53.940: INFO: (16) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.755324ms)
Aug 20 12:50:53.940: INFO: (16) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.765479ms)
Aug 20 12:50:53.941: INFO: (16) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.983751ms)
Aug 20 12:50:53.941: INFO: (16) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.270363ms)
Aug 20 12:50:53.941: INFO: (16) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 5.344465ms)
Aug 20 12:50:53.941: INFO: (16) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.400936ms)
Aug 20 12:50:53.942: INFO: (16) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.020704ms)
Aug 20 12:50:53.942: INFO: (16) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.251162ms)
Aug 20 12:50:53.942: INFO: (16) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 6.157312ms)
Aug 20 12:50:53.942: INFO: (16) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.739248ms)
Aug 20 12:50:53.945: INFO: (17) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 2.906805ms)
Aug 20 12:50:53.946: INFO: (17) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.452734ms)
Aug 20 12:50:53.946: INFO: (17) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.715399ms)
Aug 20 12:50:53.947: INFO: (17) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 3.951205ms)
Aug 20 12:50:53.947: INFO: (17) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.245317ms)
Aug 20 12:50:53.947: INFO: (17) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.689272ms)
Aug 20 12:50:53.947: INFO: (17) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.759374ms)
Aug 20 12:50:53.947: INFO: (17) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.811168ms)
Aug 20 12:50:53.947: INFO: (17) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.932587ms)
Aug 20 12:50:53.948: INFO: (17) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.056947ms)
Aug 20 12:50:53.948: INFO: (17) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.011687ms)
Aug 20 12:50:53.948: INFO: (17) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 5.328998ms)
Aug 20 12:50:53.948: INFO: (17) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.705744ms)
Aug 20 12:50:53.949: INFO: (17) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 6.118625ms)
Aug 20 12:50:53.949: INFO: (17) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.192189ms)
Aug 20 12:50:53.950: INFO: (17) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.960638ms)
Aug 20 12:50:53.953: INFO: (18) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 3.534285ms)
Aug 20 12:50:53.954: INFO: (18) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.651004ms)
Aug 20 12:50:53.954: INFO: (18) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 3.892161ms)
Aug 20 12:50:53.954: INFO: (18) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 3.997178ms)
Aug 20 12:50:53.954: INFO: (18) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.416207ms)
Aug 20 12:50:53.954: INFO: (18) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 4.349533ms)
Aug 20 12:50:53.954: INFO: (18) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 4.780184ms)
Aug 20 12:50:53.955: INFO: (18) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 4.570194ms)
Aug 20 12:50:53.955: INFO: (18) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.827619ms)
Aug 20 12:50:53.955: INFO: (18) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 5.157991ms)
Aug 20 12:50:53.955: INFO: (18) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.094566ms)
Aug 20 12:50:53.955: INFO: (18) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.861461ms)
Aug 20 12:50:53.955: INFO: (18) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 5.561498ms)
Aug 20 12:50:53.956: INFO: (18) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.953118ms)
Aug 20 12:50:53.956: INFO: (18) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.368706ms)
Aug 20 12:50:53.956: INFO: (18) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 6.652382ms)
Aug 20 12:50:53.960: INFO: (19) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:462/proxy/: tls qux (200; 3.046622ms)
Aug 20 12:50:53.960: INFO: (19) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:460/proxy/: tls baz (200; 3.811217ms)
Aug 20 12:50:53.961: INFO: (19) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">test</... (200; 4.074463ms)
Aug 20 12:50:53.961: INFO: (19) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4/proxy/rewriteme">test</a> (200; 4.048622ms)
Aug 20 12:50:53.961: INFO: (19) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.187033ms)
Aug 20 12:50:53.961: INFO: (19) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:1080/proxy/rewriteme">t... (200; 4.446882ms)
Aug 20 12:50:53.961: INFO: (19) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:160/proxy/: foo (200; 4.545184ms)
Aug 20 12:50:53.961: INFO: (19) /api/v1/namespaces/proxy-427/pods/http:proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 4.738526ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname1/proxy/: tls baz (200; 5.00184ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/pods/proxy-service-lfwm2-fk6t4:162/proxy/: bar (200; 5.364364ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/: <a href="/api/v1/namespaces/proxy-427/pods/https:proxy-service-lfwm2-fk6t4:443/proxy/tlsrewriteme... (200; 5.451522ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/services/https:proxy-service-lfwm2:tlsportname2/proxy/: tls qux (200; 5.534458ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname1/proxy/: foo (200; 5.680499ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname1/proxy/: foo (200; 5.840677ms)
Aug 20 12:50:53.962: INFO: (19) /api/v1/namespaces/proxy-427/services/http:proxy-service-lfwm2:portname2/proxy/: bar (200; 5.881353ms)
Aug 20 12:50:53.963: INFO: (19) /api/v1/namespaces/proxy-427/services/proxy-service-lfwm2:portname2/proxy/: bar (200; 6.445025ms)
STEP: deleting ReplicationController proxy-service-lfwm2 in namespace proxy-427, will wait for the garbage collector to delete the pods
Aug 20 12:50:54.023: INFO: Deleting ReplicationController proxy-service-lfwm2 took: 6.75203ms
Aug 20 12:50:54.124: INFO: Terminating ReplicationController proxy-service-lfwm2 pods took: 100.718174ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 20 12:50:55.925: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-427" for this suite.

• [SLOW TEST:5.323 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":237,"skipped":4728,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:50:55.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4381
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:50:56.065: INFO: Creating ReplicaSet my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56
Aug 20 12:50:56.074: INFO: Pod name my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56: Found 0 pods out of 1
Aug 20 12:51:01.082: INFO: Pod name my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56: Found 1 pods out of 1
Aug 20 12:51:01.082: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56" is running
Aug 20 12:51:01.085: INFO: Pod "my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56-4lh6m" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:50:56 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:50:57 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:50:57 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-20 12:50:56 +0000 UTC Reason: Message:}])
Aug 20 12:51:01.085: INFO: Trying to dial the pod
Aug 20 12:51:06.100: INFO: Controller my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56: Got expected result from replica 1 [my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56-4lh6m]: "my-hostname-basic-93dab4c4-55c4-46c3-9ee0-16619d143a56-4lh6m", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 20 12:51:06.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4381" for this suite.

• [SLOW TEST:10.178 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":238,"skipped":4737,"failed":0}
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:06.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-3339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 20 12:51:06.245: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 20 12:51:09.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3339" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":239,"skipped":4744,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:09.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2406
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-28fec008-4b1f-4442-bb35-c4005f609e27
STEP: Creating a pod to test consume secrets
Aug 20 12:51:10.038: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92" in namespace "projected-2406" to be "Succeeded or Failed"
Aug 20 12:51:10.040: INFO: Pod "pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92": Phase="Pending", Reason="", readiness=false. Elapsed: 2.448211ms
Aug 20 12:51:12.048: INFO: Pod "pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009626919s
Aug 20 12:51:14.055: INFO: Pod "pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017191719s
STEP: Saw pod success
Aug 20 12:51:14.055: INFO: Pod "pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92" satisfied condition "Succeeded or Failed"
Aug 20 12:51:14.058: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 20 12:51:14.076: INFO: Waiting for pod pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92 to disappear
Aug 20 12:51:14.078: INFO: Pod pod-projected-secrets-9260f134-e5b2-4d07-b026-0bb17c7b8e92 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 20 12:51:14.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2406" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":240,"skipped":4771,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:14.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8521
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 20 12:51:14.216: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 20 12:51:14.248: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:51:16.254: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:51:18.254: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:51:20.253: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:51:22.255: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:51:24.255: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 12:51:26.264: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 20 12:51:26.270: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 20 12:51:26.276: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 20 12:51:28.296: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 20 12:51:28.296: INFO: Breadth first check of 192.168.45.42 on host 172.31.39.75...
Aug 20 12:51:28.299: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.45.29:9080/dial?request=hostname&protocol=http&host=192.168.45.42&port=8083&tries=1'] Namespace:pod-network-test-8521 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:51:28.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:51:28.300: INFO: ExecWithOptions: Clientset creation
Aug 20 12:51:28.300: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8521/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.45.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.45.42%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 20 12:51:28.381: INFO: Waiting for responses: map[]
Aug 20 12:51:28.381: INFO: reached 192.168.45.42 after 0/1 tries
Aug 20 12:51:28.381: INFO: Breadth first check of 192.168.124.122 on host 172.31.71.246...
Aug 20 12:51:28.385: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.45.29:9080/dial?request=hostname&protocol=http&host=192.168.124.122&port=8083&tries=1'] Namespace:pod-network-test-8521 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:51:28.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:51:28.385: INFO: ExecWithOptions: Clientset creation
Aug 20 12:51:28.385: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8521/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.45.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.124.122%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 20 12:51:28.471: INFO: Waiting for responses: map[]
Aug 20 12:51:28.471: INFO: reached 192.168.124.122 after 0/1 tries
Aug 20 12:51:28.471: INFO: Breadth first check of 192.168.18.11 on host 172.31.90.25...
Aug 20 12:51:28.474: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.45.29:9080/dial?request=hostname&protocol=http&host=192.168.18.11&port=8083&tries=1'] Namespace:pod-network-test-8521 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:51:28.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:51:28.474: INFO: ExecWithOptions: Clientset creation
Aug 20 12:51:28.474: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8521/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.45.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.18.11%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 20 12:51:28.514: INFO: Waiting for responses: map[]
Aug 20 12:51:28.514: INFO: reached 192.168.18.11 after 0/1 tries
Aug 20 12:51:28.514: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 20 12:51:28.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8521" for this suite.

• [SLOW TEST:14.439 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":241,"skipped":4792,"failed":0}
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:28.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5221
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5221
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-5221
STEP: Waiting until pod test-pod will start running in namespace statefulset-5221
STEP: Creating statefulset with conflicting port in namespace statefulset-5221
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5221
Aug 20 12:51:30.707: INFO: Observed stateful pod in namespace: statefulset-5221, name: ss-0, uid: b6246059-2e2f-43b2-914f-24478c4fff08, status phase: Pending. Waiting for statefulset controller to delete.
Aug 20 12:51:30.727: INFO: Observed stateful pod in namespace: statefulset-5221, name: ss-0, uid: b6246059-2e2f-43b2-914f-24478c4fff08, status phase: Failed. Waiting for statefulset controller to delete.
Aug 20 12:51:30.735: INFO: Observed stateful pod in namespace: statefulset-5221, name: ss-0, uid: b6246059-2e2f-43b2-914f-24478c4fff08, status phase: Failed. Waiting for statefulset controller to delete.
Aug 20 12:51:30.738: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-5221
STEP: Removing pod with conflicting port in namespace statefulset-5221
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5221 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 12:51:32.760: INFO: Deleting all statefulset in ns statefulset-5221
Aug 20 12:51:32.763: INFO: Scaling statefulset ss to 0
Aug 20 12:51:42.785: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:51:42.788: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 12:51:42.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5221" for this suite.

• [SLOW TEST:14.284 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":242,"skipped":4799,"failed":0}
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:42.810: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-6864
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Aug 20 12:51:42.943: INFO: Waiting up to 5m0s for pod "client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00" in namespace "containers-6864" to be "Succeeded or Failed"
Aug 20 12:51:42.946: INFO: Pod "client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00": Phase="Pending", Reason="", readiness=false. Elapsed: 2.495677ms
Aug 20 12:51:44.951: INFO: Pod "client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008024067s
Aug 20 12:51:46.958: INFO: Pod "client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015055729s
STEP: Saw pod success
Aug 20 12:51:46.958: INFO: Pod "client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00" satisfied condition "Succeeded or Failed"
Aug 20 12:51:46.961: INFO: Trying to get logs from node ip-172-31-39-75 pod client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 12:51:46.980: INFO: Waiting for pod client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00 to disappear
Aug 20 12:51:46.983: INFO: Pod client-containers-db7fd2b6-7d42-481e-a879-06adc170ad00 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 20 12:51:46.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-6864" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":243,"skipped":4799,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:46.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6658
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 20 12:51:47.132: INFO: Waiting up to 5m0s for pod "pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7" in namespace "emptydir-6658" to be "Succeeded or Failed"
Aug 20 12:51:47.135: INFO: Pod "pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.760022ms
Aug 20 12:51:49.141: INFO: Pod "pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009010655s
Aug 20 12:51:51.148: INFO: Pod "pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016315483s
STEP: Saw pod success
Aug 20 12:51:51.148: INFO: Pod "pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7" satisfied condition "Succeeded or Failed"
Aug 20 12:51:51.152: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7 container test-container: <nil>
STEP: delete the pod
Aug 20 12:51:51.167: INFO: Waiting for pod pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7 to disappear
Aug 20 12:51:51.169: INFO: Pod pod-c02063f4-b55c-4c4a-92c1-f548f679c6d7 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:51:51.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6658" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":244,"skipped":4839,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:51.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-3233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 20 12:51:53.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-3233" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":245,"skipped":4873,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:53.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7055
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 pods, got 2 pods
STEP: expected 0 rs, got 1 rs
STEP: Gathering metrics
W0820 12:51:54.541829      20 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 20 12:51:54.541: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 12:51:54.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7055" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":246,"skipped":4890,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:51:54.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4281
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 12:51:54.967: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 12:51:57.992: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:51:57.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1275-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:52:01.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4281" for this suite.
STEP: Destroying namespace "webhook-4281-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.637 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":247,"skipped":4894,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:52:01.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-2419
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:52:01.327: INFO: Waiting up to 5m0s for pod "busybox-user-65534-37731331-b54f-41d5-a677-46b02480cd5f" in namespace "security-context-test-2419" to be "Succeeded or Failed"
Aug 20 12:52:01.330: INFO: Pod "busybox-user-65534-37731331-b54f-41d5-a677-46b02480cd5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.738287ms
Aug 20 12:52:03.341: INFO: Pod "busybox-user-65534-37731331-b54f-41d5-a677-46b02480cd5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013508435s
Aug 20 12:52:05.347: INFO: Pod "busybox-user-65534-37731331-b54f-41d5-a677-46b02480cd5f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019712265s
Aug 20 12:52:05.347: INFO: Pod "busybox-user-65534-37731331-b54f-41d5-a677-46b02480cd5f" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 20 12:52:05.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-2419" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":248,"skipped":4908,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:52:05.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-1190
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 20 12:52:05.493: INFO: PodSpec: initContainers in spec.initContainers
Aug 20 12:52:52.486: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-54db8234-d10b-4c52-92d5-c61af4496967", GenerateName:"", Namespace:"init-container-1190", SelfLink:"", UID:"91611e4e-15a9-4f45-b4c9-fa27f97769d7", ResourceVersion:"30629", Generation:0, CreationTimestamp:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"493194556"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004014090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 20, 12, 52, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040140c0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-cjqwm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001bed160), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-cjqwm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-cjqwm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-cjqwm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00438f380), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-71-246", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001259d50), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00438f410)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00438f430)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00438f438), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00438f43c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0008181d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.71.246", PodIP:"192.168.124.113", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.124.113"}}, StartTime:time.Date(2022, time.August, 20, 12, 52, 5, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001259ea0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001259f10)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://f5f56079dc2f9a2aa096acacb48456f31cd479fbded09315cce478c73e839553", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001bed300), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001bed220), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00438f4b4)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 20 12:52:52.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-1190" for this suite.

• [SLOW TEST:47.139 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":249,"skipped":4990,"failed":0}
S
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:52:52.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-2225
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Aug 20 12:52:52.646: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Aug 20 12:52:54.658: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Aug 20 12:52:56.676: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Aug 20 12:52:58.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-2225" for this suite.

• [SLOW TEST:6.190 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":250,"skipped":4991,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:52:58.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-4810
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 20 12:52:58.840: INFO: starting watch
STEP: patching
STEP: updating
Aug 20 12:52:58.849: INFO: waiting for watch events with expected annotations
Aug 20 12:52:58.849: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Aug 20 12:52:58.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-4810" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":251,"skipped":5012,"failed":0}
SSSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:52:58.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6608
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Aug 20 12:52:59.014: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6608  db097bce-66b8-4a64-b50d-985e3c1f9586 30693 0 2022-08-20 12:52:59 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-08-20 12:52:59 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l7fcb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l7fcb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 20 12:52:59.017: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:53:01.024: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Aug 20 12:53:01.024: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6608 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:53:01.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:53:01.025: INFO: ExecWithOptions: Clientset creation
Aug 20 12:53:01.025: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6608/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Aug 20 12:53:01.113: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6608 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:53:01.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:53:01.114: INFO: ExecWithOptions: Clientset creation
Aug 20 12:53:01.114: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6608/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 20 12:53:01.195: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 12:53:01.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6608" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":252,"skipped":5019,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:53:01.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3314
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-3314
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-3314
I0820 12:53:01.373777      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3314, replica count: 2
I0820 12:53:04.425080      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 12:53:04.425: INFO: Creating new exec pod
Aug 20 12:53:07.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3314 exec execpodbp7ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 20 12:53:07.574: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 20 12:53:07.574: INFO: stdout: ""
Aug 20 12:53:08.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3314 exec execpodbp7ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 20 12:53:08.701: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 20 12:53:08.701: INFO: stdout: "externalname-service-nf4vw"
Aug 20 12:53:08.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3314 exec execpodbp7ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.133 80'
Aug 20 12:53:08.802: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.133 80\nConnection to 10.152.183.133 80 port [tcp/http] succeeded!\n"
Aug 20 12:53:08.802: INFO: stdout: "externalname-service-crwvp"
Aug 20 12:53:08.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3314 exec execpodbp7ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.25 30510'
Aug 20 12:53:08.901: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.25 30510\nConnection to 172.31.90.25 30510 port [tcp/*] succeeded!\n"
Aug 20 12:53:08.901: INFO: stdout: "externalname-service-crwvp"
Aug 20 12:53:08.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3314 exec execpodbp7ln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.71.246 30510'
Aug 20 12:53:09.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.71.246 30510\nConnection to 172.31.71.246 30510 port [tcp/*] succeeded!\n"
Aug 20 12:53:09.001: INFO: stdout: "externalname-service-nf4vw"
Aug 20 12:53:09.001: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:53:09.027: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3314" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.823 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":253,"skipped":5033,"failed":0}
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:53:09.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-1202
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 20 12:53:09.186: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 20 12:53:09.193: INFO: Waiting for terminating namespaces to be deleted...
Aug 20 12:53:09.196: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-39-75 before test
Aug 20 12:53:09.200: INFO: nginx-ingress-controller-kubernetes-worker-m6xxn from ingress-nginx-kubernetes-worker started at 2022-08-20 12:29:08 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.200: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 12:53:09.200: INFO: execpodbp7ln from services-3314 started at 2022-08-20 12:53:04 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.200: INFO: 	Container agnhost-container ready: true, restart count 0
Aug 20 12:53:09.200: INFO: externalname-service-crwvp from services-3314 started at 2022-08-20 12:53:01 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.200: INFO: 	Container externalname-service ready: true, restart count 0
Aug 20 12:53:09.200: INFO: sonobuoy from sonobuoy started at 2022-08-20 11:50:09 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.200: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 20 12:53:09.200: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-7v72s from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:53:09.200: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:53:09.200: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 12:53:09.200: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-71-246 before test
Aug 20 12:53:09.204: INFO: nginx-ingress-controller-kubernetes-worker-5ttn2 from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:22 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.204: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 12:53:09.204: INFO: externalname-service-nf4vw from services-3314 started at 2022-08-20 12:53:01 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.204: INFO: 	Container externalname-service ready: true, restart count 0
Aug 20 12:53:09.204: INFO: sonobuoy-e2e-job-17b0c7b96371488a from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:53:09.204: INFO: 	Container e2e ready: true, restart count 0
Aug 20 12:53:09.204: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:53:09.204: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-lrmrk from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:53:09.204: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:53:09.204: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 12:53:09.204: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-90-25 before test
Aug 20 12:53:09.208: INFO: default-http-backend-kubernetes-worker-6c59687bf6-5hggx from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 20 12:53:09.208: INFO: nginx-ingress-controller-kubernetes-worker-5jxfd from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 12:53:09.208: INFO: calico-kube-controllers-6fc5ff4dbc-hmtvb from kube-system started at 2022-08-20 11:47:08 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 20 12:53:09.208: INFO: coredns-86c98bfcdb-ql6b4 from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container coredns ready: true, restart count 0
Aug 20 12:53:09.208: INFO: kube-state-metrics-5cdbfd47b4-8s9rt from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 20 12:53:09.208: INFO: metrics-server-v0.5.2-6bfd958b56-tgs28 from kube-system started at 2022-08-20 11:47:08 +0000 UTC (2 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container metrics-server ready: true, restart count 0
Aug 20 12:53:09.208: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 20 12:53:09.208: INFO: dashboard-metrics-scraper-8669b59d4f-tw6l4 from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 20 12:53:09.208: INFO: kubernetes-dashboard-585fc6bc87-6h7cf from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 12:53:09.208: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 20 12:53:09.209: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-8tk2v from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 12:53:09.209: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 12:53:09.209: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-202d3e12-a44a-4a5b-b6db-a488c6758b76 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.71.246 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-202d3e12-a44a-4a5b-b6db-a488c6758b76 off the node ip-172-31-71-246
STEP: verifying the node doesn't have the label kubernetes.io/e2e-202d3e12-a44a-4a5b-b6db-a488c6758b76
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 20 12:58:13.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-1202" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:304.271 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":254,"skipped":5037,"failed":0}
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:58:13.310: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-1698
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-1698, will wait for the garbage collector to delete the pods
Aug 20 12:58:15.510: INFO: Deleting Job.batch foo took: 6.553872ms
Aug 20 12:58:15.611: INFO: Terminating Job.batch foo pods took: 100.901643ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 20 12:58:47.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-1698" for this suite.

• [SLOW TEST:34.317 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":255,"skipped":5037,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:58:47.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2160
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Aug 20 12:58:49.770: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2160 PodName:pod-sharedvolume-db04ef45-7747-4c71-a437-ef6554504183 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 12:58:49.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 12:58:49.770: INFO: ExecWithOptions: Clientset creation
Aug 20 12:58:49.770: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-2160/pods/pod-sharedvolume-db04ef45-7747-4c71-a437-ef6554504183/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Aug 20 12:58:49.851: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 12:58:49.851: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2160" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":256,"skipped":5043,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:58:49.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5078
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:58:49.998: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 20 12:58:55.004: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Aug 20 12:58:55.016: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Aug 20 12:58:55.023: INFO: observed ReplicaSet test-rs in namespace replicaset-5078 with ReadyReplicas 1, AvailableReplicas 1
Aug 20 12:58:55.038: INFO: observed ReplicaSet test-rs in namespace replicaset-5078 with ReadyReplicas 1, AvailableReplicas 1
Aug 20 12:58:55.059: INFO: observed ReplicaSet test-rs in namespace replicaset-5078 with ReadyReplicas 1, AvailableReplicas 1
Aug 20 12:58:55.065: INFO: observed ReplicaSet test-rs in namespace replicaset-5078 with ReadyReplicas 1, AvailableReplicas 1
Aug 20 12:58:56.554: INFO: observed ReplicaSet test-rs in namespace replicaset-5078 with ReadyReplicas 2, AvailableReplicas 2
Aug 20 12:58:56.563: INFO: observed Replicaset test-rs in namespace replicaset-5078 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 20 12:58:56.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5078" for this suite.

• [SLOW TEST:6.713 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":257,"skipped":5074,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:58:56.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5936
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Aug 20 12:58:56.708: INFO: Waiting up to 5m0s for pod "var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043" in namespace "var-expansion-5936" to be "Succeeded or Failed"
Aug 20 12:58:56.711: INFO: Pod "var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043": Phase="Pending", Reason="", readiness=false. Elapsed: 2.675553ms
Aug 20 12:58:58.719: INFO: Pod "var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01057193s
Aug 20 12:59:00.725: INFO: Pod "var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016860328s
STEP: Saw pod success
Aug 20 12:59:00.725: INFO: Pod "var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043" satisfied condition "Succeeded or Failed"
Aug 20 12:59:00.728: INFO: Trying to get logs from node ip-172-31-39-75 pod var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043 container dapi-container: <nil>
STEP: delete the pod
Aug 20 12:59:00.755: INFO: Waiting for pod var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043 to disappear
Aug 20 12:59:00.758: INFO: Pod var-expansion-dc8a7d59-1d5a-446d-84b9-f2ee60ee5043 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 12:59:00.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5936" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":258,"skipped":5094,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:00.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9855
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-2aaf0470-8291-4c79-8f56-3654ceb5cb0f
STEP: Creating secret with name s-test-opt-upd-b840e6a0-0b30-4412-b115-377c138ba53a
STEP: Creating the pod
Aug 20 12:59:00.915: INFO: The status of Pod pod-secrets-e3b4d4c4-b06d-42e3-841e-676eea2318da is Pending, waiting for it to be Running (with Ready = true)
Aug 20 12:59:02.921: INFO: The status of Pod pod-secrets-e3b4d4c4-b06d-42e3-841e-676eea2318da is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-2aaf0470-8291-4c79-8f56-3654ceb5cb0f
STEP: Updating secret s-test-opt-upd-b840e6a0-0b30-4412-b115-377c138ba53a
STEP: Creating secret with name s-test-opt-create-19294143-cf64-4083-9368-a4f39fd0563a
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 12:59:04.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9855" for this suite.
•{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":259,"skipped":5113,"failed":0}
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:04.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6952
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:59:05.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Aug 20 12:59:07.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 create -f -'
Aug 20 12:59:07.818: INFO: stderr: ""
Aug 20 12:59:07.818: INFO: stdout: "e2e-test-crd-publish-openapi-637-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 20 12:59:07.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 delete e2e-test-crd-publish-openapi-637-crds test-foo'
Aug 20 12:59:07.871: INFO: stderr: ""
Aug 20 12:59:07.871: INFO: stdout: "e2e-test-crd-publish-openapi-637-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Aug 20 12:59:07.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 apply -f -'
Aug 20 12:59:08.366: INFO: stderr: ""
Aug 20 12:59:08.366: INFO: stdout: "e2e-test-crd-publish-openapi-637-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 20 12:59:08.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 delete e2e-test-crd-publish-openapi-637-crds test-foo'
Aug 20 12:59:08.421: INFO: stderr: ""
Aug 20 12:59:08.421: INFO: stdout: "e2e-test-crd-publish-openapi-637-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Aug 20 12:59:08.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 create -f -'
Aug 20 12:59:08.626: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Aug 20 12:59:08.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 create -f -'
Aug 20 12:59:08.747: INFO: rc: 1
Aug 20 12:59:08.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 apply -f -'
Aug 20 12:59:08.878: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Aug 20 12:59:08.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 create -f -'
Aug 20 12:59:09.007: INFO: rc: 1
Aug 20 12:59:09.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 --namespace=crd-publish-openapi-6952 apply -f -'
Aug 20 12:59:09.129: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Aug 20 12:59:09.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 explain e2e-test-crd-publish-openapi-637-crds'
Aug 20 12:59:09.265: INFO: stderr: ""
Aug 20 12:59:09.265: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-637-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Aug 20 12:59:09.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 explain e2e-test-crd-publish-openapi-637-crds.metadata'
Aug 20 12:59:09.397: INFO: stderr: ""
Aug 20 12:59:09.397: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-637-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Aug 20 12:59:09.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 explain e2e-test-crd-publish-openapi-637-crds.spec'
Aug 20 12:59:09.523: INFO: stderr: ""
Aug 20 12:59:09.523: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-637-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Aug 20 12:59:09.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 explain e2e-test-crd-publish-openapi-637-crds.spec.bars'
Aug 20 12:59:09.658: INFO: stderr: ""
Aug 20 12:59:09.658: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-637-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Aug 20 12:59:09.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6952 explain e2e-test-crd-publish-openapi-637-crds.spec.bars2'
Aug 20 12:59:09.792: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 12:59:11.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6952" for this suite.

• [SLOW TEST:6.818 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":260,"skipped":5114,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:11.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6218
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6218
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-6218
Aug 20 12:59:11.955: INFO: Found 0 stateful pods, waiting for 1
Aug 20 12:59:21.962: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Aug 20 12:59:21.979: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Aug 20 12:59:21.987: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Aug 20 12:59:21.988: INFO: Observed &StatefulSet event: ADDED
Aug 20 12:59:21.988: INFO: Found Statefulset ss in namespace statefulset-6218 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 20 12:59:21.988: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Aug 20 12:59:21.988: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 20 12:59:21.993: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Aug 20 12:59:21.995: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 12:59:21.995: INFO: Deleting all statefulset in ns statefulset-6218
Aug 20 12:59:21.998: INFO: Scaling statefulset ss to 0
Aug 20 12:59:32.020: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 12:59:32.023: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 12:59:32.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6218" for this suite.

• [SLOW TEST:20.235 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":261,"skipped":5143,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:32.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 12:59:32.171: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6588" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":262,"skipped":5190,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:32.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 12:59:32.311: INFO: Waiting up to 5m0s for pod "downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c" in namespace "projected-8417" to be "Succeeded or Failed"
Aug 20 12:59:32.314: INFO: Pod "downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.746703ms
Aug 20 12:59:34.317: INFO: Pod "downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005705197s
Aug 20 12:59:36.325: INFO: Pod "downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013555424s
STEP: Saw pod success
Aug 20 12:59:36.325: INFO: Pod "downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c" satisfied condition "Succeeded or Failed"
Aug 20 12:59:36.327: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c container client-container: <nil>
STEP: delete the pod
Aug 20 12:59:36.347: INFO: Waiting for pod downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c to disappear
Aug 20 12:59:36.350: INFO: Pod downwardapi-volume-45f42c54-e55c-49ff-82ba-45216095811c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 12:59:36.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8417" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":263,"skipped":5193,"failed":0}

------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:36.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-5542
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 12:59:36.495: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-14ace47a-84cd-4fd7-8c0d-5209c8615873" in namespace "security-context-test-5542" to be "Succeeded or Failed"
Aug 20 12:59:36.498: INFO: Pod "busybox-readonly-false-14ace47a-84cd-4fd7-8c0d-5209c8615873": Phase="Pending", Reason="", readiness=false. Elapsed: 2.58062ms
Aug 20 12:59:38.505: INFO: Pod "busybox-readonly-false-14ace47a-84cd-4fd7-8c0d-5209c8615873": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010161321s
Aug 20 12:59:40.511: INFO: Pod "busybox-readonly-false-14ace47a-84cd-4fd7-8c0d-5209c8615873": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01539175s
Aug 20 12:59:40.511: INFO: Pod "busybox-readonly-false-14ace47a-84cd-4fd7-8c0d-5209c8615873" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 20 12:59:40.511: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-5542" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":264,"skipped":5193,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:40.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3019
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Aug 20 12:59:40.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Aug 20 12:59:40.699: INFO: stderr: ""
Aug 20 12:59:40.699: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Aug 20 12:59:40.699: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Aug 20 12:59:40.699: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-3019" to be "running and ready, or succeeded"
Aug 20 12:59:40.702: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.939375ms
Aug 20 12:59:42.709: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.010259345s
Aug 20 12:59:42.709: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Aug 20 12:59:42.709: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Aug 20 12:59:42.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 logs logs-generator logs-generator'
Aug 20 12:59:42.759: INFO: stderr: ""
Aug 20 12:59:42.759: INFO: stdout: "I0820 12:59:41.455724       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/zwcd 467\nI0820 12:59:41.655814       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/skgf 385\nI0820 12:59:41.856277       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/6z95 249\nI0820 12:59:42.056543       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/hvk 248\nI0820 12:59:42.255780       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/49rk 307\nI0820 12:59:42.456080       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/5bgs 254\nI0820 12:59:42.656366       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sqs 416\n"
STEP: limiting log lines
Aug 20 12:59:42.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 logs logs-generator logs-generator --tail=1'
Aug 20 12:59:42.807: INFO: stderr: ""
Aug 20 12:59:42.807: INFO: stdout: "I0820 12:59:42.656366       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sqs 416\n"
Aug 20 12:59:42.807: INFO: got output "I0820 12:59:42.656366       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sqs 416\n"
STEP: limiting log bytes
Aug 20 12:59:42.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 logs logs-generator logs-generator --limit-bytes=1'
Aug 20 12:59:42.864: INFO: stderr: ""
Aug 20 12:59:42.864: INFO: stdout: "I"
Aug 20 12:59:42.864: INFO: got output "I"
STEP: exposing timestamps
Aug 20 12:59:42.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 logs logs-generator logs-generator --tail=1 --timestamps'
Aug 20 12:59:42.914: INFO: stderr: ""
Aug 20 12:59:42.914: INFO: stdout: "2022-08-20T12:59:42.856550706Z I0820 12:59:42.856474       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/9h6 506\n"
Aug 20 12:59:42.914: INFO: got output "2022-08-20T12:59:42.856550706Z I0820 12:59:42.856474       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/9h6 506\n"
STEP: restricting to a time range
Aug 20 12:59:45.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 logs logs-generator logs-generator --since=1s'
Aug 20 12:59:45.467: INFO: stderr: ""
Aug 20 12:59:45.467: INFO: stdout: "I0820 12:59:44.656637       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/dhg 234\nI0820 12:59:44.855803       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/x2h 575\nI0820 12:59:45.056094       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/tjh 583\nI0820 12:59:45.256290       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/khq 485\nI0820 12:59:45.456475       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/wh5 267\n"
Aug 20 12:59:45.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 logs logs-generator logs-generator --since=24h'
Aug 20 12:59:45.519: INFO: stderr: ""
Aug 20 12:59:45.519: INFO: stdout: "I0820 12:59:41.455724       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/zwcd 467\nI0820 12:59:41.655814       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/skgf 385\nI0820 12:59:41.856277       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/6z95 249\nI0820 12:59:42.056543       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/hvk 248\nI0820 12:59:42.255780       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/49rk 307\nI0820 12:59:42.456080       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/5bgs 254\nI0820 12:59:42.656366       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sqs 416\nI0820 12:59:42.856474       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/9h6 506\nI0820 12:59:43.056766       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/xf5 366\nI0820 12:59:43.256049       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/g5j 512\nI0820 12:59:43.456335       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/wz8 543\nI0820 12:59:43.656475       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/kwl 558\nI0820 12:59:43.856765       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/nnm 364\nI0820 12:59:44.056074       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/99fx 387\nI0820 12:59:44.256354       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/s44 367\nI0820 12:59:44.456481       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/24z 364\nI0820 12:59:44.656637       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/dhg 234\nI0820 12:59:44.855803       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/x2h 575\nI0820 12:59:45.056094       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/tjh 583\nI0820 12:59:45.256290       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/khq 485\nI0820 12:59:45.456475       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/wh5 267\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Aug 20 12:59:45.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3019 delete pod logs-generator'
Aug 20 12:59:46.654: INFO: stderr: ""
Aug 20 12:59:46.654: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 12:59:46.654: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3019" for this suite.

• [SLOW TEST:6.144 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":265,"skipped":5203,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 12:59:46.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-e4649b27-468f-4b9c-bd66-508cd17ee586 in namespace container-probe-8920
Aug 20 12:59:48.808: INFO: Started pod liveness-e4649b27-468f-4b9c-bd66-508cd17ee586 in namespace container-probe-8920
STEP: checking the pod's current state and verifying that restartCount is present
Aug 20 12:59:48.812: INFO: Initial restart count of pod liveness-e4649b27-468f-4b9c-bd66-508cd17ee586 is 0
Aug 20 13:00:08.883: INFO: Restart count of pod container-probe-8920/liveness-e4649b27-468f-4b9c-bd66-508cd17ee586 is now 1 (20.071445444s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 13:00:08.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8920" for this suite.

• [SLOW TEST:22.237 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":266,"skipped":5219,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:08.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1515
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-95d99f5e-3352-4e6d-ab70-477c41330190
STEP: Creating a pod to test consume secrets
Aug 20 13:00:09.038: INFO: Waiting up to 5m0s for pod "pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793" in namespace "secrets-1515" to be "Succeeded or Failed"
Aug 20 13:00:09.041: INFO: Pod "pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793": Phase="Pending", Reason="", readiness=false. Elapsed: 2.586782ms
Aug 20 13:00:11.047: INFO: Pod "pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008402734s
Aug 20 13:00:13.054: INFO: Pod "pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015739849s
STEP: Saw pod success
Aug 20 13:00:13.054: INFO: Pod "pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793" satisfied condition "Succeeded or Failed"
Aug 20 13:00:13.057: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793 container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 13:00:13.076: INFO: Waiting for pod pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793 to disappear
Aug 20 13:00:13.079: INFO: Pod pod-secrets-01631de2-458f-4e5a-8dd3-cfa7cdc65793 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 13:00:13.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1515" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":267,"skipped":5229,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:13.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-5007
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Aug 20 13:00:13.225: INFO: created test-podtemplate-1
Aug 20 13:00:13.229: INFO: created test-podtemplate-2
Aug 20 13:00:13.233: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Aug 20 13:00:13.235: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Aug 20 13:00:13.249: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 20 13:00:13.251: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-5007" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":268,"skipped":5240,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:13.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-3381
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Aug 20 13:00:13.403: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 20 13:00:13.403: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-3381" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":269,"skipped":5251,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:13.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1622
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Aug 20 13:00:13.541: INFO: Creating simple deployment test-deployment-8cqf7
Aug 20 13:00:13.551: INFO: new replicaset for deployment "test-deployment-8cqf7" is yet to be created
STEP: Getting /status
Aug 20 13:00:15.568: INFO: Deployment test-deployment-8cqf7 has Conditions: [{Available True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:14 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8cqf7-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Aug 20 13:00:15.577: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 13, 0, 14, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 13, 0, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 20, 13, 0, 14, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 20, 13, 0, 13, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-8cqf7-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Aug 20 13:00:15.579: INFO: Observed &Deployment event: ADDED
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8cqf7-688c4d6789"}
Aug 20 13:00:15.579: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8cqf7-688c4d6789"}
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 20 13:00:15.579: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-8cqf7-688c4d6789" is progressing.}
Aug 20 13:00:15.579: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:14 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8cqf7-688c4d6789" has successfully progressed.}
Aug 20 13:00:15.579: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:14 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 20 13:00:15.579: INFO: Observed Deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8cqf7-688c4d6789" has successfully progressed.}
Aug 20 13:00:15.579: INFO: Found Deployment test-deployment-8cqf7 in namespace deployment-1622 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 20 13:00:15.579: INFO: Deployment test-deployment-8cqf7 has an updated status
STEP: patching the Statefulset Status
Aug 20 13:00:15.579: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 20 13:00:15.585: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Aug 20 13:00:15.586: INFO: Observed &Deployment event: ADDED
Aug 20 13:00:15.586: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8cqf7-688c4d6789"}
Aug 20 13:00:15.586: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.586: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8cqf7-688c4d6789"}
Aug 20 13:00:15.586: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 20 13:00:15.586: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:13 +0000 UTC 2022-08-20 13:00:13 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-8cqf7-688c4d6789" is progressing.}
Aug 20 13:00:15.587: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:14 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8cqf7-688c4d6789" has successfully progressed.}
Aug 20 13:00:15.587: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:14 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-20 13:00:14 +0000 UTC 2022-08-20 13:00:13 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8cqf7-688c4d6789" has successfully progressed.}
Aug 20 13:00:15.587: INFO: Observed deployment test-deployment-8cqf7 in namespace deployment-1622 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 20 13:00:15.587: INFO: Observed &Deployment event: MODIFIED
Aug 20 13:00:15.587: INFO: Found deployment test-deployment-8cqf7 in namespace deployment-1622 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Aug 20 13:00:15.587: INFO: Deployment test-deployment-8cqf7 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 13:00:15.589: INFO: Deployment "test-deployment-8cqf7":
&Deployment{ObjectMeta:{test-deployment-8cqf7  deployment-1622  db69c76f-ad95-4f35-9bfd-e9d1ed0b1f2c 32367 1 2022-08-20 13:00:13 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-20 13:00:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 13:00:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status} {e2e.test Update apps/v1 2022-08-20 13:00:15 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004a52ff8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 20 13:00:15.594: INFO: New ReplicaSet "test-deployment-8cqf7-688c4d6789" of Deployment "test-deployment-8cqf7":
&ReplicaSet{ObjectMeta:{test-deployment-8cqf7-688c4d6789  deployment-1622  a888039b-4f44-439f-a40c-9db3ba4b8eb7 32364 1 2022-08-20 13:00:13 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-8cqf7 db69c76f-ad95-4f35-9bfd-e9d1ed0b1f2c 0xc004a70130 0xc004a70131}] []  [{kube-controller-manager Update apps/v1 2022-08-20 13:00:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"db69c76f-ad95-4f35-9bfd-e9d1ed0b1f2c\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 13:00:14 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004a701e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 20 13:00:15.596: INFO: Pod "test-deployment-8cqf7-688c4d6789-rrk2t" is available:
&Pod{ObjectMeta:{test-deployment-8cqf7-688c4d6789-rrk2t test-deployment-8cqf7-688c4d6789- deployment-1622  422d097e-a939-4e20-b2d6-6633b4a798c1 32363 0 2022-08-20 13:00:13 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-8cqf7-688c4d6789 a888039b-4f44-439f-a40c-9db3ba4b8eb7 0xc0049ebc70 0xc0049ebc71}] []  [{kube-controller-manager Update v1 2022-08-20 13:00:13 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a888039b-4f44-439f-a40c-9db3ba4b8eb7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 13:00:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.46\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gdwf6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gdwf6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:00:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:00:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:00:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:00:13 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.46,StartTime:2022-08-20 13:00:13 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 13:00:14 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bb01a70ec58318e8eb1ac9462dd60400c7586bd427d5ead29f860978e2ad5a15,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.46,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 13:00:15.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1622" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":270,"skipped":5290,"failed":0}
S
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:15.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7468
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Aug 20 13:00:18.259: INFO: Successfully updated pod "adopt-release-9szq2"
STEP: Checking that the Job readopts the Pod
Aug 20 13:00:18.259: INFO: Waiting up to 15m0s for pod "adopt-release-9szq2" in namespace "job-7468" to be "adopted"
Aug 20 13:00:18.261: INFO: Pod "adopt-release-9szq2": Phase="Running", Reason="", readiness=true. Elapsed: 2.638966ms
Aug 20 13:00:20.267: INFO: Pod "adopt-release-9szq2": Phase="Running", Reason="", readiness=true. Elapsed: 2.00865535s
Aug 20 13:00:20.267: INFO: Pod "adopt-release-9szq2" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Aug 20 13:00:20.780: INFO: Successfully updated pod "adopt-release-9szq2"
STEP: Checking that the Job releases the Pod
Aug 20 13:00:20.780: INFO: Waiting up to 15m0s for pod "adopt-release-9szq2" in namespace "job-7468" to be "released"
Aug 20 13:00:20.783: INFO: Pod "adopt-release-9szq2": Phase="Running", Reason="", readiness=true. Elapsed: 3.098002ms
Aug 20 13:00:22.790: INFO: Pod "adopt-release-9szq2": Phase="Running", Reason="", readiness=true. Elapsed: 2.00966317s
Aug 20 13:00:22.790: INFO: Pod "adopt-release-9szq2" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 20 13:00:22.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7468" for this suite.

• [SLOW TEST:7.192 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":271,"skipped":5291,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:22.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4633
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug 20 13:00:22.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4633 create -f -'
Aug 20 13:00:23.295: INFO: stderr: ""
Aug 20 13:00:23.295: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 20 13:00:24.301: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 13:00:24.301: INFO: Found 0 / 1
Aug 20 13:00:25.301: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 13:00:25.301: INFO: Found 1 / 1
Aug 20 13:00:25.301: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Aug 20 13:00:25.304: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 13:00:25.304: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 20 13:00:25.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4633 patch pod agnhost-primary-p6gr5 -p {"metadata":{"annotations":{"x":"y"}}}'
Aug 20 13:00:25.364: INFO: stderr: ""
Aug 20 13:00:25.364: INFO: stdout: "pod/agnhost-primary-p6gr5 patched\n"
STEP: checking annotations
Aug 20 13:00:25.367: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 20 13:00:25.367: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 13:00:25.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4633" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":272,"skipped":5311,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:25.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9475
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Aug 20 13:00:25.514: INFO: Waiting up to 5m0s for pod "var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11" in namespace "var-expansion-9475" to be "Succeeded or Failed"
Aug 20 13:00:25.516: INFO: Pod "var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.552825ms
Aug 20 13:00:27.522: INFO: Pod "var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00856931s
Aug 20 13:00:29.527: INFO: Pod "var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012901309s
STEP: Saw pod success
Aug 20 13:00:29.527: INFO: Pod "var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11" satisfied condition "Succeeded or Failed"
Aug 20 13:00:29.530: INFO: Trying to get logs from node ip-172-31-71-246 pod var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11 container dapi-container: <nil>
STEP: delete the pod
Aug 20 13:00:29.554: INFO: Waiting for pod var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11 to disappear
Aug 20 13:00:29.557: INFO: Pod var-expansion-35b235ce-2d3a-465a-82a5-91b490f3ec11 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 13:00:29.557: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9475" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":273,"skipped":5319,"failed":0}

------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:29.564: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5024
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-bc0619ac-9a4d-41ff-a8c5-b17d8849d05c
STEP: Creating a pod to test consume configMaps
Aug 20 13:00:29.706: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598" in namespace "projected-5024" to be "Succeeded or Failed"
Aug 20 13:00:29.708: INFO: Pod "pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598": Phase="Pending", Reason="", readiness=false. Elapsed: 2.303876ms
Aug 20 13:00:31.714: INFO: Pod "pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008375843s
Aug 20 13:00:33.722: INFO: Pod "pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016405462s
STEP: Saw pod success
Aug 20 13:00:33.722: INFO: Pod "pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598" satisfied condition "Succeeded or Failed"
Aug 20 13:00:33.725: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 13:00:33.741: INFO: Waiting for pod pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598 to disappear
Aug 20 13:00:33.743: INFO: Pod pod-projected-configmaps-0cf67129-2ab6-42b0-b24e-a48620fd9598 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 13:00:33.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5024" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":274,"skipped":5319,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:33.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3133
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Aug 20 13:00:33.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3133" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":275,"skipped":5363,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:33.908: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-6565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 20 13:00:34.044: INFO: Waiting up to 5m0s for pod "security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62" in namespace "security-context-6565" to be "Succeeded or Failed"
Aug 20 13:00:34.046: INFO: Pod "security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62": Phase="Pending", Reason="", readiness=false. Elapsed: 2.581909ms
Aug 20 13:00:36.052: INFO: Pod "security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008712334s
Aug 20 13:00:38.061: INFO: Pod "security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017128516s
STEP: Saw pod success
Aug 20 13:00:38.061: INFO: Pod "security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62" satisfied condition "Succeeded or Failed"
Aug 20 13:00:38.064: INFO: Trying to get logs from node ip-172-31-71-246 pod security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62 container test-container: <nil>
STEP: delete the pod
Aug 20 13:00:38.079: INFO: Waiting for pod security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62 to disappear
Aug 20 13:00:38.082: INFO: Pod security-context-a7cd7a01-051c-4f6a-b61c-2d116566fe62 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 20 13:00:38.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-6565" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":276,"skipped":5390,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:38.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1542
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 20 13:00:38.225: INFO: Waiting up to 5m0s for pod "pod-a3688559-d1d7-4b19-92b8-65607df180f1" in namespace "emptydir-1542" to be "Succeeded or Failed"
Aug 20 13:00:38.228: INFO: Pod "pod-a3688559-d1d7-4b19-92b8-65607df180f1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.488149ms
Aug 20 13:00:40.232: INFO: Pod "pod-a3688559-d1d7-4b19-92b8-65607df180f1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006830264s
Aug 20 13:00:42.240: INFO: Pod "pod-a3688559-d1d7-4b19-92b8-65607df180f1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014335198s
STEP: Saw pod success
Aug 20 13:00:42.240: INFO: Pod "pod-a3688559-d1d7-4b19-92b8-65607df180f1" satisfied condition "Succeeded or Failed"
Aug 20 13:00:42.242: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-a3688559-d1d7-4b19-92b8-65607df180f1 container test-container: <nil>
STEP: delete the pod
Aug 20 13:00:42.256: INFO: Waiting for pod pod-a3688559-d1d7-4b19-92b8-65607df180f1 to disappear
Aug 20 13:00:42.259: INFO: Pod pod-a3688559-d1d7-4b19-92b8-65607df180f1 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 13:00:42.259: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1542" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5406,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:42.267: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-7054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 20 13:00:42.408: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:00:44.411: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 20 13:00:44.424: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:00:46.431: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 20 13:00:46.456: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 20 13:00:46.459: INFO: Pod pod-with-poststart-http-hook still exists
Aug 20 13:00:48.459: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 20 13:00:48.466: INFO: Pod pod-with-poststart-http-hook still exists
Aug 20 13:00:50.460: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 20 13:00:50.465: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 20 13:00:50.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-7054" for this suite.

• [SLOW TEST:8.207 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":278,"skipped":5446,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:50.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6301
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 13:00:50.817: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 13:00:53.841: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:00:53.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6471-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:00:56.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6301" for this suite.
STEP: Destroying namespace "webhook-6301-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.490 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":279,"skipped":5473,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:56.965: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3850
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:00:57.111: INFO: created pod pod-service-account-defaultsa
Aug 20 13:00:57.111: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Aug 20 13:00:57.115: INFO: created pod pod-service-account-mountsa
Aug 20 13:00:57.115: INFO: pod pod-service-account-mountsa service account token volume mount: true
Aug 20 13:00:57.120: INFO: created pod pod-service-account-nomountsa
Aug 20 13:00:57.120: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Aug 20 13:00:57.125: INFO: created pod pod-service-account-defaultsa-mountspec
Aug 20 13:00:57.125: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Aug 20 13:00:57.129: INFO: created pod pod-service-account-mountsa-mountspec
Aug 20 13:00:57.129: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Aug 20 13:00:57.136: INFO: created pod pod-service-account-nomountsa-mountspec
Aug 20 13:00:57.136: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Aug 20 13:00:57.141: INFO: created pod pod-service-account-defaultsa-nomountspec
Aug 20 13:00:57.141: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Aug 20 13:00:57.147: INFO: created pod pod-service-account-mountsa-nomountspec
Aug 20 13:00:57.147: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Aug 20 13:00:57.153: INFO: created pod pod-service-account-nomountsa-nomountspec
Aug 20 13:00:57.153: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 20 13:00:57.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3850" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":280,"skipped":5490,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:00:57.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8278
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 20 13:01:24.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8278" for this suite.

• [SLOW TEST:27.382 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":281,"skipped":5498,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:24.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-6235
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:01:24.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-6235" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":282,"skipped":5520,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:24.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-3314
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-3314-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 20 13:01:24.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-3314" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":283,"skipped":5535,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:24.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1175
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:01:24.979: INFO: Endpoints addresses: [172.31.3.42 172.31.39.232] , ports: [6443]
Aug 20 13:01:24.979: INFO: EndpointSlices addresses: [172.31.3.42 172.31.39.232] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 20 13:01:24.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1175" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":284,"skipped":5548,"failed":0}
SSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:24.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-4308
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Aug 20 13:01:25.218: INFO: Waiting up to 5m0s for pod "client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330" in namespace "containers-4308" to be "Succeeded or Failed"
Aug 20 13:01:25.220: INFO: Pod "client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330": Phase="Pending", Reason="", readiness=false. Elapsed: 2.624235ms
Aug 20 13:01:27.227: INFO: Pod "client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009293795s
Aug 20 13:01:29.234: INFO: Pod "client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016218972s
STEP: Saw pod success
Aug 20 13:01:29.234: INFO: Pod "client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330" satisfied condition "Succeeded or Failed"
Aug 20 13:01:29.237: INFO: Trying to get logs from node ip-172-31-39-75 pod client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 13:01:29.258: INFO: Waiting for pod client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330 to disappear
Aug 20 13:01:29.260: INFO: Pod client-containers-8d26b41e-cb0d-4776-8b3e-f0dd4ca00330 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 20 13:01:29.260: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-4308" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5551,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:29.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-1480
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug 20 13:01:29.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-1480" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":286,"skipped":5617,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:29.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4102
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-0d2c29e4-9272-4097-8f86-707ec7d2f0bb
STEP: Creating a pod to test consume secrets
Aug 20 13:01:29.574: INFO: Waiting up to 5m0s for pod "pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3" in namespace "secrets-4102" to be "Succeeded or Failed"
Aug 20 13:01:29.577: INFO: Pod "pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.689507ms
Aug 20 13:01:31.583: INFO: Pod "pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009330848s
Aug 20 13:01:33.590: INFO: Pod "pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016426791s
STEP: Saw pod success
Aug 20 13:01:33.590: INFO: Pod "pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3" satisfied condition "Succeeded or Failed"
Aug 20 13:01:33.593: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3 container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 13:01:33.609: INFO: Waiting for pod pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3 to disappear
Aug 20 13:01:33.612: INFO: Pod pod-secrets-b4441293-a38f-4546-9040-f34bbf3cdeb3 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 13:01:33.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4102" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5645,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:33.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-3659
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 20 13:01:37.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-3659" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":288,"skipped":5656,"failed":0}
SS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:37.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-3956
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 20 13:01:43.966: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-3956" for this suite.

• [SLOW TEST:6.196 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":289,"skipped":5658,"failed":0}
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:43.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 20 13:01:44.126: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:01:44.126: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:01:44.128: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:01:44.128: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:01:45.135: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:01:45.135: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:01:45.138: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:01:45.138: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:01:46.134: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:01:46.134: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:01:46.137: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 13:01:46.137: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Aug 20 13:01:46.157: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33472"},"items":null}

Aug 20 13:01:46.160: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33472"},"items":[{"metadata":{"name":"daemon-set-f982b","generateName":"daemon-set-","namespace":"daemonsets-1506","uid":"f01f342a-b54d-43b9-985b-6ea7e690de48","resourceVersion":"33469","creationTimestamp":"2022-08-20T13:01:44Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c76ac33d-bb1f-4234-96ff-e3c52154d474","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-20T13:01:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c76ac33d-bb1f-4234-96ff-e3c52154d474\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-20T13:01:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gptvh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gptvh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-39-75","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-39-75"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:44Z"}],"hostIP":"172.31.39.75","podIP":"192.168.45.37","podIPs":[{"ip":"192.168.45.37"}],"startTime":"2022-08-20T13:01:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-20T13:01:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://37048682ab10e0d82995163c91570991c345d39387c09b486d153c0bb1f07374","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gjjs7","generateName":"daemon-set-","namespace":"daemonsets-1506","uid":"ae0fa495-e6b2-4b12-8311-a9f003ae1e0c","resourceVersion":"33465","creationTimestamp":"2022-08-20T13:01:44Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c76ac33d-bb1f-4234-96ff-e3c52154d474","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-20T13:01:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c76ac33d-bb1f-4234-96ff-e3c52154d474\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-20T13:01:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.124.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8tchn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8tchn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-71-246","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-71-246"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:44Z"}],"hostIP":"172.31.71.246","podIP":"192.168.124.68","podIPs":[{"ip":"192.168.124.68"}],"startTime":"2022-08-20T13:01:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-20T13:01:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://d93138d22e4afa578daf61dbaee64a6642747a596b4154a8eb8a30e54205cc5a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-hlltm","generateName":"daemon-set-","namespace":"daemonsets-1506","uid":"8c77cca5-0b1a-4c96-aebd-2b4f357ab4e8","resourceVersion":"33468","creationTimestamp":"2022-08-20T13:01:44Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c76ac33d-bb1f-4234-96ff-e3c52154d474","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-20T13:01:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c76ac33d-bb1f-4234-96ff-e3c52154d474\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-20T13:01:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.18.10\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fsj2d","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fsj2d","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-90-25","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-90-25"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:45Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:45Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-20T13:01:44Z"}],"hostIP":"172.31.90.25","podIP":"192.168.18.10","podIPs":[{"ip":"192.168.18.10"}],"startTime":"2022-08-20T13:01:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-20T13:01:44Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://b967abf58834d9d97de772666f646d7a9c831a9ef2d69422131b1f324895391d","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:01:46.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1506" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":290,"skipped":5664,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:46.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-3907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3907 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3907;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3907 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3907;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3907.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3907.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3907.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3907.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3907.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3907.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3907.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3907.svc;check="$$(dig +notcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3907 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3907;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3907 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3907;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3907.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3907.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3907.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3907.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3907.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3907.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3907.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3907.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3907.svc;check="$$(dig +notcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 13:01:48.348: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.351: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.355: INFO: Unable to read wheezy_udp@dns-test-service.dns-3907 from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.358: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3907 from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.361: INFO: Unable to read wheezy_udp@dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.364: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.368: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.370: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.387: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.390: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.393: INFO: Unable to read jessie_udp@dns-test-service.dns-3907 from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.397: INFO: Unable to read jessie_tcp@dns-test-service.dns-3907 from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.399: INFO: Unable to read jessie_udp@dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.403: INFO: Unable to read jessie_tcp@dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.406: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.409: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:48.422: INFO: Lookups using dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3907 wheezy_tcp@dns-test-service.dns-3907 wheezy_udp@dns-test-service.dns-3907.svc wheezy_tcp@dns-test-service.dns-3907.svc wheezy_udp@_http._tcp.dns-test-service.dns-3907.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3907.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3907 jessie_tcp@dns-test-service.dns-3907 jessie_udp@dns-test-service.dns-3907.svc jessie_tcp@dns-test-service.dns-3907.svc jessie_udp@_http._tcp.dns-test-service.dns-3907.svc jessie_tcp@_http._tcp.dns-test-service.dns-3907.svc]

Aug 20 13:01:53.451: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3907.svc from pod dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410: the server could not find the requested resource (get pods dns-test-c13a5002-3987-40ac-b87c-b68431c50410)
Aug 20 13:01:53.503: INFO: Lookups using dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410 failed for: [wheezy_tcp@_http._tcp.dns-test-service.dns-3907.svc]

Aug 20 13:01:58.502: INFO: DNS probes using dns-3907/dns-test-c13a5002-3987-40ac-b87c-b68431c50410 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 13:01:58.553: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-3907" for this suite.

• [SLOW TEST:12.381 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":291,"skipped":5735,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:01:58.564: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1219
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 13:01:58.698: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c" in namespace "downward-api-1219" to be "Succeeded or Failed"
Aug 20 13:01:58.700: INFO: Pod "downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.898801ms
Aug 20 13:02:00.705: INFO: Pod "downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006984591s
Aug 20 13:02:02.711: INFO: Pod "downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013736877s
STEP: Saw pod success
Aug 20 13:02:02.711: INFO: Pod "downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c" satisfied condition "Succeeded or Failed"
Aug 20 13:02:02.714: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c container client-container: <nil>
STEP: delete the pod
Aug 20 13:02:02.733: INFO: Waiting for pod downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c to disappear
Aug 20 13:02:02.735: INFO: Pod downwardapi-volume-b72a3fd5-fd1e-4abc-b096-3a10e9d8932c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 13:02:02.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1219" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":292,"skipped":5773,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:02.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:02:04.899: INFO: Deleting pod "var-expansion-b103cd9d-3f41-4052-9f42-76e5a49c43ad" in namespace "var-expansion-2433"
Aug 20 13:02:04.907: INFO: Wait up to 5m0s for pod "var-expansion-b103cd9d-3f41-4052-9f42-76e5a49c43ad" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 13:02:06.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2433" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":293,"skipped":5784,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:06.927: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 13:02:07.068: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816" in namespace "projected-4538" to be "Succeeded or Failed"
Aug 20 13:02:07.177: INFO: Pod "downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816": Phase="Pending", Reason="", readiness=false. Elapsed: 109.527238ms
Aug 20 13:02:09.185: INFO: Pod "downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816": Phase="Pending", Reason="", readiness=false. Elapsed: 2.117609846s
Aug 20 13:02:11.190: INFO: Pod "downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.122650477s
STEP: Saw pod success
Aug 20 13:02:11.190: INFO: Pod "downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816" satisfied condition "Succeeded or Failed"
Aug 20 13:02:11.193: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816 container client-container: <nil>
STEP: delete the pod
Aug 20 13:02:11.217: INFO: Waiting for pod downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816 to disappear
Aug 20 13:02:11.220: INFO: Pod downwardapi-volume-c5531f1b-4967-4c48-abe8-bc0e979da816 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 13:02:11.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4538" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":294,"skipped":5785,"failed":0}
S
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:11.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6572
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6572
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-6572
STEP: creating replication controller externalsvc in namespace services-6572
I0820 13:02:11.379400      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6572, replica count: 2
I0820 13:02:14.430474      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Aug 20 13:02:14.446: INFO: Creating new exec pod
Aug 20 13:02:16.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-6572 exec execpodl26hd -- /bin/sh -x -c nslookup clusterip-service.services-6572.svc.cluster.local'
Aug 20 13:02:16.614: INFO: stderr: "+ nslookup clusterip-service.services-6572.svc.cluster.local\n"
Aug 20 13:02:16.614: INFO: stdout: "Server:\t\t10.152.183.233\nAddress:\t10.152.183.233#53\n\nclusterip-service.services-6572.svc.cluster.local\tcanonical name = externalsvc.services-6572.svc.cluster.local.\nName:\texternalsvc.services-6572.svc.cluster.local\nAddress: 10.152.183.48\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6572, will wait for the garbage collector to delete the pods
Aug 20 13:02:16.674: INFO: Deleting ReplicationController externalsvc took: 6.618732ms
Aug 20 13:02:16.775: INFO: Terminating ReplicationController externalsvc pods took: 100.715431ms
Aug 20 13:02:18.993: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:02:19.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6572" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.782 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":295,"skipped":5786,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:19.010: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4189
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-bc7ffca0-1b6b-40b0-8859-af616d521511
STEP: Creating a pod to test consume secrets
Aug 20 13:02:19.149: INFO: Waiting up to 5m0s for pod "pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd" in namespace "secrets-4189" to be "Succeeded or Failed"
Aug 20 13:02:19.151: INFO: Pod "pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.501859ms
Aug 20 13:02:21.157: INFO: Pod "pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007955782s
Aug 20 13:02:23.164: INFO: Pod "pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01535654s
STEP: Saw pod success
Aug 20 13:02:23.164: INFO: Pod "pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd" satisfied condition "Succeeded or Failed"
Aug 20 13:02:23.167: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd container secret-volume-test: <nil>
STEP: delete the pod
Aug 20 13:02:23.182: INFO: Waiting for pod pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd to disappear
Aug 20 13:02:23.185: INFO: Pod pod-secrets-c226fa6a-45f6-418a-998a-4bd46d5d29dd no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 13:02:23.185: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4189" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":296,"skipped":5793,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:23.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-408
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:02:23.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 20 13:02:25.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-408 --namespace=crd-publish-openapi-408 create -f -'
Aug 20 13:02:25.946: INFO: stderr: ""
Aug 20 13:02:25.946: INFO: stdout: "e2e-test-crd-publish-openapi-7847-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 20 13:02:25.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-408 --namespace=crd-publish-openapi-408 delete e2e-test-crd-publish-openapi-7847-crds test-cr'
Aug 20 13:02:25.999: INFO: stderr: ""
Aug 20 13:02:25.999: INFO: stdout: "e2e-test-crd-publish-openapi-7847-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Aug 20 13:02:25.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-408 --namespace=crd-publish-openapi-408 apply -f -'
Aug 20 13:02:26.389: INFO: stderr: ""
Aug 20 13:02:26.389: INFO: stdout: "e2e-test-crd-publish-openapi-7847-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 20 13:02:26.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-408 --namespace=crd-publish-openapi-408 delete e2e-test-crd-publish-openapi-7847-crds test-cr'
Aug 20 13:02:26.441: INFO: stderr: ""
Aug 20 13:02:26.441: INFO: stdout: "e2e-test-crd-publish-openapi-7847-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 20 13:02:26.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-408 explain e2e-test-crd-publish-openapi-7847-crds'
Aug 20 13:02:26.573: INFO: stderr: ""
Aug 20 13:02:26.573: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7847-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:02:28.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-408" for this suite.

• [SLOW TEST:5.452 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":297,"skipped":5806,"failed":0}
S
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:28.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-6814
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 20 13:02:28.770: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 20 13:02:33.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-6814" for this suite.

• [SLOW TEST:5.352 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":298,"skipped":5807,"failed":0}
SSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:02:33.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7336
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-934a49fd-b5e2-4225-af42-a0d9127d79ec in namespace container-probe-7336
Aug 20 13:02:36.146: INFO: Started pod liveness-934a49fd-b5e2-4225-af42-a0d9127d79ec in namespace container-probe-7336
STEP: checking the pod's current state and verifying that restartCount is present
Aug 20 13:02:36.149: INFO: Initial restart count of pod liveness-934a49fd-b5e2-4225-af42-a0d9127d79ec is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 13:06:36.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7336" for this suite.

• [SLOW TEST:242.991 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5814,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:06:36.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9558
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 13:06:37.363: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 13:06:40.387: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:06:40.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9558" for this suite.
STEP: Destroying namespace "webhook-9558-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":300,"skipped":5841,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:06:40.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-7081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 20 13:06:40.762: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 20 13:06:40.770: INFO: Waiting for terminating namespaces to be deleted...
Aug 20 13:06:40.773: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-39-75 before test
Aug 20 13:06:40.778: INFO: nginx-ingress-controller-kubernetes-worker-m6xxn from ingress-nginx-kubernetes-worker started at 2022-08-20 12:29:08 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.778: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 13:06:40.778: INFO: sonobuoy from sonobuoy started at 2022-08-20 11:50:09 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.778: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 20 13:06:40.778: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-7v72s from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:06:40.778: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:06:40.778: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 13:06:40.778: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-71-246 before test
Aug 20 13:06:40.783: INFO: nginx-ingress-controller-kubernetes-worker-5ttn2 from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:22 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.783: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 13:06:40.783: INFO: sonobuoy-e2e-job-17b0c7b96371488a from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:06:40.783: INFO: 	Container e2e ready: true, restart count 0
Aug 20 13:06:40.783: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:06:40.783: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-lrmrk from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:06:40.783: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:06:40.783: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 13:06:40.783: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-90-25 before test
Aug 20 13:06:40.788: INFO: default-http-backend-kubernetes-worker-6c59687bf6-5hggx from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.788: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 20 13:06:40.788: INFO: nginx-ingress-controller-kubernetes-worker-5jxfd from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.788: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 13:06:40.788: INFO: calico-kube-controllers-6fc5ff4dbc-hmtvb from kube-system started at 2022-08-20 11:47:08 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.788: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 20 13:06:40.788: INFO: coredns-86c98bfcdb-ql6b4 from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.788: INFO: 	Container coredns ready: true, restart count 0
Aug 20 13:06:40.788: INFO: kube-state-metrics-5cdbfd47b4-8s9rt from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.788: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 20 13:06:40.788: INFO: metrics-server-v0.5.2-6bfd958b56-tgs28 from kube-system started at 2022-08-20 11:47:08 +0000 UTC (2 container statuses recorded)
Aug 20 13:06:40.788: INFO: 	Container metrics-server ready: true, restart count 0
Aug 20 13:06:40.788: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 20 13:06:40.788: INFO: dashboard-metrics-scraper-8669b59d4f-tw6l4 from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.789: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 20 13:06:40.789: INFO: kubernetes-dashboard-585fc6bc87-6h7cf from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:06:40.789: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 20 13:06:40.789: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-8tk2v from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:06:40.789: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:06:40.789: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-655cf803-40f5-4420-8bf9-cf5c8f86f941 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-655cf803-40f5-4420-8bf9-cf5c8f86f941 off the node ip-172-31-39-75
STEP: verifying the node doesn't have the label kubernetes.io/e2e-655cf803-40f5-4420-8bf9-cf5c8f86f941
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:06:44.867: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-7081" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":301,"skipped":5846,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:06:44.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-8089
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:06:45.040: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"9c8deae9-05f3-4163-b18e-011a3edc2af8", Controller:(*bool)(0xc0020ae716), BlockOwnerDeletion:(*bool)(0xc0020ae717)}}
Aug 20 13:06:45.047: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ed080590-8e7d-4a9e-976c-893f61688a67", Controller:(*bool)(0xc0020af076), BlockOwnerDeletion:(*bool)(0xc0020af077)}}
Aug 20 13:06:45.052: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"62660f3e-cfe8-42c0-a2bb-5d1566af6bf9", Controller:(*bool)(0xc003828016), BlockOwnerDeletion:(*bool)(0xc003828017)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 20 13:06:50.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-8089" for this suite.

• [SLOW TEST:5.202 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":302,"skipped":5894,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:06:50.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6974
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Aug 20 13:06:50.221: INFO: The status of Pod pod-hostip-94ea492b-a0ae-4afc-8426-3169d9e6724e is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:06:52.228: INFO: The status of Pod pod-hostip-94ea492b-a0ae-4afc-8426-3169d9e6724e is Running (Ready = true)
Aug 20 13:06:52.235: INFO: Pod pod-hostip-94ea492b-a0ae-4afc-8426-3169d9e6724e has hostIP: 172.31.39.75
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 20 13:06:52.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6974" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":303,"skipped":5899,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:06:52.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1495
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:06:52.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1495" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":304,"skipped":5903,"failed":0}
SSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:06:52.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7368
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:06:52.584: INFO: Create a RollingUpdate DaemonSet
Aug 20 13:06:52.589: INFO: Check that daemon pods launch on every node of the cluster
Aug 20 13:06:52.593: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:52.593: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:52.597: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:06:52.597: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:06:53.602: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:53.602: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:53.606: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:06:53.606: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:06:54.603: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:54.603: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:54.607: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 13:06:54.607: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Aug 20 13:06:54.607: INFO: Update the DaemonSet to trigger a rollout
Aug 20 13:06:54.617: INFO: Updating DaemonSet daemon-set
Aug 20 13:06:57.635: INFO: Roll back the DaemonSet before rollout is complete
Aug 20 13:06:57.645: INFO: Updating DaemonSet daemon-set
Aug 20 13:06:57.645: INFO: Make sure DaemonSet rollback is complete
Aug 20 13:06:57.650: INFO: Wrong image for pod: daemon-set-q6th9. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Aug 20 13:06:57.650: INFO: Pod daemon-set-q6th9 is not available
Aug 20 13:06:57.653: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:57.653: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:58.663: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:58.663: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:59.660: INFO: Pod daemon-set-9tfhw is not available
Aug 20 13:06:59.664: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:06:59.664: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7368, will wait for the garbage collector to delete the pods
Aug 20 13:06:59.733: INFO: Deleting DaemonSet.extensions daemon-set took: 8.173392ms
Aug 20 13:06:59.834: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.688799ms
Aug 20 13:07:02.440: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:07:02.440: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 20 13:07:02.443: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34980"},"items":null}

Aug 20 13:07:02.446: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34980"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:07:02.461: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7368" for this suite.

• [SLOW TEST:10.036 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":305,"skipped":5907,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:07:02.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-34884878-3faa-4d8c-ad71-a5af237ccca6
STEP: Creating configMap with name cm-test-opt-upd-b0aa40a8-8668-44fb-b80a-c3379f7ef5ec
STEP: Creating the pod
Aug 20 13:07:02.626: INFO: The status of Pod pod-configmaps-36fec338-f718-4a9e-ae43-9d942396970f is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:07:04.634: INFO: The status of Pod pod-configmaps-36fec338-f718-4a9e-ae43-9d942396970f is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-34884878-3faa-4d8c-ad71-a5af237ccca6
STEP: Updating configmap cm-test-opt-upd-b0aa40a8-8668-44fb-b80a-c3379f7ef5ec
STEP: Creating configMap with name cm-test-opt-create-67472885-27cf-4b8f-a8cf-60fbe5b3a018
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 13:07:08.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9826" for this suite.

• [SLOW TEST:6.278 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":306,"skipped":5920,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:07:08.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9007
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 20 13:07:09.011: INFO: Waiting up to 5m0s for pod "pod-e394448c-f603-4d97-b882-ed09ddff87b5" in namespace "emptydir-9007" to be "Succeeded or Failed"
Aug 20 13:07:09.172: INFO: Pod "pod-e394448c-f603-4d97-b882-ed09ddff87b5": Phase="Pending", Reason="", readiness=false. Elapsed: 161.573747ms
Aug 20 13:07:11.177: INFO: Pod "pod-e394448c-f603-4d97-b882-ed09ddff87b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.166753932s
Aug 20 13:07:13.232: INFO: Pod "pod-e394448c-f603-4d97-b882-ed09ddff87b5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.221541672s
STEP: Saw pod success
Aug 20 13:07:13.232: INFO: Pod "pod-e394448c-f603-4d97-b882-ed09ddff87b5" satisfied condition "Succeeded or Failed"
Aug 20 13:07:13.236: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-e394448c-f603-4d97-b882-ed09ddff87b5 container test-container: <nil>
STEP: delete the pod
Aug 20 13:07:13.393: INFO: Waiting for pod pod-e394448c-f603-4d97-b882-ed09ddff87b5 to disappear
Aug 20 13:07:13.397: INFO: Pod pod-e394448c-f603-4d97-b882-ed09ddff87b5 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 13:07:13.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9007" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5928,"failed":0}
SSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:07:13.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4627
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-bf2d4318-5297-43dd-a216-eb3010e77459
STEP: Creating a pod to test consume configMaps
Aug 20 13:07:13.669: INFO: Waiting up to 5m0s for pod "pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1" in namespace "configmap-4627" to be "Succeeded or Failed"
Aug 20 13:07:13.811: INFO: Pod "pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1": Phase="Pending", Reason="", readiness=false. Elapsed: 142.388197ms
Aug 20 13:07:15.816: INFO: Pod "pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.147501999s
Aug 20 13:07:17.820: INFO: Pod "pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.151609967s
STEP: Saw pod success
Aug 20 13:07:17.820: INFO: Pod "pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1" satisfied condition "Succeeded or Failed"
Aug 20 13:07:17.824: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 13:07:17.845: INFO: Waiting for pod pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1 to disappear
Aug 20 13:07:17.852: INFO: Pod pod-configmaps-82bb6633-c238-4aca-aafb-578b7b36eaa1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 13:07:17.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4627" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":308,"skipped":5934,"failed":0}
SS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:07:17.864: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1246
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Aug 20 13:07:38.108: INFO: EndpointSlice for Service endpointslice-1246/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 20 13:07:48.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1246" for this suite.

• [SLOW TEST:30.270 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":309,"skipped":5936,"failed":0}
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:07:48.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3551
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug 20 13:07:48.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:08:01.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3551" for this suite.

• [SLOW TEST:13.639 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":310,"skipped":5940,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:01.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1452
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 20 13:08:01.908: INFO: Waiting up to 5m0s for pod "downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb" in namespace "downward-api-1452" to be "Succeeded or Failed"
Aug 20 13:08:01.911: INFO: Pod "downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.418591ms
Aug 20 13:08:03.917: INFO: Pod "downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009043165s
Aug 20 13:08:05.924: INFO: Pod "downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015237527s
STEP: Saw pod success
Aug 20 13:08:05.924: INFO: Pod "downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb" satisfied condition "Succeeded or Failed"
Aug 20 13:08:05.927: INFO: Trying to get logs from node ip-172-31-39-75 pod downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb container dapi-container: <nil>
STEP: delete the pod
Aug 20 13:08:05.952: INFO: Waiting for pod downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb to disappear
Aug 20 13:08:05.954: INFO: Pod downward-api-800cd5ec-ae5b-4484-a64f-dc7f256c9ccb no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 20 13:08:05.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1452" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":311,"skipped":5953,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:05.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4332
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4332.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-4332.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4332.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4332.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 20 13:08:08.137: INFO: DNS probes using dns-4332/dns-test-965571da-1dc9-49a5-bfe9-4dabc42e42a0 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 20 13:08:08.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4332" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":312,"skipped":5967,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:08.167: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Aug 20 13:08:08.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 create -f -'
Aug 20 13:08:08.668: INFO: stderr: ""
Aug 20 13:08:08.668: INFO: stdout: "pod/pause created\n"
Aug 20 13:08:08.668: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Aug 20 13:08:08.668: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-4891" to be "running and ready"
Aug 20 13:08:08.672: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 4.203222ms
Aug 20 13:08:10.679: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.011523175s
Aug 20 13:08:10.679: INFO: Pod "pause" satisfied condition "running and ready"
Aug 20 13:08:10.679: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Aug 20 13:08:10.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 label pods pause testing-label=testing-label-value'
Aug 20 13:08:10.732: INFO: stderr: ""
Aug 20 13:08:10.732: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Aug 20 13:08:10.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 get pod pause -L testing-label'
Aug 20 13:08:10.779: INFO: stderr: ""
Aug 20 13:08:10.779: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Aug 20 13:08:10.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 label pods pause testing-label-'
Aug 20 13:08:10.832: INFO: stderr: ""
Aug 20 13:08:10.832: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Aug 20 13:08:10.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 get pod pause -L testing-label'
Aug 20 13:08:10.877: INFO: stderr: ""
Aug 20 13:08:10.877: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Aug 20 13:08:10.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 delete --grace-period=0 --force -f -'
Aug 20 13:08:10.934: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:10.934: INFO: stdout: "pod \"pause\" force deleted\n"
Aug 20 13:08:10.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 get rc,svc -l name=pause --no-headers'
Aug 20 13:08:10.983: INFO: stderr: "No resources found in kubectl-4891 namespace.\n"
Aug 20 13:08:10.983: INFO: stdout: ""
Aug 20 13:08:10.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-4891 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 20 13:08:11.026: INFO: stderr: ""
Aug 20 13:08:11.026: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 13:08:11.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4891" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":313,"skipped":5977,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:11.036: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3812
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-3812
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3812 to expose endpoints map[]
Aug 20 13:08:11.171: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Aug 20 13:08:12.180: INFO: successfully validated that service endpoint-test2 in namespace services-3812 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-3812
Aug 20 13:08:12.190: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:08:14.198: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3812 to expose endpoints map[pod1:[80]]
Aug 20 13:08:14.211: INFO: successfully validated that service endpoint-test2 in namespace services-3812 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Aug 20 13:08:14.211: INFO: Creating new exec pod
Aug 20 13:08:17.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3812 exec execpod72pl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 20 13:08:17.362: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 20 13:08:17.362: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:08:17.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3812 exec execpod72pl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
Aug 20 13:08:17.480: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [tcp/http] succeeded!\n"
Aug 20 13:08:17.480: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-3812
Aug 20 13:08:17.489: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:08:19.494: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3812 to expose endpoints map[pod1:[80] pod2:[80]]
Aug 20 13:08:19.508: INFO: successfully validated that service endpoint-test2 in namespace services-3812 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Aug 20 13:08:20.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3812 exec execpod72pl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 20 13:08:20.639: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 20 13:08:20.639: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:08:20.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3812 exec execpod72pl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
Aug 20 13:08:20.764: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [tcp/http] succeeded!\n"
Aug 20 13:08:20.764: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-3812
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3812 to expose endpoints map[pod2:[80]]
Aug 20 13:08:21.799: INFO: successfully validated that service endpoint-test2 in namespace services-3812 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Aug 20 13:08:22.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3812 exec execpod72pl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 20 13:08:22.927: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 20 13:08:22.927: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:08:22.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-3812 exec execpod72pl2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.57 80'
Aug 20 13:08:23.061: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.57 80\nConnection to 10.152.183.57 80 port [tcp/http] succeeded!\n"
Aug 20 13:08:23.061: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-3812
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3812 to expose endpoints map[]
Aug 20 13:08:23.086: INFO: successfully validated that service endpoint-test2 in namespace services-3812 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:08:23.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3812" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:12.072 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":314,"skipped":5987,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:23.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9267
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Aug 20 13:08:23.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-9267 cluster-info'
Aug 20 13:08:23.297: INFO: stderr: ""
Aug 20 13:08:23.297: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 13:08:23.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9267" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":315,"skipped":5994,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:23.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1848
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 20 13:08:23.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-1848 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 20 13:08:23.491: INFO: stderr: ""
Aug 20 13:08:23.491: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Aug 20 13:08:23.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-1848 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Aug 20 13:08:23.907: INFO: stderr: ""
Aug 20 13:08:23.907: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 20 13:08:23.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-1848 delete pods e2e-test-httpd-pod'
Aug 20 13:08:25.512: INFO: stderr: ""
Aug 20 13:08:25.513: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 13:08:25.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1848" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":316,"skipped":6011,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:25.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:08:25.657: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Aug 20 13:08:30.665: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 20 13:08:30.665: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 20 13:08:32.696: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-6693  9aedca42-03e3-4298-94ed-1fa00f397883 35770 1 2022-08-20 13:08:30 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-20 13:08:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 13:08:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0049486c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-20 13:08:30 +0000 UTC,LastTransitionTime:2022-08-20 13:08:30 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-6755c7b765" has successfully progressed.,LastUpdateTime:2022-08-20 13:08:31 +0000 UTC,LastTransitionTime:2022-08-20 13:08:30 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 20 13:08:32.699: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-6693  5b07cccc-da69-41a9-8815-257f8bc33de8 35760 1 2022-08-20 13:08:30 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 9aedca42-03e3-4298-94ed-1fa00f397883 0xc00499a0b7 0xc00499a0b8}] []  [{kube-controller-manager Update apps/v1 2022-08-20 13:08:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9aedca42-03e3-4298-94ed-1fa00f397883\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-20 13:08:31 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00499a178 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 20 13:08:32.702: INFO: Pod "test-cleanup-deployment-6755c7b765-v5lv2" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-v5lv2 test-cleanup-deployment-6755c7b765- deployment-6693  01747843-3d07-40bd-ad31-2cefbcbb5903 35759 0 2022-08-20 13:08:30 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 5b07cccc-da69-41a9-8815-257f8bc33de8 0xc00497b697 0xc00497b698}] []  [{kube-controller-manager Update v1 2022-08-20 13:08:30 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5b07cccc-da69-41a9-8815-257f8bc33de8\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-20 13:08:31 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.45.42\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-56fvr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-56fvr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-39-75,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:08:30 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:08:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:08:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-20 13:08:30 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.39.75,PodIP:192.168.45.42,StartTime:2022-08-20 13:08:30 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-20 13:08:31 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://4f3df9be6cd02df9a0faf2967a4a553b6d860054ed942f98b97dc94852e9d9f3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.45.42,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 20 13:08:32.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6693" for this suite.

• [SLOW TEST:7.189 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":317,"skipped":6040,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:32.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6832
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:08:32.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 20 13:08:34.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6832 --namespace=crd-publish-openapi-6832 create -f -'
Aug 20 13:08:35.473: INFO: stderr: ""
Aug 20 13:08:35.473: INFO: stdout: "e2e-test-crd-publish-openapi-4143-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 20 13:08:35.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6832 --namespace=crd-publish-openapi-6832 delete e2e-test-crd-publish-openapi-4143-crds test-cr'
Aug 20 13:08:35.547: INFO: stderr: ""
Aug 20 13:08:35.547: INFO: stdout: "e2e-test-crd-publish-openapi-4143-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Aug 20 13:08:35.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6832 --namespace=crd-publish-openapi-6832 apply -f -'
Aug 20 13:08:35.977: INFO: stderr: ""
Aug 20 13:08:35.977: INFO: stdout: "e2e-test-crd-publish-openapi-4143-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 20 13:08:35.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6832 --namespace=crd-publish-openapi-6832 delete e2e-test-crd-publish-openapi-4143-crds test-cr'
Aug 20 13:08:36.028: INFO: stderr: ""
Aug 20 13:08:36.028: INFO: stdout: "e2e-test-crd-publish-openapi-4143-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Aug 20 13:08:36.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=crd-publish-openapi-6832 explain e2e-test-crd-publish-openapi-4143-crds'
Aug 20 13:08:36.157: INFO: stderr: ""
Aug 20 13:08:36.157: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4143-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:08:38.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6832" for this suite.

• [SLOW TEST:5.461 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":318,"skipped":6040,"failed":0}
SSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:38.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2798
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 20 13:08:38.329: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2798" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":319,"skipped":6043,"failed":0}
S
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:38.337: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-4847
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 20 13:08:38.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4847" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":320,"skipped":6044,"failed":0}
SSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:38.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9940
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 20 13:08:40.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9940" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":321,"skipped":6047,"failed":0}
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:40.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3842
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Aug 20 13:08:40.771: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Aug 20 13:08:40.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 create -f -'
Aug 20 13:08:41.214: INFO: stderr: ""
Aug 20 13:08:41.214: INFO: stdout: "service/agnhost-replica created\n"
Aug 20 13:08:41.214: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Aug 20 13:08:41.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 create -f -'
Aug 20 13:08:41.354: INFO: stderr: ""
Aug 20 13:08:41.354: INFO: stdout: "service/agnhost-primary created\n"
Aug 20 13:08:41.354: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Aug 20 13:08:41.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 create -f -'
Aug 20 13:08:41.491: INFO: stderr: ""
Aug 20 13:08:41.491: INFO: stdout: "service/frontend created\n"
Aug 20 13:08:41.491: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Aug 20 13:08:41.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 create -f -'
Aug 20 13:08:41.626: INFO: stderr: ""
Aug 20 13:08:41.626: INFO: stdout: "deployment.apps/frontend created\n"
Aug 20 13:08:41.626: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 20 13:08:41.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 create -f -'
Aug 20 13:08:41.770: INFO: stderr: ""
Aug 20 13:08:41.770: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Aug 20 13:08:41.770: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 20 13:08:41.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 create -f -'
Aug 20 13:08:41.914: INFO: stderr: ""
Aug 20 13:08:41.914: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Aug 20 13:08:41.914: INFO: Waiting for all frontend pods to be Running.
Aug 20 13:08:46.965: INFO: Waiting for frontend to serve content.
Aug 20 13:08:46.976: INFO: Trying to add a new entry to the guestbook.
Aug 20 13:08:46.986: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Aug 20 13:08:46.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 delete --grace-period=0 --force -f -'
Aug 20 13:08:47.058: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:47.058: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Aug 20 13:08:47.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 delete --grace-period=0 --force -f -'
Aug 20 13:08:47.117: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:47.117: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 20 13:08:47.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 delete --grace-period=0 --force -f -'
Aug 20 13:08:47.174: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:47.174: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 20 13:08:47.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 delete --grace-period=0 --force -f -'
Aug 20 13:08:47.223: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:47.223: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 20 13:08:47.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 delete --grace-period=0 --force -f -'
Aug 20 13:08:47.273: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:47.273: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 20 13:08:47.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=kubectl-3842 delete --grace-period=0 --force -f -'
Aug 20 13:08:47.328: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 20 13:08:47.328: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 20 13:08:47.328: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3842" for this suite.

• [SLOW TEST:6.697 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":322,"skipped":6055,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:47.337: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6643
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 20 13:08:47.478: INFO: Waiting up to 5m0s for pod "pod-a160eca1-d47c-4525-937e-22cef2836b11" in namespace "emptydir-6643" to be "Succeeded or Failed"
Aug 20 13:08:47.482: INFO: Pod "pod-a160eca1-d47c-4525-937e-22cef2836b11": Phase="Pending", Reason="", readiness=false. Elapsed: 3.220557ms
Aug 20 13:08:49.486: INFO: Pod "pod-a160eca1-d47c-4525-937e-22cef2836b11": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008084541s
Aug 20 13:08:51.494: INFO: Pod "pod-a160eca1-d47c-4525-937e-22cef2836b11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015551227s
STEP: Saw pod success
Aug 20 13:08:51.494: INFO: Pod "pod-a160eca1-d47c-4525-937e-22cef2836b11" satisfied condition "Succeeded or Failed"
Aug 20 13:08:51.497: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-a160eca1-d47c-4525-937e-22cef2836b11 container test-container: <nil>
STEP: delete the pod
Aug 20 13:08:51.515: INFO: Waiting for pod pod-a160eca1-d47c-4525-937e-22cef2836b11 to disappear
Aug 20 13:08:51.518: INFO: Pod pod-a160eca1-d47c-4525-937e-22cef2836b11 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 20 13:08:51.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6643" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":323,"skipped":6059,"failed":0}

------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:08:51.527: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-3836
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-3836
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-3836
STEP: Deleting pre-stop pod
Aug 20 13:09:00.704: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Aug 20 13:09:00.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-3836" for this suite.

• [SLOW TEST:9.200 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":324,"skipped":6059,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:09:00.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 20 13:09:00.859: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 20 13:09:00.866: INFO: Waiting for terminating namespaces to be deleted...
Aug 20 13:09:00.869: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-39-75 before test
Aug 20 13:09:00.873: INFO: nginx-ingress-controller-kubernetes-worker-m6xxn from ingress-nginx-kubernetes-worker started at 2022-08-20 12:29:08 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.873: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 13:09:00.873: INFO: sonobuoy from sonobuoy started at 2022-08-20 11:50:09 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.873: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 20 13:09:00.873: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-7v72s from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:09:00.873: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:09:00.873: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 13:09:00.873: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-71-246 before test
Aug 20 13:09:00.877: INFO: nginx-ingress-controller-kubernetes-worker-5ttn2 from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:22 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.877: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 13:09:00.877: INFO: tester from prestop-3836 started at 2022-08-20 13:08:53 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.877: INFO: 	Container tester ready: true, restart count 0
Aug 20 13:09:00.877: INFO: sonobuoy-e2e-job-17b0c7b96371488a from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:09:00.877: INFO: 	Container e2e ready: true, restart count 0
Aug 20 13:09:00.877: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:09:00.877: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-lrmrk from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:09:00.877: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:09:00.877: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 20 13:09:00.877: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-90-25 before test
Aug 20 13:09:00.882: INFO: default-http-backend-kubernetes-worker-6c59687bf6-5hggx from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 20 13:09:00.882: INFO: nginx-ingress-controller-kubernetes-worker-5jxfd from ingress-nginx-kubernetes-worker started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 20 13:09:00.882: INFO: calico-kube-controllers-6fc5ff4dbc-hmtvb from kube-system started at 2022-08-20 11:47:08 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 20 13:09:00.882: INFO: coredns-86c98bfcdb-ql6b4 from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container coredns ready: true, restart count 0
Aug 20 13:09:00.882: INFO: kube-state-metrics-5cdbfd47b4-8s9rt from kube-system started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 20 13:09:00.882: INFO: metrics-server-v0.5.2-6bfd958b56-tgs28 from kube-system started at 2022-08-20 11:47:08 +0000 UTC (2 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container metrics-server ready: true, restart count 0
Aug 20 13:09:00.882: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 20 13:09:00.882: INFO: dashboard-metrics-scraper-8669b59d4f-tw6l4 from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 20 13:09:00.882: INFO: kubernetes-dashboard-585fc6bc87-6h7cf from kubernetes-dashboard started at 2022-08-20 11:46:27 +0000 UTC (1 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 20 13:09:00.882: INFO: sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-8tk2v from sonobuoy started at 2022-08-20 11:50:12 +0000 UTC (2 container statuses recorded)
Aug 20 13:09:00.882: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 20 13:09:00.882: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node ip-172-31-39-75
STEP: verifying the node has the label node ip-172-31-71-246
STEP: verifying the node has the label node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod default-http-backend-kubernetes-worker-6c59687bf6-5hggx requesting resource cpu=10m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod nginx-ingress-controller-kubernetes-worker-5jxfd requesting resource cpu=0m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod nginx-ingress-controller-kubernetes-worker-5ttn2 requesting resource cpu=0m on Node ip-172-31-71-246
Aug 20 13:09:00.930: INFO: Pod nginx-ingress-controller-kubernetes-worker-m6xxn requesting resource cpu=0m on Node ip-172-31-39-75
Aug 20 13:09:00.930: INFO: Pod calico-kube-controllers-6fc5ff4dbc-hmtvb requesting resource cpu=0m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod coredns-86c98bfcdb-ql6b4 requesting resource cpu=100m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod kube-state-metrics-5cdbfd47b4-8s9rt requesting resource cpu=0m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod metrics-server-v0.5.2-6bfd958b56-tgs28 requesting resource cpu=5m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod dashboard-metrics-scraper-8669b59d4f-tw6l4 requesting resource cpu=0m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod kubernetes-dashboard-585fc6bc87-6h7cf requesting resource cpu=0m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod tester requesting resource cpu=0m on Node ip-172-31-71-246
Aug 20 13:09:00.930: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-39-75
Aug 20 13:09:00.930: INFO: Pod sonobuoy-e2e-job-17b0c7b96371488a requesting resource cpu=0m on Node ip-172-31-71-246
Aug 20 13:09:00.930: INFO: Pod sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-7v72s requesting resource cpu=0m on Node ip-172-31-39-75
Aug 20 13:09:00.930: INFO: Pod sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-8tk2v requesting resource cpu=0m on Node ip-172-31-90-25
Aug 20 13:09:00.930: INFO: Pod sonobuoy-systemd-logs-daemon-set-8fd012dfe3284364-lrmrk requesting resource cpu=0m on Node ip-172-31-71-246
STEP: Starting Pods to consume most of the cluster CPU.
Aug 20 13:09:00.930: INFO: Creating a pod which consumes cpu=2800m on Node ip-172-31-71-246
Aug 20 13:09:00.938: INFO: Creating a pod which consumes cpu=2719m on Node ip-172-31-90-25
Aug 20 13:09:00.944: INFO: Creating a pod which consumes cpu=2800m on Node ip-172-31-39-75
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-17872306-1ced-4874-abe2-84ddbb103518.170d0f8e30e6f7e1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5075/filler-pod-17872306-1ced-4874-abe2-84ddbb103518 to ip-172-31-90-25]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-17872306-1ced-4874-abe2-84ddbb103518.170d0f8e53f604fb], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-17872306-1ced-4874-abe2-84ddbb103518.170d0f8e58a23a00], Reason = [Created], Message = [Created container filler-pod-17872306-1ced-4874-abe2-84ddbb103518]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-17872306-1ced-4874-abe2-84ddbb103518.170d0f8e5d74c948], Reason = [Started], Message = [Started container filler-pod-17872306-1ced-4874-abe2-84ddbb103518]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b.170d0f8e315bdbae], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5075/filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b to ip-172-31-39-75]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b.170d0f8e536b2df4], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b.170d0f8e562a6a3d], Reason = [Created], Message = [Created container filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b.170d0f8e58563bff], Reason = [Started], Message = [Started container filler-pod-5c4aa205-75ed-4069-93cd-495b57efea7b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb.170d0f8e30704737], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5075/filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb to ip-172-31-71-246]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb.170d0f8e550b23c5], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb.170d0f8e5870e151], Reason = [Created], Message = [Created container filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb.170d0f8e5e61b308], Reason = [Started], Message = [Started container filler-pod-9d2a01d3-e313-4d1c-957b-0deb6f18f7fb]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.170d0f8ea9d33d4e], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.]
STEP: removing the label node off the node ip-172-31-39-75
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-71-246
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-90-25
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:09:04.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5075" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":325,"skipped":6079,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:09:04.034: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-2204
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 20 13:09:04.180: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 20 13:10:04.198: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:10:04.200: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-7559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Aug 20 13:10:06.372: INFO: found a healthy node: ip-172-31-39-75
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:10:20.441: INFO: pods created so far: [1 1 1]
Aug 20 13:10:20.441: INFO: length of pods created so far: 3
Aug 20 13:10:22.453: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Aug 20 13:10:29.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-7559" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:10:29.495: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2204" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:85.500 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":326,"skipped":6106,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:10:29.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4039
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Aug 20 13:10:29.678: INFO: Waiting up to 5m0s for pod "var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74" in namespace "var-expansion-4039" to be "Succeeded or Failed"
Aug 20 13:10:29.681: INFO: Pod "var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74": Phase="Pending", Reason="", readiness=false. Elapsed: 2.84222ms
Aug 20 13:10:31.688: INFO: Pod "var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00950228s
Aug 20 13:10:33.694: INFO: Pod "var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015023696s
STEP: Saw pod success
Aug 20 13:10:33.694: INFO: Pod "var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74" satisfied condition "Succeeded or Failed"
Aug 20 13:10:33.696: INFO: Trying to get logs from node ip-172-31-71-246 pod var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74 container dapi-container: <nil>
STEP: delete the pod
Aug 20 13:10:33.717: INFO: Waiting for pod var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74 to disappear
Aug 20 13:10:33.720: INFO: Pod var-expansion-4633497b-8e3b-4a73-bba1-c13064497c74 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 20 13:10:33.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4039" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":327,"skipped":6130,"failed":0}
SSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:10:33.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-289
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:10:34.453: INFO: Checking APIGroup: apiregistration.k8s.io
Aug 20 13:10:34.454: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Aug 20 13:10:34.454: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Aug 20 13:10:34.454: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Aug 20 13:10:34.454: INFO: Checking APIGroup: apps
Aug 20 13:10:34.455: INFO: PreferredVersion.GroupVersion: apps/v1
Aug 20 13:10:34.455: INFO: Versions found [{apps/v1 v1}]
Aug 20 13:10:34.455: INFO: apps/v1 matches apps/v1
Aug 20 13:10:34.455: INFO: Checking APIGroup: events.k8s.io
Aug 20 13:10:34.456: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Aug 20 13:10:34.456: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Aug 20 13:10:34.456: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Aug 20 13:10:34.456: INFO: Checking APIGroup: authentication.k8s.io
Aug 20 13:10:34.457: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Aug 20 13:10:34.457: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Aug 20 13:10:34.457: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Aug 20 13:10:34.457: INFO: Checking APIGroup: authorization.k8s.io
Aug 20 13:10:34.458: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Aug 20 13:10:34.458: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Aug 20 13:10:34.458: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Aug 20 13:10:34.458: INFO: Checking APIGroup: autoscaling
Aug 20 13:10:34.458: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Aug 20 13:10:34.458: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Aug 20 13:10:34.458: INFO: autoscaling/v2 matches autoscaling/v2
Aug 20 13:10:34.458: INFO: Checking APIGroup: batch
Aug 20 13:10:34.459: INFO: PreferredVersion.GroupVersion: batch/v1
Aug 20 13:10:34.459: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Aug 20 13:10:34.459: INFO: batch/v1 matches batch/v1
Aug 20 13:10:34.459: INFO: Checking APIGroup: certificates.k8s.io
Aug 20 13:10:34.460: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Aug 20 13:10:34.460: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Aug 20 13:10:34.460: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Aug 20 13:10:34.460: INFO: Checking APIGroup: networking.k8s.io
Aug 20 13:10:34.461: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Aug 20 13:10:34.461: INFO: Versions found [{networking.k8s.io/v1 v1}]
Aug 20 13:10:34.461: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Aug 20 13:10:34.461: INFO: Checking APIGroup: policy
Aug 20 13:10:34.462: INFO: PreferredVersion.GroupVersion: policy/v1
Aug 20 13:10:34.462: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Aug 20 13:10:34.462: INFO: policy/v1 matches policy/v1
Aug 20 13:10:34.462: INFO: Checking APIGroup: rbac.authorization.k8s.io
Aug 20 13:10:34.463: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Aug 20 13:10:34.463: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Aug 20 13:10:34.463: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Aug 20 13:10:34.463: INFO: Checking APIGroup: storage.k8s.io
Aug 20 13:10:34.463: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Aug 20 13:10:34.463: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Aug 20 13:10:34.463: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Aug 20 13:10:34.463: INFO: Checking APIGroup: admissionregistration.k8s.io
Aug 20 13:10:34.464: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Aug 20 13:10:34.464: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Aug 20 13:10:34.464: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Aug 20 13:10:34.464: INFO: Checking APIGroup: apiextensions.k8s.io
Aug 20 13:10:34.465: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Aug 20 13:10:34.465: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Aug 20 13:10:34.465: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Aug 20 13:10:34.465: INFO: Checking APIGroup: scheduling.k8s.io
Aug 20 13:10:34.466: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Aug 20 13:10:34.466: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Aug 20 13:10:34.466: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Aug 20 13:10:34.466: INFO: Checking APIGroup: coordination.k8s.io
Aug 20 13:10:34.467: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Aug 20 13:10:34.467: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Aug 20 13:10:34.467: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Aug 20 13:10:34.467: INFO: Checking APIGroup: node.k8s.io
Aug 20 13:10:34.468: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Aug 20 13:10:34.468: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Aug 20 13:10:34.468: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Aug 20 13:10:34.468: INFO: Checking APIGroup: discovery.k8s.io
Aug 20 13:10:34.468: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Aug 20 13:10:34.468: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Aug 20 13:10:34.468: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Aug 20 13:10:34.468: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Aug 20 13:10:34.469: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Aug 20 13:10:34.469: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Aug 20 13:10:34.469: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Aug 20 13:10:34.469: INFO: Checking APIGroup: metrics.k8s.io
Aug 20 13:10:34.470: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Aug 20 13:10:34.470: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Aug 20 13:10:34.470: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Aug 20 13:10:34.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-289" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":328,"skipped":6133,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:10:34.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9902
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug 20 13:10:34.622: INFO: Found 0 stateful pods, waiting for 3
Aug 20 13:10:44.627: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 13:10:44.627: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 13:10:44.627: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 20 13:10:44.654: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Aug 20 13:10:54.688: INFO: Updating stateful set ss2
Aug 20 13:10:54.694: INFO: Waiting for Pod statefulset-9902/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Aug 20 13:11:04.726: INFO: Found 1 stateful pods, waiting for 3
Aug 20 13:11:14.733: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 13:11:14.733: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 20 13:11:14.733: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Aug 20 13:11:14.759: INFO: Updating stateful set ss2
Aug 20 13:11:14.764: INFO: Waiting for Pod statefulset-9902/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug 20 13:11:24.795: INFO: Updating stateful set ss2
Aug 20 13:11:24.801: INFO: Waiting for StatefulSet statefulset-9902/ss2 to complete update
Aug 20 13:11:24.801: INFO: Waiting for Pod statefulset-9902/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 20 13:11:34.811: INFO: Deleting all statefulset in ns statefulset-9902
Aug 20 13:11:34.814: INFO: Scaling statefulset ss2 to 0
Aug 20 13:11:44.836: INFO: Waiting for statefulset status.replicas updated to 0
Aug 20 13:11:44.839: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 20 13:11:44.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9902" for this suite.

• [SLOW TEST:70.378 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":329,"skipped":6142,"failed":0}
SSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:11:44.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9861
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:11:45.001: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Aug 20 13:11:45.010: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:45.010: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:45.012: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:11:45.012: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:11:46.017: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:46.017: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:46.020: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 20 13:11:46.020: INFO: Node ip-172-31-71-246 is running 0 daemon pod, expected 1
Aug 20 13:11:47.018: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:47.018: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:47.021: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 13:11:47.021: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Aug 20 13:11:47.047: INFO: Wrong image for pod: daemon-set-4gx9c. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:47.047: INFO: Wrong image for pod: daemon-set-d68w7. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:47.047: INFO: Wrong image for pod: daemon-set-qmfh2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:47.049: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:47.049: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:48.057: INFO: Wrong image for pod: daemon-set-4gx9c. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:48.057: INFO: Wrong image for pod: daemon-set-qmfh2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:48.060: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:48.060: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:49.055: INFO: Wrong image for pod: daemon-set-4gx9c. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:49.055: INFO: Wrong image for pod: daemon-set-qmfh2. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:49.055: INFO: Pod daemon-set-rjfl6 is not available
Aug 20 13:11:49.058: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:49.058: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:50.054: INFO: Wrong image for pod: daemon-set-4gx9c. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:50.057: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:50.057: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:51.055: INFO: Wrong image for pod: daemon-set-4gx9c. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 20 13:11:51.055: INFO: Pod daemon-set-sl9fr is not available
Aug 20 13:11:51.059: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:51.059: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:52.058: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:52.058: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:53.056: INFO: Pod daemon-set-8c4rc is not available
Aug 20 13:11:53.059: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:53.059: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Aug 20 13:11:53.062: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:53.062: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:53.065: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 20 13:11:53.065: INFO: Node ip-172-31-71-246 is running 0 daemon pod, expected 1
Aug 20 13:11:54.071: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:54.071: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:54.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 20 13:11:54.075: INFO: Node ip-172-31-71-246 is running 0 daemon pod, expected 1
Aug 20 13:11:55.071: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:55.071: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:11:55.074: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 13:11:55.074: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9861, will wait for the garbage collector to delete the pods
Aug 20 13:11:55.147: INFO: Deleting DaemonSet.extensions daemon-set took: 6.312279ms
Aug 20 13:11:55.248: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.272101ms
Aug 20 13:11:57.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:11:57.254: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 20 13:11:57.257: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37479"},"items":null}

Aug 20 13:11:57.260: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37479"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:11:57.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9861" for this suite.

• [SLOW TEST:12.420 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":330,"skipped":6146,"failed":0}
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:11:57.281: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-8884
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Aug 20 13:11:57.735: INFO: Pod name wrapped-volume-race-ddf38001-c50d-4866-984f-e5452459011c: Found 2 pods out of 5
Aug 20 13:12:02.744: INFO: Pod name wrapped-volume-race-ddf38001-c50d-4866-984f-e5452459011c: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-ddf38001-c50d-4866-984f-e5452459011c in namespace emptydir-wrapper-8884, will wait for the garbage collector to delete the pods
Aug 20 13:12:12.827: INFO: Deleting ReplicationController wrapped-volume-race-ddf38001-c50d-4866-984f-e5452459011c took: 6.517631ms
Aug 20 13:12:12.928: INFO: Terminating ReplicationController wrapped-volume-race-ddf38001-c50d-4866-984f-e5452459011c pods took: 100.689191ms
STEP: Creating RC which spawns configmap-volume pods
Aug 20 13:12:15.645: INFO: Pod name wrapped-volume-race-f4e3ffd9-f854-41a4-9bd4-a59c501c8219: Found 0 pods out of 5
Aug 20 13:12:20.654: INFO: Pod name wrapped-volume-race-f4e3ffd9-f854-41a4-9bd4-a59c501c8219: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-f4e3ffd9-f854-41a4-9bd4-a59c501c8219 in namespace emptydir-wrapper-8884, will wait for the garbage collector to delete the pods
Aug 20 13:12:32.743: INFO: Deleting ReplicationController wrapped-volume-race-f4e3ffd9-f854-41a4-9bd4-a59c501c8219 took: 6.590266ms
Aug 20 13:12:32.844: INFO: Terminating ReplicationController wrapped-volume-race-f4e3ffd9-f854-41a4-9bd4-a59c501c8219 pods took: 100.419283ms
STEP: Creating RC which spawns configmap-volume pods
Aug 20 13:12:35.562: INFO: Pod name wrapped-volume-race-a8265f22-9d98-416b-8533-86e705b9efed: Found 0 pods out of 5
Aug 20 13:12:40.572: INFO: Pod name wrapped-volume-race-a8265f22-9d98-416b-8533-86e705b9efed: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-a8265f22-9d98-416b-8533-86e705b9efed in namespace emptydir-wrapper-8884, will wait for the garbage collector to delete the pods
Aug 20 13:12:52.656: INFO: Deleting ReplicationController wrapped-volume-race-a8265f22-9d98-416b-8533-86e705b9efed took: 6.490172ms
Aug 20 13:12:52.757: INFO: Terminating ReplicationController wrapped-volume-race-a8265f22-9d98-416b-8533-86e705b9efed pods took: 100.95897ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug 20 13:12:56.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-8884" for this suite.

• [SLOW TEST:58.734 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":331,"skipped":6146,"failed":0}
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:12:56.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 20 13:12:56.164: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:56.164: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:56.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:12:56.168: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:12:57.173: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:57.173: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:57.176: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:12:57.176: INFO: Node ip-172-31-39-75 is running 0 daemon pod, expected 1
Aug 20 13:12:58.174: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:58.174: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:58.177: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 13:12:58.177: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Aug 20 13:12:58.192: INFO: DaemonSet pods can't tolerate node ip-172-31-3-42 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:58.192: INFO: DaemonSet pods can't tolerate node ip-172-31-39-232 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 20 13:12:58.198: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 20 13:12:58.198: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4596, will wait for the garbage collector to delete the pods
Aug 20 13:12:59.269: INFO: Deleting DaemonSet.extensions daemon-set took: 6.079107ms
Aug 20 13:12:59.370: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.446019ms
Aug 20 13:13:01.976: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 20 13:13:01.976: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 20 13:13:01.979: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38572"},"items":null}

Aug 20 13:13:01.982: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38572"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 20 13:13:01.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4596" for this suite.

• [SLOW TEST:5.989 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":332,"skipped":6146,"failed":0}
SSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:13:02.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6305
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-4284e456-ee31-470c-9989-11672484f125 in namespace container-probe-6305
Aug 20 13:13:04.150: INFO: Started pod test-webserver-4284e456-ee31-470c-9989-11672484f125 in namespace container-probe-6305
STEP: checking the pod's current state and verifying that restartCount is present
Aug 20 13:13:04.152: INFO: Initial restart count of pod test-webserver-4284e456-ee31-470c-9989-11672484f125 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 13:17:04.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6305" for this suite.

• [SLOW TEST:242.995 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":333,"skipped":6152,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:17:04.999: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6796
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-6796
STEP: creating service affinity-clusterip in namespace services-6796
STEP: creating replication controller affinity-clusterip in namespace services-6796
I0820 13:17:05.144941      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-6796, replica count: 3
I0820 13:17:08.196587      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 13:17:08.206: INFO: Creating new exec pod
Aug 20 13:17:11.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-6796 exec execpod-affinityxjsgx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug 20 13:17:11.350: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Aug 20 13:17:11.350: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:17:11.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-6796 exec execpod-affinityxjsgx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
Aug 20 13:17:11.452: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
Aug 20 13:17:11.453: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:17:11.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-6796 exec execpod-affinityxjsgx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.190:80/ ; done'
Aug 20 13:17:11.616: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.190:80/\n"
Aug 20 13:17:11.616: INFO: stdout: "\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q\naffinity-clusterip-7qj5q"
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Received response from host: affinity-clusterip-7qj5q
Aug 20 13:17:11.616: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-6796, will wait for the garbage collector to delete the pods
Aug 20 13:17:11.689: INFO: Deleting ReplicationController affinity-clusterip took: 5.598301ms
Aug 20 13:17:11.790: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.650643ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:17:13.707: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6796" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.718 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":334,"skipped":6167,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:17:13.717: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8140
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Aug 20 13:17:13.866: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug 20 13:17:13.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8140" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":335,"skipped":6197,"failed":0}
SSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:17:13.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3270
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 13:17:14.045: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3270" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":336,"skipped":6204,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:17:14.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6148
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-f3ac5a7b-a9cf-4a61-95e3-4e1ca8509145
STEP: Creating the pod
Aug 20 13:17:14.199: INFO: The status of Pod pod-configmaps-b2fcf334-7e73-4dc0-9bae-077f32cbb74f is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:17:16.206: INFO: The status of Pod pod-configmaps-b2fcf334-7e73-4dc0-9bae-077f32cbb74f is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-f3ac5a7b-a9cf-4a61-95e3-4e1ca8509145
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 13:17:18.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6148" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":337,"skipped":6204,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:17:18.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-6522
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 20 13:17:18.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-6522" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":338,"skipped":6246,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:17:18.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8886
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8886
Aug 20 13:17:18.544: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:17:20.551: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 20 13:17:20.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 20 13:17:20.675: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 20 13:17:20.675: INFO: stdout: "iptables"
Aug 20 13:17:20.675: INFO: proxyMode: iptables
Aug 20 13:17:20.686: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 20 13:17:20.689: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-8886
STEP: creating replication controller affinity-nodeport-timeout in namespace services-8886
I0820 13:17:20.707940      20 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-8886, replica count: 3
I0820 13:17:23.760256      20 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 13:17:23.773: INFO: Creating new exec pod
Aug 20 13:17:26.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Aug 20 13:17:26.926: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Aug 20 13:17:26.926: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:17:26.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.43 80'
Aug 20 13:17:27.053: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.43 80\nConnection to 10.152.183.43 80 port [tcp/http] succeeded!\n"
Aug 20 13:17:27.053: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:17:27.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.75 31459'
Aug 20 13:17:27.168: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.75 31459\nConnection to 172.31.39.75 31459 port [tcp/*] succeeded!\n"
Aug 20 13:17:27.168: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:17:27.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.90.25 31459'
Aug 20 13:17:27.270: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.90.25 31459\nConnection to 172.31.90.25 31459 port [tcp/*] succeeded!\n"
Aug 20 13:17:27.270: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:17:27.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.39.75:31459/ ; done'
Aug 20 13:17:27.415: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n"
Aug 20 13:17:27.415: INFO: stdout: "\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6\naffinity-nodeport-timeout-sxpf6"
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Received response from host: affinity-nodeport-timeout-sxpf6
Aug 20 13:17:27.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.39.75:31459/'
Aug 20 13:17:27.523: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n"
Aug 20 13:17:27.523: INFO: stdout: "affinity-nodeport-timeout-sxpf6"
Aug 20 13:17:47.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.39.75:31459/'
Aug 20 13:17:47.651: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n"
Aug 20 13:17:47.651: INFO: stdout: "affinity-nodeport-timeout-sxpf6"
Aug 20 13:18:07.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.39.75:31459/'
Aug 20 13:18:07.774: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n"
Aug 20 13:18:07.774: INFO: stdout: "affinity-nodeport-timeout-sxpf6"
Aug 20 13:18:27.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.39.75:31459/'
Aug 20 13:18:27.906: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n"
Aug 20 13:18:27.906: INFO: stdout: "affinity-nodeport-timeout-sxpf6"
Aug 20 13:18:47.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-8886 exec execpod-affinityq7dxg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.39.75:31459/'
Aug 20 13:18:48.028: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.39.75:31459/\n"
Aug 20 13:18:48.028: INFO: stdout: "affinity-nodeport-timeout-nbxg2"
Aug 20 13:18:48.028: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-8886, will wait for the garbage collector to delete the pods
Aug 20 13:18:48.105: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 5.27544ms
Aug 20 13:18:48.206: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 101.125467ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:18:50.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8886" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:92.131 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":339,"skipped":6257,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:18:50.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-5
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 20 13:18:50.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-5" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":340,"skipped":6273,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:18:50.700: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-7434
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-7434
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 20 13:18:50.827: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 20 13:18:50.860: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:18:52.867: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 13:18:54.866: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 13:18:56.867: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 13:18:58.870: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 13:19:00.867: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 20 13:19:02.867: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 20 13:19:02.873: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 20 13:19:02.878: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 20 13:19:04.898: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 20 13:19:04.898: INFO: Breadth first check of 192.168.45.30 on host 172.31.39.75...
Aug 20 13:19:04.901: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.45.33:9080/dial?request=hostname&protocol=udp&host=192.168.45.30&port=8081&tries=1'] Namespace:pod-network-test-7434 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 13:19:04.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 13:19:04.901: INFO: ExecWithOptions: Clientset creation
Aug 20 13:19:04.901: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7434/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.45.33%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.45.30%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 20 13:19:04.974: INFO: Waiting for responses: map[]
Aug 20 13:19:04.974: INFO: reached 192.168.45.30 after 0/1 tries
Aug 20 13:19:04.974: INFO: Breadth first check of 192.168.124.117 on host 172.31.71.246...
Aug 20 13:19:04.977: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.45.33:9080/dial?request=hostname&protocol=udp&host=192.168.124.117&port=8081&tries=1'] Namespace:pod-network-test-7434 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 13:19:04.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 13:19:04.978: INFO: ExecWithOptions: Clientset creation
Aug 20 13:19:04.978: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7434/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.45.33%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.124.117%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 20 13:19:05.061: INFO: Waiting for responses: map[]
Aug 20 13:19:05.061: INFO: reached 192.168.124.117 after 0/1 tries
Aug 20 13:19:05.061: INFO: Breadth first check of 192.168.18.31 on host 172.31.90.25...
Aug 20 13:19:05.065: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.45.33:9080/dial?request=hostname&protocol=udp&host=192.168.18.31&port=8081&tries=1'] Namespace:pod-network-test-7434 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 20 13:19:05.065: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
Aug 20 13:19:05.065: INFO: ExecWithOptions: Clientset creation
Aug 20 13:19:05.065: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7434/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.45.33%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.18.31%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 20 13:19:05.137: INFO: Waiting for responses: map[]
Aug 20 13:19:05.137: INFO: reached 192.168.18.31 after 0/1 tries
Aug 20 13:19:05.137: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 20 13:19:05.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-7434" for this suite.

• [SLOW TEST:14.447 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":341,"skipped":6317,"failed":0}
SSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:05.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-358
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Aug 20 13:19:05.287: INFO: Waiting up to 5m0s for pod "client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7" in namespace "containers-358" to be "Succeeded or Failed"
Aug 20 13:19:05.292: INFO: Pod "client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7": Phase="Pending", Reason="", readiness=false. Elapsed: 5.314611ms
Aug 20 13:19:07.299: INFO: Pod "client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012378193s
Aug 20 13:19:09.307: INFO: Pod "client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020306517s
STEP: Saw pod success
Aug 20 13:19:09.307: INFO: Pod "client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7" satisfied condition "Succeeded or Failed"
Aug 20 13:19:09.310: INFO: Trying to get logs from node ip-172-31-71-246 pod client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 13:19:09.335: INFO: Waiting for pod client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7 to disappear
Aug 20 13:19:09.338: INFO: Pod client-containers-85502057-d28c-422c-954a-f00d8b2fdaf7 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 20 13:19:09.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-358" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":342,"skipped":6321,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:09.347: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1691
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 20 13:19:09.482: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da" in namespace "downward-api-1691" to be "Succeeded or Failed"
Aug 20 13:19:09.545: INFO: Pod "downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da": Phase="Pending", Reason="", readiness=false. Elapsed: 63.385467ms
Aug 20 13:19:11.551: INFO: Pod "downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.069945162s
Aug 20 13:19:13.559: INFO: Pod "downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.077078964s
STEP: Saw pod success
Aug 20 13:19:13.559: INFO: Pod "downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da" satisfied condition "Succeeded or Failed"
Aug 20 13:19:13.561: INFO: Trying to get logs from node ip-172-31-39-75 pod downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da container client-container: <nil>
STEP: delete the pod
Aug 20 13:19:13.586: INFO: Waiting for pod downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da to disappear
Aug 20 13:19:13.589: INFO: Pod downwardapi-volume-2f314c1b-02f1-4ba5-a25b-01c59487b9da no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 20 13:19:13.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1691" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":343,"skipped":6324,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:13.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 20 13:19:14.091: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 20 13:19:17.112: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 20 13:19:17.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1392" for this suite.
STEP: Destroying namespace "webhook-1392-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":344,"skipped":6366,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:17.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5478
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 20 13:19:17.360: INFO: The status of Pod labelsupdate6207540f-afeb-4f13-b995-91326b5df4e7 is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:19:19.363: INFO: The status of Pod labelsupdate6207540f-afeb-4f13-b995-91326b5df4e7 is Running (Ready = true)
Aug 20 13:19:19.885: INFO: Successfully updated pod "labelsupdate6207540f-afeb-4f13-b995-91326b5df4e7"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 20 13:19:23.905: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5478" for this suite.

• [SLOW TEST:6.710 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":345,"skipped":6417,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:23.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6561
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:19:24.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6561" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":346,"skipped":6466,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:24.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-47ee6cd9-18a5-48a4-ac42-2c63f1897197
STEP: Creating a pod to test consume configMaps
Aug 20 13:19:24.199: INFO: Waiting up to 5m0s for pod "pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1" in namespace "configmap-3153" to be "Succeeded or Failed"
Aug 20 13:19:24.202: INFO: Pod "pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.64624ms
Aug 20 13:19:26.208: INFO: Pod "pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008389541s
Aug 20 13:19:28.216: INFO: Pod "pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016214731s
STEP: Saw pod success
Aug 20 13:19:28.216: INFO: Pod "pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1" satisfied condition "Succeeded or Failed"
Aug 20 13:19:28.218: INFO: Trying to get logs from node ip-172-31-39-75 pod pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1 container agnhost-container: <nil>
STEP: delete the pod
Aug 20 13:19:28.307: INFO: Waiting for pod pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1 to disappear
Aug 20 13:19:28.310: INFO: Pod pod-configmaps-2ab9319c-84e3-4226-b5cf-fef17c4746a1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 20 13:19:28.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3153" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":347,"skipped":6482,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:28.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-d274e9c8-566a-41bc-baba-0ee8d14ae88a
STEP: Creating a pod to test consume configMaps
Aug 20 13:19:28.461: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8" in namespace "projected-9051" to be "Succeeded or Failed"
Aug 20 13:19:28.464: INFO: Pod "pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.333025ms
Aug 20 13:19:30.469: INFO: Pod "pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008697417s
Aug 20 13:19:32.477: INFO: Pod "pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016661074s
STEP: Saw pod success
Aug 20 13:19:32.477: INFO: Pod "pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8" satisfied condition "Succeeded or Failed"
Aug 20 13:19:32.480: INFO: Trying to get logs from node ip-172-31-71-246 pod pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Aug 20 13:19:32.496: INFO: Waiting for pod pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8 to disappear
Aug 20 13:19:32.499: INFO: Pod pod-projected-configmaps-373d08fb-5120-4a77-8a25-966b026058d8 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 20 13:19:32.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9051" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6488,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:32.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9200
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9200
STEP: creating service affinity-nodeport-transition in namespace services-9200
STEP: creating replication controller affinity-nodeport-transition in namespace services-9200
I0820 13:19:32.659097      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-9200, replica count: 3
I0820 13:19:35.710503      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 20 13:19:35.720: INFO: Creating new exec pod
Aug 20 13:19:38.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9200 exec execpod-affinity287wc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Aug 20 13:19:38.875: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Aug 20 13:19:38.875: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:19:38.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9200 exec execpod-affinity287wc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.35 80'
Aug 20 13:19:38.981: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.35 80\nConnection to 10.152.183.35 80 port [tcp/http] succeeded!\n"
Aug 20 13:19:38.981: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:19:38.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9200 exec execpod-affinity287wc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.71.246 32192'
Aug 20 13:19:39.101: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.71.246 32192\nConnection to 172.31.71.246 32192 port [tcp/*] succeeded!\n"
Aug 20 13:19:39.101: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:19:39.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9200 exec execpod-affinity287wc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.39.75 32192'
Aug 20 13:19:39.230: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.39.75 32192\nConnection to 172.31.39.75 32192 port [tcp/*] succeeded!\n"
Aug 20 13:19:39.230: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 20 13:19:39.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9200 exec execpod-affinity287wc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.39.75:32192/ ; done'
Aug 20 13:19:39.413: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n"
Aug 20 13:19:39.413: INFO: stdout: "\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-zr6ml\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-5zs8d\naffinity-nodeport-transition-zr6ml"
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-5zs8d
Aug 20 13:19:39.413: INFO: Received response from host: affinity-nodeport-transition-zr6ml
Aug 20 13:19:39.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2144874929 --namespace=services-9200 exec execpod-affinity287wc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.39.75:32192/ ; done'
Aug 20 13:19:39.571: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.39.75:32192/\n"
Aug 20 13:19:39.571: INFO: stdout: "\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh\naffinity-nodeport-transition-kvnjh"
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Received response from host: affinity-nodeport-transition-kvnjh
Aug 20 13:19:39.571: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9200, will wait for the garbage collector to delete the pods
Aug 20 13:19:39.641: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.17411ms
Aug 20 13:19:39.742: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.409891ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 20 13:19:41.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9200" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.464 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":349,"skipped":6508,"failed":0}
SS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:41.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-4550
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 20 13:19:44.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-4550" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":350,"skipped":6510,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:44.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-6356
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:19:44.279: INFO: The status of Pod busybox-host-aliasesb62b4abb-8526-4075-a04c-9fbdf6cebeeb is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:19:46.285: INFO: The status of Pod busybox-host-aliasesb62b4abb-8526-4075-a04c-9fbdf6cebeeb is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 20 13:19:46.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-6356" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":351,"skipped":6530,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:46.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-7088
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 20 13:19:46.447: INFO: Waiting up to 5m0s for pod "security-context-f668b4e2-c091-443c-8713-021c730b4352" in namespace "security-context-7088" to be "Succeeded or Failed"
Aug 20 13:19:46.450: INFO: Pod "security-context-f668b4e2-c091-443c-8713-021c730b4352": Phase="Pending", Reason="", readiness=false. Elapsed: 2.84357ms
Aug 20 13:19:48.457: INFO: Pod "security-context-f668b4e2-c091-443c-8713-021c730b4352": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010059276s
Aug 20 13:19:50.463: INFO: Pod "security-context-f668b4e2-c091-443c-8713-021c730b4352": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016298861s
STEP: Saw pod success
Aug 20 13:19:50.463: INFO: Pod "security-context-f668b4e2-c091-443c-8713-021c730b4352" satisfied condition "Succeeded or Failed"
Aug 20 13:19:50.467: INFO: Trying to get logs from node ip-172-31-39-75 pod security-context-f668b4e2-c091-443c-8713-021c730b4352 container test-container: <nil>
STEP: delete the pod
Aug 20 13:19:50.483: INFO: Waiting for pod security-context-f668b4e2-c091-443c-8713-021c730b4352 to disappear
Aug 20 13:19:50.486: INFO: Pod security-context-f668b4e2-c091-443c-8713-021c730b4352 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 20 13:19:50.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-7088" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":352,"skipped":6552,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:19:50.494: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1003
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 in namespace container-probe-1003
Aug 20 13:19:52.644: INFO: Started pod liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 in namespace container-probe-1003
STEP: checking the pod's current state and verifying that restartCount is present
Aug 20 13:19:52.647: INFO: Initial restart count of pod liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 is 0
Aug 20 13:20:12.713: INFO: Restart count of pod container-probe-1003/liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 is now 1 (20.065892472s elapsed)
Aug 20 13:20:32.775: INFO: Restart count of pod container-probe-1003/liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 is now 2 (40.128525826s elapsed)
Aug 20 13:20:52.844: INFO: Restart count of pod container-probe-1003/liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 is now 3 (1m0.197441785s elapsed)
Aug 20 13:21:12.914: INFO: Restart count of pod container-probe-1003/liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 is now 4 (1m20.266960132s elapsed)
Aug 20 13:22:13.121: INFO: Restart count of pod container-probe-1003/liveness-b4ecd26d-a671-497d-90e0-fd4a911f4db6 is now 5 (2m20.473998671s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 20 13:22:13.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1003" for this suite.

• [SLOW TEST:142.647 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":353,"skipped":6561,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:22:13.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-7047
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 20 13:22:13.279: INFO: The status of Pod busybox-readonly-fscc08eeb2-9f59-4974-b51b-eb737975c68f is Pending, waiting for it to be Running (with Ready = true)
Aug 20 13:22:15.285: INFO: The status of Pod busybox-readonly-fscc08eeb2-9f59-4974-b51b-eb737975c68f is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 20 13:22:15.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-7047" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":354,"skipped":6570,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:22:15.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1008
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 20 13:22:19.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1008" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":355,"skipped":6604,"failed":0}

------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 20 13:22:19.496: INFO: >>> kubeConfig: /tmp/kubeconfig-2144874929
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-7899
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Aug 20 13:22:21.666: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 20 13:22:23.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-7899" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":356,"skipped":6604,"failed":0}
SSSSSSSSSSSAug 20 13:22:23.686: INFO: Running AfterSuite actions on all nodes
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Aug 20 13:22:23.686: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Aug 20 13:22:23.686: INFO: Running AfterSuite actions on node 1
Aug 20 13:22:23.686: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5515.014 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h31m56.679770612s
Test Suite Passed
